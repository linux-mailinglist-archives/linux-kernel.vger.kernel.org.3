Return-Path: <linux-kernel-owner@vger.kernel.org>
X-Original-To: lists+linux-kernel@lfdr.de
Delivered-To: lists+linux-kernel@lfdr.de
Received: from out1.vger.email (out1.vger.email [IPv6:2620:137:e000::1:20])
	by mail.lfdr.de (Postfix) with ESMTP id E9A28534A8A
	for <lists+linux-kernel@lfdr.de>; Thu, 26 May 2022 08:54:19 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1346304AbiEZGyN (ORCPT <rfc822;lists+linux-kernel@lfdr.de>);
        Thu, 26 May 2022 02:54:13 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:56314 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1346296AbiEZGyL (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 26 May 2022 02:54:11 -0400
Received: from ams.source.kernel.org (ams.source.kernel.org [145.40.68.75])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 7B74872E3E
        for <linux-kernel@vger.kernel.org>; Wed, 25 May 2022 23:54:08 -0700 (PDT)
Received: from smtp.kernel.org (relay.kernel.org [52.25.139.140])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by ams.source.kernel.org (Postfix) with ESMTPS id 8F162B81ECC
        for <linux-kernel@vger.kernel.org>; Thu, 26 May 2022 06:54:06 +0000 (UTC)
Received: by smtp.kernel.org (Postfix) with ESMTPSA id 4BC4EC385A9;
        Thu, 26 May 2022 06:54:05 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=k20201202; t=1653548045;
        bh=v8SvQPQ97nFV5d3lLq/BEczJQQiolsIIT/VHCP9PfFk=;
        h=Date:From:To:Cc:Subject:In-Reply-To:References:From;
        b=sw9p0cDwBjfb68NgDGb8yPDJPc9J91TELIIAqwntVcsWr8+vHQ0JzI3dBxs2DRmiq
         6xaGCLFSMxbkns4We5NRNCgPHkjC2ExYXdY2lLthEp1g5g+ojmCItPDlCSLpZZjwUU
         c3DYeqkbfqpyfizawGrQzvcBigVlzrrG9ziitpi4qtrfqaMZjGSAgpLL9t7rjZqZqL
         jCeCGWupcQPjkbDqauQj3mv8oGs02nfm+ofULrzL5qDx+21otL9MXJh80QP4HCrVE6
         +Uc3Jj0AMpXMSNtVLZq12t0YYPLu/tAQFjLlPe+BzMEH/z7Q0cgpmigwYZxsv/n8IS
         6uu9mVhrpy/6A==
Received: from athedsl-4490923.home.otenet.gr ([94.71.82.179] helo=wait-a-minute.misterjones.org)
        by disco-boy.misterjones.org with esmtpsa  (TLS1.3) tls TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
        (Exim 4.94.2)
        (envelope-from <maz@kernel.org>)
        id 1nu7Ni-00DmwU-JY; Thu, 26 May 2022 07:54:02 +0100
Date:   Thu, 26 May 2022 07:54:01 +0100
Message-ID: <87ee0gn5rq.wl-maz@kernel.org>
From:   Marc Zyngier <maz@kernel.org>
To:     richard clark <richard.xnu.clark@gmail.com>
Cc:     Robin Murphy <robin.murphy@arm.com>,
        linux-arm-kernel@lists.infradead.org, linux-kernel@vger.kernel.org
Subject: Re: Question about SPIs' interrupt trigger type restrictions
In-Reply-To: <CAJNi4rMbBbLP2Tsv-wnnJKt4Y0moOE5-sNaZN1fCty908pwAKw@mail.gmail.com>
References: <CAJNi4rNwPQf747UM_hiYYwL=HDxg8QnPpfFPv1PfrtN9ZP1y1g@mail.gmail.com>
        <35f95ba3-8a7b-7918-0f9d-e14274a5ffe9@arm.com>
        <CAJNi4rMbBbLP2Tsv-wnnJKt4Y0moOE5-sNaZN1fCty908pwAKw@mail.gmail.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI-EPG/1.14.7 (Harue)
 FLIM-LB/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL-LB/10.8 EasyPG/1.0.0 Emacs/27.1
 (x86_64-pc-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
X-SA-Exim-Connect-IP: 94.71.82.179
X-SA-Exim-Rcpt-To: richard.xnu.clark@gmail.com, robin.murphy@arm.com, linux-arm-kernel@lists.infradead.org, linux-kernel@vger.kernel.org
X-SA-Exim-Mail-From: maz@kernel.org
X-SA-Exim-Scanned: No (on disco-boy.misterjones.org); SAEximRunCond expanded to false
X-Spam-Status: No, score=-7.8 required=5.0 tests=BAYES_00,DKIMWL_WL_HIGH,
        DKIM_SIGNED,DKIM_VALID,DKIM_VALID_AU,DKIM_VALID_EF,RCVD_IN_DNSWL_HI,
        SPF_HELO_NONE,SPF_PASS,T_SCC_BODY_TEXT_LINE autolearn=ham
        autolearn_force=no version=3.4.6
X-Spam-Checker-Version: SpamAssassin 3.4.6 (2021-04-09) on
        lindbergh.monkeyblade.net
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Thu, 26 May 2022 04:44:41 +0100,
richard clark <richard.xnu.clark@gmail.com> wrote:
>=20
> On Thu, May 26, 2022 at 3:14 AM Robin Murphy <robin.murphy@arm.com> wrote:
> >
> > On 2022-05-25 11:01, richard clark wrote:
> > > Hi Marc,
> > >
> > > For below code snippet about SPI interrupt trigger type:
> > >
> > > static int gic_set_type(struct irq_data *d, unsigned int type)
> > > {
> > >          ...
> > >          /* SPIs have restrictions on the supported types */
> > >          if ((range =3D=3D SPI_RANGE || range =3D=3D ESPI_RANGE) &&
> > >              type !=3D IRQ_TYPE_LEVEL_HIGH && type !=3D IRQ_TYPE_EDGE=
_RISING)
> > >                  return -EINVAL;
> > >          ...
> > > }
> > >
> > > We have a device at hand whose interrupt type is SPI, Falling edge
> > > will trigger the interrupt. But the request_irq(50, handler,
> > > IRQ_TYPE_EDGE_FALLING, ...) will return -EINVAL.
> > >
> > > The question is, why must the SPI interrupt use IRQ_TYPE_EDGE_RISING
> > > instead of IRQ_TYPE_EDGE_FALLING?
> >
> > Because that's what the GIC architecture[1] says. From section 1.2.1
> > "Interrupt Types":
> >
> > "An interrupt that is edge-triggered has the following property:
> >         =E2=80=A2 It is asserted on detection of a rising edge of an in=
terrupt signal
>=20
> This rising edge detection is not true, it's also asserted by
> falling edge, just like the GICD_ICFGR register says: Changing the
> interrupt configuration between level-sensitive and *edge-triggered
> (in either direction)* at a time when there is a pending interrupt
> ...,

Let me finish the sentence for you:

<quote>
... will leave the interrupt in an UNKNOWN pending state.
</quote>

and the direction here is about the configuration bit, not the edge
direction.

> which has been confirmed by GIC-500 on my platform.

=46rom the GIC500 r1p1 TRM, page 2-8:

<quote>
SPIs are generated either by wire inputs or by writes to the AXI4
slave programming interface.  The GIC-500 can support up to 960 SPIs
corresponding to the external spi[991:32] signal. The number of SPIs
available depends on the implemented configuration. The permitted
values are 32-960, in steps of 32. The first SPI has an ID number of
32. You can configure whether each SPI is triggered on a rising edge
or is active-HIGH level-sensitive.
</quote>

So I have no idea what you are talking about, but you definitely have
the wrong end of the stick. Both the architecture and the
implementations are aligned with what the GIC drivers do.

If your system behaves differently, this is because something is
inverting the signal, which is extremely common. Just describe this in
your device tree, or lie to the kernel, whichever way you want.

>=20
> > and then, regardless of the state of the signal, remains asserted until
> > the interrupt is acknowledged by software."
> >
> > External signals with the wrong polarity may need external logic to
>=20
> IMO, it's not wrong polarity for a device to interrupt the processor
> with a falling edge, it's normal. Actually, the GIC supports
> edge-trigger type:
> '0b10 Corresponding interrupt is edge-triggered', the
> IRQ_TYPE_EDGE_RISING check in gic_set_type(...) is just a sanity check
> from this point of view.

No, this is an architectural requirement, and the driver caters for
the architecture (and only that).

> I would more like to have below changes applied:
>=20
> --- a/linux/drivers/irqchip/irq-gic-v3.c
> +++ b/linux/drivers/irqchip/irq-gic-v3.c
>=20
> @@ -560,8 +560,7 @@ static int gic_set_type(struct irq_data *d,
> unsigned int type)
>                 return type !=3D IRQ_TYPE_EDGE_RISING ? -EINVAL : 0;
>         /* SPIs have restrictions on the supported types */
> -       if ((range =3D=3D SPI_RANGE || range =3D=3D ESPI_RANGE) &&
> -           type !=3D IRQ_TYPE_LEVEL_HIGH && type !=3D IRQ_TYPE_EDGE_RISI=
NG)
> +       if ((range =3D=3D SPI_RANGE || range =3D=3D ESPI_RANGE) && !(type=
 & 0xf))
>                 return -EINVAL;
>=20

Not under my watch.

Thanks,

	M.

--=20
Without deviation from the norm, progress is not possible.
