Return-Path: <linux-kernel-owner@vger.kernel.org>
X-Original-To: lists+linux-kernel@lfdr.de
Delivered-To: lists+linux-kernel@lfdr.de
Received: from out1.vger.email (out1.vger.email [IPv6:2620:137:e000::1:20])
	by mail.lfdr.de (Postfix) with ESMTP id 40E354EE4D3
	for <lists+linux-kernel@lfdr.de>; Fri,  1 Apr 2022 01:33:52 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S243092AbiCaXfa (ORCPT <rfc822;lists+linux-kernel@lfdr.de>);
        Thu, 31 Mar 2022 19:35:30 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:52468 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S240168AbiCaXf1 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 31 Mar 2022 19:35:27 -0400
Received: from mga12.intel.com (mga12.intel.com [192.55.52.136])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 505F81903C6
        for <linux-kernel@vger.kernel.org>; Thu, 31 Mar 2022 16:33:36 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
  d=intel.com; i=@intel.com; q=dns/txt; s=Intel;
  t=1648769618; x=1680305618;
  h=date:from:to:cc:subject:message-id:references:
   mime-version:in-reply-to;
  bh=9Dr5EsPbdamJdDCvHeSKKp4r3DAHf14EoM5Xx8tkhak=;
  b=Mi6m6wNk5iDfwOCttTwSPmNHX1+httQ0EYGCayM6PSA5KQfwN1QY7d+h
   m/GG0M/yz2Gc+mKfi8MjOzhiNOlbd7JkIzAXw17GzfubSRbsm23P5h9HG
   6I++Y5gYjz1PWPiJtXXNEFCHd+wk8dIHqX7LgmE2fAvUzZuC2N5OugxG0
   pVK/WTDEfDKHoZZNuJHeLxlmuABl2VKxCg3wFPo9p7fAUBIma7NHqklnz
   OOEYFV13CDcbySbPWGdfwlyokjxGDD29P1n0fH0Ech8VYlotk5k8EWGCu
   gp3fh0/WSftTh11hLxVU/cwIpkRCUJ+7n6e6LVTTGzLfx9/rxHLphdU+z
   Q==;
X-IronPort-AV: E=McAfee;i="6200,9189,10303"; a="239924108"
X-IronPort-AV: E=Sophos;i="5.90,225,1643702400"; 
   d="scan'208";a="239924108"
Received: from orsmga008.jf.intel.com ([10.7.209.65])
  by fmsmga106.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 31 Mar 2022 16:33:36 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.90,225,1643702400"; 
   d="scan'208";a="566928715"
Received: from lkp-server02.sh.intel.com (HELO 3231c491b0e2) ([10.239.97.151])
  by orsmga008.jf.intel.com with ESMTP; 31 Mar 2022 16:33:34 -0700
Received: from kbuild by 3231c491b0e2 with local (Exim 4.95)
        (envelope-from <lkp@intel.com>)
        id 1na4II-0000km-8x;
        Thu, 31 Mar 2022 23:33:34 +0000
Date:   Fri, 1 Apr 2022 07:33:03 +0800
From:   kernel test robot <lkp@intel.com>
To:     Jens Axboe <axboe@kernel.dk>
Cc:     kbuild-all@lists.01.org,
        GNU/Weeb Mailing List <gwml@vger.gnuweeb.org>,
        linux-kernel@vger.kernel.org
Subject: [PATCH] net: fix err_cast.cocci warnings
Message-ID: <YkY6L0HKkmfYONdl@71276691420c>
References: <202204010757.kWpiiHMi-lkp@intel.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <202204010757.kWpiiHMi-lkp@intel.com>
X-Spam-Status: No, score=-4.4 required=5.0 tests=BAYES_00,DKIMWL_WL_HIGH,
        DKIM_SIGNED,DKIM_VALID,DKIM_VALID_AU,DKIM_VALID_EF,RCVD_IN_DNSWL_MED,
        SPF_HELO_PASS,SPF_NONE,T_SCC_BODY_TEXT_LINE autolearn=ham
        autolearn_force=no version=3.4.6
X-Spam-Checker-Version: SpamAssassin 3.4.6 (2021-04-09) on
        lindbergh.monkeyblade.net
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

From: kernel test robot <lkp@intel.com>

net/socket.c:1571:9-16: WARNING: ERR_CAST can be used with sock


 Use ERR_CAST inlined function instead of ERR_PTR(PTR_ERR(...))

Generated by: scripts/coccinelle/api/err_cast.cocci

Fixes: 3af464ccde38 ("net: add __sys_socket_file()")
Reported-by: kernel test robot <lkp@intel.com>
Signed-off-by: kernel test robot <lkp@intel.com>
---

tree:   https://github.com/ammarfaizi2/linux-block axboe/linux-block/sock-nolock
head:   8698873371093e22f708c2cf3a31f4dc2caab84f
commit: 3af464ccde389a5df95af3e221d098ac34d4606f [7/9] net: add __sys_socket_file()
:::::: branch date: 4 hours ago
:::::: commit date: 4 hours ago

 net/socket.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

--- a/net/socket.c
+++ b/net/socket.c
@@ -1568,7 +1568,7 @@ struct file *__sys_socket_direct(int fam
 
 	sock = __sys_socket_create(family, type, protocol);
 	if (IS_ERR(sock))
-		return ERR_PTR(PTR_ERR(sock));
+		return ERR_CAST(sock);
 
 	flags = type & ~SOCK_TYPE_MASK;
 	if (SOCK_NONBLOCK != O_NONBLOCK && (flags & SOCK_NONBLOCK))
