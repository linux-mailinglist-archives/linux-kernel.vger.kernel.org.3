Return-Path: <linux-kernel-owner@vger.kernel.org>
X-Original-To: lists+linux-kernel@lfdr.de
Delivered-To: lists+linux-kernel@lfdr.de
Received: from out1.vger.email (out1.vger.email [IPv6:2620:137:e000::1:20])
	by mail.lfdr.de (Postfix) with ESMTP id F123957ADB8
	for <lists+linux-kernel@lfdr.de>; Wed, 20 Jul 2022 04:28:06 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S238641AbiGTCTZ (ORCPT <rfc822;lists+linux-kernel@lfdr.de>);
        Tue, 19 Jul 2022 22:19:25 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:40598 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S240361AbiGTCSH (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 19 Jul 2022 22:18:07 -0400
Received: from mx0b-00069f02.pphosted.com (mx0b-00069f02.pphosted.com [205.220.177.32])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id A9919599ED
        for <linux-kernel@vger.kernel.org>; Tue, 19 Jul 2022 19:18:01 -0700 (PDT)
Received: from pps.filterd (m0246631.ppops.net [127.0.0.1])
        by mx0b-00069f02.pphosted.com (8.17.1.5/8.17.1.5) with ESMTP id 26K1FaEG015096;
        Wed, 20 Jul 2022 02:17:49 GMT
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=oracle.com; h=from : to : cc :
 subject : date : message-id : references : in-reply-to : content-type :
 content-id : content-transfer-encoding : mime-version; s=corp-2022-7-12;
 bh=jb5MEgryPVnZ/5su0mF7TMS/HVzzs+PR+9922kH4eBQ=;
 b=xU5jaI9Pt8WsMaUj914AI/v+CAO8SFh73786qWKeC0SsL+bJbvRKPdN1EWF8uTDC3UOS
 vVokX0fp9zpD+YYb6cjLFDvMuO4O003PTDVyLCr3DnqSGb1+4PTD7OGSqTCesQaHN4lb
 w25rup/t66JSuzX/hgyXHKC5bedAkZfQ+JmWjq9S2GzZpNtvsBIHh94gPQrvs4iz+E7c
 g7XXU29Yv6uKJtl83LHdNRwG712FmAfbIUGtiVAeYakgtmo2H+nIkkfWqpHae/sRpy/u
 0tau3SDTk5w9RghxaO3+iUutUHmsb4w0J/rzjNwhEKTzUhwobwIVBA8RYSgbCZ+U71Ik 9g== 
Received: from iadpaimrmta03.imrmtpd1.prodappiadaev1.oraclevcn.com (iadpaimrmta03.appoci.oracle.com [130.35.103.27])
        by mx0b-00069f02.pphosted.com (PPS) with ESMTPS id 3hbm42g53y-1
        (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=OK);
        Wed, 20 Jul 2022 02:17:48 +0000
Received: from pps.filterd (iadpaimrmta03.imrmtpd1.prodappiadaev1.oraclevcn.com [127.0.0.1])
        by iadpaimrmta03.imrmtpd1.prodappiadaev1.oraclevcn.com (8.17.1.5/8.17.1.5) with ESMTP id 26K0eeOi022175;
        Wed, 20 Jul 2022 02:17:47 GMT
Received: from nam04-bn8-obe.outbound.protection.outlook.com (mail-bn8nam04lp2044.outbound.protection.outlook.com [104.47.74.44])
        by iadpaimrmta03.imrmtpd1.prodappiadaev1.oraclevcn.com (PPS) with ESMTPS id 3hc1hseana-1
        (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=OK);
        Wed, 20 Jul 2022 02:17:46 +0000
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=Vbl/UgEB4iLqWTd9ZX6iS0Vq4i9x/J0qWx/pr7SYgpGMW9i9AupZruFFxl62nX5qAB7D4Z9btIpd5QIU/1AX1WnL0HpYcaMyay/ScNn4TceIbr5hgx51F61rwdkK024y8sOCqeBABjGENubE+ByThHQuZ0Xv0y3UG3taZBnM4bX6/7j0NiQM18Cww9ex3Yxo7JNu6aJmcrRj/W53c8jDDp+TaNtV/EMQdCm9st7gpkFsi9dWxxG+3Xj9Kfpe1sbmbwzq991YrVMOXk4MflQoYCHgKTqq05+NampTwFnPXFd/EiZsMvx197JXKiHHuluFe8Dr/tpVMwGtS71me/A8nw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=jb5MEgryPVnZ/5su0mF7TMS/HVzzs+PR+9922kH4eBQ=;
 b=QUExKJqN2OCCl6FJ/BMb2o/PMX4QwjSEJDDQV+EWrP17xpnV4deuXboF3r8yzKx/ptd8NNurbpNJmjHAUAcKs5UQAEo1J1lrCGURwf2jhrQw+L6F8CF31l/ynPpgI0AZ8WlG/GeuCNRobZyktXfNa/ANjL3oGe3dx6rRm9rA5NETJTFjdLZVth65ph/cpypA/QVLjaTNLX6vV7hcfqaFQ4CgEBvGcazL+idnQ2kCjorjTCRL/2k016M1/yHp8SEHSVtBwx1EDgBflMoUErRyjtYhrNcmGMKxZq6A1YRXwIdRBYCJjj1IUsu3wDVwyMcAKgBsG7/n7gNR3jgGAdPjHg==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=oracle.com; dmarc=pass action=none header.from=oracle.com;
 dkim=pass header.d=oracle.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=oracle.onmicrosoft.com; s=selector2-oracle-onmicrosoft-com;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=jb5MEgryPVnZ/5su0mF7TMS/HVzzs+PR+9922kH4eBQ=;
 b=P9VMLLQ/1/XGn1Fjs9UyWhzMworfE0Ux4iX1mZhMP/0uKfMZD/Ub943qWL+kv8cGNP+d9ie1K5z5HhKuSmdmmfPV2NW8mC7GF/b1WFvPTj4+1Zyhpf25qa99mAl4gSshc5RyTmEXs0k7+FCEJIbmRc1yAp414AUwqc6OH8tAlmg=
Received: from SN6PR10MB3022.namprd10.prod.outlook.com (2603:10b6:805:d8::25)
 by DM6PR10MB2889.namprd10.prod.outlook.com (2603:10b6:5:64::21) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.5438.17; Wed, 20 Jul
 2022 02:17:39 +0000
Received: from SN6PR10MB3022.namprd10.prod.outlook.com
 ([fe80::c4d1:edc3:7d21:7c68]) by SN6PR10MB3022.namprd10.prod.outlook.com
 ([fe80::c4d1:edc3:7d21:7c68%6]) with mapi id 15.20.5438.024; Wed, 20 Jul 2022
 02:17:39 +0000
From:   Liam Howlett <liam.howlett@oracle.com>
To:     "maple-tree@lists.infradead.org" <maple-tree@lists.infradead.org>,
        "linux-mm@kvack.org" <linux-mm@kvack.org>,
        "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>,
        Andrew Morton <akpm@linux-foundation.org>,
        Hugh Dickins <hughd@google.com>
CC:     Yu Zhao <yuzhao@google.com>
Subject: [PATCH v12 01/69] Maple Tree: add new data structure
Thread-Topic: [PATCH v12 01/69] Maple Tree: add new data structure
Thread-Index: AQHYm97ikRRpyTcP5Um7xzA5qlGMyg==
Date:   Wed, 20 Jul 2022 02:17:39 +0000
Message-ID: <20220720021727.17018-2-Liam.Howlett@oracle.com>
References: <20220720021727.17018-1-Liam.Howlett@oracle.com>
In-Reply-To: <20220720021727.17018-1-Liam.Howlett@oracle.com>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-mailer: git-send-email 2.35.1
x-ms-publictraffictype: Email
x-ms-office365-filtering-correlation-id: 5c91633d-bc5a-443a-1eac-08da69f604fd
x-ms-traffictypediagnostic: DM6PR10MB2889:EE_
x-ms-exchange-senderadcheck: 1
x-ms-exchange-antispam-relay: 0
x-microsoft-antispam: BCL:0;
x-microsoft-antispam-message-info: LRxPrZbQjyn+QYMtJ4WTa7NRKx+TH2AVWeGMlDsrLLDQhaGRutJ2qMbvW6fqHYLHm1qfp0PqUvKYjVvBjjSnXLb3LSNKOfaG8QVMQ7Q6lgeaFC9v119s7wqK6wDo724LjKaHZuCHnZEEDzBAgJf38yU9nJSCWk4kMXRYnLXxXGsz/I40TqC9kKzAAgbm/nSryNAaKRU0sfoyPMvQ4+B4Wzlf+WuAmjex0WpIED/cGfuGH0MwXILOOLnObSqWD6RgSnKpsakw+MDDZMfd7fIzS8Ynuo2VMmutOdNvgFIL0/5UyOSz6q9bX5reQLtY//1NPnv3POAU0GIcgHoY76r22UiXPILBRANhxQTf881OX+k/85UTL1rmloxlgyz03pizXHGGg3Mwj1NHGwHQ6pFHFaEAmFSyvQXejN6MXkvrg7E1RX2c/D1It+z98oWSOPC50XTjKhXtWuicnK9XzJVfz29lrEhmz0S3AyItUBo6+u2PL47IYC+piSlkmoG5ApHw23oVxkZm00F5+ifOx8fuC3bCeH8odVTUunn9iZ4BIXTrkx7U1XTXCHNF5VPnEmA/RvV8BAdojQJl8u5FYZts7PwCrYAGPOZzikmveVAT9S5mnpFK8fbRCEnxV4tOXF0zUykaFAt6sJJEBDOq6CYCrKD62crDnJvodTNVXpZPiorXi+dHsLlNfofQD3QC6zRuA2vYt6Q+J4xBjo2Xe+i/Eplx0EGx2kdxK7ZSoNRIFEbPJ6MlwSxp5n8TF7ZQ5QHjHEEpnXvlnTKTFH0RKTqLNu4w3zmywff0Y5Cd8diRQWvEjAwlNnEGu5jWSLIxLdgLLMakIBkgDVDNYoQ37OM8gRgGV3jcN3GySdUc22WFUwBxPJo+0zfnnXiAg3U7/yddQdw0kFvGaAi7mvwNhQDC2w==
x-forefront-antispam-report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR10MB3022.namprd10.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230016)(136003)(346002)(376002)(396003)(366004)(39860400002)(8936002)(5660300002)(76116006)(44832011)(30864003)(64756008)(66476007)(66446008)(66946007)(66556008)(8676002)(4326008)(2906002)(91956017)(122000001)(38100700002)(86362001)(38070700005)(6486002)(966005)(36756003)(71200400001)(478600001)(41300700001)(83380400001)(316002)(110136005)(186003)(6512007)(26005)(6506007)(2616005)(1076003)(559001)(579004)(309714004);DIR:OUT;SFP:1101;
x-ms-exchange-antispam-messagedata-chunkcount: 1
x-ms-exchange-antispam-messagedata-0: =?utf-8?B?QkNhTDd3SkR5QXlaK2lpdVFKT2ttcWVtT2Y1UkEyRTdKaHBZQlpWKys1UW1k?=
 =?utf-8?B?QXoxbmJkckFJMlhXclkycFd5QU5vS2E0L0dNanZJYXVSajQvb2ZtSjJVN09L?=
 =?utf-8?B?Y0VWeXBiZytIbU53UXZuR0xrSkp4dGtBQU9NaTBmWnRTVHUzYUVQVmdKN0Mr?=
 =?utf-8?B?WEVuZmZ4S2taZFIvTFJxZi9vYlMwVWd1ck93Ny9RVEUwaXRFazlRMXY5WEpo?=
 =?utf-8?B?cnhnRmRpMFFpMUY2Q1NLODhuYkE2cE4zRE5laXlvSjQzcVVsdDZFeXRsazE0?=
 =?utf-8?B?ek1IdWprNGxzZDU0RnBOMVZmdURPZlBBNm5tY2FOQ0hWZ21ZaXcyNU9XVVBY?=
 =?utf-8?B?Wi9qRXMxRldxV1BKV0ZRN2FzMWl1aFJOdWtMY1hkczJQVE5aSEVOUG9KWHoz?=
 =?utf-8?B?ZkpLbE50Nk5HdmJGNWt2bFlJMFU4RDdUOXJXdlErVGI0ZlBGb3JNY2o4MUJu?=
 =?utf-8?B?V1g2REdrQWtRZUI1VkU2MGh1dUd3R1d1NDFZanArYnordXdqbUJGcjhFbktS?=
 =?utf-8?B?ZTU2T05IWXRRbXpEdTJTTjkrSHR4b1dnVW1JOXdZRUszZnFEV2RXeFkzNUov?=
 =?utf-8?B?SFFOQWlUVHlSaGtUMWNhSlRDSzlJM3R0NERFQldvcVcxSit4Mm5nYnVKV1Y4?=
 =?utf-8?B?Vm9NYWpUQUxpOXgxUGJjV05sUE9vblNqZzEyRjRvY05Kc1BKalgzc2Z2dmdN?=
 =?utf-8?B?VHBDNlV5RkNNNEhUa0ZkV0xCZGVVZnp4Sys4M0ExaWE2U3UrSlVndWovZ1ZL?=
 =?utf-8?B?NXNFMmpld0hrckZrWXhheTBuQTRZNHBYOXRhcWduakhVTXM1U0I1ZCtoR1dI?=
 =?utf-8?B?UnRmUW5PaEFleERzSU02bVZYcXFnVnRwUnZvUGhjWkwvQTJBb0pTK1RERTVV?=
 =?utf-8?B?RUZ4eHY5YU43Q003UFViZU5RN0lsVytCYjBnWnoxZEZVUVpITjZFZnZzaS9S?=
 =?utf-8?B?YXZCTWZHa0RkNDhtWHZtdWVlYTdUSXhmM1pBQ25CUFdVV05aUStrWEdUczRT?=
 =?utf-8?B?SVlKQ1U0QTgycFVTdU8rNEFFR25wUzNFa1VvWXNwTS9xNENLSlQ3K0YzQ0R4?=
 =?utf-8?B?UTZWLzljR0pNMmMvSm5jSHIzVnY2V3lVY0o0VjhmQnB5N2N5UnJYbHE1T0I5?=
 =?utf-8?B?T09CVTd0ZGNmVTdSVFNkVTQxeUJmUCt3UGgvTWFFREpmT1k5cjI1T0hvVVN1?=
 =?utf-8?B?UkdEQlJHRE02VVVyV0k1a0RtV2hXVTJMdlc2WXgwcG5WekRqOHFjVTN5VW53?=
 =?utf-8?B?ZFVXVVpRNUVwdmNkNGVLNjBzblA2ampyYlN6dkYzc1BCL0JCYS96Z0F0VWh0?=
 =?utf-8?B?OHNhUnlBWTMwdmZRK1dLdXl3d05uWWlUWGFjQ0p1bkZjSzE4TnBsRkpkcDcr?=
 =?utf-8?B?aGdySk9WZWI0U3ptamdDWDhGRUVJaVQ3LzAxZ3FmL3NORzNqVWJqa3ZhbCtl?=
 =?utf-8?B?YVF3ZVFyYTZ0UEVnL0ZsWGVXeFdvcFRiUG5VYVdQUSs4bFY3SHpIeWxKYmdJ?=
 =?utf-8?B?UUI5UGhXa2N6K1N6bmlWN0hRVTJ4T0R2VHQrTXl3NmNEMTMxamlCVCtHMW1y?=
 =?utf-8?B?L3pzMkNUVURnSzRLV0w3QzcxUHRGc2F6TWxRNENjSWdObzZoT0Ntd2EybHRZ?=
 =?utf-8?B?VnRlNHNsSEpESHhjdlNVSzIxNVRlMGJ2Q211dFhhZjVkdWZ0cDIyVWZIeXNR?=
 =?utf-8?B?NStlS3NKYTRPbUJha2IrR0h3emxpYXdKcjNvaHB6WkpITC9VTTcvZmxUQWRM?=
 =?utf-8?B?YXhmUzVQaUx4WjRqUVQ5OHJEVTJsVElxb09mR0t1bVQvaGcvSE5sd3N6UHp5?=
 =?utf-8?B?MHI4MnpmWGI2S3ZJZHY1NzNNaU13VHA2U2FVak5jNHAxMHkwZVdmWmhsbVFp?=
 =?utf-8?B?V21ORXUxVWVkMzJMRlloRDU1RnhzcmkxSzdnVnEvV2JXSG9uMW5DcFZMWkEv?=
 =?utf-8?B?dkMyc0lBaXpsVnV3Nkc1QWFuMFhHM0ZFMVdFN1ZlM3ZhVEFiVmxzMytBcWpB?=
 =?utf-8?B?cDgxcU9ub0kvY1RGODdFK0U3UGpmUjExdTRhRTZRNWh3OWdORFF5cDFpeGZH?=
 =?utf-8?B?dmtzbnpUb1kvS3pDelpRbGE5SThyTUdtTGZBNC91MGU0L0RvZnM3MUY4TGZK?=
 =?utf-8?B?dGVtdU5zYWFRQ0RYNEJ5MFU4NHRNVXQ0ajBobDRZMVZBQjlrekhtVGMralpr?=
 =?utf-8?B?dGc9PQ==?=
Content-Type: text/plain; charset="utf-8"
Content-ID: <9C9ECA1A7410C649872892B0BD2ADF2D@namprd10.prod.outlook.com>
Content-Transfer-Encoding: base64
MIME-Version: 1.0
X-OriginatorOrg: oracle.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-AuthSource: SN6PR10MB3022.namprd10.prod.outlook.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 5c91633d-bc5a-443a-1eac-08da69f604fd
X-MS-Exchange-CrossTenant-originalarrivaltime: 20 Jul 2022 02:17:39.2602
 (UTC)
X-MS-Exchange-CrossTenant-fromentityheader: Hosted
X-MS-Exchange-CrossTenant-id: 4e2c6054-71cb-48f1-bd6c-3a9705aca71b
X-MS-Exchange-CrossTenant-mailboxtype: HOSTED
X-MS-Exchange-CrossTenant-userprincipalname: wy92BAV3gLd6rLWkbbKftpIpbspI4/aqixA49DilSqBQm4GFxBz6ksrVkB1I/2FtQH9CAd52ual4o5YJR8ZjfQ==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: DM6PR10MB2889
X-Proofpoint-Virus-Version: vendor=baseguard
 engine=ICAP:2.0.205,Aquarius:18.0.883,Hydra:6.0.517,FMLib:17.11.122.1
 definitions=2022-07-19_10,2022-07-19_01,2022-06-22_01
X-Proofpoint-Spam-Details: rule=notspam policy=default score=0 spamscore=0 bulkscore=0 malwarescore=0
 mlxscore=0 phishscore=0 mlxlogscore=999 suspectscore=0 adultscore=0
 classifier=spam adjust=0 reason=mlx scancount=1 engine=8.12.0-2206140000
 definitions=main-2207200008
X-Proofpoint-ORIG-GUID: 0sjywpP9hYkRrKJLVjrfEk9KMK8k2zJ1
X-Proofpoint-GUID: 0sjywpP9hYkRrKJLVjrfEk9KMK8k2zJ1
X-Spam-Status: No, score=-2.8 required=5.0 tests=BAYES_00,DKIM_SIGNED,
        DKIM_VALID,DKIM_VALID_AU,DKIM_VALID_EF,RCVD_IN_DNSWL_LOW,
        RCVD_IN_MSPIKE_H2,SPF_HELO_NONE,SPF_NONE autolearn=ham
        autolearn_force=no version=3.4.6
X-Spam-Checker-Version: SpamAssassin 3.4.6 (2021-04-09) on
        lindbergh.monkeyblade.net
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

RnJvbTogIkxpYW0gUi4gSG93bGV0dCIgPExpYW0uSG93bGV0dEBPcmFjbGUuY29tPg0KDQpQYXRj
aCBzZXJpZXMgIkludHJvZHVjaW5nIHRoZSBNYXBsZSBUcmVlIi4NCg0KVGhlIG1hcGxlIHRyZWUg
aXMgYW4gUkNVLXNhZmUgcmFuZ2UgYmFzZWQgQi10cmVlIGRlc2lnbmVkIHRvIHVzZSBtb2Rlcm4N
CnByb2Nlc3NvciBjYWNoZSBlZmZpY2llbnRseS4gIFRoZXJlIGFyZSBhIG51bWJlciBvZiBwbGFj
ZXMgaW4gdGhlIGtlcm5lbA0KdGhhdCBhIG5vbi1vdmVybGFwcGluZyByYW5nZS1iYXNlZCB0cmVl
IHdvdWxkIGJlIGJlbmVmaWNpYWwsIGVzcGVjaWFsbHkNCm9uZSB3aXRoIGEgc2ltcGxlIGludGVy
ZmFjZS4gIElmIHlvdSB1c2UgYW4gcmJ0cmVlIHdpdGggb3RoZXIgZGF0YQ0Kc3RydWN0dXJlcyB0
byBpbXByb3ZlIHBlcmZvcm1hbmNlIG9yIGFuIGludGVydmFsIHRyZWUgdG8gdHJhY2sNCm5vbi1v
dmVybGFwcGluZyByYW5nZXMsIHRoZW4gdGhpcyBpcyBmb3IgeW91Lg0KDQpUaGUgdHJlZSBoYXMg
YSBicmFuY2hpbmcgZmFjdG9yIG9mIDEwIGZvciBub24tbGVhZiBub2RlcyBhbmQgMTYgZm9yIGxl
YWYNCm5vZGVzLiAgV2l0aCB0aGUgaW5jcmVhc2VkIGJyYW5jaGluZyBmYWN0b3IsIGl0IGlzIHNp
Z25pZmljYW50bHkgc2hvcnRlcg0KdGhhbiB0aGUgcmJ0cmVlIHNvIGl0IGhhcyBmZXdlciBjYWNo
ZSBtaXNzZXMuICBUaGUgcmVtb3ZhbCBvZiB0aGUgbGlua2VkDQpsaXN0IGJldHdlZW4gc3Vic2Vx
dWVudCBlbnRyaWVzIGFsc28gcmVkdWNlcyB0aGUgY2FjaGUgbWlzc2VzIGFuZCB0aGUgbmVlZA0K
dG8gcHVsbCBpbiB0aGUgcHJldmlvdXMgYW5kIG5leHQgVk1BIGR1cmluZyBtYW55IHRyZWUgYWx0
ZXJhdGlvbnMuDQoNClRoZSBmaXJzdCB1c2VyIHRoYXQgaXMgY292ZXJlZCBpbiB0aGlzIHBhdGNo
IHNldCBpcyB0aGUgdm1fYXJlYV9zdHJ1Y3QsDQp3aGVyZSB0aHJlZSBkYXRhIHN0cnVjdHVyZXMg
YXJlIHJlcGxhY2VkIGJ5IHRoZSBtYXBsZSB0cmVlOiB0aGUgYXVnbWVudGVkDQpyYnRyZWUsIHRo
ZSB2bWEgY2FjaGUsIGFuZCB0aGUgbGlua2VkIGxpc3Qgb2YgVk1BcyBpbiB0aGUgbW1fc3RydWN0
LiAgVGhlDQpsb25nIHRlcm0gZ29hbCBpcyB0byByZWR1Y2Ugb3IgcmVtb3ZlIHRoZSBtbWFwX2xv
Y2sgY29udGVudGlvbi4NCg0KVGhlIHBsYW4gaXMgdG8gZ2V0IHRvIHRoZSBwb2ludCB3aGVyZSB3
ZSB1c2UgdGhlIG1hcGxlIHRyZWUgaW4gUkNVIG1vZGUuDQpSZWFkZXJzIHdpbGwgbm90IGJsb2Nr
IGZvciB3cml0ZXJzLiAgQSBzaW5nbGUgd3JpdGUgb3BlcmF0aW9uIHdpbGwgYmUNCmFsbG93ZWQg
YXQgYSB0aW1lLiAgQSByZWFkZXIgcmUtd2Fsa3MgaWYgc3RhbGUgZGF0YSBpcyBlbmNvdW50ZXJl
ZC4gIFZNQXMNCndvdWxkIGJlIFJDVSBlbmFibGVkIGFuZCB0aGlzIG1vZGUgd291bGQgYmUgZW50
ZXJlZCBvbmNlIG11bHRpcGxlIHRhc2tzDQphcmUgdXNpbmcgdGhlIG1tX3N0cnVjdC4NCg0KRGF2
aWRsb3Igc2FpZA0KDQo6IFllcyBJIGxpa2UgdGhlIG1hcGxlIHRyZWUsIGFuZCBhdCB0aGlzIHN0
YWdlIEkgZG9uJ3QgdGhpbmsgd2UgY2FuIGFzayBmb3INCjogbW9yZSBmcm9tIHRoaXMgc2VyaWVz
IHdydCB0aGUgTU0gLSBhbGJlaXQgdGhlcmUgc2VlbXMgdG8gc3RpbGwgYmUgc29tZQ0KOiBmb2xr
cyByZXBvcnRpbmcgYnJlYWthZ2UuICBGdW5kYW1lbnRhbGx5IEkgc2VlIExpYW0ncyB3b3JrIHRv
IChyZSltb3ZlDQo6IGNvbXBsZXhpdHkgb3V0IG9mIHRoZSBNTSAobm90IHRvIHNheSB0aGF0IHRo
ZSBhY3R1YWwgbWFwbGUgdHJlZSBpcyBub3QNCjogY29tcGxleCkgYnkgY29uc29saWRhdGluZyB0
aGUgdGhyZWUgY29tcGxpbWVudGFyeSBkYXRhIHN0cnVjdHVyZXMgdmVyeQ0KOiBtdWNoIHdvcnRo
IGl0IGNvbnNpZGVyaW5nIHBlcmZvcm1hbmNlIGRvZXMgbm90IHRha2UgYSBoaXQuICBUaGlzIHdh
cyB2ZXJ5DQo6IG11Y2ggYSB0dXJuIG9mZiB3aXRoIHRoZSByYW5nZSBsb2NraW5nIGFwcHJvYWNo
LCB3aGljaCB3b3JzdCBjYXNlIHNjZW5hcmlvDQo6IGluY3VycmVkIGluIHByb2hpYml0aXZlIG92
ZXJoZWFkLiAgQWxzbyBhcyBMaWFtIGFuZCBNYXR0aGV3IGhhdmUNCjogbWVudGlvbmVkLCBSQ1Ug
b3BlbnMgdXAgYSBsb3Qgb2YgbmljZSBwZXJmb3JtYW5jZSBvcHBvcnR1bml0aWVzLCBhbmQgaW4N
CjogYWRkaXRpb24gYWNhZGVtaWFbMV0gaGFzIHNob3duIG91dHN0YW5kaW5nIHNjYWxhYmlsaXR5
IG9mIGFkZHJlc3Mgc3BhY2VzDQo6IHdpdGggdGhlIGZvdW5kYXRpb24gb2YgcmVwbGFjaW5nIHRo
ZSBsb2NrZWQgcmJ0cmVlIHdpdGggUkNVIGF3YXJlIHRyZWVzLg0KDQpBIHNpbWlsYXIgd29yayBo
YXMgYmVlbiBkaXNjb3ZlcmVkIGluIHRoZSBhY2FkZW1pYyBwcmVzcw0KDQoJaHR0cHM6Ly9wZG9z
LmNzYWlsLm1pdC5lZHUvcGFwZXJzL3JjdXZtOmFzcGxvczEyLnBkZg0KDQpTaGVlciBjb2luY2lk
ZW5jZS4gIFdlIGRlc2lnbmVkIG91ciB0cmVlIHdpdGggdGhlIGludGVudGlvbiBvZiBzb2x2aW5n
IHRoZQ0KaGFyZGVzdCBwcm9ibGVtIGZpcnN0LiAgVXBvbiBzZXR0bGluZyBvbiBhIGItdHJlZSB2
YXJpYW50IGFuZCBhIHJvdWdoDQpvdXRsaW5lLCB3ZSByZXNlYXJjaGVkIHJhbmdlZCBiYXNlZCBi
LXRyZWVzIGFuZCBSQ1UgYi10cmVlcyBhbmQgZGlkIGZpbmQNCnRoYXQgYXJ0aWNsZS4gIFNvIGl0
IHdhcyBuaWNlIHRvIGZpbmQgcmVhc3N1cmFuY2VzIHRoYXQgd2Ugd2VyZSBvbiB0aGUNCnJpZ2h0
IHBhdGgsIGJ1dCBvdXIgZGVzaWduIGNob2ljZSBvZiB1c2luZyByYW5nZXMgbWFkZSB0aGF0IHBh
cGVyIHVudXNhYmxlDQpmb3IgdXMuDQoNClRoaXMgcGF0Y2ggKG9mIDY5KToNCg0KVGhlIG1hcGxl
IHRyZWUgaXMgYW4gUkNVLXNhZmUgcmFuZ2UgYmFzZWQgQi10cmVlIGRlc2lnbmVkIHRvIHVzZSBt
b2Rlcm4NCnByb2Nlc3NvciBjYWNoZSBlZmZpY2llbnRseS4gIFRoZXJlIGFyZSBhIG51bWJlciBv
ZiBwbGFjZXMgaW4gdGhlIGtlcm5lbA0KdGhhdCBhIG5vbi1vdmVybGFwcGluZyByYW5nZS1iYXNl
ZCB0cmVlIHdvdWxkIGJlIGJlbmVmaWNpYWwsIGVzcGVjaWFsbHkNCm9uZSB3aXRoIGEgc2ltcGxl
IGludGVyZmFjZS4gIElmIHlvdSB1c2UgYW4gcmJ0cmVlIHdpdGggb3RoZXIgZGF0YQ0Kc3RydWN0
dXJlcyB0byBpbXByb3ZlIHBlcmZvcm1hbmNlIG9yIGFuIGludGVydmFsIHRyZWUgdG8gdHJhY2sN
Cm5vbi1vdmVybGFwcGluZyByYW5nZXMsIHRoZW4gdGhpcyBpcyBmb3IgeW91Lg0KDQpUaGUgdHJl
ZSBoYXMgYSBicmFuY2hpbmcgZmFjdG9yIG9mIDEwIGZvciBub24tbGVhZiBub2RlcyBhbmQgMTYg
Zm9yIGxlYWYNCm5vZGVzLiAgV2l0aCB0aGUgaW5jcmVhc2VkIGJyYW5jaGluZyBmYWN0b3IsIGl0
IGlzIHNpZ25pZmljYW50bHkgc2hvcnRlcg0KdGhhbiB0aGUgcmJ0cmVlIHNvIGl0IGhhcyBmZXdl
ciBjYWNoZSBtaXNzZXMuICBUaGUgcmVtb3ZhbCBvZiB0aGUgbGlua2VkDQpsaXN0IGJldHdlZW4g
c3Vic2VxdWVudCBlbnRyaWVzIGFsc28gcmVkdWNlcyB0aGUgY2FjaGUgbWlzc2VzIGFuZCB0aGUg
bmVlZA0KdG8gcHVsbCBpbiB0aGUgcHJldmlvdXMgYW5kIG5leHQgVk1BIGR1cmluZyBtYW55IHRy
ZWUgYWx0ZXJhdGlvbnMuDQoNClRoZSBmaXJzdCB1c2VyIHRoYXQgaXMgY292ZXJlZCBpbiB0aGlz
IHBhdGNoIHNldCBpcyB0aGUgdm1fYXJlYV9zdHJ1Y3QsDQp3aGVyZSB0aHJlZSBkYXRhIHN0cnVj
dHVyZXMgYXJlIHJlcGxhY2VkIGJ5IHRoZSBtYXBsZSB0cmVlOiB0aGUgYXVnbWVudGVkDQpyYnRy
ZWUsIHRoZSB2bWEgY2FjaGUsIGFuZCB0aGUgbGlua2VkIGxpc3Qgb2YgVk1BcyBpbiB0aGUgbW1f
c3RydWN0LiAgVGhlDQpsb25nIHRlcm0gZ29hbCBpcyB0byByZWR1Y2Ugb3IgcmVtb3ZlIHRoZSBt
bWFwX2xvY2sgY29udGVudGlvbi4NCg0KVGhlIHBsYW4gaXMgdG8gZ2V0IHRvIHRoZSBwb2ludCB3
aGVyZSB3ZSB1c2UgdGhlIG1hcGxlIHRyZWUgaW4gUkNVIG1vZGUuDQpSZWFkZXJzIHdpbGwgbm90
IGJsb2NrIGZvciB3cml0ZXJzLiAgQSBzaW5nbGUgd3JpdGUgb3BlcmF0aW9uIHdpbGwgYmUNCmFs
bG93ZWQgYXQgYSB0aW1lLiAgQSByZWFkZXIgcmUtd2Fsa3MgaWYgc3RhbGUgZGF0YSBpcyBlbmNv
dW50ZXJlZC4gIFZNQXMNCndvdWxkIGJlIFJDVSBlbmFibGVkIGFuZCB0aGlzIG1vZGUgd291bGQg
YmUgZW50ZXJlZCBvbmNlIG11bHRpcGxlIHRhc2tzDQphcmUgdXNpbmcgdGhlIG1tX3N0cnVjdC4N
Cg0KTGluazogaHR0cHM6Ly9sa21sLmtlcm5lbC5vcmcvci8yMDIyMDYyMTIwNDYzMi4zMzcwMDQ5
LTEtTGlhbS5Ib3dsZXR0QG9yYWNsZS5jb20NCkxpbms6IGh0dHBzOi8vbGttbC5rZXJuZWwub3Jn
L3IvMjAyMjA1MDQwMTA3MTYuNjYxMTE1LTEtTGlhbS5Ib3dsZXR0QG9yYWNsZS5jb20NCkxpbms6
IGh0dHBzOi8vbGttbC5rZXJuZWwub3JnL3IvMjAyMjA1MDQwMDI1NTQuNjU0NjQyLTEtTGlhbS5I
b3dsZXR0QG9yYWNsZS5jb20NCkxpbms6IGh0dHBzOi8vbGttbC5rZXJuZWwub3JnL3IvMjAyMjA1
MDQwMTA3MTYuNjYxMTE1LTMtTGlhbS5Ib3dsZXR0QG9yYWNsZS5jb20NCkxpbms6IGh0dHBzOi8v
bGttbC5rZXJuZWwub3JnL3IvMjAyMjA1MTExNDQzMDQuMTQzMDg1MS0yLUxpYW0uSG93bGV0dEBv
cmFjbGUuY29tDQpMaW5rOiBodHRwczovL2xrbWwua2VybmVsLm9yZy9yLzIwMjIwNTE3MTQ1OTEz
LjM0ODA3MjktMS1MaWFtLkhvd2xldHRAb3JhY2xlLmNvbQ0KTGluazogaHR0cHM6Ly9sa21sLmtl
cm5lbC5vcmcvci8yMDIyMDUxNzE1MjIwOS4zNDg2NzI0LTEtTGlhbS5Ib3dsZXR0QG9yYWNsZS5j
b20NCkxpbms6IGh0dHBzOi8vbGttbC5rZXJuZWwub3JnL3IvMjAyMjA1MTkxNTAzMDQuMTI4OTYz
Ni0xLUxpYW0uSG93bGV0dEBvcmFjbGUuY29tDQpMaW5rOiBodHRwczovL2xrbWwua2VybmVsLm9y
Zy9yLzIwMjIwNjA3MDYzODM0LjcwMDQtMS1sdWthcy5idWx3YWhuQGdtYWlsLmNvbQ0KTGluazog
aHR0cHM6Ly9sa21sLmtlcm5lbC5vcmcvci8yMDIyMDYxNTE0MTkyMS40MTc1OTgtMi1MaWFtLkhv
d2xldHRAb3JhY2xlLmNvbQ0KTGluazogaHR0cHM6Ly9sa21sLmtlcm5lbC5vcmcvci8yMDIyMDYx
NTE0MTkyMS40MTc1OTgtMy1MaWFtLkhvd2xldHRAb3JhY2xlLmNvbQ0KTGluazogaHR0cHM6Ly9s
a21sLmtlcm5lbC5vcmcvci8yMDIyMDYxNjAxMTczOS44MDI2NjktMy1MaWFtLkhvd2xldHRAb3Jh
Y2xlLmNvbQ0KTGluazogaHR0cHM6Ly9sa21sLmtlcm5lbC5vcmcvci8yMDIyMDYxNTE3NDIxMy43
Mzg4NDktMS1MaWFtLkhvd2xldHRAb3JhY2xlLmNvbQ0KTGluazogaHR0cHM6Ly9sa21sLmtlcm5l
bC5vcmcvci8yMDIyMDYxNzEzNDYwOS4xNzcxNjExLTEtTGlhbS5Ib3dsZXR0QG9yYWNsZS5jb20N
Ckxpbms6IGh0dHBzOi8vbGttbC5rZXJuZWwub3JnL3IvMjAyMjA2MjEyMDQ2MzIuMzM3MDA0OS0y
LUxpYW0uSG93bGV0dEBvcmFjbGUuY29tDQpTaWduZWQtb2ZmLWJ5OiBMaWFtIFIuIEhvd2xldHQg
PExpYW0uSG93bGV0dEBvcmFjbGUuY29tPg0KU2lnbmVkLW9mZi1ieTogTWF0dGhldyBXaWxjb3gg
KE9yYWNsZSkgPHdpbGx5QGluZnJhZGVhZC5vcmc+DQpUZXN0ZWQtYnk6IERhdmlkIEhvd2VsbHMg
PGRob3dlbGxzQHJlZGhhdC5jb20+DQpUZXN0ZWQtYnk6IFN2ZW4gU2NobmVsbGUgPHN2ZW5zQGxp
bnV4LmlibS5jb20+DQpTaWduZWQtb2ZmLWJ5OiBMdWthcyBCdWx3YWhuIDxsdWthcy5idWx3YWhu
QGdtYWlsLmNvbT4NCkNjOiBDYXRhbGluIE1hcmluYXMgPGNhdGFsaW4ubWFyaW5hc0Bhcm0uY29t
Pg0KQ2M6IFNlb25nSmFlIFBhcmsgPHNqQGtlcm5lbC5vcmc+DQpDYzogVmxhc3RpbWlsIEJhYmth
IDx2YmFia2FAc3VzZS5jej4NCkNjOiBXaWxsIERlYWNvbiA8d2lsbEBrZXJuZWwub3JnPg0KQ2M6
IERhdmlkbG9ociBCdWVzbyA8ZGF2ZUBzdGdvbGFicy5uZXQ+DQpTaWduZWQtb2ZmLWJ5OiBBbmRy
ZXcgTW9ydG9uIDxha3BtQGxpbnV4LWZvdW5kYXRpb24ub3JnPg0KLS0tDQogRG9jdW1lbnRhdGlv
bi9jb3JlLWFwaS9pbmRleC5yc3QgICAgICAgICAgICAgIHwgICAgMSArDQogRG9jdW1lbnRhdGlv
bi9jb3JlLWFwaS9tYXBsZV90cmVlLnJzdCAgICAgICAgIHwgIDIxNyArDQogTUFJTlRBSU5FUlMg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgICAxMiArDQogaW5jbHVkZS9saW51
eC9tYXBsZV90cmVlLmggICAgICAgICAgICAgICAgICAgIHwgIDY4NCArKw0KIGluY2x1ZGUvdHJh
Y2UvZXZlbnRzL21hcGxlX3RyZWUuaCAgICAgICAgICAgICB8ICAxMjMgKw0KIGluaXQvbWFpbi5j
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAgIDIgKw0KIGxpYi9LY29uZmln
LmRlYnVnICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAgMTUgKw0KIGxpYi9NYWtlZmls
ZSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAgIDMgKy0NCiBsaWIvbWFwbGVf
dHJlZS5jICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCA3MTAyICsrKysrKysrKysrKysr
KysrDQogdG9vbHMvdGVzdGluZy9yYWRpeC10cmVlLy5naXRpZ25vcmUgICAgICAgICAgIHwgICAg
MiArDQogdG9vbHMvdGVzdGluZy9yYWRpeC10cmVlL2dlbmVyYXRlZC9hdXRvY29uZi5oIHwgICAg
MSArDQogdG9vbHMvdGVzdGluZy9yYWRpeC10cmVlL2xpbnV4L21hcGxlX3RyZWUuaCAgIHwgICAg
NyArDQogdG9vbHMvdGVzdGluZy9yYWRpeC10cmVlL21hcGxlLmMgICAgICAgICAgICAgIHwgICA1
OSArDQogLi4uL3JhZGl4LXRyZWUvdHJhY2UvZXZlbnRzL21hcGxlX3RyZWUuaCAgICAgIHwgICAg
NSArDQogMTQgZmlsZXMgY2hhbmdlZCwgODIzMiBpbnNlcnRpb25zKCspLCAxIGRlbGV0aW9uKC0p
DQogY3JlYXRlIG1vZGUgMTAwNjQ0IERvY3VtZW50YXRpb24vY29yZS1hcGkvbWFwbGVfdHJlZS5y
c3QNCiBjcmVhdGUgbW9kZSAxMDA2NDQgaW5jbHVkZS9saW51eC9tYXBsZV90cmVlLmgNCiBjcmVh
dGUgbW9kZSAxMDA2NDQgaW5jbHVkZS90cmFjZS9ldmVudHMvbWFwbGVfdHJlZS5oDQogY3JlYXRl
IG1vZGUgMTAwNjQ0IGxpYi9tYXBsZV90cmVlLmMNCiBjcmVhdGUgbW9kZSAxMDA2NDQgdG9vbHMv
dGVzdGluZy9yYWRpeC10cmVlL2xpbnV4L21hcGxlX3RyZWUuaA0KIGNyZWF0ZSBtb2RlIDEwMDY0
NCB0b29scy90ZXN0aW5nL3JhZGl4LXRyZWUvbWFwbGUuYw0KIGNyZWF0ZSBtb2RlIDEwMDY0NCB0
b29scy90ZXN0aW5nL3JhZGl4LXRyZWUvdHJhY2UvZXZlbnRzL21hcGxlX3RyZWUuaA0KDQpkaWZm
IC0tZ2l0IGEvRG9jdW1lbnRhdGlvbi9jb3JlLWFwaS9pbmRleC5yc3QgYi9Eb2N1bWVudGF0aW9u
L2NvcmUtYXBpL2luZGV4LnJzdA0KaW5kZXggZGVkZDRkODUzMzI5Li45ZWYzN2U5ODVhNDAgMTAw
NjQ0DQotLS0gYS9Eb2N1bWVudGF0aW9uL2NvcmUtYXBpL2luZGV4LnJzdA0KKysrIGIvRG9jdW1l
bnRhdGlvbi9jb3JlLWFwaS9pbmRleC5yc3QNCkBAIC0zNiw2ICszNiw3IEBAIExpYnJhcnkgZnVu
Y3Rpb25hbGl0eSB0aGF0IGlzIHVzZWQgdGhyb3VnaG91dCB0aGUga2VybmVsLg0KICAgIGtyZWYN
CiAgICBhc3NvY19hcnJheQ0KICAgIHhhcnJheQ0KKyAgIG1hcGxlX3RyZWUNCiAgICBpZHINCiAg
ICBjaXJjdWxhci1idWZmZXJzDQogICAgcmJ0cmVlDQpkaWZmIC0tZ2l0IGEvRG9jdW1lbnRhdGlv
bi9jb3JlLWFwaS9tYXBsZV90cmVlLnJzdCBiL0RvY3VtZW50YXRpb24vY29yZS1hcGkvbWFwbGVf
dHJlZS5yc3QNCm5ldyBmaWxlIG1vZGUgMTAwNjQ0DQppbmRleCAwMDAwMDAwMDAwMDAuLjQ1ZGVm
Y2YxNWRhNw0KLS0tIC9kZXYvbnVsbA0KKysrIGIvRG9jdW1lbnRhdGlvbi9jb3JlLWFwaS9tYXBs
ZV90cmVlLnJzdA0KQEAgLTAsMCArMSwyMTcgQEANCisuLiBTUERYLUxpY2Vuc2UtSWRlbnRpZmll
cjogR1BMLTIuMCsNCisNCisNCis9PT09PT09PT09DQorTWFwbGUgVHJlZQ0KKz09PT09PT09PT0N
CisNCis6QXV0aG9yOiBMaWFtIFIuIEhvd2xldHQNCisNCitPdmVydmlldw0KKz09PT09PT09DQor
DQorVGhlIE1hcGxlIFRyZWUgaXMgYSBCLVRyZWUgZGF0YSB0eXBlIHdoaWNoIGlzIG9wdGltaXpl
ZCBmb3Igc3RvcmluZw0KK25vbi1vdmVybGFwcGluZyByYW5nZXMsIGluY2x1ZGluZyByYW5nZXMg
b2Ygc2l6ZSAxLiAgVGhlIHRyZWUgd2FzIGRlc2lnbmVkIHRvDQorYmUgc2ltcGxlIHRvIHVzZSBh
bmQgZG9lcyBub3QgcmVxdWlyZSBhIHVzZXIgd3JpdHRlbiBzZWFyY2ggbWV0aG9kLiAgSXQNCitz
dXBwb3J0cyBpdGVyYXRpbmcgb3ZlciBhIHJhbmdlIG9mIGVudHJpZXMgYW5kIGdvaW5nIHRvIHRo
ZSBwcmV2aW91cyBvciBuZXh0DQorZW50cnkgaW4gYSBjYWNoZS1lZmZpY2llbnQgbWFubmVyLiAg
VGhlIHRyZWUgY2FuIGFsc28gYmUgcHV0IGludG8gYW4gUkNVLXNhZmUNCittb2RlIG9mIG9wZXJh
dGlvbiB3aGljaCBhbGxvd3MgcmVhZGluZyBhbmQgd3JpdGluZyBjb25jdXJyZW50bHkuICBXcml0
ZXJzIG11c3QNCitzeW5jaHJvbml6ZSBvbiBhIGxvY2ssIHdoaWNoIGNhbiBiZSB0aGUgZGVmYXVs
dCBzcGlubG9jaywgb3IgdGhlIHVzZXIgY2FuIHNldA0KK3RoZSBsb2NrIHRvIGFuIGV4dGVybmFs
IGxvY2sgb2YgYSBkaWZmZXJlbnQgdHlwZS4NCisNCitUaGUgTWFwbGUgVHJlZSBtYWludGFpbnMg
YSBzbWFsbCBtZW1vcnkgZm9vdHByaW50IGFuZCB3YXMgZGVzaWduZWQgdG8gdXNlDQorbW9kZXJu
IHByb2Nlc3NvciBjYWNoZSBlZmZpY2llbnRseS4gIFRoZSBtYWpvcml0eSBvZiB0aGUgdXNlcnMg
d2lsbCBiZSBhYmxlIHRvDQordXNlIHRoZSBub3JtYWwgQVBJLiAgQW4gOnJlZjpgbWFwbGUtdHJl
ZS1hZHZhbmNlZC1hcGlgIGV4aXN0cyBmb3IgbW9yZSBjb21wbGV4DQorc2NlbmFyaW9zLiAgVGhl
IG1vc3QgaW1wb3J0YW50IHVzYWdlIG9mIHRoZSBNYXBsZSBUcmVlIGlzIHRoZSB0cmFja2luZyBv
ZiB0aGUNCit2aXJ0dWFsIG1lbW9yeSBhcmVhcy4NCisNCitUaGUgTWFwbGUgVHJlZSBjYW4gc3Rv
cmUgdmFsdWVzIGJldHdlZW4gYGAwYGAgYW5kIGBgVUxPTkdfTUFYYGAuICBUaGUgTWFwbGUNCitU
cmVlIHJlc2VydmVzIHZhbHVlcyB3aXRoIHRoZSBib3R0b20gdHdvIGJpdHMgc2V0IHRvICcxMCcg
d2hpY2ggYXJlIGJlbG93IDQwOTYNCisoaWUgMiwgNiwgMTAgLi4gNDA5NCkgZm9yIGludGVybmFs
IHVzZS4gIElmIHRoZSBlbnRyaWVzIG1heSB1c2UgcmVzZXJ2ZWQNCitlbnRyaWVzIHRoZW4gdGhl
IHVzZXJzIGNhbiBjb252ZXJ0IHRoZSBlbnRyaWVzIHVzaW5nIHhhX21rX3ZhbHVlKCkgYW5kIGNv
bnZlcnQNCit0aGVtIGJhY2sgYnkgY2FsbGluZyB4YV90b192YWx1ZSgpLiAgSWYgdGhlIHVzZXIg
bmVlZHMgdG8gdXNlIGEgcmVzZXJ2ZWQNCit2YWx1ZSwgdGhlbiB0aGUgdXNlciBjYW4gY29udmVy
dCB0aGUgdmFsdWUgd2hlbiB1c2luZyB0aGUNCis6cmVmOmBtYXBsZS10cmVlLWFkdmFuY2VkLWFw
aWAsIGJ1dCBhcmUgYmxvY2tlZCBieSB0aGUgbm9ybWFsIEFQSS4NCisNCitUaGUgTWFwbGUgVHJl
ZSBjYW4gYWxzbyBiZSBjb25maWd1cmVkIHRvIHN1cHBvcnQgc2VhcmNoaW5nIGZvciBhIGdhcCBv
ZiBhIGdpdmVuDQorc2l6ZSAob3IgbGFyZ2VyKS4NCisNCitQcmUtYWxsb2NhdGluZyBvZiBub2Rl
cyBpcyBhbHNvIHN1cHBvcnRlZCB1c2luZyB0aGUNCis6cmVmOmBtYXBsZS10cmVlLWFkdmFuY2Vk
LWFwaWAuICBUaGlzIGlzIHVzZWZ1bCBmb3IgdXNlcnMgd2hvIG11c3QgZ3VhcmFudGVlIGENCitz
dWNjZXNzZnVsIHN0b3JlIG9wZXJhdGlvbiB3aXRoaW4gYSBnaXZlbg0KK2NvZGUgc2VnbWVudCB3
aGVuIGFsbG9jYXRpbmcgY2Fubm90IGJlIGRvbmUuICBBbGxvY2F0aW9ucyBvZiBub2RlcyBhcmUN
CityZWxhdGl2ZWx5IHNtYWxsIGF0IGFyb3VuZCAyNTYgYnl0ZXMuDQorDQorLi4gX21hcGxlLXRy
ZWUtbm9ybWFsLWFwaToNCisNCitOb3JtYWwgQVBJDQorPT09PT09PT09PQ0KKw0KK1N0YXJ0IGJ5
IGluaXRpYWxpc2luZyBhIG1hcGxlIHRyZWUsIGVpdGhlciB3aXRoIERFRklORV9NVFJFRSgpIGZv
ciBzdGF0aWNhbGx5DQorYWxsb2NhdGVkIG1hcGxlIHRyZWVzIG9yIG10X2luaXQoKSBmb3IgZHlu
YW1pY2FsbHkgYWxsb2NhdGVkIG9uZXMuICBBDQorZnJlc2hseS1pbml0aWFsaXNlZCBtYXBsZSB0
cmVlIGNvbnRhaW5zIGEgYGBOVUxMYGAgcG9pbnRlciBmb3IgdGhlIHJhbmdlIGBgMGBgDQorLSBg
YFVMT05HX01BWGBgLiAgVGhlcmUgYXJlIGN1cnJlbnRseSB0d28gdHlwZXMgb2YgbWFwbGUgdHJl
ZXMgc3VwcG9ydGVkOiB0aGUNCithbGxvY2F0aW9uIHRyZWUgYW5kIHRoZSByZWd1bGFyIHRyZWUu
ICBUaGUgcmVndWxhciB0cmVlIGhhcyBhIGhpZ2hlciBicmFuY2hpbmcNCitmYWN0b3IgZm9yIGlu
dGVybmFsIG5vZGVzLiAgVGhlIGFsbG9jYXRpb24gdHJlZSBoYXMgYSBsb3dlciBicmFuY2hpbmcg
ZmFjdG9yDQorYnV0IGFsbG93cyB0aGUgdXNlciB0byBzZWFyY2ggZm9yIGEgZ2FwIG9mIGEgZ2l2
ZW4gc2l6ZSBvciBsYXJnZXIgZnJvbSBlaXRoZXINCitgYDBgYCB1cHdhcmRzIG9yIGBgVUxPTkdf
TUFYYGAgZG93bi4gIEFuIGFsbG9jYXRpb24gdHJlZSBjYW4gYmUgdXNlZCBieQ0KK3Bhc3Npbmcg
aW4gdGhlIGBgTVRfRkxBR1NfQUxMT0NfUkFOR0VgYCBmbGFnIHdoZW4gaW5pdGlhbGlzaW5nIHRo
ZSB0cmVlLg0KKw0KK1lvdSBjYW4gdGhlbiBzZXQgZW50cmllcyB1c2luZyBtdHJlZV9zdG9yZSgp
IG9yIG10cmVlX3N0b3JlX3JhbmdlKCkuDQorbXRyZWVfc3RvcmUoKSB3aWxsIG92ZXJ3cml0ZSBh
bnkgZW50cnkgd2l0aCB0aGUgbmV3IGVudHJ5IGFuZCByZXR1cm4gMCBvbg0KK3N1Y2Nlc3Mgb3Ig
YW4gZXJyb3IgY29kZSBvdGhlcndpc2UuICBtdHJlZV9zdG9yZV9yYW5nZSgpIHdvcmtzIGluIHRo
ZSBzYW1lIHdheQ0KK2J1dCB0YWtlcyBhIHJhbmdlLiAgbXRyZWVfbG9hZCgpIGlzIHVzZWQgdG8g
cmV0cmlldmUgdGhlIGVudHJ5IHN0b3JlZCBhdCBhDQorZ2l2ZW4gaW5kZXguICBZb3UgY2FuIHVz
ZSBtdHJlZV9lcmFzZSgpIHRvIGVyYXNlIGFuIGVudGlyZSByYW5nZSBieSBvbmx5DQora25vd2lu
ZyBvbmUgdmFsdWUgd2l0aGluIHRoYXQgcmFuZ2UsIG9yIG10cmVlX3N0b3JlKCkgY2FsbCB3aXRo
IGFuIGVudHJ5IG9mDQorTlVMTCBtYXkgYmUgdXNlZCB0byBwYXJ0aWFsbHkgZXJhc2UgYSByYW5n
ZSBvciBtYW55IHJhbmdlcyBhdCBvbmNlLg0KKw0KK0lmIHlvdSB3YW50IHRvIG9ubHkgc3RvcmUg
YSBuZXcgZW50cnkgdG8gYSByYW5nZSAob3IgaW5kZXgpIGlmIHRoYXQgcmFuZ2UgaXMNCitjdXJy
ZW50bHkgYGBOVUxMYGAsIHlvdSBjYW4gdXNlIG10cmVlX2luc2VydF9yYW5nZSgpIG9yIG10cmVl
X2luc2VydCgpIHdoaWNoDQorcmV0dXJuIC1FRVhJU1QgaWYgdGhlIHJhbmdlIGlzIG5vdCBlbXB0
eS4NCisNCitZb3UgY2FuIHNlYXJjaCBmb3IgYW4gZW50cnkgZnJvbSBhbiBpbmRleCB1cHdhcmRz
IGJ5IHVzaW5nIG10X2ZpbmQoKS4NCisNCitZb3UgY2FuIHdhbGsgZWFjaCBlbnRyeSB3aXRoaW4g
YSByYW5nZSBieSBjYWxsaW5nIG10X2Zvcl9lYWNoKCkuICBZb3UgbXVzdA0KK3Byb3ZpZGUgYSB0
ZW1wb3JhcnkgdmFyaWFibGUgdG8gc3RvcmUgYSBjdXJzb3IuICBJZiB5b3Ugd2FudCB0byB3YWxr
IGVhY2gNCitlbGVtZW50IG9mIHRoZSB0cmVlIHRoZW4gYGAwYGAgYW5kIGBgVUxPTkdfTUFYYGAg
bWF5IGJlIHVzZWQgYXMgdGhlIHJhbmdlLiAgSWYNCit0aGUgY2FsbGVyIGlzIGdvaW5nIHRvIGhv
bGQgdGhlIGxvY2sgZm9yIHRoZSBkdXJhdGlvbiBvZiB0aGUgd2FsayB0aGVuIGl0IGlzDQord29y
dGggbG9va2luZyBhdCB0aGUgbWFzX2Zvcl9lYWNoKCkgQVBJIGluIHRoZSA6cmVmOmBtYXBsZS10
cmVlLWFkdmFuY2VkLWFwaWANCitzZWN0aW9uLg0KKw0KK1NvbWV0aW1lcyBpdCBpcyBuZWNlc3Nh
cnkgdG8gZW5zdXJlIHRoZSBuZXh0IGNhbGwgdG8gc3RvcmUgdG8gYSBtYXBsZSB0cmVlIGRvZXMN
Citub3QgYWxsb2NhdGUgbWVtb3J5LCBwbGVhc2Ugc2VlIDpyZWY6YG1hcGxlLXRyZWUtYWR2YW5j
ZWQtYXBpYCBmb3IgdGhpcyB1c2UgY2FzZS4NCisNCitGaW5hbGx5LCB5b3UgY2FuIHJlbW92ZSBh
bGwgZW50cmllcyBmcm9tIGEgbWFwbGUgdHJlZSBieSBjYWxsaW5nDQorbXRyZWVfZGVzdHJveSgp
LiAgSWYgdGhlIG1hcGxlIHRyZWUgZW50cmllcyBhcmUgcG9pbnRlcnMsIHlvdSBtYXkgd2lzaCB0
byBmcmVlDQordGhlIGVudHJpZXMgZmlyc3QuDQorDQorQWxsb2NhdGluZyBOb2Rlcw0KKy0tLS0t
LS0tLS0tLS0tLS0NCisNCitUaGUgYWxsb2NhdGlvbnMgYXJlIGhhbmRsZWQgYnkgdGhlIGludGVy
bmFsIHRyZWUgY29kZS4gIFNlZQ0KKzpyZWY6YG1hcGxlLXRyZWUtYWR2YW5jZWQtYWxsb2NgIGZv
ciBvdGhlciBvcHRpb25zLg0KKw0KK0xvY2tpbmcNCistLS0tLS0tDQorDQorWW91IGRvIG5vdCBo
YXZlIHRvIHdvcnJ5IGFib3V0IGxvY2tpbmcuICBTZWUgOnJlZjpgbWFwbGUtdHJlZS1hZHZhbmNl
ZC1sb2Nrc2ANCitmb3Igb3RoZXIgb3B0aW9ucy4NCisNCitUaGUgTWFwbGUgVHJlZSB1c2VzIFJD
VSBhbmQgYW4gaW50ZXJuYWwgc3BpbmxvY2sgdG8gc3luY2hyb25pc2UgYWNjZXNzOg0KKw0KK1Rh
a2VzIFJDVSByZWFkIGxvY2s6DQorICogbXRyZWVfbG9hZCgpDQorICogbXRfZmluZCgpDQorICog
bXRfZm9yX2VhY2goKQ0KKyAqIG10X25leHQoKQ0KKyAqIG10X3ByZXYoKQ0KKw0KK1Rha2VzIG1h
X2xvY2sgaW50ZXJuYWxseToNCisgKiBtdHJlZV9zdG9yZSgpDQorICogbXRyZWVfc3RvcmVfcmFu
Z2UoKQ0KKyAqIG10cmVlX2luc2VydCgpDQorICogbXRyZWVfaW5zZXJ0X3JhbmdlKCkNCisgKiBt
dHJlZV9lcmFzZSgpDQorICogbXRyZWVfZGVzdHJveSgpDQorICogbXRfc2V0X2luX3JjdSgpDQor
ICogbXRfY2xlYXJfaW5fcmN1KCkNCisNCitJZiB5b3Ugd2FudCB0byB0YWtlIGFkdmFudGFnZSBv
ZiB0aGUgaW50ZXJuYWwgbG9jayB0byBwcm90ZWN0IHRoZSBkYXRhDQorc3RydWN0dXJlcyB0aGF0
IHlvdSBhcmUgc3RvcmluZyBpbiB0aGUgTWFwbGUgVHJlZSwgeW91IGNhbiBjYWxsIG10cmVlX2xv
Y2soKQ0KK2JlZm9yZSBjYWxsaW5nIG10cmVlX2xvYWQoKSwgdGhlbiB0YWtlIGEgcmVmZXJlbmNl
IGNvdW50IG9uIHRoZSBvYmplY3QgeW91DQoraGF2ZSBmb3VuZCBiZWZvcmUgY2FsbGluZyBtdHJl
ZV91bmxvY2soKS4gIFRoaXMgd2lsbCBwcmV2ZW50IHN0b3JlcyBmcm9tDQorcmVtb3ZpbmcgdGhl
IG9iamVjdCBmcm9tIHRoZSB0cmVlIGJldHdlZW4gbG9va2luZyB1cCB0aGUgb2JqZWN0IGFuZA0K
K2luY3JlbWVudGluZyB0aGUgcmVmY291bnQuICBZb3UgY2FuIGFsc28gdXNlIFJDVSB0byBhdm9p
ZCBkZXJlZmVyZW5jaW5nDQorZnJlZWQgbWVtb3J5LCBidXQgYW4gZXhwbGFuYXRpb24gb2YgdGhh
dCBpcyBiZXlvbmQgdGhlIHNjb3BlIG9mIHRoaXMNCitkb2N1bWVudC4NCisNCisuLiBfbWFwbGUt
dHJlZS1hZHZhbmNlZC1hcGk6DQorDQorQWR2YW5jZWQgQVBJDQorPT09PT09PT09PT09DQorDQor
VGhlIGFkdmFuY2VkIEFQSSBvZmZlcnMgbW9yZSBmbGV4aWJpbGl0eSBhbmQgYmV0dGVyIHBlcmZv
cm1hbmNlIGF0IHRoZQ0KK2Nvc3Qgb2YgYW4gaW50ZXJmYWNlIHdoaWNoIGNhbiBiZSBoYXJkZXIg
dG8gdXNlIGFuZCBoYXMgZmV3ZXIgc2FmZWd1YXJkcy4NCitZb3UgbXVzdCB0YWtlIGNhcmUgb2Yg
eW91ciBvd24gbG9ja2luZyB3aGlsZSB1c2luZyB0aGUgYWR2YW5jZWQgQVBJLg0KK1lvdSBjYW4g
dXNlIHRoZSBtYV9sb2NrLCBSQ1Ugb3IgYW4gZXh0ZXJuYWwgbG9jayBmb3IgcHJvdGVjdGlvbi4N
CitZb3UgY2FuIG1peCBhZHZhbmNlZCBhbmQgbm9ybWFsIG9wZXJhdGlvbnMgb24gdGhlIHNhbWUg
YXJyYXksIGFzIGxvbmcNCithcyB0aGUgbG9ja2luZyBpcyBjb21wYXRpYmxlLiAgVGhlIDpyZWY6
YG1hcGxlLXRyZWUtbm9ybWFsLWFwaWAgaXMgaW1wbGVtZW50ZWQNCitpbiB0ZXJtcyBvZiB0aGUg
YWR2YW5jZWQgQVBJLg0KKw0KK1RoZSBhZHZhbmNlZCBBUEkgaXMgYmFzZWQgYXJvdW5kIHRoZSBt
YV9zdGF0ZSwgdGhpcyBpcyB3aGVyZSB0aGUgJ21hcycNCitwcmVmaXggb3JpZ2luYXRlcy4gIFRo
ZSBtYV9zdGF0ZSBzdHJ1Y3Qga2VlcHMgdHJhY2sgb2YgdHJlZSBvcGVyYXRpb25zIHRvIG1ha2UN
CitsaWZlIGVhc2llciBmb3IgYm90aCBpbnRlcm5hbCBhbmQgZXh0ZXJuYWwgdHJlZSB1c2Vycy4N
CisNCitJbml0aWFsaXNpbmcgdGhlIG1hcGxlIHRyZWUgaXMgdGhlIHNhbWUgYXMgaW4gdGhlIDpy
ZWY6YG1hcGxlLXRyZWUtbm9ybWFsLWFwaWAuDQorUGxlYXNlIHNlZSBhYm92ZS4NCisNCitUaGUg
bWFwbGUgc3RhdGUga2VlcHMgdHJhY2sgb2YgdGhlIHJhbmdlIHN0YXJ0IGFuZCBlbmQgaW4gbWFz
LT5pbmRleCBhbmQNCittYXMtPmxhc3QsIHJlc3BlY3RpdmVseS4NCisNCittYXNfd2FsaygpIHdp
bGwgd2FsayB0aGUgdHJlZSB0byB0aGUgbG9jYXRpb24gb2YgbWFzLT5pbmRleCBhbmQgc2V0IHRo
ZQ0KK21hcy0+aW5kZXggYW5kIG1hcy0+bGFzdCBhY2NvcmRpbmcgdG8gdGhlIHJhbmdlIGZvciB0
aGUgZW50cnkuDQorDQorWW91IGNhbiBzZXQgZW50cmllcyB1c2luZyBtYXNfc3RvcmUoKS4gIG1h
c19zdG9yZSgpIHdpbGwgb3ZlcndyaXRlIGFueSBlbnRyeQ0KK3dpdGggdGhlIG5ldyBlbnRyeSBh
bmQgcmV0dXJuIHRoZSBmaXJzdCBleGlzdGluZyBlbnRyeSB0aGF0IGlzIG92ZXJ3cml0dGVuLg0K
K1RoZSByYW5nZSBpcyBwYXNzZWQgaW4gYXMgbWVtYmVycyBvZiB0aGUgbWFwbGUgc3RhdGU6IGlu
ZGV4IGFuZCBsYXN0Lg0KKw0KK1lvdSBjYW4gdXNlIG1hc19lcmFzZSgpIHRvIGVyYXNlIGFuIGVu
dGlyZSByYW5nZSBieSBzZXR0aW5nIGluZGV4IGFuZA0KK2xhc3Qgb2YgdGhlIG1hcGxlIHN0YXRl
IHRvIHRoZSBkZXNpcmVkIHJhbmdlIHRvIGVyYXNlLiAgVGhpcyB3aWxsIGVyYXNlDQordGhlIGZp
cnN0IHJhbmdlIHRoYXQgaXMgZm91bmQgaW4gdGhhdCByYW5nZSwgc2V0IHRoZSBtYXBsZSBzdGF0
ZSBpbmRleA0KK2FuZCBsYXN0IGFzIHRoZSByYW5nZSB0aGF0IHdhcyBlcmFzZWQgYW5kIHJldHVy
biB0aGUgZW50cnkgdGhhdCBleGlzdGVkDQorYXQgdGhhdCBsb2NhdGlvbi4NCisNCitZb3UgY2Fu
IHdhbGsgZWFjaCBlbnRyeSB3aXRoaW4gYSByYW5nZSBieSB1c2luZyBtYXNfZm9yX2VhY2goKS4g
IElmIHlvdSB3YW50DQordG8gd2FsayBlYWNoIGVsZW1lbnQgb2YgdGhlIHRyZWUgdGhlbiBgYDBg
YCBhbmQgYGBVTE9OR19NQVhgYCBtYXkgYmUgdXNlZCBhcw0KK3RoZSByYW5nZS4gIElmIHRoZSBs
b2NrIG5lZWRzIHRvIGJlIHBlcmlvZGljYWxseSBkcm9wcGVkLCBzZWUgdGhlIGxvY2tpbmcNCitz
ZWN0aW9uIG1hc19wYXVzZSgpLg0KKw0KK1VzaW5nIGEgbWFwbGUgc3RhdGUgYWxsb3dzIG1hc19u
ZXh0KCkgYW5kIG1hc19wcmV2KCkgdG8gZnVuY3Rpb24gYXMgaWYgdGhlDQordHJlZSB3YXMgYSBs
aW5rZWQgbGlzdC4gIFdpdGggc3VjaCBhIGhpZ2ggYnJhbmNoaW5nIGZhY3RvciB0aGUgYW1vcnRp
emVkDQorcGVyZm9ybWFuY2UgcGVuYWx0eSBpcyBvdXR3ZWlnaGVkIGJ5IGNhY2hlIG9wdGltaXph
dGlvbi4gIG1hc19uZXh0KCkgd2lsbA0KK3JldHVybiB0aGUgbmV4dCBlbnRyeSB3aGljaCBvY2N1
cnMgYWZ0ZXIgdGhlIGVudHJ5IGF0IGluZGV4LiAgbWFzX3ByZXYoKQ0KK3dpbGwgcmV0dXJuIHRo
ZSBwcmV2aW91cyBlbnRyeSB3aGljaCBvY2N1cnMgYmVmb3JlIHRoZSBlbnRyeSBhdCBpbmRleC4N
CisNCittYXNfZmluZCgpIHdpbGwgZmluZCB0aGUgZmlyc3QgZW50cnkgd2hpY2ggZXhpc3RzIGF0
IG9yIGFib3ZlIGluZGV4IG9uDQordGhlIGZpcnN0IGNhbGwsIGFuZCB0aGUgbmV4dCBlbnRyeSBm
cm9tIGV2ZXJ5IHN1YnNlcXVlbnQgY2FsbHMuDQorDQorbWFzX2ZpbmRfcmV2KCkgd2lsbCBmaW5k
IHRoZSBmaXN0IGVudHJ5IHdoaWNoIGV4aXN0cyBhdCBvciBiZWxvdyB0aGUgbGFzdCBvbg0KK3Ro
ZSBmaXJzdCBjYWxsLCBhbmQgdGhlIHByZXZpb3VzIGVudHJ5IGZyb20gZXZlcnkgc3Vic2VxdWVu
dCBjYWxscy4NCisNCitJZiB0aGUgdXNlciBuZWVkcyB0byB5aWVsZCB0aGUgbG9jayBkdXJpbmcg
YW4gb3BlcmF0aW9uLCB0aGVuIHRoZSBtYXBsZSBzdGF0ZQ0KK211c3QgYmUgcGF1c2VkIHVzaW5n
IG1hc19wYXVzZSgpLg0KKw0KK1RoZXJlIGFyZSBhIGZldyBleHRyYSBpbnRlcmZhY2VzIHByb3Zp
ZGVkIHdoZW4gdXNpbmcgYW4gYWxsb2NhdGlvbiB0cmVlLg0KK0lmIHlvdSB3aXNoIHRvIHNlYXJj
aCBmb3IgYSBnYXAgd2l0aGluIGEgcmFuZ2UsIHRoZW4gbWFzX2VtcHR5X2FyZWEoKQ0KK29yIG1h
c19lbXB0eV9hcmVhX3JldigpIGNhbiBiZSB1c2VkLiAgbWFzX2VtcHR5X2FyZWEoKSBzZWFyY2hl
cyBmb3IgYSBnYXANCitzdGFydGluZyBhdCB0aGUgbG93ZXN0IGluZGV4IGdpdmVuIHVwIHRvIHRo
ZSBtYXhpbXVtIG9mIHRoZSByYW5nZS4NCittYXNfZW1wdHlfYXJlYV9yZXYoKSBzZWFyY2hlcyBm
b3IgYSBnYXAgc3RhcnRpbmcgYXQgdGhlIGhpZ2hlc3QgaW5kZXggZ2l2ZW4NCithbmQgY29udGlu
dWVzIGRvd253YXJkIHRvIHRoZSBsb3dlciBib3VuZCBvZiB0aGUgcmFuZ2UuDQorDQorLi4gX21h
cGxlLXRyZWUtYWR2YW5jZWQtYWxsb2M6DQorDQorQWR2YW5jZWQgQWxsb2NhdGluZyBOb2Rlcw0K
Ky0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCisNCitBbGxvY2F0aW9ucyBhcmUgdXN1YWxseSBo
YW5kbGVkIGludGVybmFsbHkgdG8gdGhlIHRyZWUsIGhvd2V2ZXIgaWYgYWxsb2NhdGlvbnMNCitu
ZWVkIHRvIG9jY3VyIGJlZm9yZSBhIHdyaXRlIG9jY3VycyB0aGVuIGNhbGxpbmcgbWFzX2V4cGVj
dGVkX2VudHJpZXMoKSB3aWxsDQorYWxsb2NhdGUgdGhlIHdvcnN0LWNhc2UgbnVtYmVyIG9mIG5l
ZWRlZCBub2RlcyB0byBpbnNlcnQgdGhlIHByb3ZpZGVkIG51bWJlciBvZg0KK3Jhbmdlcy4gIFRo
aXMgYWxzbyBjYXVzZXMgdGhlIHRyZWUgdG8gZW50ZXIgbWFzcyBpbnNlcnRpb24gbW9kZS4gIE9u
Y2UNCitpbnNlcnRpb25zIGFyZSBjb21wbGV0ZSBjYWxsaW5nIG1hc19kZXN0cm95KCkgb24gdGhl
IG1hcGxlIHN0YXRlIHdpbGwgZnJlZSB0aGUNCit1bnVzZWQgYWxsb2NhdGlvbnMuDQorDQorLi4g
X21hcGxlLXRyZWUtYWR2YW5jZWQtbG9ja3M6DQorDQorQWR2YW5jZWQgTG9ja2luZw0KKy0tLS0t
LS0tLS0tLS0tLS0NCisNCitUaGUgbWFwbGUgdHJlZSB1c2VzIGEgc3BpbmxvY2sgYnkgZGVmYXVs
dCwgYnV0IGV4dGVybmFsIGxvY2tzIGNhbiBiZSB1c2VkIGZvcg0KK3RyZWUgdXBkYXRlcyBhcyB3
ZWxsLiAgVG8gdXNlIGFuIGV4dGVybmFsIGxvY2ssIHRoZSB0cmVlIG11c3QgYmUgaW5pdGlhbGl6
ZWQNCit3aXRoIHRoZSBgYE1UX0ZMQUdTX0xPQ0tfRVhURVJOIGZsYWdgYCwgdGhpcyBpcyB1c3Vh
bGx5IGRvbmUgd2l0aCB0aGUNCitNVFJFRV9JTklUX0VYVCgpICNkZWZpbmUsIHdoaWNoIHRha2Vz
IGFuIGV4dGVybmFsIGxvY2sgYXMgYW4gYXJndW1lbnQuDQorDQorRnVuY3Rpb25zIGFuZCBzdHJ1
Y3R1cmVzDQorPT09PT09PT09PT09PT09PT09PT09PT09DQorDQorLi4ga2VybmVsLWRvYzo6IGlu
Y2x1ZGUvbGludXgvbWFwbGVfdHJlZS5oDQorLi4ga2VybmVsLWRvYzo6IGxpYi9tYXBsZV90cmVl
LmMNCmRpZmYgLS1naXQgYS9NQUlOVEFJTkVSUyBiL01BSU5UQUlORVJTDQppbmRleCA5NWI0NDM2
N2YwY2UuLmUwMGQyYzhmZGE3ZiAxMDA2NDQNCi0tLSBhL01BSU5UQUlORVJTDQorKysgYi9NQUlO
VEFJTkVSUw0KQEAgLTExNzkyLDYgKzExNzkyLDE4IEBAIEw6CWxpbnV4LW1hbkB2Z2VyLmtlcm5l
bC5vcmcNCiBTOglNYWludGFpbmVkDQogVzoJaHR0cDovL3d3dy5rZXJuZWwub3JnL2RvYy9tYW4t
cGFnZXMNCiANCitNQVBMRSBUUkVFDQorTToJTGlhbSBSLiBIb3dsZXR0IDxMaWFtLkhvd2xldHRA
b3JhY2xlLmNvbT4NCitMOglsaW51eC1tbUBrdmFjay5vcmcNCitTOglTdXBwb3J0ZWQNCitGOglE
b2N1bWVudGF0aW9uL2NvcmUtYXBpL21hcGxlX3RyZWUucnN0DQorRjoJaW5jbHVkZS9saW51eC9t
YXBsZV90cmVlLmgNCitGOglpbmNsdWRlL3RyYWNlL2V2ZW50cy9tYXBsZV90cmVlLmgNCitGOgls
aWIvbWFwbGVfdHJlZS5jDQorRjoJbGliL3Rlc3RfbWFwbGVfdHJlZS5jDQorRjoJdG9vbHMvdGVz
dGluZy9yYWRpeC10cmVlL2xpbnV4L21hcGxlX3RyZWUuaA0KK0Y6CXRvb2xzL3Rlc3RpbmcvcmFk
aXgtdHJlZS9tYXBsZS5jDQorDQogTUFSRFVLIChDUkVBVE9SIENJNDApIERFVklDRSBUUkVFIFNV
UFBPUlQNCiBNOglSYWh1bCBCZWRhcmthciA8cmFodWxiZWRhcmthcjg5QGdtYWlsLmNvbT4NCiBM
OglsaW51eC1taXBzQHZnZXIua2VybmVsLm9yZw0KZGlmZiAtLWdpdCBhL2luY2x1ZGUvbGludXgv
bWFwbGVfdHJlZS5oIGIvaW5jbHVkZS9saW51eC9tYXBsZV90cmVlLmgNCm5ldyBmaWxlIG1vZGUg
MTAwNjQ0DQppbmRleCAwMDAwMDAwMDAwMDAuLmJkYjg5MWIwZDJiNQ0KLS0tIC9kZXYvbnVsbA0K
KysrIGIvaW5jbHVkZS9saW51eC9tYXBsZV90cmVlLmgNCkBAIC0wLDAgKzEsNjg0IEBADQorLyog
U1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEdQTC0yLjArICovDQorI2lmbmRlZiBfTElOVVhfTUFQ
TEVfVFJFRV9IDQorI2RlZmluZSBfTElOVVhfTUFQTEVfVFJFRV9IDQorLyoNCisgKiBNYXBsZSBU
cmVlIC0gQW4gUkNVLXNhZmUgYWRhcHRpdmUgdHJlZSBmb3Igc3RvcmluZyByYW5nZXMNCisgKiBD
b3B5cmlnaHQgKGMpIDIwMTgtMjAyMiBPcmFjbGUNCisgKiBBdXRob3JzOiAgICAgTGlhbSBSLiBI
b3dsZXR0IDxMaWFtLkhvd2xldHRAT3JhY2xlLmNvbT4NCisgKiAgICAgICAgICAgICAgTWF0dGhl
dyBXaWxjb3ggPHdpbGx5QGluZnJhZGVhZC5vcmc+DQorICovDQorDQorI2luY2x1ZGUgPGxpbnV4
L2tlcm5lbC5oPg0KKyNpbmNsdWRlIDxsaW51eC9yY3VwZGF0ZS5oPg0KKyNpbmNsdWRlIDxsaW51
eC9zcGlubG9jay5oPg0KKy8qICNkZWZpbmUgQ09ORklHX01BUExFX1JDVV9ESVNBQkxFRCAqLw0K
Ky8qICNkZWZpbmUgQ09ORklHX0RFQlVHX01BUExFX1RSRUVfVkVSQk9TRSAqLw0KKw0KKy8qDQor
ICogQWxsb2NhdGVkIG5vZGVzIGFyZSBtdXRhYmxlIHVudGlsIHRoZXkgaGF2ZSBiZWVuIGluc2Vy
dGVkIGludG8gdGhlIHRyZWUsDQorICogYXQgd2hpY2ggdGltZSB0aGV5IGNhbm5vdCBjaGFuZ2Ug
dGhlaXIgdHlwZSB1bnRpbCB0aGV5IGhhdmUgYmVlbiByZW1vdmVkDQorICogZnJvbSB0aGUgdHJl
ZSBhbmQgYW4gUkNVIGdyYWNlIHBlcmlvZCBoYXMgcGFzc2VkLg0KKyAqDQorICogUmVtb3ZlZCBu
b2RlcyBoYXZlIHRoZWlyIC0+cGFyZW50IHNldCB0byBwb2ludCB0byB0aGVtc2VsdmVzLiAgUkNV
IHJlYWRlcnMNCisgKiBjaGVjayAtPnBhcmVudCBiZWZvcmUgcmVseWluZyBvbiB0aGUgdmFsdWUg
dGhhdCB0aGV5IGxvYWRlZCBmcm9tIHRoZQ0KKyAqIHNsb3RzIGFycmF5LiAgVGhpcyBsZXRzIHVz
IHJldXNlIHRoZSBzbG90cyBhcnJheSBmb3IgdGhlIFJDVSBoZWFkLg0KKyAqDQorICogTm9kZXMg
aW4gdGhlIHRyZWUgcG9pbnQgdG8gdGhlaXIgcGFyZW50IHVubGVzcyBiaXQgMCBpcyBzZXQuDQor
ICovDQorI2lmIGRlZmluZWQoQ09ORklHXzY0QklUKSB8fCBkZWZpbmVkKEJVSUxEX1ZEU08zMl82
NCkNCisvKiA2NGJpdCBzaXplcyAqLw0KKyNkZWZpbmUgTUFQTEVfTk9ERV9TTE9UUwkzMQkvKiAy
NTYgYnl0ZXMgaW5jbHVkaW5nIC0+cGFyZW50ICovDQorI2RlZmluZSBNQVBMRV9SQU5HRTY0X1NM
T1RTCTE2CS8qIDI1NiBieXRlcyAqLw0KKyNkZWZpbmUgTUFQTEVfQVJBTkdFNjRfU0xPVFMJMTAJ
LyogMjQwIGJ5dGVzICovDQorI2RlZmluZSBNQVBMRV9BUkFOR0U2NF9NRVRBX01BWAkxNQkvKiBP
dXQgb2YgcmFuZ2UgZm9yIG1ldGFkYXRhICovDQorI2RlZmluZSBNQVBMRV9BTExPQ19TTE9UUwko
TUFQTEVfTk9ERV9TTE9UUyAtIDEpDQorI2Vsc2UNCisvKiAzMmJpdCBzaXplcyAqLw0KKyNkZWZp
bmUgTUFQTEVfTk9ERV9TTE9UUwk2MwkvKiAyNTYgYnl0ZXMgaW5jbHVkaW5nIC0+cGFyZW50ICov
DQorI2RlZmluZSBNQVBMRV9SQU5HRTY0X1NMT1RTCTMyCS8qIDI1NiBieXRlcyAqLw0KKyNkZWZp
bmUgTUFQTEVfQVJBTkdFNjRfU0xPVFMJMjEJLyogMjQwIGJ5dGVzICovDQorI2RlZmluZSBNQVBM
RV9BUkFOR0U2NF9NRVRBX01BWAkzMQkvKiBPdXQgb2YgcmFuZ2UgZm9yIG1ldGFkYXRhICovDQor
I2RlZmluZSBNQVBMRV9BTExPQ19TTE9UUwkoTUFQTEVfTk9ERV9TTE9UUyAtIDIpDQorI2VuZGlm
IC8qIGRlZmluZWQoQ09ORklHXzY0QklUKSB8fCBkZWZpbmVkKEJVSUxEX1ZEU08zMl82NCkgKi8N
CisNCisjZGVmaW5lIE1BUExFX05PREVfTUFTSwkJMjU1VUwNCisNCisvKg0KKyAqIFRoZSBub2Rl
LT5wYXJlbnQgb2YgdGhlIHJvb3Qgbm9kZSBoYXMgYml0IDAgc2V0IGFuZCB0aGUgcmVzdCBvZiB0
aGUgcG9pbnRlcg0KKyAqIGlzIGEgcG9pbnRlciB0byB0aGUgdHJlZSBpdHNlbGYuICBObyBtb3Jl
IGJpdHMgYXJlIGF2YWlsYWJsZSBpbiB0aGlzIHBvaW50ZXINCisgKiAob24gbTY4aywgdGhlIGRh
dGEgc3RydWN0dXJlIG1heSBvbmx5IGJlIDItYnl0ZSBhbGlnbmVkKS4NCisgKg0KKyAqIEludGVy
bmFsIG5vbi1yb290IG5vZGVzIGNhbiBvbmx5IGhhdmUgbWFwbGVfcmFuZ2VfKiBub2RlcyBhcyBw
YXJlbnRzLiAgVGhlDQorICogcGFyZW50IHBvaW50ZXIgaXMgMjU2QiBhbGlnbmVkIGxpa2UgYWxs
IG90aGVyIHRyZWUgbm9kZXMuICBXaGVuIHN0b3JpbmcgYSAzMg0KKyAqIG9yIDY0IGJpdCB2YWx1
ZXMsIHRoZSBvZmZzZXQgY2FuIGZpdCBpbnRvIDQgYml0cy4gIFRoZSAxNiBiaXQgdmFsdWVzIG5l
ZWQgYW4NCisgKiBleHRyYSBiaXQgdG8gc3RvcmUgdGhlIG9mZnNldC4gIFRoaXMgZXh0cmEgYml0
IGNvbWVzIGZyb20gYSByZXVzZSBvZiB0aGUgbGFzdA0KKyAqIGJpdCBpbiB0aGUgbm9kZSB0eXBl
LiAgVGhpcyBpcyBwb3NzaWJsZSBieSB1c2luZyBiaXQgMSB0byBpbmRpY2F0ZSBpZiBiaXQgMg0K
KyAqIGlzIHBhcnQgb2YgdGhlIHR5cGUgb3IgdGhlIHNsb3QuDQorICoNCisgKiBPbmNlIHRoZSB0
eXBlIGlzIGRlY2lkZWQsIHRoZSBkZWNpc2lvbiBvZiBhbiBhbGxvY2F0aW9uIHJhbmdlIHR5cGUg
b3IgYSByYW5nZQ0KKyAqIHR5cGUgaXMgZG9uZSBieSBleGFtaW5pbmcgdGhlIGltbXV0YWJsZSB0
cmVlIGZsYWcgZm9yIHRoZSBNQVBMRV9BTExPQ19SQU5HRQ0KKyAqIGZsYWcuDQorICoNCisgKiAg
Tm9kZSB0eXBlczoNCisgKiAgIDB4Pz8xID0gUm9vdA0KKyAqICAgMHg/MDAgPSAxNiBiaXQgbm9k
ZXMNCisgKiAgIDB4MDEwID0gMzIgYml0IG5vZGVzDQorICogICAweDExMCA9IDY0IGJpdCBub2Rl
cw0KKyAqDQorICogIFNsb3Qgc2l6ZSBhbmQgbG9jYXRpb24gaW4gdGhlIHBhcmVudCBwb2ludGVy
Og0KKyAqICAgdHlwZSAgOiBzbG90IGxvY2F0aW9uDQorICogICAweD8/MSA6IFJvb3QNCisgKiAg
IDB4PzAwIDogMTYgYml0IHZhbHVlcywgdHlwZSBpbiAwLTEsIHNsb3QgaW4gMi02DQorICogICAw
eDAxMCA6IDMyIGJpdCB2YWx1ZXMsIHR5cGUgaW4gMC0yLCBzbG90IGluIDMtNg0KKyAqICAgMHgx
MTAgOiA2NCBiaXQgdmFsdWVzLCB0eXBlIGluIDAtMiwgc2xvdCBpbiAzLTYNCisgKi8NCisNCisv
Kg0KKyAqIFRoaXMgbWV0YWRhdGEgaXMgdXNlZCB0byBvcHRpbWl6ZSB0aGUgZ2FwIHVwZGF0aW5n
IGNvZGUgYW5kIGluIHJldmVyc2UNCisgKiBzZWFyY2hpbmcgZm9yIGdhcHMgb3IgYW55IG90aGVy
IGNvZGUgdGhhdCBuZWVkcyB0byBmaW5kIHRoZSBlbmQgb2YgdGhlIGRhdGEuDQorICovDQorc3Ry
dWN0IG1hcGxlX21ldGFkYXRhIHsNCisJdW5zaWduZWQgY2hhciBlbmQ7DQorCXVuc2lnbmVkIGNo
YXIgZ2FwOw0KK307DQorDQorLyoNCisgKiBMZWFmIG5vZGVzIGRvIG5vdCBzdG9yZSBwb2ludGVy
cyB0byBub2RlcywgdGhleSBzdG9yZSB1c2VyIGRhdGEuICBVc2VycyBtYXkNCisgKiBzdG9yZSBh
bG1vc3QgYW55IGJpdCBwYXR0ZXJuLiAgQXMgbm90ZWQgYWJvdmUsIHRoZSBvcHRpbWlzYXRpb24g
b2Ygc3RvcmluZyBhbg0KKyAqIGVudHJ5IGF0IDAgaW4gdGhlIHJvb3QgcG9pbnRlciBjYW5ub3Qg
YmUgZG9uZSBmb3IgZGF0YSB3aGljaCBoYXZlIHRoZSBib3R0b20NCisgKiB0d28gYml0cyBzZXQg
dG8gJzEwJy4gIFdlIGFsc28gcmVzZXJ2ZSB2YWx1ZXMgd2l0aCB0aGUgYm90dG9tIHR3byBiaXRz
IHNldCB0bw0KKyAqICcxMCcgd2hpY2ggYXJlIGJlbG93IDQwOTYgKGllIDIsIDYsIDEwIC4uIDQw
OTQpIGZvciBpbnRlcm5hbCB1c2UuICBTb21lIEFQSXMNCisgKiByZXR1cm4gZXJybm9zIGFzIGEg
bmVnYXRpdmUgZXJybm8gc2hpZnRlZCByaWdodCBieSB0d28gYml0cyBhbmQgdGhlIGJvdHRvbQ0K
KyAqIHR3byBiaXRzIHNldCB0byAnMTAnLCBhbmQgd2hpbGUgY2hvb3NpbmcgdG8gc3RvcmUgdGhl
c2UgdmFsdWVzIGluIHRoZSBhcnJheQ0KKyAqIGlzIG5vdCBhbiBlcnJvciwgaXQgbWF5IGxlYWQg
dG8gY29uZnVzaW9uIGlmIHlvdSdyZSB0ZXN0aW5nIGZvciBhbiBlcnJvciB3aXRoDQorICogbWFz
X2lzX2VycigpLg0KKyAqDQorICogTm9uLWxlYWYgbm9kZXMgc3RvcmUgdGhlIHR5cGUgb2YgdGhl
IG5vZGUgcG9pbnRlZCB0byAoZW51bSBtYXBsZV90eXBlIGluIGJpdHMNCisgKiAzLTYpLCBiaXQg
MiBpcyByZXNlcnZlZC4gIFRoYXQgbGVhdmVzIGJpdHMgMC0xIHVudXNlZCBmb3Igbm93Lg0KKyAq
DQorICogSW4gcmVndWxhciBCLVRyZWUgdGVybXMsIHBpdm90cyBhcmUgY2FsbGVkIGtleXMuICBU
aGUgdGVybSBwaXZvdCBpcyB1c2VkIHRvDQorICogaW5kaWNhdGUgdGhhdCB0aGUgdHJlZSBpcyBz
cGVjaWZ5aW5nIHJhbmdlcywgIFBpdm90cyBtYXkgYXBwZWFyIGluIHRoZQ0KKyAqIHN1YnRyZWUg
d2l0aCBhbiBlbnRyeSBhdHRhY2hlZCB0byB0aGUgdmFsdWUgd2hlcmVhcyBrZXlzIGFyZSB1bmlx
dWUgdG8gYQ0KKyAqIHNwZWNpZmljIHBvc2l0aW9uIG9mIGEgQi10cmVlLiAgUGl2b3QgdmFsdWVz
IGFyZSBpbmNsdXNpdmUgb2YgdGhlIHNsb3Qgd2l0aA0KKyAqIHRoZSBzYW1lIGluZGV4Lg0KKyAq
Lw0KKw0KK3N0cnVjdCBtYXBsZV9yYW5nZV82NCB7DQorCXN0cnVjdCBtYXBsZV9wbm9kZSAqcGFy
ZW50Ow0KKwl1bnNpZ25lZCBsb25nIHBpdm90W01BUExFX1JBTkdFNjRfU0xPVFMgLSAxXTsNCisJ
dW5pb24gew0KKwkJdm9pZCBfX3JjdSAqc2xvdFtNQVBMRV9SQU5HRTY0X1NMT1RTXTsNCisJCXN0
cnVjdCB7DQorCQkJdm9pZCBfX3JjdSAqcGFkW01BUExFX1JBTkdFNjRfU0xPVFMgLSAxXTsNCisJ
CQlzdHJ1Y3QgbWFwbGVfbWV0YWRhdGEgbWV0YTsNCisJCX07DQorCX07DQorfTsNCisNCisvKg0K
KyAqIEF0IHRyZWUgY3JlYXRpb24gdGltZSwgdGhlIHVzZXIgY2FuIHNwZWNpZnkgdGhhdCB0aGV5
J3JlIHdpbGxpbmcgdG8gdHJhZGUgb2ZmDQorICogc3RvcmluZyBmZXdlciBlbnRyaWVzIGluIGEg
dHJlZSBpbiByZXR1cm4gZm9yIHN0b3JpbmcgbW9yZSBpbmZvcm1hdGlvbiBpbg0KKyAqIGVhY2gg
bm9kZS4NCisgKg0KKyAqIFRoZSBtYXBsZSB0cmVlIHN1cHBvcnRzIHJlY29yZGluZyB0aGUgbGFy
Z2VzdCByYW5nZSBvZiBOVUxMIGVudHJpZXMgYXZhaWxhYmxlDQorICogaW4gdGhpcyBub2RlLCBh
bHNvIGNhbGxlZCBnYXBzLiAgVGhpcyBvcHRpbWlzZXMgdGhlIHRyZWUgZm9yIGFsbG9jYXRpbmcg
YQ0KKyAqIHJhbmdlLg0KKyAqLw0KK3N0cnVjdCBtYXBsZV9hcmFuZ2VfNjQgew0KKwlzdHJ1Y3Qg
bWFwbGVfcG5vZGUgKnBhcmVudDsNCisJdW5zaWduZWQgbG9uZyBwaXZvdFtNQVBMRV9BUkFOR0U2
NF9TTE9UUyAtIDFdOw0KKwl2b2lkIF9fcmN1ICpzbG90W01BUExFX0FSQU5HRTY0X1NMT1RTXTsN
CisJdW5zaWduZWQgbG9uZyBnYXBbTUFQTEVfQVJBTkdFNjRfU0xPVFNdOw0KKwlzdHJ1Y3QgbWFw
bGVfbWV0YWRhdGEgbWV0YTsNCit9Ow0KKw0KK3N0cnVjdCBtYXBsZV9hbGxvYyB7DQorCXVuc2ln
bmVkIGxvbmcgdG90YWw7DQorCXVuc2lnbmVkIGNoYXIgbm9kZV9jb3VudDsNCisJdW5zaWduZWQg
aW50IHJlcXVlc3RfY291bnQ7DQorCXN0cnVjdCBtYXBsZV9hbGxvYyAqc2xvdFtNQVBMRV9BTExP
Q19TTE9UU107DQorfTsNCisNCitzdHJ1Y3QgbWFwbGVfdG9waWFyeSB7DQorCXN0cnVjdCBtYXBs
ZV9wbm9kZSAqcGFyZW50Ow0KKwlzdHJ1Y3QgbWFwbGVfZW5vZGUgKm5leHQ7IC8qIE92ZXJsYXBz
IHRoZSBwaXZvdCAqLw0KK307DQorDQorZW51bSBtYXBsZV90eXBlIHsNCisJbWFwbGVfZGVuc2Us
DQorCW1hcGxlX2xlYWZfNjQsDQorCW1hcGxlX3JhbmdlXzY0LA0KKwltYXBsZV9hcmFuZ2VfNjQs
DQorfTsNCisNCisNCisvKioNCisgKiBET0M6IE1hcGxlIHRyZWUgZmxhZ3MNCisgKg0KKyAqICog
TVRfRkxBR1NfQUxMT0NfUkFOR0UJLSBUcmFjayBnYXBzIGluIHRoaXMgdHJlZQ0KKyAqICogTVRf
RkxBR1NfVVNFX1JDVQkJLSBPcGVyYXRlIGluIFJDVSBtb2RlDQorICogKiBNVF9GTEFHU19IRUlH
SFRfT0ZGU0VUCS0gVGhlIHBvc2l0aW9uIG9mIHRoZSB0cmVlIGhlaWdodCBpbiB0aGUgZmxhZ3MN
CisgKiAqIE1UX0ZMQUdTX0hFSUdIVF9NQVNLCS0gVGhlIG1hc2sgZm9yIHRoZSBtYXBsZSB0cmVl
IGhlaWdodCB2YWx1ZQ0KKyAqICogTVRfRkxBR1NfTE9DS19NQVNLCQktIEhvdyB0aGUgbXRfbG9j
ayBpcyB1c2VkDQorICogKiBNVF9GTEFHU19MT0NLX0lSUQkJLSBBY3F1aXJlZCBpcnEtc2FmZQ0K
KyAqICogTVRfRkxBR1NfTE9DS19CSAkJLSBBY3F1aXJlZCBiaC1zYWZlDQorICogKiBNVF9GTEFH
U19MT0NLX0VYVEVSTgktIG10X2xvY2sgaXMgbm90IHVzZWQNCisgKg0KKyAqIE1BUExFX0hFSUdI
VF9NQVgJVGhlIGxhcmdlc3QgaGVpZ2h0IHRoYXQgY2FuIGJlIHN0b3JlZA0KKyAqLw0KKyNkZWZp
bmUgTVRfRkxBR1NfQUxMT0NfUkFOR0UJMHgwMQ0KKyNkZWZpbmUgTVRfRkxBR1NfVVNFX1JDVQkw
eDAyDQorI2RlZmluZSBNVF9GTEFHU19IRUlHSFRfT0ZGU0VUCTB4MDINCisjZGVmaW5lIE1UX0ZM
QUdTX0hFSUdIVF9NQVNLCTB4N0MNCisjZGVmaW5lIE1UX0ZMQUdTX0xPQ0tfTUFTSwkweDMwMA0K
KyNkZWZpbmUgTVRfRkxBR1NfTE9DS19JUlEJMHgxMDANCisjZGVmaW5lIE1UX0ZMQUdTX0xPQ0tf
QkgJMHgyMDANCisjZGVmaW5lIE1UX0ZMQUdTX0xPQ0tfRVhURVJOCTB4MzAwDQorDQorI2RlZmlu
ZSBNQVBMRV9IRUlHSFRfTUFYCTMxDQorDQorDQorI2RlZmluZSBNQVBMRV9OT0RFX1RZUEVfTUFT
SwkweDBGDQorI2RlZmluZSBNQVBMRV9OT0RFX1RZUEVfU0hJRlQJMHgwMw0KKw0KKyNkZWZpbmUg
TUFQTEVfUkVTRVJWRURfUkFOR0UJNDA5Ng0KKw0KKyNpZmRlZiBDT05GSUdfTE9DS0RFUA0KK3R5
cGVkZWYgc3RydWN0IGxvY2tkZXBfbWFwICpsb2NrZGVwX21hcF9wOw0KKyNkZWZpbmUgbXRfbG9j
a19pc19oZWxkKG10KQlsb2NrX2lzX2hlbGQobXQtPm1hX2V4dGVybmFsX2xvY2spDQorI2RlZmlu
ZSBtdF9zZXRfZXh0ZXJuYWxfbG9jayhtdCwgbG9jaykJCQkJCVwNCisJKG10KS0+bWFfZXh0ZXJu
YWxfbG9jayA9ICYobG9jayktPmRlcF9tYXANCisjZWxzZQ0KK3R5cGVkZWYgc3RydWN0IHsgLyog
bm90aGluZyAqLyB9IGxvY2tkZXBfbWFwX3A7DQorI2RlZmluZSBtdF9sb2NrX2lzX2hlbGQobXQp
CTENCisjZGVmaW5lIG10X3NldF9leHRlcm5hbF9sb2NrKG10LCBsb2NrKQlkbyB7IH0gd2hpbGUg
KDApDQorI2VuZGlmDQorDQorLyoNCisgKiBJZiB0aGUgdHJlZSBjb250YWlucyBhIHNpbmdsZSBl
bnRyeSBhdCBpbmRleCAwLCBpdCBpcyB1c3VhbGx5IHN0b3JlZCBpbg0KKyAqIHRyZWUtPm1hX3Jv
b3QuICBUbyBvcHRpbWlzZSBmb3IgdGhlIHBhZ2UgY2FjaGUsIGFuIGVudHJ5IHdoaWNoIGVuZHMg
aW4gJzAwJywNCisgKiAnMDEnIG9yICcxMScgaXMgc3RvcmVkIGluIHRoZSByb290LCBidXQgYW4g
ZW50cnkgd2hpY2ggZW5kcyBpbiAnMTAnIHdpbGwgYmUNCisgKiBzdG9yZWQgaW4gYSBub2RlLiAg
Qml0cyAzLTYgYXJlIHVzZWQgdG8gc3RvcmUgZW51bSBtYXBsZV90eXBlLg0KKyAqDQorICogVGhl
IGZsYWdzIGFyZSB1c2VkIGJvdGggdG8gc3RvcmUgc29tZSBpbW11dGFibGUgaW5mb3JtYXRpb24g
YWJvdXQgdGhpcyB0cmVlDQorICogKHNldCBhdCB0cmVlIGNyZWF0aW9uIHRpbWUpIGFuZCBkeW5h
bWljIGluZm9ybWF0aW9uIHNldCB1bmRlciB0aGUgc3BpbmxvY2suDQorICoNCisgKiBBbm90aGVy
IHVzZSBvZiBmbGFncyBhcmUgdG8gaW5kaWNhdGUgZ2xvYmFsIHN0YXRlcyBvZiB0aGUgdHJlZS4g
IFRoaXMgaXMgdGhlDQorICogY2FzZSB3aXRoIHRoZSBNQVBMRV9VU0VfUkNVIGZsYWcsIHdoaWNo
IGluZGljYXRlcyB0aGUgdHJlZSBpcyBjdXJyZW50bHkgaW4NCisgKiBSQ1UgbW9kZS4gIFRoaXMg
bW9kZSB3YXMgYWRkZWQgdG8gYWxsb3cgdGhlIHRyZWUgdG8gcmV1c2Ugbm9kZXMgaW5zdGVhZCBv
Zg0KKyAqIHJlLWFsbG9jYXRpbmcgYW5kIFJDVSBmcmVlaW5nIG5vZGVzIHdoZW4gdGhlcmUgaXMg
YSBzaW5nbGUgdXNlci4NCisgKi8NCitzdHJ1Y3QgbWFwbGVfdHJlZSB7DQorCXVuaW9uIHsNCisJ
CXNwaW5sb2NrX3QJbWFfbG9jazsNCisJCWxvY2tkZXBfbWFwX3AJbWFfZXh0ZXJuYWxfbG9jazsN
CisJfTsNCisJdm9pZCBfX3JjdSAgICAgICptYV9yb290Ow0KKwl1bnNpZ25lZCBpbnQJbWFfZmxh
Z3M7DQorfTsNCisNCisvKioNCisgKiBNVFJFRV9JTklUKCkgLSBJbml0aWFsaXplIGEgbWFwbGUg
dHJlZQ0KKyAqIEBuYW1lOiBUaGUgbWFwbGUgdHJlZSBuYW1lDQorICogQGZsYWdzOiBUaGUgbWFw
bGUgdHJlZSBmbGFncw0KKyAqDQorICovDQorI2RlZmluZSBNVFJFRV9JTklUKG5hbWUsIF9fZmxh
Z3MpIHsJCQkJCVwNCisJLm1hX2xvY2sgPSBfX1NQSU5fTE9DS19VTkxPQ0tFRCgobmFtZSkubWFf
bG9jayksCQlcDQorCS5tYV9mbGFncyA9IF9fZmxhZ3MsCQkJCQkJXA0KKwkubWFfcm9vdCA9IE5V
TEwsCQkJCQkJXA0KK30NCisNCisvKioNCisgKiBNVFJFRV9JTklUX0VYVCgpIC0gSW5pdGlhbGl6
ZSBhIG1hcGxlIHRyZWUgd2l0aCBhbiBleHRlcm5hbCBsb2NrLg0KKyAqIEBuYW1lOiBUaGUgdHJl
ZSBuYW1lDQorICogQGZsYWdzOiBUaGUgbWFwbGUgdHJlZSBmbGFncw0KKyAqIEBsb2NrOiBUaGUg
ZXh0ZXJuYWwgbG9jaw0KKyAqLw0KKyNpZmRlZiBDT05GSUdfTE9DS0RFUA0KKyNkZWZpbmUgTVRS
RUVfSU5JVF9FWFQobmFtZSwgX19mbGFncywgX19sb2NrKSB7CQkJCVwNCisJLm1hX2V4dGVybmFs
X2xvY2sgPSAmKF9fbG9jaykuZGVwX21hcCwJCQkJXA0KKwkubWFfZmxhZ3MgPSAoX19mbGFncyks
CQkJCQkJXA0KKwkubWFfcm9vdCA9IE5VTEwsCQkJCQkJXA0KK30NCisjZWxzZQ0KKyNkZWZpbmUg
TVRSRUVfSU5JVF9FWFQobmFtZSwgX19mbGFncywgX19sb2NrKQlNVFJFRV9JTklUKG5hbWUsIF9f
ZmxhZ3MpDQorI2VuZGlmDQorDQorI2RlZmluZSBERUZJTkVfTVRSRUUobmFtZSkJCQkJCQlcDQor
CXN0cnVjdCBtYXBsZV90cmVlIG5hbWUgPSBNVFJFRV9JTklUKG5hbWUsIDApDQorDQorI2RlZmlu
ZSBtdHJlZV9sb2NrKG10KQkJc3Bpbl9sb2NrKCgmKG10KS0+bWFfbG9jaykpDQorI2RlZmluZSBt
dHJlZV91bmxvY2sobXQpCXNwaW5fdW5sb2NrKCgmKG10KS0+bWFfbG9jaykpDQorDQorLyoNCisg
KiBUaGUgTWFwbGUgVHJlZSBzcXVlZXplcyB2YXJpb3VzIGJpdHMgaW4gYXQgdmFyaW91cyBwb2lu
dHMgd2hpY2ggYXJlbid0DQorICogbmVjZXNzYXJpbHkgb2J2aW91cy4gIFVzdWFsbHksIHRoaXMg
aXMgZG9uZSBieSBvYnNlcnZpbmcgdGhhdCBwb2ludGVycyBhcmUNCisgKiBOLWJ5dGUgYWxpZ25l
ZCBhbmQgdGh1cyB0aGUgYm90dG9tIGxvZ18yKE4pIGJpdHMgYXJlIGF2YWlsYWJsZSBmb3IgdXNl
LiAgV2UNCisgKiBkb24ndCB1c2UgdGhlIGhpZ2ggYml0cyBvZiBwb2ludGVycyB0byBzdG9yZSBh
ZGRpdGlvbmFsIGluZm9ybWF0aW9uIGJlY2F1c2UNCisgKiB3ZSBkb24ndCBrbm93IHdoYXQgYml0
cyBhcmUgdW51c2VkIG9uIGFueSBnaXZlbiBhcmNoaXRlY3R1cmUuDQorICoNCisgKiBOb2RlcyBh
cmUgMjU2IGJ5dGVzIGluIHNpemUgYW5kIGFyZSBhbHNvIGFsaWduZWQgdG8gMjU2IGJ5dGVzLCBn
aXZpbmcgdXMgOA0KKyAqIGxvdyBiaXRzIGZvciBvdXIgb3duIHB1cnBvc2VzLiAgTm9kZXMgYXJl
IGN1cnJlbnRseSBvZiA0IHR5cGVzOg0KKyAqIDEuIFNpbmdsZSBwb2ludGVyIChSYW5nZSBpcyAw
LTApDQorICogMi4gTm9uLWxlYWYgQWxsb2NhdGlvbiBSYW5nZSBub2Rlcw0KKyAqIDMuIE5vbi1s
ZWFmIFJhbmdlIG5vZGVzDQorICogNC4gTGVhZiBSYW5nZSBub2RlcyBBbGwgbm9kZXMgY29uc2lz
dCBvZiBhIG51bWJlciBvZiBub2RlIHNsb3RzLA0KKyAqICAgIHBpdm90cywgYW5kIGEgcGFyZW50
IHBvaW50ZXIuDQorICovDQorDQorc3RydWN0IG1hcGxlX25vZGUgew0KKwl1bmlvbiB7DQorCQlz
dHJ1Y3Qgew0KKwkJCXN0cnVjdCBtYXBsZV9wbm9kZSAqcGFyZW50Ow0KKwkJCXZvaWQgX19yY3Ug
KnNsb3RbTUFQTEVfTk9ERV9TTE9UU107DQorCQl9Ow0KKwkJc3RydWN0IHsNCisJCQl2b2lkICpw
YWQ7DQorCQkJc3RydWN0IHJjdV9oZWFkIHJjdTsNCisJCQlzdHJ1Y3QgbWFwbGVfZW5vZGUgKnBp
dl9wYXJlbnQ7DQorCQkJdW5zaWduZWQgY2hhciBwYXJlbnRfc2xvdDsNCisJCQllbnVtIG1hcGxl
X3R5cGUgdHlwZTsNCisJCQl1bnNpZ25lZCBjaGFyIHNsb3RfbGVuOw0KKwkJCXVuc2lnbmVkIGlu
dCBtYV9mbGFnczsNCisJCX07DQorCQlzdHJ1Y3QgbWFwbGVfcmFuZ2VfNjQgbXI2NDsNCisJCXN0
cnVjdCBtYXBsZV9hcmFuZ2VfNjQgbWE2NDsNCisJCXN0cnVjdCBtYXBsZV9hbGxvYyBhbGxvYzsN
CisJfTsNCit9Ow0KKw0KKy8qDQorICogTW9yZSBjb21wbGljYXRlZCBzdG9yZXMgY2FuIGNhdXNl
IHR3byBub2RlcyB0byBiZWNvbWUgb25lIG9yIHRocmVlIGFuZA0KKyAqIHBvdGVudGlhbGx5IGFs
dGVyIHRoZSBoZWlnaHQgb2YgdGhlIHRyZWUuICBFaXRoZXIgaGFsZiBvZiB0aGUgdHJlZSBtYXkg
bmVlZA0KKyAqIHRvIGJlIHJlYmFsYW5jZWQgYWdhaW5zdCB0aGUgb3RoZXIuICBUaGUgbWFfdG9w
aWFyeSBzdHJ1Y3QgaXMgdXNlZCB0byB0cmFjaw0KKyAqIHdoaWNoIG5vZGVzIGhhdmUgYmVlbiAn
Y3V0JyBmcm9tIHRoZSB0cmVlIHNvIHRoYXQgdGhlIGNoYW5nZSBjYW4gYmUgZG9uZQ0KKyAqIHNh
ZmVseSBhdCBhIGxhdGVyIGRhdGUuICBUaGlzIGlzIGRvbmUgdG8gc3VwcG9ydCBSQ1UuDQorICov
DQorc3RydWN0IG1hX3RvcGlhcnkgew0KKwlzdHJ1Y3QgbWFwbGVfZW5vZGUgKmhlYWQ7DQorCXN0
cnVjdCBtYXBsZV9lbm9kZSAqdGFpbDsNCisJc3RydWN0IG1hcGxlX3RyZWUgKm10cmVlOw0KK307
DQorDQordm9pZCAqbXRyZWVfbG9hZChzdHJ1Y3QgbWFwbGVfdHJlZSAqbXQsIHVuc2lnbmVkIGxv
bmcgaW5kZXgpOw0KKw0KK2ludCBtdHJlZV9pbnNlcnQoc3RydWN0IG1hcGxlX3RyZWUgKm10LCB1
bnNpZ25lZCBsb25nIGluZGV4LA0KKwkJdm9pZCAqZW50cnksIGdmcF90IGdmcCk7DQoraW50IG10
cmVlX2luc2VydF9yYW5nZShzdHJ1Y3QgbWFwbGVfdHJlZSAqbXQsIHVuc2lnbmVkIGxvbmcgZmly
c3QsDQorCQl1bnNpZ25lZCBsb25nIGxhc3QsIHZvaWQgKmVudHJ5LCBnZnBfdCBnZnApOw0KK2lu
dCBtdHJlZV9hbGxvY19yYW5nZShzdHJ1Y3QgbWFwbGVfdHJlZSAqbXQsIHVuc2lnbmVkIGxvbmcg
KnN0YXJ0cCwNCisJCXZvaWQgKmVudHJ5LCB1bnNpZ25lZCBsb25nIHNpemUsIHVuc2lnbmVkIGxv
bmcgbWluLA0KKwkJdW5zaWduZWQgbG9uZyBtYXgsIGdmcF90IGdmcCk7DQoraW50IG10cmVlX2Fs
bG9jX3JyYW5nZShzdHJ1Y3QgbWFwbGVfdHJlZSAqbXQsIHVuc2lnbmVkIGxvbmcgKnN0YXJ0cCwN
CisJCXZvaWQgKmVudHJ5LCB1bnNpZ25lZCBsb25nIHNpemUsIHVuc2lnbmVkIGxvbmcgbWluLA0K
KwkJdW5zaWduZWQgbG9uZyBtYXgsIGdmcF90IGdmcCk7DQorDQoraW50IG10cmVlX3N0b3JlX3Jh
bmdlKHN0cnVjdCBtYXBsZV90cmVlICptdCwgdW5zaWduZWQgbG9uZyBmaXJzdCwNCisJCSAgICAg
IHVuc2lnbmVkIGxvbmcgbGFzdCwgdm9pZCAqZW50cnksIGdmcF90IGdmcCk7DQoraW50IG10cmVl
X3N0b3JlKHN0cnVjdCBtYXBsZV90cmVlICptdCwgdW5zaWduZWQgbG9uZyBpbmRleCwNCisJCXZv
aWQgKmVudHJ5LCBnZnBfdCBnZnApOw0KK3ZvaWQgKm10cmVlX2VyYXNlKHN0cnVjdCBtYXBsZV90
cmVlICptdCwgdW5zaWduZWQgbG9uZyBpbmRleCk7DQorDQordm9pZCBtdHJlZV9kZXN0cm95KHN0
cnVjdCBtYXBsZV90cmVlICptdCk7DQordm9pZCBfX210X2Rlc3Ryb3koc3RydWN0IG1hcGxlX3Ry
ZWUgKm10KTsNCisNCisvKioNCisgKiBtdHJlZV9lbXB0eSgpIC0gRGV0ZXJtaW5lIGlmIGEgdHJl
ZSBoYXMgYW55IHByZXNlbnQgZW50cmllcy4NCisgKiBAbXQ6IE1hcGxlIFRyZWUuDQorICoNCisg
KiBDb250ZXh0OiBBbnkgY29udGV4dC4NCisgKiBSZXR1cm46ICV0cnVlIGlmIHRoZSB0cmVlIGNv
bnRhaW5zIG9ubHkgTlVMTCBwb2ludGVycy4NCisgKi8NCitzdGF0aWMgaW5saW5lIGJvb2wgbXRy
ZWVfZW1wdHkoY29uc3Qgc3RydWN0IG1hcGxlX3RyZWUgKm10KQ0KK3sNCisJcmV0dXJuIG10LT5t
YV9yb290ID09IE5VTEw7DQorfQ0KKw0KKy8qIEFkdmFuY2VkIEFQSSAqLw0KKw0KKy8qDQorICog
VGhlIG1hcGxlIHN0YXRlIGlzIGRlZmluZWQgaW4gdGhlIHN0cnVjdCBtYV9zdGF0ZSBhbmQgaXMg
dXNlZCB0byBrZWVwIHRyYWNrDQorICogb2YgaW5mb3JtYXRpb24gZHVyaW5nIG9wZXJhdGlvbnMs
IGFuZCBldmVuIGJldHdlZW4gb3BlcmF0aW9ucyB3aGVuIHVzaW5nIHRoZQ0KKyAqIGFkdmFuY2Vk
IEFQSS4NCisgKg0KKyAqIElmIHN0YXRlLT5ub2RlIGhhcyBiaXQgMCBzZXQgdGhlbiBpdCByZWZl
cmVuY2VzIGEgdHJlZSBsb2NhdGlvbiB3aGljaCBpcyBub3QNCisgKiBhIG5vZGUgKGVnIHRoZSBy
b290KS4gIElmIGJpdCAxIGlzIHNldCwgdGhlIHJlc3Qgb2YgdGhlIGJpdHMgYXJlIGEgbmVnYXRp
dmUNCisgKiBlcnJuby4gIEJpdCAyICh0aGUgJ3VuYWxsb2NhdGVkIHNsb3RzJyBiaXQpIGlzIGNs
ZWFyLiAgQml0cyAzLTYgaW5kaWNhdGUgdGhlDQorICogbm9kZSB0eXBlLg0KKyAqDQorICogc3Rh
dGUtPmFsbG9jIGVpdGhlciBoYXMgYSByZXF1ZXN0IG51bWJlciBvZiBub2RlcyBvciBhbiBhbGxv
Y2F0ZWQgbm9kZS4gIElmDQorICogc3RhdC0+YWxsb2MgaGFzIGEgcmVxdWVzdGVkIG51bWJlciBv
ZiBub2RlcywgdGhlIGZpcnN0IGJpdCB3aWxsIGJlIHNldCAoMHgxKQ0KKyAqIGFuZCB0aGUgcmVt
YWluaW5nIGJpdHMgYXJlIHRoZSB2YWx1ZS4gIElmIHN0YXRlLT5hbGxvYyBpcyBhIG5vZGUsIHRo
ZW4gdGhlDQorICogbm9kZSB3aWxsIGJlIG9mIHR5cGUgbWFwbGVfYWxsb2MuICBtYXBsZV9hbGxv
YyBoYXMgTUFQTEVfTk9ERV9TTE9UUyAtIDEgZm9yDQorICogc3RvcmluZyBtb3JlIGFsbG9jYXRl
ZCBub2RlcywgYSB0b3RhbCBudW1iZXIgb2Ygbm9kZXMgYWxsb2NhdGVkLCBhbmQgdGhlDQorICog
bm9kZV9jb3VudCBpbiB0aGlzIG5vZGUuICBub2RlX2NvdW50IGlzIHRoZSBudW1iZXIgb2YgYWxs
b2NhdGVkIG5vZGVzIGluIHRoaXMNCisgKiBub2RlLiAgVGhlIHNjYWxpbmcgYmV5b25kIE1BUExF
X05PREVfU0xPVFMgLSAxIGlzIGhhbmRsZWQgYnkgc3RvcmluZyBmdXJ0aGVyDQorICogbm9kZXMg
aW50byBzdGF0ZS0+YWxsb2MtPnNsb3RbMF0ncyBub2RlLiAgTm9kZXMgYXJlIHRha2VuIGZyb20g
c3RhdGUtPmFsbG9jDQorICogYnkgcmVtb3ZpbmcgYSBub2RlIGZyb20gdGhlIHN0YXRlLT5hbGxv
YyBub2RlIHVudGlsIHN0YXRlLT5hbGxvYy0+bm9kZV9jb3VudA0KKyAqIGlzIDEsIHdoZW4gc3Rh
dGUtPmFsbG9jIGlzIHJldHVybmVkIGFuZCB0aGUgc3RhdGUtPmFsbG9jLT5zbG90WzBdIGlzIHBy
b21vdGVkDQorICogdG8gc3RhdGUtPmFsbG9jLiAgTm9kZXMgYXJlIHB1c2hlZCBvbnRvIHN0YXRl
LT5hbGxvYyBieSBwdXR0aW5nIHRoZSBjdXJyZW50DQorICogc3RhdGUtPmFsbG9jIGludG8gdGhl
IHB1c2hlZCBub2RlJ3Mgc2xvdFswXS4NCisgKg0KKyAqIFRoZSBzdGF0ZSBhbHNvIGNvbnRhaW5z
IHRoZSBpbXBsaWVkIG1pbi9tYXggb2YgdGhlIHN0YXRlLT5ub2RlLCB0aGUgZGVwdGggb2YNCisg
KiB0aGlzIHNlYXJjaCwgYW5kIHRoZSBvZmZzZXQuIFRoZSBpbXBsaWVkIG1pbi9tYXggYXJlIGVp
dGhlciBmcm9tIHRoZSBwYXJlbnQNCisgKiBub2RlIG9yIGFyZSAwLW9vIGZvciB0aGUgcm9vdCBu
b2RlLiAgVGhlIGRlcHRoIGlzIGluY3JlbWVudGVkIG9yIGRlY3JlbWVudGVkDQorICogZXZlcnkg
dGltZSBhIG5vZGUgaXMgd2Fsa2VkIGRvd24gb3IgdXAuICBUaGUgb2Zmc2V0IGlzIHRoZSBzbG90
L3Bpdm90IG9mDQorICogaW50ZXJlc3QgaW4gdGhlIG5vZGUgLSBlaXRoZXIgZm9yIHJlYWRpbmcg
b3Igd3JpdGluZy4NCisgKg0KKyAqIFdoZW4gcmV0dXJuaW5nIGEgdmFsdWUgdGhlIG1hcGxlIHN0
YXRlIGluZGV4IGFuZCBsYXN0IHJlc3BlY3RpdmVseSBjb250YWluDQorICogdGhlIHN0YXJ0IGFu
ZCBlbmQgb2YgdGhlIHJhbmdlIGZvciB0aGUgZW50cnkuICBSYW5nZXMgYXJlIGluY2x1c2l2ZSBp
biB0aGUNCisgKiBNYXBsZSBUcmVlLg0KKyAqLw0KK3N0cnVjdCBtYV9zdGF0ZSB7DQorCXN0cnVj
dCBtYXBsZV90cmVlICp0cmVlOwkvKiBUaGUgdHJlZSB3ZSdyZSBvcGVyYXRpbmcgaW4gKi8NCisJ
dW5zaWduZWQgbG9uZyBpbmRleDsJCS8qIFRoZSBpbmRleCB3ZSdyZSBvcGVyYXRpbmcgb24gLSBy
YW5nZSBzdGFydCAqLw0KKwl1bnNpZ25lZCBsb25nIGxhc3Q7CQkvKiBUaGUgbGFzdCBpbmRleCB3
ZSdyZSBvcGVyYXRpbmcgb24gLSByYW5nZSBlbmQgKi8NCisJc3RydWN0IG1hcGxlX2Vub2RlICpu
b2RlOwkvKiBUaGUgbm9kZSBjb250YWluaW5nIHRoaXMgZW50cnkgKi8NCisJdW5zaWduZWQgbG9u
ZyBtaW47CQkvKiBUaGUgbWluaW11bSBpbmRleCBvZiB0aGlzIG5vZGUgLSBpbXBsaWVkIHBpdm90
IG1pbiAqLw0KKwl1bnNpZ25lZCBsb25nIG1heDsJCS8qIFRoZSBtYXhpbXVtIGluZGV4IG9mIHRo
aXMgbm9kZSAtIGltcGxpZWQgcGl2b3QgbWF4ICovDQorCXN0cnVjdCBtYXBsZV9hbGxvYyAqYWxs
b2M7CS8qIEFsbG9jYXRlZCBub2RlcyBmb3IgdGhpcyBvcGVyYXRpb24gKi8NCisJdW5zaWduZWQg
Y2hhciBkZXB0aDsJCS8qIGRlcHRoIG9mIHRyZWUgZGVzY2VudCBkdXJpbmcgd3JpdGUgKi8NCisJ
dW5zaWduZWQgY2hhciBvZmZzZXQ7DQorCXVuc2lnbmVkIGNoYXIgbWFzX2ZsYWdzOw0KK307DQor
DQorc3RydWN0IG1hX3dyX3N0YXRlIHsNCisJc3RydWN0IG1hX3N0YXRlICptYXM7DQorCXN0cnVj
dCBtYXBsZV9ub2RlICpub2RlOwkvKiBEZWNvZGVkIG1hcy0+bm9kZSAqLw0KKwl1bnNpZ25lZCBs
b25nIHJfbWluOwkJLyogcmFuZ2UgbWluICovDQorCXVuc2lnbmVkIGxvbmcgcl9tYXg7CQkvKiBy
YW5nZSBtYXggKi8NCisJZW51bSBtYXBsZV90eXBlIHR5cGU7CQkvKiBtYXMtPm5vZGUgdHlwZSAq
Lw0KKwl1bnNpZ25lZCBjaGFyIG9mZnNldF9lbmQ7CS8qIFRoZSBvZmZzZXQgd2hlcmUgdGhlIHdy
aXRlIGVuZHMgKi8NCisJdW5zaWduZWQgY2hhciBub2RlX2VuZDsJCS8qIG1hcy0+bm9kZSBlbmQg
Ki8NCisJdW5zaWduZWQgbG9uZyAqcGl2b3RzOwkJLyogbWFzLT5ub2RlLT5waXZvdHMgcG9pbnRl
ciAqLw0KKwl1bnNpZ25lZCBsb25nIGVuZF9waXY7CQkvKiBUaGUgcGl2b3QgYXQgdGhlIG9mZnNl
dCBlbmQgKi8NCisJdm9pZCBfX3JjdSAqKnNsb3RzOwkJLyogbWFzLT5ub2RlLT5zbG90cyBwb2lu
dGVyICovDQorCXZvaWQgKmVudHJ5OwkJCS8qIFRoZSBlbnRyeSB0byB3cml0ZSAqLw0KKwl2b2lk
ICpjb250ZW50OwkJCS8qIFRoZSBleGlzdGluZyBlbnRyeSB0aGF0IGlzIGJlaW5nIG92ZXJ3cml0
dGVuICovDQorfTsNCisNCisjZGVmaW5lIG1hc19sb2NrKG1hcykgICAgICAgICAgIHNwaW5fbG9j
aygmKChtYXMpLT50cmVlLT5tYV9sb2NrKSkNCisjZGVmaW5lIG1hc191bmxvY2sobWFzKSAgICAg
ICAgIHNwaW5fdW5sb2NrKCYoKG1hcyktPnRyZWUtPm1hX2xvY2spKQ0KKw0KKw0KKy8qDQorICog
U3BlY2lhbCB2YWx1ZXMgZm9yIG1hX3N0YXRlLm5vZGUuDQorICogTUFTX1NUQVJUIG1lYW5zIHdl
IGhhdmUgbm90IHNlYXJjaGVkIHRoZSB0cmVlLg0KKyAqIE1BU19ST09UIG1lYW5zIHdlIGhhdmUg
c2VhcmNoZWQgdGhlIHRyZWUgYW5kIHRoZSBlbnRyeSB3ZSBmb3VuZCBsaXZlcyBpbg0KKyAqIHRo
ZSByb290IG9mIHRoZSB0cmVlIChpZSBpdCBoYXMgaW5kZXggMCwgbGVuZ3RoIDEgYW5kIGlzIHRo
ZSBvbmx5IGVudHJ5IGluDQorICogdGhlIHRyZWUpLg0KKyAqIE1BU19OT05FIG1lYW5zIHdlIGhh
dmUgc2VhcmNoZWQgdGhlIHRyZWUgYW5kIHRoZXJlIGlzIG5vIG5vZGUgaW4gdGhlDQorICogdHJl
ZSBmb3IgdGhpcyBlbnRyeS4gIEZvciBleGFtcGxlLCB3ZSBzZWFyY2hlZCBmb3IgaW5kZXggMSBp
biBhbiBlbXB0eQ0KKyAqIHRyZWUuICBPciB3ZSBoYXZlIGEgdHJlZSB3aGljaCBwb2ludHMgdG8g
YSBmdWxsIGxlYWYgbm9kZSBhbmQgd2UNCisgKiBzZWFyY2hlZCBmb3IgYW4gZW50cnkgd2hpY2gg
aXMgbGFyZ2VyIHRoYW4gY2FuIGJlIGNvbnRhaW5lZCBpbiB0aGF0DQorICogbGVhZiBub2RlLg0K
KyAqIE1BX0VSUk9SIHJlcHJlc2VudHMgYW4gZXJybm8uICBBZnRlciBkcm9wcGluZyB0aGUgbG9j
ayBhbmQgYXR0ZW1wdGluZw0KKyAqIHRvIHJlc29sdmUgdGhlIGVycm9yLCB0aGUgd2FsayB3b3Vs
ZCBoYXZlIHRvIGJlIHJlc3RhcnRlZCBmcm9tIHRoZQ0KKyAqIHRvcCBvZiB0aGUgdHJlZSBhcyB0
aGUgdHJlZSBtYXkgaGF2ZSBiZWVuIG1vZGlmaWVkLg0KKyAqLw0KKyNkZWZpbmUgTUFTX1NUQVJU
CSgoc3RydWN0IG1hcGxlX2Vub2RlICopMVVMKQ0KKyNkZWZpbmUgTUFTX1JPT1QJKChzdHJ1Y3Qg
bWFwbGVfZW5vZGUgKik1VUwpDQorI2RlZmluZSBNQVNfTk9ORQkoKHN0cnVjdCBtYXBsZV9lbm9k
ZSAqKTlVTCkNCisjZGVmaW5lIE1BU19QQVVTRQkoKHN0cnVjdCBtYXBsZV9lbm9kZSAqKTE3VUwp
DQorI2RlZmluZSBNQV9FUlJPUihlcnIpIFwNCisJCSgoc3RydWN0IG1hcGxlX2Vub2RlICopKCgo
dW5zaWduZWQgbG9uZyllcnIgPDwgMikgfCAyVUwpKQ0KKw0KKyNkZWZpbmUgTUFfU1RBVEUobmFt
ZSwgbXQsIGZpcnN0LCBlbmQpCQkJCQlcDQorCXN0cnVjdCBtYV9zdGF0ZSBuYW1lID0gewkJCQkJ
XA0KKwkJLnRyZWUgPSBtdCwJCQkJCQlcDQorCQkuaW5kZXggPSBmaXJzdCwJCQkJCQlcDQorCQku
bGFzdCA9IGVuZCwJCQkJCQlcDQorCQkubm9kZSA9IE1BU19TVEFSVCwJCQkJCVwNCisJCS5taW4g
PSAwLAkJCQkJCVwNCisJCS5tYXggPSBVTE9OR19NQVgsCQkJCQlcDQorCQkuYWxsb2MgPSBOVUxM
LAkJCQkJCVwNCisJfQ0KKw0KKyNkZWZpbmUgTUFfV1JfU1RBVEUobmFtZSwgbWFfc3RhdGUsIHdy
X2VudHJ5KQkJCQlcDQorCXN0cnVjdCBtYV93cl9zdGF0ZSBuYW1lID0gewkJCQkJXA0KKwkJLm1h
cyA9IG1hX3N0YXRlLAkJCQkJXA0KKwkJLmNvbnRlbnQgPSBOVUxMLAkJCQkJXA0KKwkJLmVudHJ5
ID0gd3JfZW50cnksCQkJCQlcDQorCX0NCisNCisjZGVmaW5lIE1BX1RPUElBUlkobmFtZSwgdHJl
ZSkJCQkJCQlcDQorCXN0cnVjdCBtYV90b3BpYXJ5IG5hbWUgPSB7CQkJCQlcDQorCQkuaGVhZCA9
IE5VTEwsCQkJCQkJXA0KKwkJLnRhaWwgPSBOVUxMLAkJCQkJCVwNCisJCS5tdHJlZSA9IHRyZWUs
CQkJCQkJXA0KKwl9DQorDQordm9pZCAqbWFzX3dhbGsoc3RydWN0IG1hX3N0YXRlICptYXMpOw0K
K3ZvaWQgKm1hc19zdG9yZShzdHJ1Y3QgbWFfc3RhdGUgKm1hcywgdm9pZCAqZW50cnkpOw0KK3Zv
aWQgKm1hc19lcmFzZShzdHJ1Y3QgbWFfc3RhdGUgKm1hcyk7DQoraW50IG1hc19zdG9yZV9nZnAo
c3RydWN0IG1hX3N0YXRlICptYXMsIHZvaWQgKmVudHJ5LCBnZnBfdCBnZnApOw0KK3ZvaWQgbWFz
X3N0b3JlX3ByZWFsbG9jKHN0cnVjdCBtYV9zdGF0ZSAqbWFzLCB2b2lkICplbnRyeSk7DQordm9p
ZCAqbWFzX2ZpbmQoc3RydWN0IG1hX3N0YXRlICptYXMsIHVuc2lnbmVkIGxvbmcgbWF4KTsNCit2
b2lkICptYXNfZmluZF9yZXYoc3RydWN0IG1hX3N0YXRlICptYXMsIHVuc2lnbmVkIGxvbmcgbWlu
KTsNCitpbnQgbWFzX3ByZWFsbG9jYXRlKHN0cnVjdCBtYV9zdGF0ZSAqbWFzLCB2b2lkICplbnRy
eSwgZ2ZwX3QgZ2ZwKTsNCisNCitib29sIG1hc19ub21lbShzdHJ1Y3QgbWFfc3RhdGUgKm1hcywg
Z2ZwX3QgZ2ZwKTsNCit2b2lkIG1hc19wYXVzZShzdHJ1Y3QgbWFfc3RhdGUgKm1hcyk7DQordm9p
ZCBtYXBsZV90cmVlX2luaXQodm9pZCk7DQordm9pZCBtYXNfZGVzdHJveShzdHJ1Y3QgbWFfc3Rh
dGUgKm1hcyk7DQoraW50IG1hc19leHBlY3RlZF9lbnRyaWVzKHN0cnVjdCBtYV9zdGF0ZSAqbWFz
LCB1bnNpZ25lZCBsb25nIG5yX2VudHJpZXMpOw0KKw0KK3ZvaWQgKm1hc19wcmV2KHN0cnVjdCBt
YV9zdGF0ZSAqbWFzLCB1bnNpZ25lZCBsb25nIG1pbik7DQordm9pZCAqbWFzX25leHQoc3RydWN0
IG1hX3N0YXRlICptYXMsIHVuc2lnbmVkIGxvbmcgbWF4KTsNCisNCitpbnQgbWFzX2VtcHR5X2Fy
ZWEoc3RydWN0IG1hX3N0YXRlICptYXMsIHVuc2lnbmVkIGxvbmcgbWluLCB1bnNpZ25lZCBsb25n
IG1heCwNCisJCSAgIHVuc2lnbmVkIGxvbmcgc2l6ZSk7DQorDQorLyogQ2hlY2tzIGlmIGEgbWFz
IGhhcyBub3QgZm91bmQgYW55dGhpbmcgKi8NCitzdGF0aWMgaW5saW5lIGJvb2wgbWFzX2lzX25v
bmUoc3RydWN0IG1hX3N0YXRlICptYXMpDQorew0KKwlyZXR1cm4gbWFzLT5ub2RlID09IE1BU19O
T05FOw0KK30NCisNCisvKiBDaGVja3MgaWYgYSBtYXMgaGFzIGJlZW4gcGF1c2VkICovDQorc3Rh
dGljIGlubGluZSBib29sIG1hc19pc19wYXVzZWQoc3RydWN0IG1hX3N0YXRlICptYXMpDQorew0K
KwlyZXR1cm4gbWFzLT5ub2RlID09IE1BU19QQVVTRTsNCit9DQorDQordm9pZCBtYXNfZHVwX3Ry
ZWUoc3RydWN0IG1hX3N0YXRlICpvbGRtYXMsIHN0cnVjdCBtYV9zdGF0ZSAqbWFzKTsNCit2b2lk
IG1hc19kdXBfc3RvcmUoc3RydWN0IG1hX3N0YXRlICptYXMsIHZvaWQgKmVudHJ5KTsNCisNCisv
Kg0KKyAqIFRoaXMgZmluZHMgYW4gZW1wdHkgYXJlYSBmcm9tIHRoZSBoaWdoZXN0IGFkZHJlc3Mg
dG8gdGhlIGxvd2VzdC4NCisgKiBBS0EgIlRvcGRvd24iIHZlcnNpb24sDQorICovDQoraW50IG1h
c19lbXB0eV9hcmVhX3JldihzdHJ1Y3QgbWFfc3RhdGUgKm1hcywgdW5zaWduZWQgbG9uZyBtaW4s
DQorCQkgICAgICAgdW5zaWduZWQgbG9uZyBtYXgsIHVuc2lnbmVkIGxvbmcgc2l6ZSk7DQorLyoq
DQorICogbWFzX3Jlc2V0KCkgLSBSZXNldCBhIE1hcGxlIFRyZWUgb3BlcmF0aW9uIHN0YXRlLg0K
KyAqIEBtYXM6IE1hcGxlIFRyZWUgb3BlcmF0aW9uIHN0YXRlLg0KKyAqDQorICogUmVzZXRzIHRo
ZSBlcnJvciBvciB3YWxrIHN0YXRlIG9mIHRoZSBAbWFzIHNvIGZ1dHVyZSB3YWxrcyBvZiB0aGUN
CisgKiBhcnJheSB3aWxsIHN0YXJ0IGZyb20gdGhlIHJvb3QuICBVc2UgdGhpcyBpZiB5b3UgaGF2
ZSBkcm9wcGVkIHRoZQ0KKyAqIGxvY2sgYW5kIHdhbnQgdG8gcmV1c2UgdGhlIG1hX3N0YXRlLg0K
KyAqDQorICogQ29udGV4dDogQW55IGNvbnRleHQuDQorICovDQorc3RhdGljIGlubGluZSB2b2lk
IG1hc19yZXNldChzdHJ1Y3QgbWFfc3RhdGUgKm1hcykNCit7DQorCW1hcy0+bm9kZSA9IE1BU19T
VEFSVDsNCit9DQorDQorLyoqDQorICogbWFzX2Zvcl9lYWNoKCkgLSBJdGVyYXRlIG92ZXIgYSBy
YW5nZSBvZiB0aGUgbWFwbGUgdHJlZS4NCisgKiBAbWFzOiBNYXBsZSBUcmVlIG9wZXJhdGlvbiBz
dGF0ZSAobWFwbGVfc3RhdGUpDQorICogQGVudHJ5OiBFbnRyeSByZXRyaWV2ZWQgZnJvbSB0aGUg
dHJlZQ0KKyAqIEBtYXg6IG1heGltdW0gaW5kZXggdG8gcmV0cmlldmUgZnJvbSB0aGUgdHJlZQ0K
KyAqDQorICogV2hlbiByZXR1cm5lZCwgbWFzLT5pbmRleCBhbmQgbWFzLT5sYXN0IHdpbGwgaG9s
ZCB0aGUgZW50aXJlIHJhbmdlIGZvciB0aGUNCisgKiBlbnRyeS4NCisgKg0KKyAqIE5vdGU6IG1h
eSByZXR1cm4gdGhlIHplcm8gZW50cnkuDQorICoNCisgKi8NCisjZGVmaW5lIG1hc19mb3JfZWFj
aChfX21hcywgX19lbnRyeSwgX19tYXgpIFwNCisJd2hpbGUgKCgoX19lbnRyeSkgPSBtYXNfZmlu
ZCgoX19tYXMpLCAoX19tYXgpKSkgIT0gTlVMTCkNCisNCisNCisvKioNCisgKiBtYXNfc2V0X3Jh
bmdlKCkgLSBTZXQgdXAgTWFwbGUgVHJlZSBvcGVyYXRpb24gc3RhdGUgZm9yIGEgZGlmZmVyZW50
IGluZGV4Lg0KKyAqIEBtYXM6IE1hcGxlIFRyZWUgb3BlcmF0aW9uIHN0YXRlLg0KKyAqIEBzdGFy
dDogTmV3IHN0YXJ0IG9mIHJhbmdlIGluIHRoZSBNYXBsZSBUcmVlLg0KKyAqIEBsYXN0OiBOZXcg
ZW5kIG9mIHJhbmdlIGluIHRoZSBNYXBsZSBUcmVlLg0KKyAqDQorICogTW92ZSB0aGUgb3BlcmF0
aW9uIHN0YXRlIHRvIHJlZmVyIHRvIGEgZGlmZmVyZW50IHJhbmdlLiAgVGhpcyB3aWxsDQorICog
aGF2ZSB0aGUgZWZmZWN0IG9mIHN0YXJ0aW5nIGEgd2FsayBmcm9tIHRoZSB0b3A7IHNlZSBtYXNf
bmV4dCgpDQorICogdG8gbW92ZSB0byBhbiBhZGphY2VudCBpbmRleC4NCisgKi8NCitzdGF0aWMg
aW5saW5lDQordm9pZCBtYXNfc2V0X3JhbmdlKHN0cnVjdCBtYV9zdGF0ZSAqbWFzLCB1bnNpZ25l
ZCBsb25nIHN0YXJ0LCB1bnNpZ25lZCBsb25nIGxhc3QpDQorew0KKwkgICAgICAgbWFzLT5pbmRl
eCA9IHN0YXJ0Ow0KKwkgICAgICAgbWFzLT5sYXN0ID0gbGFzdDsNCisJICAgICAgIG1hcy0+bm9k
ZSA9IE1BU19TVEFSVDsNCit9DQorDQorLyoqDQorICogbWFzX3NldCgpIC0gU2V0IHVwIE1hcGxl
IFRyZWUgb3BlcmF0aW9uIHN0YXRlIGZvciBhIGRpZmZlcmVudCBpbmRleC4NCisgKiBAbWFzOiBN
YXBsZSBUcmVlIG9wZXJhdGlvbiBzdGF0ZS4NCisgKiBAaW5kZXg6IE5ldyBpbmRleCBpbnRvIHRo
ZSBNYXBsZSBUcmVlLg0KKyAqDQorICogTW92ZSB0aGUgb3BlcmF0aW9uIHN0YXRlIHRvIHJlZmVy
IHRvIGEgZGlmZmVyZW50IGluZGV4LiAgVGhpcyB3aWxsDQorICogaGF2ZSB0aGUgZWZmZWN0IG9m
IHN0YXJ0aW5nIGEgd2FsayBmcm9tIHRoZSB0b3A7IHNlZSBtYXNfbmV4dCgpDQorICogdG8gbW92
ZSB0byBhbiBhZGphY2VudCBpbmRleC4NCisgKi8NCitzdGF0aWMgaW5saW5lIHZvaWQgbWFzX3Nl
dChzdHJ1Y3QgbWFfc3RhdGUgKm1hcywgdW5zaWduZWQgbG9uZyBpbmRleCkNCit7DQorDQorCW1h
c19zZXRfcmFuZ2UobWFzLCBpbmRleCwgaW5kZXgpOw0KK30NCisNCitzdGF0aWMgaW5saW5lIGJv
b2wgbXRfZXh0ZXJuYWxfbG9jayhjb25zdCBzdHJ1Y3QgbWFwbGVfdHJlZSAqbXQpDQorew0KKwly
ZXR1cm4gKG10LT5tYV9mbGFncyAmIE1UX0ZMQUdTX0xPQ0tfTUFTSykgPT0gTVRfRkxBR1NfTE9D
S19FWFRFUk47DQorfQ0KKw0KKy8qKg0KKyAqIG10X2luaXRfZmxhZ3MoKSAtIEluaXRpYWxpc2Ug
YW4gZW1wdHkgbWFwbGUgdHJlZSB3aXRoIGZsYWdzLg0KKyAqIEBtdDogTWFwbGUgVHJlZQ0KKyAq
IEBmbGFnczogbWFwbGUgdHJlZSBmbGFncy4NCisgKg0KKyAqIElmIHlvdSBuZWVkIHRvIGluaXRp
YWxpc2UgYSBNYXBsZSBUcmVlIHdpdGggc3BlY2lhbCBmbGFncyAoZWcsIGFuDQorICogYWxsb2Nh
dGlvbiB0cmVlKSwgdXNlIHRoaXMgZnVuY3Rpb24uDQorICoNCisgKiBDb250ZXh0OiBBbnkgY29u
dGV4dC4NCisgKi8NCitzdGF0aWMgaW5saW5lIHZvaWQgbXRfaW5pdF9mbGFncyhzdHJ1Y3QgbWFw
bGVfdHJlZSAqbXQsIHVuc2lnbmVkIGludCBmbGFncykNCit7DQorCW10LT5tYV9mbGFncyA9IGZs
YWdzOw0KKwlpZiAoIW10X2V4dGVybmFsX2xvY2sobXQpKQ0KKwkJc3Bpbl9sb2NrX2luaXQoJm10
LT5tYV9sb2NrKTsNCisJcmN1X2Fzc2lnbl9wb2ludGVyKG10LT5tYV9yb290LCBOVUxMKTsNCit9
DQorDQorLyoqDQorICogbXRfaW5pdCgpIC0gSW5pdGlhbGlzZSBhbiBlbXB0eSBtYXBsZSB0cmVl
Lg0KKyAqIEBtdDogTWFwbGUgVHJlZQ0KKyAqDQorICogQW4gZW1wdHkgTWFwbGUgVHJlZS4NCisg
Kg0KKyAqIENvbnRleHQ6IEFueSBjb250ZXh0Lg0KKyAqLw0KK3N0YXRpYyBpbmxpbmUgdm9pZCBt
dF9pbml0KHN0cnVjdCBtYXBsZV90cmVlICptdCkNCit7DQorCW10X2luaXRfZmxhZ3MobXQsIDAp
Ow0KK30NCisNCitzdGF0aWMgaW5saW5lIGJvb2wgbXRfaW5fcmN1KHN0cnVjdCBtYXBsZV90cmVl
ICptdCkNCit7DQorI2lmZGVmIENPTkZJR19NQVBMRV9SQ1VfRElTQUJMRUQNCisJcmV0dXJuIGZh
bHNlOw0KKyNlbmRpZg0KKwlyZXR1cm4gbXQtPm1hX2ZsYWdzICYgTVRfRkxBR1NfVVNFX1JDVTsN
Cit9DQorDQorLyoqDQorICogbXRfY2xlYXJfaW5fcmN1KCkgLSBTd2l0Y2ggdGhlIHRyZWUgdG8g
bm9uLVJDVSBtb2RlLg0KKyAqIEBtdDogVGhlIE1hcGxlIFRyZWUNCisgKi8NCitzdGF0aWMgaW5s
aW5lIHZvaWQgbXRfY2xlYXJfaW5fcmN1KHN0cnVjdCBtYXBsZV90cmVlICptdCkNCit7DQorCWlm
ICghbXRfaW5fcmN1KG10KSkNCisJCXJldHVybjsNCisNCisJaWYgKG10X2V4dGVybmFsX2xvY2so
bXQpKSB7DQorCQlCVUdfT04oIW10X2xvY2tfaXNfaGVsZChtdCkpOw0KKwkJbXQtPm1hX2ZsYWdz
ICY9IH5NVF9GTEFHU19VU0VfUkNVOw0KKwl9IGVsc2Ugew0KKwkJbXRyZWVfbG9jayhtdCk7DQor
CQltdC0+bWFfZmxhZ3MgJj0gfk1UX0ZMQUdTX1VTRV9SQ1U7DQorCQltdHJlZV91bmxvY2sobXQp
Ow0KKwl9DQorfQ0KKw0KKy8qKg0KKyAqIG10X3NldF9pbl9yY3UoKSAtIFN3aXRjaCB0aGUgdHJl
ZSB0byBSQ1Ugc2FmZSBtb2RlLg0KKyAqIEBtdDogVGhlIE1hcGxlIFRyZWUNCisgKi8NCitzdGF0
aWMgaW5saW5lIHZvaWQgbXRfc2V0X2luX3JjdShzdHJ1Y3QgbWFwbGVfdHJlZSAqbXQpDQorew0K
KwlpZiAobXRfaW5fcmN1KG10KSkNCisJCXJldHVybjsNCisNCisJaWYgKG10X2V4dGVybmFsX2xv
Y2sobXQpKSB7DQorCQlCVUdfT04oIW10X2xvY2tfaXNfaGVsZChtdCkpOw0KKwkJbXQtPm1hX2Zs
YWdzIHw9IE1UX0ZMQUdTX1VTRV9SQ1U7DQorCX0gZWxzZSB7DQorCQltdHJlZV9sb2NrKG10KTsN
CisJCW10LT5tYV9mbGFncyB8PSBNVF9GTEFHU19VU0VfUkNVOw0KKwkJbXRyZWVfdW5sb2NrKG10
KTsNCisJfQ0KK30NCisNCit2b2lkICptdF9maW5kKHN0cnVjdCBtYXBsZV90cmVlICptdCwgdW5z
aWduZWQgbG9uZyAqaW5kZXgsIHVuc2lnbmVkIGxvbmcgbWF4KTsNCit2b2lkICptdF9maW5kX2Fm
dGVyKHN0cnVjdCBtYXBsZV90cmVlICptdCwgdW5zaWduZWQgbG9uZyAqaW5kZXgsDQorCQkgICAg
dW5zaWduZWQgbG9uZyBtYXgpOw0KK3ZvaWQgKm10X3ByZXYoc3RydWN0IG1hcGxlX3RyZWUgKm10
LCB1bnNpZ25lZCBsb25nIGluZGV4LCAgdW5zaWduZWQgbG9uZyBtaW4pOw0KK3ZvaWQgKm10X25l
eHQoc3RydWN0IG1hcGxlX3RyZWUgKm10LCB1bnNpZ25lZCBsb25nIGluZGV4LCB1bnNpZ25lZCBs
b25nIG1heCk7DQorDQorLyoqDQorICogbXRfZm9yX2VhY2ggLSBJdGVyYXRlIG92ZXIgZWFjaCBl
bnRyeSBzdGFydGluZyBhdCBpbmRleCB1bnRpbCBtYXguDQorICogQHRyZWU6IFRoZSBNYXBsZSBU
cmVlDQorICogQGVudHJ5OiBUaGUgY3VycmVudCBlbnRyeQ0KKyAqIEBpbmRleDogVGhlIGluZGV4
IHRvIHVwZGF0ZSB0byB0cmFjayB0aGUgbG9jYXRpb24gaW4gdGhlIHRyZWUNCisgKiBAbWF4OiBU
aGUgbWF4aW11bSBsaW1pdCBmb3IgQGluZGV4DQorICoNCisgKiBOb3RlOiBXaWxsIG5vdCByZXR1
cm4gdGhlIHplcm8gZW50cnkuDQorICovDQorI2RlZmluZSBtdF9mb3JfZWFjaChfX3RyZWUsIF9f
ZW50cnksIF9faW5kZXgsIF9fbWF4KSBcDQorCWZvciAoX19lbnRyeSA9IG10X2ZpbmQoX190cmVl
LCAmKF9faW5kZXgpLCBfX21heCk7IFwNCisJCV9fZW50cnk7IF9fZW50cnkgPSBtdF9maW5kX2Fm
dGVyKF9fdHJlZSwgJihfX2luZGV4KSwgX19tYXgpKQ0KKw0KKw0KKyNpZmRlZiBDT05GSUdfREVC
VUdfTUFQTEVfVFJFRQ0KK2V4dGVybiBhdG9taWNfdCBtYXBsZV90cmVlX3Rlc3RzX3J1bjsNCitl
eHRlcm4gYXRvbWljX3QgbWFwbGVfdHJlZV90ZXN0c19wYXNzZWQ7DQorDQordm9pZCBtdF9kdW1w
KGNvbnN0IHN0cnVjdCBtYXBsZV90cmVlICptdCk7DQordm9pZCBtdF92YWxpZGF0ZShzdHJ1Y3Qg
bWFwbGVfdHJlZSAqbXQpOw0KKyNkZWZpbmUgTVRfQlVHX09OKF9fdHJlZSwgX194KSBkbyB7CQkJ
CQlcDQorCWF0b21pY19pbmMoJm1hcGxlX3RyZWVfdGVzdHNfcnVuKTsJCQkJXA0KKwlpZiAoX194
KSB7CQkJCQkJCVwNCisJCXByX2luZm8oIkJVRyBhdCAlczolZCAoJXUpXG4iLAkJCQlcDQorCQlf
X2Z1bmNfXywgX19MSU5FX18sIF9feCk7CQkJCVwNCisJCW10X2R1bXAoX190cmVlKTsJCQkJCVwN
CisJCXByX2luZm8oIlBhc3M6ICV1IFJ1bjoldVxuIiwJCQkJXA0KKwkJCWF0b21pY19yZWFkKCZt
YXBsZV90cmVlX3Rlc3RzX3Bhc3NlZCksCQlcDQorCQkJYXRvbWljX3JlYWQoJm1hcGxlX3RyZWVf
dGVzdHNfcnVuKSk7CQlcDQorCQlkdW1wX3N0YWNrKCk7CQkJCQkJXA0KKwl9IGVsc2UgewkJCQkJ
CQlcDQorCQlhdG9taWNfaW5jKCZtYXBsZV90cmVlX3Rlc3RzX3Bhc3NlZCk7CQkJXA0KKwl9CQkJ
CQkJCQlcDQorfSB3aGlsZSAoMCkNCisjZWxzZQ0KKyNkZWZpbmUgTVRfQlVHX09OKF9fdHJlZSwg
X194KSBCVUdfT04oX194KQ0KKyNlbmRpZiAvKiBDT05GSUdfREVCVUdfTUFQTEVfVFJFRSAqLw0K
Kw0KKyNlbmRpZiAvKl9MSU5VWF9NQVBMRV9UUkVFX0ggKi8NCmRpZmYgLS1naXQgYS9pbmNsdWRl
L3RyYWNlL2V2ZW50cy9tYXBsZV90cmVlLmggYi9pbmNsdWRlL3RyYWNlL2V2ZW50cy9tYXBsZV90
cmVlLmgNCm5ldyBmaWxlIG1vZGUgMTAwNjQ0DQppbmRleCAwMDAwMDAwMDAwMDAuLjJiZTQwM2Jk
YzJiZA0KLS0tIC9kZXYvbnVsbA0KKysrIGIvaW5jbHVkZS90cmFjZS9ldmVudHMvbWFwbGVfdHJl
ZS5oDQpAQCAtMCwwICsxLDEyMyBAQA0KKy8qIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBHUEwt
Mi4wICovDQorI3VuZGVmIFRSQUNFX1NZU1RFTQ0KKyNkZWZpbmUgVFJBQ0VfU1lTVEVNIG1hcGxl
X3RyZWUNCisNCisjaWYgIWRlZmluZWQoX1RSQUNFX01NX0gpIHx8IGRlZmluZWQoVFJBQ0VfSEVB
REVSX01VTFRJX1JFQUQpDQorI2RlZmluZSBfVFJBQ0VfTU1fSA0KKw0KKw0KKyNpbmNsdWRlIDxs
aW51eC90cmFjZXBvaW50Lmg+DQorDQorc3RydWN0IG1hX3N0YXRlOw0KKw0KK1RSQUNFX0VWRU5U
KG1hX29wLA0KKw0KKwlUUF9QUk9UTyhjb25zdCBjaGFyICpmbiwgc3RydWN0IG1hX3N0YXRlICpt
YXMpLA0KKw0KKwlUUF9BUkdTKGZuLCBtYXMpLA0KKw0KKwlUUF9TVFJVQ1RfX2VudHJ5KA0KKwkJ
CV9fZmllbGQoY29uc3QgY2hhciAqLCBmbikNCisJCQlfX2ZpZWxkKHVuc2lnbmVkIGxvbmcsIG1p
bikNCisJCQlfX2ZpZWxkKHVuc2lnbmVkIGxvbmcsIG1heCkNCisJCQlfX2ZpZWxkKHVuc2lnbmVk
IGxvbmcsIGluZGV4KQ0KKwkJCV9fZmllbGQodW5zaWduZWQgbG9uZywgbGFzdCkNCisJCQlfX2Zp
ZWxkKHZvaWQgKiwgbm9kZSkNCisJKSwNCisNCisJVFBfZmFzdF9hc3NpZ24oDQorCQkJX19lbnRy
eS0+Zm4JCT0gZm47DQorCQkJX19lbnRyeS0+bWluCQk9IG1hcy0+bWluOw0KKwkJCV9fZW50cnkt
Pm1heAkJPSBtYXMtPm1heDsNCisJCQlfX2VudHJ5LT5pbmRleAkJPSBtYXMtPmluZGV4Ow0KKwkJ
CV9fZW50cnktPmxhc3QJCT0gbWFzLT5sYXN0Ow0KKwkJCV9fZW50cnktPm5vZGUJCT0gbWFzLT5u
b2RlOw0KKwkpLA0KKw0KKwlUUF9wcmludGsoIiVzXHROb2RlOiAlcCAoJWx1ICVsdSkgcmFuZ2U6
ICVsdS0lbHUiLA0KKwkJICBfX2VudHJ5LT5mbiwNCisJCSAgKHZvaWQgKikgX19lbnRyeS0+bm9k
ZSwNCisJCSAgKHVuc2lnbmVkIGxvbmcpIF9fZW50cnktPm1pbiwNCisJCSAgKHVuc2lnbmVkIGxv
bmcpIF9fZW50cnktPm1heCwNCisJCSAgKHVuc2lnbmVkIGxvbmcpIF9fZW50cnktPmluZGV4LA0K
KwkJICAodW5zaWduZWQgbG9uZykgX19lbnRyeS0+bGFzdA0KKwkpDQorKQ0KK1RSQUNFX0VWRU5U
KG1hX3JlYWQsDQorDQorCVRQX1BST1RPKGNvbnN0IGNoYXIgKmZuLCBzdHJ1Y3QgbWFfc3RhdGUg
Km1hcyksDQorDQorCVRQX0FSR1MoZm4sIG1hcyksDQorDQorCVRQX1NUUlVDVF9fZW50cnkoDQor
CQkJX19maWVsZChjb25zdCBjaGFyICosIGZuKQ0KKwkJCV9fZmllbGQodW5zaWduZWQgbG9uZywg
bWluKQ0KKwkJCV9fZmllbGQodW5zaWduZWQgbG9uZywgbWF4KQ0KKwkJCV9fZmllbGQodW5zaWdu
ZWQgbG9uZywgaW5kZXgpDQorCQkJX19maWVsZCh1bnNpZ25lZCBsb25nLCBsYXN0KQ0KKwkJCV9f
ZmllbGQodm9pZCAqLCBub2RlKQ0KKwkpLA0KKw0KKwlUUF9mYXN0X2Fzc2lnbigNCisJCQlfX2Vu
dHJ5LT5mbgkJPSBmbjsNCisJCQlfX2VudHJ5LT5taW4JCT0gbWFzLT5taW47DQorCQkJX19lbnRy
eS0+bWF4CQk9IG1hcy0+bWF4Ow0KKwkJCV9fZW50cnktPmluZGV4CQk9IG1hcy0+aW5kZXg7DQor
CQkJX19lbnRyeS0+bGFzdAkJPSBtYXMtPmxhc3Q7DQorCQkJX19lbnRyeS0+bm9kZQkJPSBtYXMt
Pm5vZGU7DQorCSksDQorDQorCVRQX3ByaW50aygiJXNcdE5vZGU6ICVwICglbHUgJWx1KSByYW5n
ZTogJWx1LSVsdSIsDQorCQkgIF9fZW50cnktPmZuLA0KKwkJICAodm9pZCAqKSBfX2VudHJ5LT5u
b2RlLA0KKwkJICAodW5zaWduZWQgbG9uZykgX19lbnRyeS0+bWluLA0KKwkJICAodW5zaWduZWQg
bG9uZykgX19lbnRyeS0+bWF4LA0KKwkJICAodW5zaWduZWQgbG9uZykgX19lbnRyeS0+aW5kZXgs
DQorCQkgICh1bnNpZ25lZCBsb25nKSBfX2VudHJ5LT5sYXN0DQorCSkNCispDQorDQorVFJBQ0Vf
RVZFTlQobWFfd3JpdGUsDQorDQorCVRQX1BST1RPKGNvbnN0IGNoYXIgKmZuLCBzdHJ1Y3QgbWFf
c3RhdGUgKm1hcywgdW5zaWduZWQgbG9uZyBwaXYsDQorCQkgdm9pZCAqdmFsKSwNCisNCisJVFBf
QVJHUyhmbiwgbWFzLCBwaXYsIHZhbCksDQorDQorCVRQX1NUUlVDVF9fZW50cnkoDQorCQkJX19m
aWVsZChjb25zdCBjaGFyICosIGZuKQ0KKwkJCV9fZmllbGQodW5zaWduZWQgbG9uZywgbWluKQ0K
KwkJCV9fZmllbGQodW5zaWduZWQgbG9uZywgbWF4KQ0KKwkJCV9fZmllbGQodW5zaWduZWQgbG9u
ZywgaW5kZXgpDQorCQkJX19maWVsZCh1bnNpZ25lZCBsb25nLCBsYXN0KQ0KKwkJCV9fZmllbGQo
dW5zaWduZWQgbG9uZywgcGl2KQ0KKwkJCV9fZmllbGQodm9pZCAqLCB2YWwpDQorCQkJX19maWVs
ZCh2b2lkICosIG5vZGUpDQorCSksDQorDQorCVRQX2Zhc3RfYXNzaWduKA0KKwkJCV9fZW50cnkt
PmZuCQk9IGZuOw0KKwkJCV9fZW50cnktPm1pbgkJPSBtYXMtPm1pbjsNCisJCQlfX2VudHJ5LT5t
YXgJCT0gbWFzLT5tYXg7DQorCQkJX19lbnRyeS0+aW5kZXgJCT0gbWFzLT5pbmRleDsNCisJCQlf
X2VudHJ5LT5sYXN0CQk9IG1hcy0+bGFzdDsNCisJCQlfX2VudHJ5LT5waXYJCT0gcGl2Ow0KKwkJ
CV9fZW50cnktPnZhbAkJPSB2YWw7DQorCQkJX19lbnRyeS0+bm9kZQkJPSBtYXMtPm5vZGU7DQor
CSksDQorDQorCVRQX3ByaW50aygiJXNcdE5vZGUgJXAgKCVsdSAlbHUpIHJhbmdlOiVsdS0lbHUg
cGl2ICglbHUpIHZhbCAlcCIsDQorCQkgIF9fZW50cnktPmZuLA0KKwkJICAodm9pZCAqKSBfX2Vu
dHJ5LT5ub2RlLA0KKwkJICAodW5zaWduZWQgbG9uZykgX19lbnRyeS0+bWluLA0KKwkJICAodW5z
aWduZWQgbG9uZykgX19lbnRyeS0+bWF4LA0KKwkJICAodW5zaWduZWQgbG9uZykgX19lbnRyeS0+
aW5kZXgsDQorCQkgICh1bnNpZ25lZCBsb25nKSBfX2VudHJ5LT5sYXN0LA0KKwkJICAodW5zaWdu
ZWQgbG9uZykgX19lbnRyeS0+cGl2LA0KKwkJICAodm9pZCAqKSBfX2VudHJ5LT52YWwNCisJKQ0K
KykNCisjZW5kaWYgLyogX1RSQUNFX01NX0ggKi8NCisNCisvKiBUaGlzIHBhcnQgbXVzdCBiZSBv
dXRzaWRlIHByb3RlY3Rpb24gKi8NCisjaW5jbHVkZSA8dHJhY2UvZGVmaW5lX3RyYWNlLmg+DQpk
aWZmIC0tZ2l0IGEvaW5pdC9tYWluLmMgYi9pbml0L21haW4uYw0KaW5kZXggMGVlMzljZGNmY2Fj
Li4xZWRiMWJmZWM2NDAgMTAwNjQ0DQotLS0gYS9pbml0L21haW4uYw0KKysrIGIvaW5pdC9tYWlu
LmMNCkBAIC0xMTYsNiArMTE2LDcgQEAgc3RhdGljIGludCBrZXJuZWxfaW5pdCh2b2lkICopOw0K
IA0KIGV4dGVybiB2b2lkIGluaXRfSVJRKHZvaWQpOw0KIGV4dGVybiB2b2lkIHJhZGl4X3RyZWVf
aW5pdCh2b2lkKTsNCitleHRlcm4gdm9pZCBtYXBsZV90cmVlX2luaXQodm9pZCk7DQogDQogLyoN
CiAgKiBEZWJ1ZyBoZWxwZXI6IHZpYSB0aGlzIGZsYWcgd2Uga25vdyB0aGF0IHdlIGFyZSBpbiAn
ZWFybHkgYm9vdHVwIGNvZGUnDQpAQCAtMTAwMSw2ICsxMDAyLDcgQEAgYXNtbGlua2FnZSBfX3Zp
c2libGUgdm9pZCBfX2luaXQgX19ub19zYW5pdGl6ZV9hZGRyZXNzIHN0YXJ0X2tlcm5lbCh2b2lk
KQ0KIAkJICJJbnRlcnJ1cHRzIHdlcmUgZW5hYmxlZCAqdmVyeSogZWFybHksIGZpeGluZyBpdFxu
IikpDQogCQlsb2NhbF9pcnFfZGlzYWJsZSgpOw0KIAlyYWRpeF90cmVlX2luaXQoKTsNCisJbWFw
bGVfdHJlZV9pbml0KCk7DQogDQogCS8qDQogCSAqIFNldCB1cCBob3VzZWtlZXBpbmcgYmVmb3Jl
IHNldHRpbmcgdXAgd29ya3F1ZXVlcyB0byBhbGxvdyB0aGUgdW5ib3VuZA0KZGlmZiAtLWdpdCBh
L2xpYi9LY29uZmlnLmRlYnVnIGIvbGliL0tjb25maWcuZGVidWcNCmluZGV4IDJlMjRkYjRiZmYx
OS4uMDVjMzg1OGNkZjQxIDEwMDY0NA0KLS0tIGEvbGliL0tjb25maWcuZGVidWcNCisrKyBiL2xp
Yi9LY29uZmlnLmRlYnVnDQpAQCAtODEyLDYgKzgxMiwxMyBAQCBjb25maWcgREVCVUdfVk1fVk1B
Q0FDSEUNCiAJICBjYW4gY2F1c2Ugc2lnbmlmaWNhbnQgb3ZlcmhlYWQsIHNvIG9ubHkgZW5hYmxl
IGl0IGluIG5vbi1wcm9kdWN0aW9uDQogCSAgZW52aXJvbm1lbnRzLg0KIA0KK2NvbmZpZyBERUJV
R19WTV9NQVBMRV9UUkVFDQorCWJvb2wgIkRlYnVnIFZNIG1hcGxlIHRyZWVzIg0KKwlkZXBlbmRz
IG9uIERFQlVHX1ZNDQorCXNlbGVjdCBERUJVR19NQVBMRV9UUkVFDQorCWhlbHANCisJICBFbmFi
bGUgVk0gbWFwbGUgdHJlZSBkZWJ1Z2dpbmcgaW5mb3JtYXRpb24gYW5kIGV4dHJhIHZhbGlkYXRp
b25zLg0KKw0KIAkgIElmIHVuc3VyZSwgc2F5IE4uDQogDQogY29uZmlnIERFQlVHX1ZNX1JCDQpA
QCAtMTYyNyw2ICsxNjM0LDE0IEBAIGNvbmZpZyBCVUdfT05fREFUQV9DT1JSVVBUSU9ODQogDQog
CSAgSWYgdW5zdXJlLCBzYXkgTi4NCiANCitjb25maWcgREVCVUdfTUFQTEVfVFJFRQ0KKwlib29s
ICJEZWJ1ZyBtYXBsZSB0cmVlcyINCisJZGVwZW5kcyBvbiBERUJVR19LRVJORUwNCisJaGVscA0K
KwkgIEVuYWJsZSBtYXBsZSB0cmVlIGRlYnVnZ2luZyBpbmZvcm1hdGlvbiBhbmQgZXh0cmEgdmFs
aWRhdGlvbnMuDQorDQorCSAgSWYgdW5zdXJlLCBzYXkgTi4NCisNCiBlbmRtZW51DQogDQogY29u
ZmlnIERFQlVHX0NSRURFTlRJQUxTDQpkaWZmIC0tZ2l0IGEvbGliL01ha2VmaWxlIGIvbGliL01h
a2VmaWxlDQppbmRleCBlYTU0Mjk0ZDczYmYuLjQ1ZGQ2YjZlNDMyNSAxMDA2NDQNCi0tLSBhL2xp
Yi9NYWtlZmlsZQ0KKysrIGIvbGliL01ha2VmaWxlDQpAQCAtMjksNyArMjksOCBAQCBlbmRpZg0K
IA0KIGxpYi15IDo9IGN0eXBlLm8gc3RyaW5nLm8gdnNwcmludGYubyBjbWRsaW5lLm8gXA0KIAkg
cmJ0cmVlLm8gcmFkaXgtdHJlZS5vIHRpbWVycXVldWUubyB4YXJyYXkubyBcDQotCSBpZHIubyBl
eHRhYmxlLm8gc2hhMS5vIGlycV9yZWdzLm8gYXJndl9zcGxpdC5vIFwNCisJIG1hcGxlX3RyZWUu
byBpZHIubyBleHRhYmxlLm8gXA0KKwkgc2hhMS5vIGlycV9yZWdzLm8gYXJndl9zcGxpdC5vIFwN
CiAJIGZsZXhfcHJvcG9ydGlvbnMubyByYXRlbGltaXQubyBzaG93X21lbS5vIFwNCiAJIGlzX3Np
bmdsZV90aHJlYWRlZC5vIHBsaXN0Lm8gZGVjb21wcmVzcy5vIGtvYmplY3RfdWV2ZW50Lm8gXA0K
IAkgZWFybHljcGlvLm8gc2VxX2J1Zi5vIHNpcGhhc2gubyBkZWNfYW5kX2xvY2subyBcDQpkaWZm
IC0tZ2l0IGEvbGliL21hcGxlX3RyZWUuYyBiL2xpYi9tYXBsZV90cmVlLmMNCm5ldyBmaWxlIG1v
ZGUgMTAwNjQ0DQppbmRleCAwMDAwMDAwMDAwMDAuLmQ1YjMxMGU3MzA2OA0KLS0tIC9kZXYvbnVs
bA0KKysrIGIvbGliL21hcGxlX3RyZWUuYw0KQEAgLTAsMCArMSw3MTAyIEBADQorLy8gU1BEWC1M
aWNlbnNlLUlkZW50aWZpZXI6IEdQTC0yLjArDQorLyoNCisgKiBNYXBsZSBUcmVlIGltcGxlbWVu
dGF0aW9uDQorICogQ29weXJpZ2h0IChjKSAyMDE4LTIwMjIgT3JhY2xlIENvcnBvcmF0aW9uDQor
ICogQXV0aG9yczogTGlhbSBSLiBIb3dsZXR0IDxMaWFtLkhvd2xldHRAb3JhY2xlLmNvbT4NCisg
KgkgICAgTWF0dGhldyBXaWxjb3ggPHdpbGx5QGluZnJhZGVhZC5vcmc+DQorICovDQorDQorLyoN
CisgKiBET0M6IEludGVyZXN0aW5nIGltcGxlbWVudGF0aW9uIGRldGFpbHMgb2YgdGhlIE1hcGxl
IFRyZWUNCisgKg0KKyAqIEVhY2ggbm9kZSB0eXBlIGhhcyBhIG51bWJlciBvZiBzbG90cyBmb3Ig
ZW50cmllcyBhbmQgYSBudW1iZXIgb2Ygc2xvdHMgZm9yDQorICogcGl2b3RzLiAgSW4gdGhlIGNh
c2Ugb2YgZGVuc2Ugbm9kZXMsIHRoZSBwaXZvdHMgYXJlIGltcGxpZWQgYnkgdGhlIHBvc2l0aW9u
DQorICogYW5kIGFyZSBzaW1wbHkgdGhlIHNsb3QgaW5kZXggKyB0aGUgbWluaW11bSBvZiB0aGUg
bm9kZS4NCisgKg0KKyAqIEluIHJlZ3VsYXIgQi1UcmVlIHRlcm1zLCBwaXZvdHMgYXJlIGNhbGxl
ZCBrZXlzLiAgVGhlIHRlcm0gcGl2b3QgaXMgdXNlZCB0bw0KKyAqIGluZGljYXRlIHRoYXQgdGhl
IHRyZWUgaXMgc3BlY2lmeWluZyByYW5nZXMsICBQaXZvdHMgbWF5IGFwcGVhciBpbiB0aGUNCisg
KiBzdWJ0cmVlIHdpdGggYW4gZW50cnkgYXR0YWNoZWQgdG8gdGhlIHZhbHVlIHdoZXJlIGFzIGtl
eXMgYXJlIHVuaXF1ZSB0byBhDQorICogc3BlY2lmaWMgcG9zaXRpb24gb2YgYSBCLXRyZWUuICBQ
aXZvdCB2YWx1ZXMgYXJlIGluY2x1c2l2ZSBvZiB0aGUgc2xvdCB3aXRoDQorICogdGhlIHNhbWUg
aW5kZXguDQorICoNCisgKg0KKyAqIFRoZSBmb2xsb3dpbmcgaWxsdXN0cmF0ZXMgdGhlIGxheW91
dCBvZiBhIHJhbmdlNjQgbm9kZXMgc2xvdHMgYW5kIHBpdm90cy4NCisgKg0KKyAqDQorICogIFNs
b3RzIC0+IHwgMCB8IDEgfCAyIHwgLi4uIHwgMTIgfCAxMyB8IDE0IHwgMTUgfA0KKyAqICAgICAg
ICAgICDilKwgICDilKwgICDilKwgICDilKwgICAgIOKUrCAgICDilKwgICAg4pSsICAgIOKUrCAg
ICDilKwNCisgKiAgICAgICAgICAg4pSCICAg4pSCICAg4pSCICAg4pSCICAgICDilIIgICAg4pSC
ICAgIOKUgiAgICDilIIgICAg4pSU4pSAIEltcGxpZWQgbWF4aW11bQ0KKyAqICAgICAgICAgICDi
lIIgICDilIIgICDilIIgICDilIIgICAgIOKUgiAgICDilIIgICAg4pSCICAgIOKUlOKUgCBQaXZv
dCAxNA0KKyAqICAgICAgICAgICDilIIgICDilIIgICDilIIgICDilIIgICAgIOKUgiAgICDilIIg
ICAg4pSU4pSAIFBpdm90IDEzDQorICogICAgICAgICAgIOKUgiAgIOKUgiAgIOKUgiAgIOKUgiAg
ICAg4pSCICAgIOKUlOKUgCBQaXZvdCAxMg0KKyAqICAgICAgICAgICDilIIgICDilIIgICDilIIg
ICDilIIgICAgIOKUlOKUgCBQaXZvdCAxMQ0KKyAqICAgICAgICAgICDilIIgICDilIIgICDilIIg
ICDilJTilIAgUGl2b3QgMg0KKyAqICAgICAgICAgICDilIIgICDilIIgICDilJTilIAgUGl2b3Qg
MQ0KKyAqICAgICAgICAgICDilIIgICDilJTilIAgUGl2b3QgMA0KKyAqICAgICAgICAgICDilJTi
lIAgIEltcGxpZWQgbWluaW11bQ0KKyAqDQorICogU2xvdCBjb250ZW50czoNCisgKiAgSW50ZXJu
YWwgKG5vbi1sZWFmKSBub2RlcyBjb250YWluIHBvaW50ZXJzIHRvIG90aGVyIG5vZGVzLg0KKyAq
ICBMZWFmIG5vZGVzIGNvbnRhaW4gZW50cmllcy4NCisgKg0KKyAqIFRoZSBsb2NhdGlvbiBvZiBp
bnRlcmVzdCBpcyBvZnRlbiByZWZlcnJlZCB0byBhcyBhbiBvZmZzZXQuICBBbGwgb2Zmc2V0cyBo
YXZlDQorICogYSBzbG90LCBidXQgdGhlIGxhc3Qgb2Zmc2V0IGhhcyBhbiBpbXBsaWVkIHBpdm90
IGZyb20gdGhlIG5vZGUgYWJvdmUgKG9yDQorICogVUlOVF9NQVggZm9yIHRoZSByb290IG5vZGUu
DQorICoNCisgKiBSYW5nZXMgY29tcGxpY2F0ZSBjZXJ0YWluIHdyaXRlIGFjdGl2aXRpZXMuICBX
aGVuIG1vZGlmeWluZyBhbnkgb2YNCisgKiB0aGUgQi10cmVlIHZhcmlhbnRzLCBpdCBpcyBrbm93
biB0aGF0IG9uZSBlbnRyeSB3aWxsIGVpdGhlciBiZSBhZGRlZCBvcg0KKyAqIGRlbGV0ZWQuICBX
aGVuIG1vZGlmeWluZyB0aGUgTWFwbGUgVHJlZSwgb25lIHN0b3JlIG9wZXJhdGlvbiBtYXkgb3Zl
cndyaXRlDQorICogdGhlIGVudGlyZSBkYXRhIHNldCwgb3Igb25lIGhhbGYgb2YgdGhlIHRyZWUs
IG9yIHRoZSBtaWRkbGUgaGFsZiBvZiB0aGUgdHJlZS4NCisgKg0KKyAqLw0KKw0KKw0KKyNpbmNs
dWRlIDxsaW51eC9tYXBsZV90cmVlLmg+DQorI2luY2x1ZGUgPGxpbnV4L3hhcnJheS5oPg0KKyNp
bmNsdWRlIDxsaW51eC90eXBlcy5oPg0KKyNpbmNsdWRlIDxsaW51eC9leHBvcnQuaD4NCisjaW5j
bHVkZSA8bGludXgvc2xhYi5oPg0KKyNpbmNsdWRlIDxsaW51eC9saW1pdHMuaD4NCisjaW5jbHVk
ZSA8YXNtL2JhcnJpZXIuaD4NCisNCisjZGVmaW5lIENSRUFURV9UUkFDRV9QT0lOVFMNCisjaW5j
bHVkZSA8dHJhY2UvZXZlbnRzL21hcGxlX3RyZWUuaD4NCisNCisjZGVmaW5lIE1BX1JPT1RfUEFS
RU5UIDENCisNCisvKiBNYXBsZSBzdGF0ZSBmbGFncyAqLw0KKyNkZWZpbmUgTUFfU1RBVEVfQlVM
SwkJMQ0KKyNkZWZpbmUgTUFfU1RBVEVfUkVCQUxBTkNFCTINCisNCisjZGVmaW5lIG1hX3BhcmVu
dF9wdHIoeCkgKChzdHJ1Y3QgbWFwbGVfcG5vZGUgKikoeCkpDQorI2RlZmluZSBtYV9tbm9kZV9w
dHIoeCkgKChzdHJ1Y3QgbWFwbGVfbm9kZSAqKSh4KSkNCisjZGVmaW5lIG1hX2Vub2RlX3B0cih4
KSAoKHN0cnVjdCBtYXBsZV9lbm9kZSAqKSh4KSkNCitzdGF0aWMgc3RydWN0IGttZW1fY2FjaGUg
Km1hcGxlX25vZGVfY2FjaGU7DQorDQorI2lmZGVmIENPTkZJR19ERUJVR19NQVBMRV9UUkVFDQor
c3RhdGljIGNvbnN0IHVuc2lnbmVkIGxvbmcgbXRfbWF4W10gPSB7DQorCVttYXBsZV9kZW5zZV0J
CT0gTUFQTEVfTk9ERV9TTE9UUywNCisJW21hcGxlX2xlYWZfNjRdCQk9IFVMT05HX01BWCwNCisJ
W21hcGxlX3JhbmdlXzY0XQk9IFVMT05HX01BWCwNCisJW21hcGxlX2FyYW5nZV82NF0JPSBVTE9O
R19NQVgsDQorfTsNCisjZGVmaW5lIG10X25vZGVfbWF4KHgpIG10X21heFttdGVfbm9kZV90eXBl
KHgpXQ0KKyNlbmRpZg0KKw0KK3N0YXRpYyBjb25zdCB1bnNpZ25lZCBjaGFyIG10X3Nsb3RzW10g
PSB7DQorCVttYXBsZV9kZW5zZV0JCT0gTUFQTEVfTk9ERV9TTE9UUywNCisJW21hcGxlX2xlYWZf
NjRdCQk9IE1BUExFX1JBTkdFNjRfU0xPVFMsDQorCVttYXBsZV9yYW5nZV82NF0JPSBNQVBMRV9S
QU5HRTY0X1NMT1RTLA0KKwlbbWFwbGVfYXJhbmdlXzY0XQk9IE1BUExFX0FSQU5HRTY0X1NMT1RT
LA0KK307DQorI2RlZmluZSBtdF9zbG90X2NvdW50KHgpIG10X3Nsb3RzW210ZV9ub2RlX3R5cGUo
eCldDQorDQorc3RhdGljIGNvbnN0IHVuc2lnbmVkIGNoYXIgbXRfcGl2b3RzW10gPSB7DQorCVtt
YXBsZV9kZW5zZV0JCT0gMCwNCisJW21hcGxlX2xlYWZfNjRdCQk9IE1BUExFX1JBTkdFNjRfU0xP
VFMgLSAxLA0KKwlbbWFwbGVfcmFuZ2VfNjRdCT0gTUFQTEVfUkFOR0U2NF9TTE9UUyAtIDEsDQor
CVttYXBsZV9hcmFuZ2VfNjRdCT0gTUFQTEVfQVJBTkdFNjRfU0xPVFMgLSAxLA0KK307DQorI2Rl
ZmluZSBtdF9waXZvdF9jb3VudCh4KSBtdF9waXZvdHNbbXRlX25vZGVfdHlwZSh4KV0NCisNCitz
dGF0aWMgY29uc3QgdW5zaWduZWQgY2hhciBtdF9taW5fc2xvdHNbXSA9IHsNCisJW21hcGxlX2Rl
bnNlXQkJPSBNQVBMRV9OT0RFX1NMT1RTIC8gMiwNCisJW21hcGxlX2xlYWZfNjRdCQk9IChNQVBM
RV9SQU5HRTY0X1NMT1RTIC8gMikgLSAyLA0KKwlbbWFwbGVfcmFuZ2VfNjRdCT0gKE1BUExFX1JB
TkdFNjRfU0xPVFMgLyAyKSAtIDIsDQorCVttYXBsZV9hcmFuZ2VfNjRdCT0gKE1BUExFX0FSQU5H
RTY0X1NMT1RTIC8gMikgLSAxLA0KK307DQorI2RlZmluZSBtdF9taW5fc2xvdF9jb3VudCh4KSBt
dF9taW5fc2xvdHNbbXRlX25vZGVfdHlwZSh4KV0NCisNCisjZGVmaW5lIE1BUExFX0JJR19OT0RF
X1NMT1RTCShNQVBMRV9SQU5HRTY0X1NMT1RTICogMiArIDIpDQorI2RlZmluZSBNQVBMRV9CSUdf
Tk9ERV9HQVBTCShNQVBMRV9BUkFOR0U2NF9TTE9UUyAqIDIgKyAxKQ0KKw0KK3N0cnVjdCBtYXBs
ZV9iaWdfbm9kZSB7DQorCXN0cnVjdCBtYXBsZV9wbm9kZSAqcGFyZW50Ow0KKwl1bnNpZ25lZCBs
b25nIHBpdm90W01BUExFX0JJR19OT0RFX1NMT1RTIC0gMV07DQorCXVuaW9uIHsNCisJCXN0cnVj
dCBtYXBsZV9lbm9kZSAqc2xvdFtNQVBMRV9CSUdfTk9ERV9TTE9UU107DQorCQlzdHJ1Y3Qgew0K
KwkJCXVuc2lnbmVkIGxvbmcgcGFkZGluZ1tNQVBMRV9CSUdfTk9ERV9HQVBTXTsNCisJCQl1bnNp
Z25lZCBsb25nIGdhcFtNQVBMRV9CSUdfTk9ERV9HQVBTXTsNCisJCX07DQorCX07DQorCXVuc2ln
bmVkIGNoYXIgYl9lbmQ7DQorCWVudW0gbWFwbGVfdHlwZSB0eXBlOw0KK307DQorDQorLyoNCisg
KiBUaGUgbWFwbGVfc3VidHJlZV9zdGF0ZSBpcyB1c2VkIHRvIGJ1aWxkIGEgdHJlZSB0byByZXBs
YWNlIGEgc2VnbWVudCBvZiBhbg0KKyAqIGV4aXN0aW5nIHRyZWUgaW4gYSBtb3JlIGF0b21pYyB3
YXkuICBBbnkgd2Fsa2VycyBvZiB0aGUgb2xkZXIgdHJlZSB3aWxsIGhpdCBhDQorICogZGVhZCBu
b2RlIGFuZCByZXN0YXJ0IG9uIHVwZGF0ZXMuDQorICovDQorc3RydWN0IG1hcGxlX3N1YnRyZWVf
c3RhdGUgew0KKwlzdHJ1Y3QgbWFfc3RhdGUgKm9yaWdfbDsJLyogT3JpZ2luYWwgbGVmdCBzaWRl
IG9mIHN1YnRyZWUgKi8NCisJc3RydWN0IG1hX3N0YXRlICpvcmlnX3I7CS8qIE9yaWdpbmFsIHJp
Z2h0IHNpZGUgb2Ygc3VidHJlZSAqLw0KKwlzdHJ1Y3QgbWFfc3RhdGUgKmw7CQkvKiBOZXcgbGVm
dCBzaWRlIG9mIHN1YnRyZWUgKi8NCisJc3RydWN0IG1hX3N0YXRlICptOwkJLyogTmV3IG1pZGRs
ZSBvZiBzdWJ0cmVlIChyYXJlKSAqLw0KKwlzdHJ1Y3QgbWFfc3RhdGUgKnI7CQkvKiBOZXcgcmln
aHQgc2lkZSBvZiBzdWJ0cmVlICovDQorCXN0cnVjdCBtYV90b3BpYXJ5ICpmcmVlOwkvKiBub2Rl
cyB0byBiZSBmcmVlZCAqLw0KKwlzdHJ1Y3QgbWFfdG9waWFyeSAqZGVzdHJveTsJLyogTm9kZXMg
dG8gYmUgZGVzdHJveWVkICh3YWxrZWQgYW5kIGZyZWVkKSAqLw0KKwlzdHJ1Y3QgbWFwbGVfYmln
X25vZGUgKmJuOw0KK307DQorDQorLyogRnVuY3Rpb25zICovDQorc3RhdGljIGlubGluZSBzdHJ1
Y3QgbWFwbGVfbm9kZSAqbXRfYWxsb2Nfb25lKGdmcF90IGdmcCkNCit7DQorCXJldHVybiBrbWVt
X2NhY2hlX2FsbG9jKG1hcGxlX25vZGVfY2FjaGUsIGdmcCB8IF9fR0ZQX1pFUk8pOw0KK30NCisN
CitzdGF0aWMgaW5saW5lIGludCBtdF9hbGxvY19idWxrKGdmcF90IGdmcCwgc2l6ZV90IHNpemUs
IHZvaWQgKipub2RlcykNCit7DQorCXJldHVybiBrbWVtX2NhY2hlX2FsbG9jX2J1bGsobWFwbGVf
bm9kZV9jYWNoZSwgZ2ZwIHwgX19HRlBfWkVSTywgc2l6ZSwNCisJCQkJICAgICBub2Rlcyk7DQor
fQ0KKw0KK3N0YXRpYyBpbmxpbmUgdm9pZCBtdF9mcmVlX2J1bGsoc2l6ZV90IHNpemUsIHZvaWQg
X19yY3UgKipub2RlcykNCit7DQorCWttZW1fY2FjaGVfZnJlZV9idWxrKG1hcGxlX25vZGVfY2Fj
aGUsIHNpemUsICh2b2lkICoqKW5vZGVzKTsNCit9DQorDQorc3RhdGljIHZvaWQgbXRfZnJlZV9y
Y3Uoc3RydWN0IHJjdV9oZWFkICpoZWFkKQ0KK3sNCisJc3RydWN0IG1hcGxlX25vZGUgKm5vZGUg
PSBjb250YWluZXJfb2YoaGVhZCwgc3RydWN0IG1hcGxlX25vZGUsIHJjdSk7DQorDQorCWttZW1f
Y2FjaGVfZnJlZShtYXBsZV9ub2RlX2NhY2hlLCBub2RlKTsNCit9DQorDQorLyoNCisgKiBtYV9m
cmVlX3JjdSgpIC0gVXNlIHJjdSBjYWxsYmFjayB0byBmcmVlIGEgbWFwbGUgbm9kZQ0KKyAqIEBu
b2RlOiBUaGUgbm9kZSB0byBmcmVlDQorICoNCisgKiBUaGUgbWFwbGUgdHJlZSB1c2VzIHRoZSBw
YXJlbnQgcG9pbnRlciB0byBpbmRpY2F0ZSB0aGlzIG5vZGUgaXMgbm8gbG9uZ2VyIGluDQorICog
dXNlIGFuZCB3aWxsIGJlIGZyZWVkLg0KKyAqLw0KK3N0YXRpYyB2b2lkIG1hX2ZyZWVfcmN1KHN0
cnVjdCBtYXBsZV9ub2RlICpub2RlKQ0KK3sNCisJbm9kZS0+cGFyZW50ID0gbWFfcGFyZW50X3B0
cihub2RlKTsNCisJY2FsbF9yY3UoJm5vZGUtPnJjdSwgbXRfZnJlZV9yY3UpOw0KK30NCisNCitz
dGF0aWMgdW5zaWduZWQgaW50IG10X2hlaWdodChjb25zdCBzdHJ1Y3QgbWFwbGVfdHJlZSAqbXQp
DQorew0KKwlyZXR1cm4gKG10LT5tYV9mbGFncyAmIE1UX0ZMQUdTX0hFSUdIVF9NQVNLKSA+PiBN
VF9GTEFHU19IRUlHSFRfT0ZGU0VUOw0KK30NCisNCitzdGF0aWMgdm9pZCBtYXNfc2V0X2hlaWdo
dChzdHJ1Y3QgbWFfc3RhdGUgKm1hcykNCit7DQorCXVuc2lnbmVkIGludCBuZXdfZmxhZ3MgPSBt
YXMtPnRyZWUtPm1hX2ZsYWdzOw0KKw0KKwluZXdfZmxhZ3MgJj0gfk1UX0ZMQUdTX0hFSUdIVF9N
QVNLOw0KKwlCVUdfT04obWFzLT5kZXB0aCA+IE1BUExFX0hFSUdIVF9NQVgpOw0KKwluZXdfZmxh
Z3MgfD0gbWFzLT5kZXB0aCA8PCBNVF9GTEFHU19IRUlHSFRfT0ZGU0VUOw0KKwltYXMtPnRyZWUt
Pm1hX2ZsYWdzID0gbmV3X2ZsYWdzOw0KK30NCisNCitzdGF0aWMgdW5zaWduZWQgaW50IG1hc19t
dF9oZWlnaHQoc3RydWN0IG1hX3N0YXRlICptYXMpDQorew0KKwlyZXR1cm4gbXRfaGVpZ2h0KG1h
cy0+dHJlZSk7DQorfQ0KKw0KK3N0YXRpYyBpbmxpbmUgZW51bSBtYXBsZV90eXBlIG10ZV9ub2Rl
X3R5cGUoY29uc3Qgc3RydWN0IG1hcGxlX2Vub2RlICplbnRyeSkNCit7DQorCXJldHVybiAoKHVu
c2lnbmVkIGxvbmcpZW50cnkgPj4gTUFQTEVfTk9ERV9UWVBFX1NISUZUKSAmDQorCQlNQVBMRV9O
T0RFX1RZUEVfTUFTSzsNCit9DQorDQorc3RhdGljIGlubGluZSBib29sIG1hX2lzX2RlbnNlKGNv
bnN0IGVudW0gbWFwbGVfdHlwZSB0eXBlKQ0KK3sNCisJcmV0dXJuIHR5cGUgPCBtYXBsZV9sZWFm
XzY0Ow0KK30NCisNCitzdGF0aWMgaW5saW5lIGJvb2wgbWFfaXNfbGVhZihjb25zdCBlbnVtIG1h
cGxlX3R5cGUgdHlwZSkNCit7DQorCXJldHVybiB0eXBlIDwgbWFwbGVfcmFuZ2VfNjQ7DQorfQ0K
Kw0KK3N0YXRpYyBpbmxpbmUgYm9vbCBtdGVfaXNfbGVhZihjb25zdCBzdHJ1Y3QgbWFwbGVfZW5v
ZGUgKmVudHJ5KQ0KK3sNCisJcmV0dXJuIG1hX2lzX2xlYWYobXRlX25vZGVfdHlwZShlbnRyeSkp
Ow0KK30NCisNCisvKg0KKyAqIFdlIGFsc28gcmVzZXJ2ZSB2YWx1ZXMgd2l0aCB0aGUgYm90dG9t
IHR3byBiaXRzIHNldCB0byAnMTAnIHdoaWNoIGFyZQ0KKyAqIGJlbG93IDQwOTYNCisgKi8NCitz
dGF0aWMgaW5saW5lIGJvb2wgbXRfaXNfcmVzZXJ2ZWQoY29uc3Qgdm9pZCAqZW50cnkpDQorew0K
KwlyZXR1cm4gKCh1bnNpZ25lZCBsb25nKWVudHJ5IDwgTUFQTEVfUkVTRVJWRURfUkFOR0UpICYm
DQorCQl4YV9pc19pbnRlcm5hbChlbnRyeSk7DQorfQ0KKw0KK3N0YXRpYyBpbmxpbmUgdm9pZCBt
YXNfc2V0X2VycihzdHJ1Y3QgbWFfc3RhdGUgKm1hcywgbG9uZyBlcnIpDQorew0KKwltYXMtPm5v
ZGUgPSBNQV9FUlJPUihlcnIpOw0KK30NCisNCitzdGF0aWMgaW5saW5lIGJvb2wgbWFzX2lzX3B0
cihzdHJ1Y3QgbWFfc3RhdGUgKm1hcykNCit7DQorCXJldHVybiBtYXMtPm5vZGUgPT0gTUFTX1JP
T1Q7DQorfQ0KKw0KK3N0YXRpYyBpbmxpbmUgYm9vbCBtYXNfaXNfc3RhcnQoc3RydWN0IG1hX3N0
YXRlICptYXMpDQorew0KKwlyZXR1cm4gbWFzLT5ub2RlID09IE1BU19TVEFSVDsNCit9DQorDQor
c3RhdGljIGlubGluZSBib29sIG1hc19pc19lcnIoc3RydWN0IG1hX3N0YXRlICptYXMpDQorew0K
KwlyZXR1cm4geGFfaXNfZXJyKG1hcy0+bm9kZSk7DQorfQ0KKw0KK3N0YXRpYyBpbmxpbmUgYm9v
bCBtYXNfc2VhcmNoYWJsZShzdHJ1Y3QgbWFfc3RhdGUgKm1hcykNCit7DQorCWlmIChtYXNfaXNf
bm9uZShtYXMpKQ0KKwkJcmV0dXJuIGZhbHNlOw0KKw0KKwlpZiAobWFzX2lzX3B0cihtYXMpKQ0K
KwkJcmV0dXJuIGZhbHNlOw0KKw0KKwlyZXR1cm4gdHJ1ZTsNCit9DQorDQorc3RhdGljIGlubGlu
ZSBzdHJ1Y3QgbWFwbGVfbm9kZSAqbXRlX3RvX25vZGUoY29uc3Qgc3RydWN0IG1hcGxlX2Vub2Rl
ICplbnRyeSkNCit7DQorCXJldHVybiAoc3RydWN0IG1hcGxlX25vZGUgKikoKHVuc2lnbmVkIGxv
bmcpZW50cnkgJiB+TUFQTEVfTk9ERV9NQVNLKTsNCit9DQorDQorLyoNCisgKiBtdGVfdG9fbWF0
KCkgLSBDb252ZXJ0IGEgbWFwbGUgZW5jb2RlZCBub2RlIHRvIGEgbWFwbGUgdG9waWFyeSBub2Rl
Lg0KKyAqIEBlbnRyeTogVGhlIG1hcGxlIGVuY29kZWQgbm9kZQ0KKyAqDQorICogUmV0dXJuOiBh
IG1hcGxlIHRvcGlhcnkgcG9pbnRlcg0KKyAqLw0KK3N0YXRpYyBpbmxpbmUgc3RydWN0IG1hcGxl
X3RvcGlhcnkgKm10ZV90b19tYXQoY29uc3Qgc3RydWN0IG1hcGxlX2Vub2RlICplbnRyeSkNCit7
DQorCXJldHVybiAoc3RydWN0IG1hcGxlX3RvcGlhcnkgKikNCisJCSgodW5zaWduZWQgbG9uZyll
bnRyeSAmIH5NQVBMRV9OT0RFX01BU0spOw0KK30NCisNCisvKg0KKyAqIG1hc19tbigpIC0gR2V0
IHRoZSBtYXBsZSBzdGF0ZSBub2RlLg0KKyAqIEBtYXM6IFRoZSBtYXBsZSBzdGF0ZQ0KKyAqDQor
ICogUmV0dXJuOiB0aGUgbWFwbGUgbm9kZSAobm90IGVuY29kZWQgLSBiYXJlIHBvaW50ZXIpLg0K
KyAqLw0KK3N0YXRpYyBpbmxpbmUgc3RydWN0IG1hcGxlX25vZGUgKm1hc19tbihjb25zdCBzdHJ1
Y3QgbWFfc3RhdGUgKm1hcykNCit7DQorCXJldHVybiBtdGVfdG9fbm9kZShtYXMtPm5vZGUpOw0K
K30NCisNCisvKg0KKyAqIG10ZV9zZXRfbm9kZV9kZWFkKCkgLSBTZXQgYSBtYXBsZSBlbmNvZGVk
IG5vZGUgYXMgZGVhZC4NCisgKiBAbW46IFRoZSBtYXBsZSBlbmNvZGVkIG5vZGUuDQorICovDQor
c3RhdGljIGlubGluZSB2b2lkIG10ZV9zZXRfbm9kZV9kZWFkKHN0cnVjdCBtYXBsZV9lbm9kZSAq
bW4pDQorew0KKwltdGVfdG9fbm9kZShtbiktPnBhcmVudCA9IG1hX3BhcmVudF9wdHIobXRlX3Rv
X25vZGUobW4pKTsNCisJc21wX3dtYigpOyAvKiBOZWVkZWQgZm9yIFJDVSAqLw0KK30NCisNCisv
KiBCaXQgMSBpbmRpY2F0ZXMgdGhlIHJvb3QgaXMgYSBub2RlICovDQorI2RlZmluZSBNQVBMRV9S
T09UX05PREUJCQkweDAyDQorLyogbWFwbGVfdHlwZSBzdG9yZWQgYml0IDMtNiAqLw0KKyNkZWZp
bmUgTUFQTEVfRU5PREVfVFlQRV9TSElGVAkJMHgwMw0KKy8qIEJpdCAyIG1lYW5zIGEgTlVMTCBz
b21ld2hlcmUgYmVsb3cgKi8NCisjZGVmaW5lIE1BUExFX0VOT0RFX05VTEwJCTB4MDQNCisNCitz
dGF0aWMgaW5saW5lIHN0cnVjdCBtYXBsZV9lbm9kZSAqbXRfbWtfbm9kZShjb25zdCBzdHJ1Y3Qg
bWFwbGVfbm9kZSAqbm9kZSwNCisJCQkJCSAgICAgZW51bSBtYXBsZV90eXBlIHR5cGUpDQorew0K
KwlyZXR1cm4gKHZvaWQgKikoKHVuc2lnbmVkIGxvbmcpbm9kZSB8DQorCQkJKHR5cGUgPDwgTUFQ
TEVfRU5PREVfVFlQRV9TSElGVCkgfCBNQVBMRV9FTk9ERV9OVUxMKTsNCit9DQorDQorc3RhdGlj
IGlubGluZSB2b2lkICptdGVfbWtfcm9vdChjb25zdCBzdHJ1Y3QgbWFwbGVfZW5vZGUgKm5vZGUp
DQorew0KKwlyZXR1cm4gKHZvaWQgKikoKHVuc2lnbmVkIGxvbmcpbm9kZSB8IE1BUExFX1JPT1Rf
Tk9ERSk7DQorfQ0KKw0KK3N0YXRpYyBpbmxpbmUgdm9pZCAqbXRlX3NhZmVfcm9vdChjb25zdCBz
dHJ1Y3QgbWFwbGVfZW5vZGUgKm5vZGUpDQorew0KKwlyZXR1cm4gKHZvaWQgKikoKHVuc2lnbmVk
IGxvbmcpbm9kZSAmIH5NQVBMRV9ST09UX05PREUpOw0KK30NCisNCitzdGF0aWMgaW5saW5lIHZv
aWQgbXRlX3NldF9mdWxsKGNvbnN0IHN0cnVjdCBtYXBsZV9lbm9kZSAqbm9kZSkNCit7DQorCW5v
ZGUgPSAodm9pZCAqKSgodW5zaWduZWQgbG9uZylub2RlICYgfk1BUExFX0VOT0RFX05VTEwpOw0K
K30NCisNCitzdGF0aWMgaW5saW5lIHZvaWQgbXRlX2NsZWFyX2Z1bGwoY29uc3Qgc3RydWN0IG1h
cGxlX2Vub2RlICpub2RlKQ0KK3sNCisJbm9kZSA9ICh2b2lkICopKCh1bnNpZ25lZCBsb25nKW5v
ZGUgfCBNQVBMRV9FTk9ERV9OVUxMKTsNCit9DQorDQorc3RhdGljIGlubGluZSBib29sIG1hX2lz
X3Jvb3Qoc3RydWN0IG1hcGxlX25vZGUgKm5vZGUpDQorew0KKwlyZXR1cm4gKCh1bnNpZ25lZCBs
b25nKW5vZGUtPnBhcmVudCAmIE1BX1JPT1RfUEFSRU5UKTsNCit9DQorDQorc3RhdGljIGlubGlu
ZSBib29sIG10ZV9pc19yb290KGNvbnN0IHN0cnVjdCBtYXBsZV9lbm9kZSAqbm9kZSkNCit7DQor
CXJldHVybiBtYV9pc19yb290KG10ZV90b19ub2RlKG5vZGUpKTsNCit9DQorDQorc3RhdGljIGlu
bGluZSBib29sIG1hc19pc19yb290X2xpbWl0cyhjb25zdCBzdHJ1Y3QgbWFfc3RhdGUgKm1hcykN
Cit7DQorCXJldHVybiAhbWFzLT5taW4gJiYgbWFzLT5tYXggPT0gVUxPTkdfTUFYOw0KK30NCisN
CitzdGF0aWMgaW5saW5lIGJvb2wgbXRfaXNfYWxsb2Moc3RydWN0IG1hcGxlX3RyZWUgKm10KQ0K
K3sNCisJcmV0dXJuIChtdC0+bWFfZmxhZ3MgJiBNVF9GTEFHU19BTExPQ19SQU5HRSk7DQorfQ0K
Kw0KKy8qDQorICogVGhlIFBhcmVudCBQb2ludGVyDQorICogRXhjbHVkaW5nIHJvb3QsIHRoZSBw
YXJlbnQgcG9pbnRlciBpcyAyNTZCIGFsaWduZWQgbGlrZSBhbGwgb3RoZXIgdHJlZSBub2Rlcy4N
CisgKiBXaGVuIHN0b3JpbmcgYSAzMiBvciA2NCBiaXQgdmFsdWVzLCB0aGUgb2Zmc2V0IGNhbiBm
aXQgaW50byA1IGJpdHMuICBUaGUgMTYNCisgKiBiaXQgdmFsdWVzIG5lZWQgYW4gZXh0cmEgYml0
IHRvIHN0b3JlIHRoZSBvZmZzZXQuICBUaGlzIGV4dHJhIGJpdCBjb21lcyBmcm9tDQorICogYSBy
ZXVzZSBvZiB0aGUgbGFzdCBiaXQgaW4gdGhlIG5vZGUgdHlwZS4gIFRoaXMgaXMgcG9zc2libGUg
YnkgdXNpbmcgYml0IDEgdG8NCisgKiBpbmRpY2F0ZSBpZiBiaXQgMiBpcyBwYXJ0IG9mIHRoZSB0
eXBlIG9yIHRoZSBzbG90Lg0KKyAqDQorICogTm90ZSB0eXBlczoNCisgKiAgMHg/PzEgPSBSb290
DQorICogIDB4PzAwID0gMTYgYml0IG5vZGVzDQorICogIDB4MDEwID0gMzIgYml0IG5vZGVzDQor
ICogIDB4MTEwID0gNjQgYml0IG5vZGVzDQorICoNCisgKiBTbG90IHNpemUgYW5kIGFsaWdubWVu
dA0KKyAqICAwYj8/MSA6IFJvb3QNCisgKiAgMGI/MDAgOiAxNiBiaXQgdmFsdWVzLCB0eXBlIGlu
IDAtMSwgc2xvdCBpbiAyLTcNCisgKiAgMGIwMTAgOiAzMiBiaXQgdmFsdWVzLCB0eXBlIGluIDAt
Miwgc2xvdCBpbiAzLTcNCisgKiAgMGIxMTAgOiA2NCBiaXQgdmFsdWVzLCB0eXBlIGluIDAtMiwg
c2xvdCBpbiAzLTcNCisgKi8NCisNCisjZGVmaW5lIE1BUExFX1BBUkVOVF9ST09UCQkweDAxDQor
DQorI2RlZmluZSBNQVBMRV9QQVJFTlRfU0xPVF9TSElGVAkJMHgwMw0KKyNkZWZpbmUgTUFQTEVf
UEFSRU5UX1NMT1RfTUFTSwkJMHhGOA0KKw0KKyNkZWZpbmUgTUFQTEVfUEFSRU5UXzE2Ql9TTE9U
X1NISUZUCTB4MDINCisjZGVmaW5lIE1BUExFX1BBUkVOVF8xNkJfU0xPVF9NQVNLCTB4RkMNCisN
CisjZGVmaW5lIE1BUExFX1BBUkVOVF9SQU5HRTY0CQkweDA2DQorI2RlZmluZSBNQVBMRV9QQVJF
TlRfUkFOR0UzMgkJMHgwNA0KKyNkZWZpbmUgTUFQTEVfUEFSRU5UX05PVF9SQU5HRTE2CTB4MDIN
CisNCisvKg0KKyAqIG10ZV9wYXJlbnRfc2hpZnQoKSAtIEdldCB0aGUgcGFyZW50IHNoaWZ0IGZv
ciB0aGUgc2xvdCBzdG9yYWdlLg0KKyAqIEBwYXJlbnQ6IFRoZSBwYXJlbnQgcG9pbnRlciBjYXN0
IGFzIGFuIHVuc2lnbmVkIGxvbmcNCisgKiBSZXR1cm46IFRoZSBzaGlmdCBpbnRvIHRoYXQgcG9p
bnRlciB0byB0aGUgc3RhciB0byBvZiB0aGUgc2xvdA0KKyAqLw0KK3N0YXRpYyBpbmxpbmUgdW5z
aWduZWQgbG9uZyBtdGVfcGFyZW50X3NoaWZ0KHVuc2lnbmVkIGxvbmcgcGFyZW50KQ0KK3sNCisJ
LyogTm90ZSBiaXQgMSA9PSAwIG1lYW5zIDE2QiAqLw0KKwlpZiAobGlrZWx5KHBhcmVudCAmIE1B
UExFX1BBUkVOVF9OT1RfUkFOR0UxNikpDQorCQlyZXR1cm4gTUFQTEVfUEFSRU5UX1NMT1RfU0hJ
RlQ7DQorDQorCXJldHVybiBNQVBMRV9QQVJFTlRfMTZCX1NMT1RfU0hJRlQ7DQorfQ0KKw0KKy8q
DQorICogbXRlX3BhcmVudF9zbG90X21hc2soKSAtIEdldCB0aGUgc2xvdCBtYXNrIGZvciB0aGUg
cGFyZW50Lg0KKyAqIEBwYXJlbnQ6IFRoZSBwYXJlbnQgcG9pbnRlciBjYXN0IGFzIGFuIHVuc2ln
bmVkIGxvbmcuDQorICogUmV0dXJuOiBUaGUgc2xvdCBtYXNrIGZvciB0aGF0IHBhcmVudC4NCisg
Ki8NCitzdGF0aWMgaW5saW5lIHVuc2lnbmVkIGxvbmcgbXRlX3BhcmVudF9zbG90X21hc2sodW5z
aWduZWQgbG9uZyBwYXJlbnQpDQorew0KKwkvKiBOb3RlIGJpdCAxID09IDAgbWVhbnMgMTZCICov
DQorCWlmIChsaWtlbHkocGFyZW50ICYgTUFQTEVfUEFSRU5UX05PVF9SQU5HRTE2KSkNCisJCXJl
dHVybiBNQVBMRV9QQVJFTlRfU0xPVF9NQVNLOw0KKw0KKwlyZXR1cm4gTUFQTEVfUEFSRU5UXzE2
Ql9TTE9UX01BU0s7DQorfQ0KKw0KKy8qDQorICogbWFzX3BhcmVudF9lbnVtKCkgLSBSZXR1cm4g
dGhlIG1hcGxlX3R5cGUgb2YgdGhlIHBhcmVudCBmcm9tIHRoZSBzdG9yZWQNCisgKiBwYXJlbnQg
dHlwZS4NCisgKiBAbWFzOiBUaGUgbWFwbGUgc3RhdGUNCisgKiBAbm9kZTogVGhlIG1hcGxlX2Vu
b2RlIHRvIGV4dHJhY3QgdGhlIHBhcmVudCdzIGVudW0NCisgKiBSZXR1cm46IFRoZSBub2RlLT5w
YXJlbnQgbWFwbGVfdHlwZQ0KKyAqLw0KK3N0YXRpYyBpbmxpbmUNCitlbnVtIG1hcGxlX3R5cGUg
bXRlX3BhcmVudF9lbnVtKHN0cnVjdCBtYXBsZV9lbm9kZSAqcF9lbm9kZSwNCisJCQkJc3RydWN0
IG1hcGxlX3RyZWUgKm10KQ0KK3sNCisJdW5zaWduZWQgbG9uZyBwX3R5cGU7DQorDQorCXBfdHlw
ZSA9ICh1bnNpZ25lZCBsb25nKXBfZW5vZGU7DQorCWlmIChwX3R5cGUgJiBNQVBMRV9QQVJFTlRf
Uk9PVCkNCisJCXJldHVybiAwOyAvKiBWYWxpZGF0ZWQgaW4gdGhlIGNhbGxlci4gKi8NCisNCisJ
cF90eXBlICY9IE1BUExFX05PREVfTUFTSzsNCisJcF90eXBlID0gcF90eXBlICYgfihNQVBMRV9Q
QVJFTlRfUk9PVCB8IG10ZV9wYXJlbnRfc2xvdF9tYXNrKHBfdHlwZSkpOw0KKw0KKwlzd2l0Y2gg
KHBfdHlwZSkgew0KKwljYXNlIE1BUExFX1BBUkVOVF9SQU5HRTY0OiAvKiBvciBNQVBMRV9QQVJF
TlRfQVJBTkdFNjQgKi8NCisJCWlmIChtdF9pc19hbGxvYyhtdCkpDQorCQkJcmV0dXJuIG1hcGxl
X2FyYW5nZV82NDsNCisJCXJldHVybiBtYXBsZV9yYW5nZV82NDsNCisJfQ0KKw0KKwlyZXR1cm4g
MDsNCit9DQorDQorc3RhdGljIGlubGluZQ0KK2VudW0gbWFwbGVfdHlwZSBtYXNfcGFyZW50X2Vu
dW0oc3RydWN0IG1hX3N0YXRlICptYXMsIHN0cnVjdCBtYXBsZV9lbm9kZSAqZW5vZGUpDQorew0K
KwlyZXR1cm4gbXRlX3BhcmVudF9lbnVtKG1hX2Vub2RlX3B0cihtdGVfdG9fbm9kZShlbm9kZSkt
PnBhcmVudCksIG1hcy0+dHJlZSk7DQorfQ0KKw0KKy8qDQorICogbXRlX3NldF9wYXJlbnQoKSAt
IFNldCB0aGUgcGFyZW50IG5vZGUgYW5kIGVuY29kZSB0aGUgc2xvdA0KKyAqIEBlbm9kZTogVGhl
IGVuY29kZWQgbWFwbGUgbm9kZS4NCisgKiBAcGFyZW50OiBUaGUgZW5jb2RlZCBtYXBsZSBub2Rl
IHRoYXQgaXMgdGhlIHBhcmVudCBvZiBAZW5vZGUuDQorICogQHNsb3Q6IFRoZSBzbG90IHRoYXQg
QGVub2RlIHJlc2lkZXMgaW4gQHBhcmVudC4NCisgKg0KKyAqIFNsb3QgbnVtYmVyIGlzIGVuY29k
ZWQgaW4gdGhlIGVub2RlLT5wYXJlbnQgYml0IDMtNiBvciAyLTYsIGRlcGVuZGluZyBvbiB0aGUN
CisgKiBwYXJlbnQgdHlwZS4NCisgKi8NCitzdGF0aWMgaW5saW5lDQordm9pZCBtdGVfc2V0X3Bh
cmVudChzdHJ1Y3QgbWFwbGVfZW5vZGUgKmVub2RlLCBjb25zdCBzdHJ1Y3QgbWFwbGVfZW5vZGUg
KnBhcmVudCwNCisJCSAgICB1bnNpZ25lZCBjaGFyIHNsb3QpDQorew0KKwl1bnNpZ25lZCBsb25n
IHZhbCA9ICh1bnNpZ25lZCBsb25nKSBwYXJlbnQ7DQorCXVuc2lnbmVkIGxvbmcgc2hpZnQ7DQor
CXVuc2lnbmVkIGxvbmcgdHlwZTsNCisJZW51bSBtYXBsZV90eXBlIHBfdHlwZSA9IG10ZV9ub2Rl
X3R5cGUocGFyZW50KTsNCisNCisJQlVHX09OKHBfdHlwZSA9PSBtYXBsZV9kZW5zZSk7DQorCUJV
R19PTihwX3R5cGUgPT0gbWFwbGVfbGVhZl82NCk7DQorDQorCXN3aXRjaCAocF90eXBlKSB7DQor
CWNhc2UgbWFwbGVfcmFuZ2VfNjQ6DQorCWNhc2UgbWFwbGVfYXJhbmdlXzY0Og0KKwkJc2hpZnQg
PSBNQVBMRV9QQVJFTlRfU0xPVF9TSElGVDsNCisJCXR5cGUgPSBNQVBMRV9QQVJFTlRfUkFOR0U2
NDsNCisJCWJyZWFrOw0KKwlkZWZhdWx0Og0KKwljYXNlIG1hcGxlX2RlbnNlOg0KKwljYXNlIG1h
cGxlX2xlYWZfNjQ6DQorCQlzaGlmdCA9IHR5cGUgPSAwOw0KKwkJYnJlYWs7DQorCX0NCisNCisJ
dmFsICY9IH5NQVBMRV9OT0RFX01BU0s7IC8qIENsZWFyIGFsbCBub2RlIG1ldGFkYXRhIGluIHBh
cmVudCAqLw0KKwl2YWwgfD0gKHNsb3QgPDwgc2hpZnQpIHwgdHlwZTsNCisJbXRlX3RvX25vZGUo
ZW5vZGUpLT5wYXJlbnQgPSBtYV9wYXJlbnRfcHRyKHZhbCk7DQorfQ0KKw0KKy8qDQorICogbXRl
X3BhcmVudF9zbG90KCkgLSBnZXQgdGhlIHBhcmVudCBzbG90IG9mIEBlbm9kZS4NCisgKiBAZW5v
ZGU6IFRoZSBlbmNvZGVkIG1hcGxlIG5vZGUuDQorICoNCisgKiBSZXR1cm46IFRoZSBzbG90IGlu
IHRoZSBwYXJlbnQgbm9kZSB3aGVyZSBAZW5vZGUgcmVzaWRlcy4NCisgKi8NCitzdGF0aWMgaW5s
aW5lIHVuc2lnbmVkIGludCBtdGVfcGFyZW50X3Nsb3QoY29uc3Qgc3RydWN0IG1hcGxlX2Vub2Rl
ICplbm9kZSkNCit7DQorCXVuc2lnbmVkIGxvbmcgdmFsID0gKHVuc2lnbmVkIGxvbmcpIG10ZV90
b19ub2RlKGVub2RlKS0+cGFyZW50Ow0KKw0KKwkvKiBSb290LiAqLw0KKwlpZiAodmFsICYgMSkN
CisJCXJldHVybiAwOw0KKw0KKwkvKg0KKwkgKiBPa2F5IHRvIHVzZSBNQVBMRV9QQVJFTlRfMTZC
X1NMT1RfTUFTSyBhcyB0aGUgbGFzdCBiaXQgd2lsbCBiZSBsb3N0DQorCSAqIGJ5IHNoaWZ0IGlm
IHRoZSBwYXJlbnQgc2hpZnQgaXMgTUFQTEVfUEFSRU5UX1NMT1RfU0hJRlQNCisJICovDQorCXJl
dHVybiAodmFsICYgTUFQTEVfUEFSRU5UXzE2Ql9TTE9UX01BU0spID4+IG10ZV9wYXJlbnRfc2hp
ZnQodmFsKTsNCit9DQorDQorLyoNCisgKiBtdGVfcGFyZW50KCkgLSBHZXQgdGhlIHBhcmVudCBv
ZiBAbm9kZS4NCisgKiBAbm9kZTogVGhlIGVuY29kZWQgbWFwbGUgbm9kZS4NCisgKg0KKyAqIFJl
dHVybjogVGhlIHBhcmVudCBtYXBsZSBub2RlLg0KKyAqLw0KK3N0YXRpYyBpbmxpbmUgc3RydWN0
IG1hcGxlX25vZGUgKm10ZV9wYXJlbnQoY29uc3Qgc3RydWN0IG1hcGxlX2Vub2RlICplbm9kZSkN
Cit7DQorCXJldHVybiAodm9pZCAqKSgodW5zaWduZWQgbG9uZykNCisJCQkobXRlX3RvX25vZGUo
ZW5vZGUpLT5wYXJlbnQpICYgfk1BUExFX05PREVfTUFTSyk7DQorfQ0KKw0KKy8qDQorICogbWFf
ZGVhZF9ub2RlKCkgLSBjaGVjayBpZiB0aGUgQGVub2RlIGlzIGRlYWQuDQorICogQGVub2RlOiBU
aGUgZW5jb2RlZCBtYXBsZSBub2RlDQorICoNCisgKiBSZXR1cm46IHRydWUgaWYgZGVhZCwgZmFs
c2Ugb3RoZXJ3aXNlLg0KKyAqLw0KK3N0YXRpYyBpbmxpbmUgYm9vbCBtYV9kZWFkX25vZGUoY29u
c3Qgc3RydWN0IG1hcGxlX25vZGUgKm5vZGUpDQorew0KKwlzdHJ1Y3QgbWFwbGVfbm9kZSAqcGFy
ZW50ID0gKHZvaWQgKikoKHVuc2lnbmVkIGxvbmcpDQorCQkJCQkgICAgIG5vZGUtPnBhcmVudCAm
IH5NQVBMRV9OT0RFX01BU0spOw0KKw0KKwlyZXR1cm4gKHBhcmVudCA9PSBub2RlKTsNCit9DQor
LyoNCisgKiBtdGVfZGVhZF9ub2RlKCkgLSBjaGVjayBpZiB0aGUgQGVub2RlIGlzIGRlYWQuDQor
ICogQGVub2RlOiBUaGUgZW5jb2RlZCBtYXBsZSBub2RlDQorICoNCisgKiBSZXR1cm46IHRydWUg
aWYgZGVhZCwgZmFsc2Ugb3RoZXJ3aXNlLg0KKyAqLw0KK3N0YXRpYyBpbmxpbmUgYm9vbCBtdGVf
ZGVhZF9ub2RlKGNvbnN0IHN0cnVjdCBtYXBsZV9lbm9kZSAqZW5vZGUpDQorew0KKwlzdHJ1Y3Qg
bWFwbGVfbm9kZSAqcGFyZW50LCAqbm9kZTsNCisNCisJbm9kZSA9IG10ZV90b19ub2RlKGVub2Rl
KTsNCisJcGFyZW50ID0gbXRlX3BhcmVudChlbm9kZSk7DQorCXJldHVybiAocGFyZW50ID09IG5v
ZGUpOw0KK30NCisNCisvKg0KKyAqIG1hc19hbGxvY2F0ZWQoKSAtIEdldCB0aGUgbnVtYmVyIG9m
IG5vZGVzIGFsbG9jYXRlZCBpbiBhIG1hcGxlIHN0YXRlLg0KKyAqIEBtYXM6IFRoZSBtYXBsZSBz
dGF0ZQ0KKyAqDQorICogVGhlIG1hX3N0YXRlIGFsbG9jIG1lbWJlciBpcyBvdmVybG9hZGVkIHRv
IGhvbGQgYSBwb2ludGVyIHRvIHRoZSBmaXJzdA0KKyAqIGFsbG9jYXRlZCBub2RlIG9yIHRvIHRo
ZSBudW1iZXIgb2YgcmVxdWVzdGVkIG5vZGVzIHRvIGFsbG9jYXRlLiAgSWYgYml0IDAgaXMNCisg
KiBzZXQsIHRoZW4gdGhlIGFsbG9jIGNvbnRhaW5zIHRoZSBudW1iZXIgb2YgcmVxdWVzdGVkIG5v
ZGVzLiAgSWYgdGhlcmUgaXMgYW4NCisgKiBhbGxvY2F0ZWQgbm9kZSwgdGhlbiB0aGUgdG90YWwg
YWxsb2NhdGVkIG5vZGVzIGlzIGluIHRoYXQgbm9kZS4NCisgKg0KKyAqIFJldHVybjogVGhlIHRv
dGFsIG51bWJlciBvZiBub2RlcyBhbGxvY2F0ZWQNCisgKi8NCitzdGF0aWMgaW5saW5lIHVuc2ln
bmVkIGxvbmcgbWFzX2FsbG9jYXRlZChjb25zdCBzdHJ1Y3QgbWFfc3RhdGUgKm1hcykNCit7DQor
CWlmICghbWFzLT5hbGxvYyB8fCAoKHVuc2lnbmVkIGxvbmcpbWFzLT5hbGxvYyAmIDB4MSkpDQor
CQlyZXR1cm4gMDsNCisNCisJcmV0dXJuIG1hcy0+YWxsb2MtPnRvdGFsOw0KK30NCisNCisvKg0K
KyAqIG1hc19zZXRfYWxsb2NfcmVxKCkgLSBTZXQgdGhlIHJlcXVlc3RlZCBudW1iZXIgb2YgYWxs
b2NhdGlvbnMuDQorICogQG1hczogdGhlIG1hcGxlIHN0YXRlDQorICogQGNvdW50OiB0aGUgbnVt
YmVyIG9mIGFsbG9jYXRpb25zLg0KKyAqDQorICogVGhlIHJlcXVlc3RlZCBudW1iZXIgb2YgYWxs
b2NhdGlvbnMgaXMgZWl0aGVyIGluIHRoZSBmaXJzdCBhbGxvY2F0ZWQgbm9kZSwNCisgKiBsb2Nh
dGVkIGluIEBtYXMtPmFsbG9jLT5yZXF1ZXN0X2NvdW50LCBvciBkaXJlY3RseSBpbiBAbWFzLT5h
bGxvYyBpZiB0aGVyZSBpcw0KKyAqIG5vIGFsbG9jYXRlZCBub2RlLiAgU2V0IHRoZSByZXF1ZXN0
IGVpdGhlciBpbiB0aGUgbm9kZSBvciBkbyB0aGUgbmVjZXNzYXJ5DQorICogZW5jb2RpbmcgdG8g
c3RvcmUgaW4gQG1hcy0+YWxsb2MgZGlyZWN0bHkuDQorICovDQorc3RhdGljIGlubGluZSB2b2lk
IG1hc19zZXRfYWxsb2NfcmVxKHN0cnVjdCBtYV9zdGF0ZSAqbWFzLCB1bnNpZ25lZCBsb25nIGNv
dW50KQ0KK3sNCisJaWYgKCFtYXMtPmFsbG9jIHx8ICgodW5zaWduZWQgbG9uZyltYXMtPmFsbG9j
ICYgMHgxKSkgew0KKwkJaWYgKCFjb3VudCkNCisJCQltYXMtPmFsbG9jID0gTlVMTDsNCisJCWVs
c2UNCisJCQltYXMtPmFsbG9jID0gKHN0cnVjdCBtYXBsZV9hbGxvYyAqKSgoKGNvdW50KSA8PCAx
VSkgfCAxVSk7DQorCQlyZXR1cm47DQorCX0NCisNCisJbWFzLT5hbGxvYy0+cmVxdWVzdF9jb3Vu
dCA9IGNvdW50Ow0KK30NCisNCisvKg0KKyAqIG1hc19hbGxvY19yZXEoKSAtIGdldCB0aGUgcmVx
dWVzdGVkIG51bWJlciBvZiBhbGxvY2F0aW9ucy4NCisgKiBAbWFzOiBUaGUgbWFwbGUgc3RhdGUN
CisgKg0KKyAqIFRoZSBhbGxvYyBjb3VudCBpcyBlaXRoZXIgc3RvcmVkIGRpcmVjdGx5IGluIEBt
YXMsIG9yIGluDQorICogQG1hcy0+YWxsb2MtPnJlcXVlc3RfY291bnQgaWYgdGhlcmUgaXMgYXQg
bGVhc3Qgb25lIG5vZGUgYWxsb2NhdGVkLiAgRGVjb2RlDQorICogdGhlIHJlcXVlc3QgY291bnQg
aWYgaXQncyBzdG9yZWQgZGlyZWN0bHkgaW4gQG1hcy0+YWxsb2MuDQorICoNCisgKiBSZXR1cm46
IFRoZSBhbGxvY2F0aW9uIHJlcXVlc3QgY291bnQuDQorICovDQorc3RhdGljIGlubGluZSB1bnNp
Z25lZCBpbnQgbWFzX2FsbG9jX3JlcShjb25zdCBzdHJ1Y3QgbWFfc3RhdGUgKm1hcykNCit7DQor
CWlmICgodW5zaWduZWQgbG9uZyltYXMtPmFsbG9jICYgMHgxKQ0KKwkJcmV0dXJuICh1bnNpZ25l
ZCBsb25nKShtYXMtPmFsbG9jKSA+PiAxOw0KKwllbHNlIGlmIChtYXMtPmFsbG9jKQ0KKwkJcmV0
dXJuIG1hcy0+YWxsb2MtPnJlcXVlc3RfY291bnQ7DQorCXJldHVybiAwOw0KK30NCisNCisvKg0K
KyAqIG1hX3Bpdm90cygpIC0gR2V0IGEgcG9pbnRlciB0byB0aGUgbWFwbGUgbm9kZSBwaXZvdHMu
DQorICogQG5vZGUgLSB0aGUgbWFwbGUgbm9kZQ0KKyAqIEB0eXBlIC0gdGhlIG5vZGUgdHlwZQ0K
KyAqDQorICogUmV0dXJuOiBBIHBvaW50ZXIgdG8gdGhlIG1hcGxlIG5vZGUgcGl2b3RzDQorICov
DQorc3RhdGljIGlubGluZSB1bnNpZ25lZCBsb25nICptYV9waXZvdHMoc3RydWN0IG1hcGxlX25v
ZGUgKm5vZGUsDQorCQkJCQkgICBlbnVtIG1hcGxlX3R5cGUgdHlwZSkNCit7DQorCXN3aXRjaCAo
dHlwZSkgew0KKwljYXNlIG1hcGxlX2FyYW5nZV82NDoNCisJCXJldHVybiBub2RlLT5tYTY0LnBp
dm90Ow0KKwljYXNlIG1hcGxlX3JhbmdlXzY0Og0KKwljYXNlIG1hcGxlX2xlYWZfNjQ6DQorCQly
ZXR1cm4gbm9kZS0+bXI2NC5waXZvdDsNCisJY2FzZSBtYXBsZV9kZW5zZToNCisJCXJldHVybiBO
VUxMOw0KKwl9DQorCXJldHVybiBOVUxMOw0KK30NCisNCisvKg0KKyAqIG1hX2dhcHMoKSAtIEdl
dCBhIHBvaW50ZXIgdG8gdGhlIG1hcGxlIG5vZGUgZ2Fwcy4NCisgKiBAbm9kZSAtIHRoZSBtYXBs
ZSBub2RlDQorICogQHR5cGUgLSB0aGUgbm9kZSB0eXBlDQorICoNCisgKiBSZXR1cm46IEEgcG9p
bnRlciB0byB0aGUgbWFwbGUgbm9kZSBnYXBzDQorICovDQorc3RhdGljIGlubGluZSB1bnNpZ25l
ZCBsb25nICptYV9nYXBzKHN0cnVjdCBtYXBsZV9ub2RlICpub2RlLA0KKwkJCQkgICAgIGVudW0g
bWFwbGVfdHlwZSB0eXBlKQ0KK3sNCisJc3dpdGNoICh0eXBlKSB7DQorCWNhc2UgbWFwbGVfYXJh
bmdlXzY0Og0KKwkJcmV0dXJuIG5vZGUtPm1hNjQuZ2FwOw0KKwljYXNlIG1hcGxlX3JhbmdlXzY0
Og0KKwljYXNlIG1hcGxlX2xlYWZfNjQ6DQorCWNhc2UgbWFwbGVfZGVuc2U6DQorCQlyZXR1cm4g
TlVMTDsNCisJfQ0KKwlyZXR1cm4gTlVMTDsNCit9DQorDQorLyoNCisgKiBtdGVfcGl2b3QoKSAt
IEdldCB0aGUgcGl2b3QgYXQgQHBpdiBvZiB0aGUgbWFwbGUgZW5jb2RlZCBub2RlLg0KKyAqIEBt
bjogVGhlIG1hcGxlIGVuY29kZWQgbm9kZS4NCisgKiBAcGl2OiBUaGUgcGl2b3QuDQorICoNCisg
KiBSZXR1cm46IHRoZSBwaXZvdCBhdCBAcGl2IG9mIEBtbi4NCisgKi8NCitzdGF0aWMgaW5saW5l
IHVuc2lnbmVkIGxvbmcgbXRlX3Bpdm90KGNvbnN0IHN0cnVjdCBtYXBsZV9lbm9kZSAqbW4sDQor
CQkJCSB1bnNpZ25lZCBjaGFyIHBpdikNCit7DQorCXN0cnVjdCBtYXBsZV9ub2RlICpub2RlID0g
bXRlX3RvX25vZGUobW4pOw0KKw0KKwlpZiAocGl2ID49IG10X3Bpdm90c1twaXZdKSB7DQorCQlX
QVJOX09OKDEpOw0KKwkJcmV0dXJuIDA7DQorCX0NCisJc3dpdGNoIChtdGVfbm9kZV90eXBlKG1u
KSkgew0KKwljYXNlIG1hcGxlX2FyYW5nZV82NDoNCisJCXJldHVybiBub2RlLT5tYTY0LnBpdm90
W3Bpdl07DQorCWNhc2UgbWFwbGVfcmFuZ2VfNjQ6DQorCWNhc2UgbWFwbGVfbGVhZl82NDoNCisJ
CXJldHVybiBub2RlLT5tcjY0LnBpdm90W3Bpdl07DQorCWNhc2UgbWFwbGVfZGVuc2U6DQorCQly
ZXR1cm4gMDsNCisJfQ0KKwlyZXR1cm4gMDsNCit9DQorDQorLyoNCisgKiBtYXNfc2FmZV9waXZv
dCgpIC0gZ2V0IHRoZSBwaXZvdCBhdCBAcGl2IG9yIG1hcy0+bWF4Lg0KKyAqIEBtYXM6IFRoZSBt
YXBsZSBzdGF0ZQ0KKyAqIEBwaXZvdHM6IFRoZSBwb2ludGVyIHRvIHRoZSBtYXBsZSBub2RlIHBp
dm90cw0KKyAqIEBwaXY6IFRoZSBwaXZvdCB0byBmZXRjaA0KKyAqIEB0eXBlOiBUaGUgbWFwbGUg
bm9kZSB0eXBlDQorICoNCisgKiBSZXR1cm46IFRoZSBwaXZvdCBhdCBAcGl2IHdpdGhpbiB0aGUg
bGltaXQgb2YgdGhlIEBwaXZvdHMgYXJyYXksIEBtYXMtPm1heA0KKyAqIG90aGVyd2lzZS4NCisg
Ki8NCitzdGF0aWMgaW5saW5lIHVuc2lnbmVkIGxvbmcNCittYXNfc2FmZV9waXZvdChjb25zdCBz
dHJ1Y3QgbWFfc3RhdGUgKm1hcywgdW5zaWduZWQgbG9uZyAqcGl2b3RzLA0KKwkgICAgICAgdW5z
aWduZWQgY2hhciBwaXYsIGVudW0gbWFwbGVfdHlwZSB0eXBlKQ0KK3sNCisJaWYgKHBpdiA+PSBt
dF9waXZvdHNbdHlwZV0pDQorCQlyZXR1cm4gbWFzLT5tYXg7DQorDQorCXJldHVybiBwaXZvdHNb
cGl2XTsNCit9DQorDQorLyoNCisgKiBtYXNfc2FmZV9taW4oKSAtIFJldHVybiB0aGUgbWluaW11
bSBmb3IgYSBnaXZlbiBvZmZzZXQuDQorICogQG1hczogVGhlIG1hcGxlIHN0YXRlDQorICogQHBp
dm90czogVGhlIHBvaW50ZXIgdG8gdGhlIG1hcGxlIG5vZGUgcGl2b3RzDQorICogQG9mZnNldDog
VGhlIG9mZnNldCBpbnRvIHRoZSBwaXZvdCBhcnJheQ0KKyAqDQorICogUmV0dXJuOiBUaGUgbWlu
aW11bSByYW5nZSB2YWx1ZSB0aGF0IGlzIGNvbnRhaW5lZCBpbiBAb2Zmc2V0Lg0KKyAqLw0KK3N0
YXRpYyBpbmxpbmUgdW5zaWduZWQgbG9uZw0KK21hc19zYWZlX21pbihzdHJ1Y3QgbWFfc3RhdGUg
Km1hcywgdW5zaWduZWQgbG9uZyAqcGl2b3RzLCB1bnNpZ25lZCBjaGFyIG9mZnNldCkNCit7DQor
CWlmIChsaWtlbHkob2Zmc2V0KSkNCisJCXJldHVybiBwaXZvdHNbb2Zmc2V0IC0gMV0gKyAxOw0K
Kw0KKwlyZXR1cm4gbWFzLT5taW47DQorfQ0KKw0KKy8qDQorICogbWFzX2xvZ2ljYWxfcGl2b3Qo
KSAtIEdldCB0aGUgbG9naWNhbCBwaXZvdCBvZiBhIGdpdmVuIG9mZnNldC4NCisgKiBAbWFzOiBU
aGUgbWFwbGUgc3RhdGUNCisgKiBAcGl2b3RzOiBUaGUgcG9pbnRlciB0byB0aGUgbWFwbGUgbm9k
ZSBwaXZvdHMNCisgKiBAb2Zmc2V0OiBUaGUgb2Zmc2V0IGludG8gdGhlIHBpdm90IGFycmF5DQor
ICogQHR5cGU6IFRoZSBtYXBsZSBub2RlIHR5cGUNCisgKg0KKyAqIFdoZW4gdGhlcmUgaXMgbm8g
dmFsdWUgYXQgYSBwaXZvdCAoYmV5b25kIHRoZSBlbmQgb2YgdGhlIGRhdGEpLCB0aGVuIHRoZQ0K
KyAqIHBpdm90IGlzIGFjdHVhbGx5IEBtYXMtPm1heC4NCisgKg0KKyAqIFJldHVybjogdGhlIGxv
Z2ljYWwgcGl2b3Qgb2YgYSBnaXZlbiBAb2Zmc2V0Lg0KKyAqLw0KK3N0YXRpYyBpbmxpbmUgdW5z
aWduZWQgbG9uZw0KK21hc19sb2dpY2FsX3Bpdm90KHN0cnVjdCBtYV9zdGF0ZSAqbWFzLCB1bnNp
Z25lZCBsb25nICpwaXZvdHMsDQorCQkgIHVuc2lnbmVkIGNoYXIgb2Zmc2V0LCBlbnVtIG1hcGxl
X3R5cGUgdHlwZSkNCit7DQorCXVuc2lnbmVkIGxvbmcgbHBpdiA9IG1hc19zYWZlX3Bpdm90KG1h
cywgcGl2b3RzLCBvZmZzZXQsIHR5cGUpOw0KKw0KKwlpZiAobGlrZWx5KGxwaXYpKQ0KKwkJcmV0
dXJuIGxwaXY7DQorDQorCWlmIChsaWtlbHkob2Zmc2V0KSkNCisJCXJldHVybiBtYXMtPm1heDsN
CisNCisJcmV0dXJuIGxwaXY7DQorfQ0KKw0KKy8qDQorICogbXRlX3NldF9waXZvdCgpIC0gU2V0
IGEgcGl2b3QgdG8gYSB2YWx1ZSBpbiBhbiBlbmNvZGVkIG1hcGxlIG5vZGUuDQorICogQG1uOiBU
aGUgZW5jb2RlZCBtYXBsZSBub2RlDQorICogQHBpdjogVGhlIHBpdm90IG9mZnNldA0KKyAqIEB2
YWw6IFRoZSB2YWx1ZSBvZiB0aGUgcGl2b3QNCisgKi8NCitzdGF0aWMgaW5saW5lIHZvaWQgbXRl
X3NldF9waXZvdChzdHJ1Y3QgbWFwbGVfZW5vZGUgKm1uLCB1bnNpZ25lZCBjaGFyIHBpdiwNCisJ
CQkJdW5zaWduZWQgbG9uZyB2YWwpDQorew0KKwlzdHJ1Y3QgbWFwbGVfbm9kZSAqbm9kZSA9IG10
ZV90b19ub2RlKG1uKTsNCisJZW51bSBtYXBsZV90eXBlIHR5cGUgPSBtdGVfbm9kZV90eXBlKG1u
KTsNCisNCisJQlVHX09OKHBpdiA+PSBtdF9waXZvdHNbdHlwZV0pOw0KKwlzd2l0Y2ggKHR5cGUp
IHsNCisJZGVmYXVsdDoNCisJY2FzZSBtYXBsZV9yYW5nZV82NDoNCisJY2FzZSBtYXBsZV9sZWFm
XzY0Og0KKwkJbm9kZS0+bXI2NC5waXZvdFtwaXZdID0gdmFsOw0KKwkJYnJlYWs7DQorCWNhc2Ug
bWFwbGVfYXJhbmdlXzY0Og0KKwkJbm9kZS0+bWE2NC5waXZvdFtwaXZdID0gdmFsOw0KKwkJYnJl
YWs7DQorCWNhc2UgbWFwbGVfZGVuc2U6DQorCQlicmVhazsNCisJfQ0KKw0KK30NCisNCisvKg0K
KyAqIG1hX3Nsb3RzKCkgLSBHZXQgYSBwb2ludGVyIHRvIHRoZSBtYXBsZSBub2RlIHNsb3RzLg0K
KyAqIEBtbjogVGhlIG1hcGxlIG5vZGUNCisgKiBAbXQ6IFRoZSBtYXBsZSBub2RlIHR5cGUNCisg
Kg0KKyAqIFJldHVybjogQSBwb2ludGVyIHRvIHRoZSBtYXBsZSBub2RlIHNsb3RzDQorICovDQor
c3RhdGljIGlubGluZSB2b2lkIF9fcmN1ICoqbWFfc2xvdHMoc3RydWN0IG1hcGxlX25vZGUgKm1u
LCBlbnVtIG1hcGxlX3R5cGUgbXQpDQorew0KKwlzd2l0Y2ggKG10KSB7DQorCWRlZmF1bHQ6DQor
CWNhc2UgbWFwbGVfYXJhbmdlXzY0Og0KKwkJcmV0dXJuIG1uLT5tYTY0LnNsb3Q7DQorCWNhc2Ug
bWFwbGVfcmFuZ2VfNjQ6DQorCWNhc2UgbWFwbGVfbGVhZl82NDoNCisJCXJldHVybiBtbi0+bXI2
NC5zbG90Ow0KKwljYXNlIG1hcGxlX2RlbnNlOg0KKwkJcmV0dXJuIG1uLT5zbG90Ow0KKwl9DQor
fQ0KKw0KK3N0YXRpYyBpbmxpbmUgYm9vbCBtdF9sb2NrZWQoY29uc3Qgc3RydWN0IG1hcGxlX3Ry
ZWUgKm10KQ0KK3sNCisJcmV0dXJuIG10X2V4dGVybmFsX2xvY2sobXQpID8gbXRfbG9ja19pc19o
ZWxkKG10KSA6DQorCQlsb2NrZGVwX2lzX2hlbGQoJm10LT5tYV9sb2NrKTsNCit9DQorDQorc3Rh
dGljIGlubGluZSB2b2lkICptdF9zbG90KGNvbnN0IHN0cnVjdCBtYXBsZV90cmVlICptdCwNCisJ
CXZvaWQgX19yY3UgKipzbG90cywgdW5zaWduZWQgY2hhciBvZmZzZXQpDQorew0KKwlyZXR1cm4g
cmN1X2RlcmVmZXJlbmNlX2NoZWNrKHNsb3RzW29mZnNldF0sIG10X2xvY2tlZChtdCkpOw0KK30N
CisNCisvKg0KKyAqIG1hc19zbG90X2xvY2tlZCgpIC0gR2V0IHRoZSBzbG90IHZhbHVlIHdoZW4g
aG9sZGluZyB0aGUgbWFwbGUgdHJlZSBsb2NrLg0KKyAqIEBtYXM6IFRoZSBtYXBsZSBzdGF0ZQ0K
KyAqIEBzbG90czogVGhlIHBvaW50ZXIgdG8gdGhlIHNsb3RzDQorICogQG9mZnNldDogVGhlIG9m
ZnNldCBpbnRvIHRoZSBzbG90cyBhcnJheSB0byBmZXRjaA0KKyAqDQorICogUmV0dXJuOiBUaGUg
ZW50cnkgc3RvcmVkIGluIEBzbG90cyBhdCB0aGUgQG9mZnNldC4NCisgKi8NCitzdGF0aWMgaW5s
aW5lIHZvaWQgKm1hc19zbG90X2xvY2tlZChzdHJ1Y3QgbWFfc3RhdGUgKm1hcywgdm9pZCBfX3Jj
dSAqKnNsb3RzLA0KKwkJCQkgICAgICAgdW5zaWduZWQgY2hhciBvZmZzZXQpDQorew0KKwlyZXR1
cm4gcmN1X2RlcmVmZXJlbmNlX3Byb3RlY3RlZChzbG90c1tvZmZzZXRdLCBtdF9sb2NrZWQobWFz
LT50cmVlKSk7DQorfQ0KKw0KKy8qDQorICogbWFzX3Nsb3QoKSAtIEdldCB0aGUgc2xvdCB2YWx1
ZSB3aGVuIG5vdCBob2xkaW5nIHRoZSBtYXBsZSB0cmVlIGxvY2suDQorICogQG1hczogVGhlIG1h
cGxlIHN0YXRlDQorICogQHNsb3RzOiBUaGUgcG9pbnRlciB0byB0aGUgc2xvdHMNCisgKiBAb2Zm
c2V0OiBUaGUgb2Zmc2V0IGludG8gdGhlIHNsb3RzIGFycmF5IHRvIGZldGNoDQorICoNCisgKiBS
ZXR1cm46IFRoZSBlbnRyeSBzdG9yZWQgaW4gQHNsb3RzIGF0IHRoZSBAb2Zmc2V0DQorICovDQor
c3RhdGljIGlubGluZSB2b2lkICptYXNfc2xvdChzdHJ1Y3QgbWFfc3RhdGUgKm1hcywgdm9pZCBf
X3JjdSAqKnNsb3RzLA0KKwkJCSAgICAgdW5zaWduZWQgY2hhciBvZmZzZXQpDQorew0KKwlyZXR1
cm4gbXRfc2xvdChtYXMtPnRyZWUsIHNsb3RzLCBvZmZzZXQpOw0KK30NCisNCisvKg0KKyAqIG1h
c19yb290KCkgLSBHZXQgdGhlIG1hcGxlIHRyZWUgcm9vdC4NCisgKiBAbWFzOiBUaGUgbWFwbGUg
c3RhdGUuDQorICoNCisgKiBSZXR1cm46IFRoZSBwb2ludGVyIHRvIHRoZSByb290IG9mIHRoZSB0
cmVlDQorICovDQorc3RhdGljIGlubGluZSB2b2lkICptYXNfcm9vdChzdHJ1Y3QgbWFfc3RhdGUg
Km1hcykNCit7DQorCXJldHVybiByY3VfZGVyZWZlcmVuY2VfY2hlY2sobWFzLT50cmVlLT5tYV9y
b290LCBtdF9sb2NrZWQobWFzLT50cmVlKSk7DQorfQ0KKw0KK3N0YXRpYyBpbmxpbmUgdm9pZCAq
bXRfcm9vdF9sb2NrZWQoc3RydWN0IG1hcGxlX3RyZWUgKm10KQ0KK3sNCisJcmV0dXJuIHJjdV9k
ZXJlZmVyZW5jZV9wcm90ZWN0ZWQobXQtPm1hX3Jvb3QsIG10X2xvY2tlZChtdCkpOw0KK30NCisN
CisvKg0KKyAqIG1hc19yb290X2xvY2tlZCgpIC0gR2V0IHRoZSBtYXBsZSB0cmVlIHJvb3Qgd2hl
biBob2xkaW5nIHRoZSBtYXBsZSB0cmVlIGxvY2suDQorICogQG1hczogVGhlIG1hcGxlIHN0YXRl
Lg0KKyAqDQorICogUmV0dXJuOiBUaGUgcG9pbnRlciB0byB0aGUgcm9vdCBvZiB0aGUgdHJlZQ0K
KyAqLw0KK3N0YXRpYyBpbmxpbmUgdm9pZCAqbWFzX3Jvb3RfbG9ja2VkKHN0cnVjdCBtYV9zdGF0
ZSAqbWFzKQ0KK3sNCisJcmV0dXJuIG10X3Jvb3RfbG9ja2VkKG1hcy0+dHJlZSk7DQorfQ0KKw0K
K3N0YXRpYyBpbmxpbmUgc3RydWN0IG1hcGxlX21ldGFkYXRhICptYV9tZXRhKHN0cnVjdCBtYXBs
ZV9ub2RlICptbiwNCisJCQkJCSAgICAgZW51bSBtYXBsZV90eXBlIG10KQ0KK3sNCisJc3dpdGNo
IChtdCkgew0KKwljYXNlIG1hcGxlX2FyYW5nZV82NDoNCisJCXJldHVybiAmbW4tPm1hNjQubWV0
YTsNCisJZGVmYXVsdDoNCisJCXJldHVybiAmbW4tPm1yNjQubWV0YTsNCisJfQ0KK30NCisNCisv
Kg0KKyAqIG1hX3NldF9tZXRhKCkgLSBTZXQgdGhlIG1ldGFkYXRhIGluZm9ybWF0aW9uIG9mIGEg
bm9kZS4NCisgKiBAbW46IFRoZSBtYXBsZSBub2RlDQorICogQG10OiBUaGUgbWFwbGUgbm9kZSB0
eXBlDQorICogQG9mZnNldDogVGhlIG9mZnNldCBvZiB0aGUgaGlnaGVzdCBzdWItZ2FwIGluIHRo
aXMgbm9kZS4NCisgKiBAZW5kOiBUaGUgZW5kIG9mIHRoZSBkYXRhIGluIHRoaXMgbm9kZS4NCisg
Ki8NCitzdGF0aWMgaW5saW5lIHZvaWQgbWFfc2V0X21ldGEoc3RydWN0IG1hcGxlX25vZGUgKm1u
LCBlbnVtIG1hcGxlX3R5cGUgbXQsDQorCQkJICAgICAgIHVuc2lnbmVkIGNoYXIgb2Zmc2V0LCB1
bnNpZ25lZCBjaGFyIGVuZCkNCit7DQorCXN0cnVjdCBtYXBsZV9tZXRhZGF0YSAqbWV0YSA9IG1h
X21ldGEobW4sIG10KTsNCisNCisJbWV0YS0+Z2FwID0gb2Zmc2V0Ow0KKwltZXRhLT5lbmQgPSBl
bmQ7DQorfQ0KKw0KKy8qDQorICogbWFfbWV0YV9lbmQoKSAtIEdldCB0aGUgZGF0YSBlbmQgb2Yg
YSBub2RlIGZyb20gdGhlIG1ldGFkYXRhDQorICogQG1uOiBUaGUgbWFwbGUgbm9kZQ0KKyAqIEBt
dDogVGhlIG1hcGxlIG5vZGUgdHlwZQ0KKyAqLw0KK3N0YXRpYyBpbmxpbmUgdW5zaWduZWQgY2hh
ciBtYV9tZXRhX2VuZChzdHJ1Y3QgbWFwbGVfbm9kZSAqbW4sDQorCQkJCQllbnVtIG1hcGxlX3R5
cGUgbXQpDQorew0KKwlzdHJ1Y3QgbWFwbGVfbWV0YWRhdGEgKm1ldGEgPSBtYV9tZXRhKG1uLCBt
dCk7DQorDQorCXJldHVybiBtZXRhLT5lbmQ7DQorfQ0KKw0KKy8qDQorICogbWFfbWV0YV9nYXAo
KSAtIEdldCB0aGUgbGFyZ2VzdCBnYXAgbG9jYXRpb24gb2YgYSBub2RlIGZyb20gdGhlIG1ldGFk
YXRhDQorICogQG1uOiBUaGUgbWFwbGUgbm9kZQ0KKyAqIEBtdDogVGhlIG1hcGxlIG5vZGUgdHlw
ZQ0KKyAqLw0KK3N0YXRpYyBpbmxpbmUgdW5zaWduZWQgY2hhciBtYV9tZXRhX2dhcChzdHJ1Y3Qg
bWFwbGVfbm9kZSAqbW4sDQorCQkJCQllbnVtIG1hcGxlX3R5cGUgbXQpDQorew0KKwlCVUdfT04o
bXQgIT0gbWFwbGVfYXJhbmdlXzY0KTsNCisNCisJcmV0dXJuIG1uLT5tYTY0Lm1ldGEuZ2FwOw0K
K30NCisNCisvKg0KKyAqIG1hX3NldF9tZXRhX2dhcCgpIC0gU2V0IHRoZSBsYXJnZXN0IGdhcCBs
b2NhdGlvbiBpbiBhIG5vZGVzIG1ldGFkYXRhDQorICogQG1uOiBUaGUgbWFwbGUgbm9kZQ0KKyAq
IEBtbjogVGhlIG1hcGxlIG5vZGUgdHlwZQ0KKyAqIEBvZmZzZXQ6IFRoZSBsb2NhdGlvbiBvZiB0
aGUgbGFyZ2VzdCBnYXAuDQorICovDQorc3RhdGljIGlubGluZSB2b2lkIG1hX3NldF9tZXRhX2dh
cChzdHJ1Y3QgbWFwbGVfbm9kZSAqbW4sIGVudW0gbWFwbGVfdHlwZSBtdCwNCisJCQkJICAgdW5z
aWduZWQgY2hhciBvZmZzZXQpDQorew0KKw0KKwlzdHJ1Y3QgbWFwbGVfbWV0YWRhdGEgKm1ldGEg
PSBtYV9tZXRhKG1uLCBtdCk7DQorDQorCW1ldGEtPmdhcCA9IG9mZnNldDsNCit9DQorDQorLyoN
CisgKiBtYXRfYWRkKCkgLSBBZGQgYSBAZGVhZF9lbm9kZSB0byB0aGUgbWFfdG9waWFyeSBvZiBh
IGxpc3Qgb2YgZGVhZCBub2Rlcy4NCisgKiBAbWF0IC0gdGhlIG1hX3RvcGlhcnksIGEgbGlua2Vk
IGxpc3Qgb2YgZGVhZCBub2Rlcy4NCisgKiBAZGVhZF9lbm9kZSAtIHRoZSBub2RlIHRvIGJlIG1h
cmtlZCBhcyBkZWFkIGFuZCBhZGRlZCB0byB0aGUgdGFpbCBvZiB0aGUgbGlzdA0KKyAqDQorICog
QWRkIHRoZSBAZGVhZF9lbm9kZSB0byB0aGUgbGlua2VkIGxpc3QgaW4gQG1hdC4NCisgKi8NCitz
dGF0aWMgaW5saW5lIHZvaWQgbWF0X2FkZChzdHJ1Y3QgbWFfdG9waWFyeSAqbWF0LA0KKwkJCSAg
IHN0cnVjdCBtYXBsZV9lbm9kZSAqZGVhZF9lbm9kZSkNCit7DQorCW10ZV9zZXRfbm9kZV9kZWFk
KGRlYWRfZW5vZGUpOw0KKwltdGVfdG9fbWF0KGRlYWRfZW5vZGUpLT5uZXh0ID0gTlVMTDsNCisJ
aWYgKCFtYXQtPnRhaWwpIHsNCisJCW1hdC0+dGFpbCA9IG1hdC0+aGVhZCA9IGRlYWRfZW5vZGU7
DQorCQlyZXR1cm47DQorCX0NCisNCisJbXRlX3RvX21hdChtYXQtPnRhaWwpLT5uZXh0ID0gZGVh
ZF9lbm9kZTsNCisJbWF0LT50YWlsID0gZGVhZF9lbm9kZTsNCit9DQorDQorc3RhdGljIHZvaWQg
bXRlX2Rlc3Ryb3lfd2FsayhzdHJ1Y3QgbWFwbGVfZW5vZGUgKiwgc3RydWN0IG1hcGxlX3RyZWUg
Kik7DQorc3RhdGljIGlubGluZSB2b2lkIG1hc19mcmVlKHN0cnVjdCBtYV9zdGF0ZSAqbWFzLCBz
dHJ1Y3QgbWFwbGVfZW5vZGUgKnVzZWQpOw0KKw0KKy8qDQorICogbWFzX21hdF9mcmVlKCkgLSBG
cmVlIGFsbCBub2RlcyBpbiBhIGRlYWQgbGlzdC4NCisgKiBAbWFzIC0gdGhlIG1hcGxlIHN0YXRl
DQorICogQG1hdCAtIHRoZSBtYV90b3BpYXJ5IGxpbmtlZCBsaXN0IG9mIGRlYWQgbm9kZXMgdG8g
ZnJlZS4NCisgKg0KKyAqIEZyZWUgd2FsayBhIGRlYWQgbGlzdC4NCisgKi8NCitzdGF0aWMgdm9p
ZCBtYXNfbWF0X2ZyZWUoc3RydWN0IG1hX3N0YXRlICptYXMsIHN0cnVjdCBtYV90b3BpYXJ5ICpt
YXQpDQorew0KKwlzdHJ1Y3QgbWFwbGVfZW5vZGUgKm5leHQ7DQorDQorCXdoaWxlIChtYXQtPmhl
YWQpIHsNCisJCW5leHQgPSBtdGVfdG9fbWF0KG1hdC0+aGVhZCktPm5leHQ7DQorCQltYXNfZnJl
ZShtYXMsIG1hdC0+aGVhZCk7DQorCQltYXQtPmhlYWQgPSBuZXh0Ow0KKwl9DQorfQ0KKw0KKy8q
DQorICogbWFzX21hdF9kZXN0cm95KCkgLSBGcmVlIGFsbCBub2RlcyBhbmQgc3VidHJlZXMgaW4g
YSBkZWFkIGxpc3QuDQorICogQG1hcyAtIHRoZSBtYXBsZSBzdGF0ZQ0KKyAqIEBtYXQgLSB0aGUg
bWFfdG9waWFyeSBsaW5rZWQgbGlzdCBvZiBkZWFkIG5vZGVzIHRvIGZyZWUuDQorICoNCisgKiBE
ZXN0cm95IHdhbGsgYSBkZWFkIGxpc3QuDQorICovDQorc3RhdGljIHZvaWQgbWFzX21hdF9kZXN0
cm95KHN0cnVjdCBtYV9zdGF0ZSAqbWFzLCBzdHJ1Y3QgbWFfdG9waWFyeSAqbWF0KQ0KK3sNCisJ
c3RydWN0IG1hcGxlX2Vub2RlICpuZXh0Ow0KKw0KKwl3aGlsZSAobWF0LT5oZWFkKSB7DQorCQlu
ZXh0ID0gbXRlX3RvX21hdChtYXQtPmhlYWQpLT5uZXh0Ow0KKwkJbXRlX2Rlc3Ryb3lfd2Fsayht
YXQtPmhlYWQsIG1hdC0+bXRyZWUpOw0KKwkJbWF0LT5oZWFkID0gbmV4dDsNCisJfQ0KK30NCisv
Kg0KKyAqIG1hc19kZXNjZW5kKCkgLSBEZXNjZW5kIGludG8gdGhlIHNsb3Qgc3RvcmVkIGluIHRo
ZSBtYV9zdGF0ZS4NCisgKiBAbWFzIC0gdGhlIG1hcGxlIHN0YXRlLg0KKyAqDQorICogTm90ZTog
Tm90IFJDVSBzYWZlLCBvbmx5IHVzZSBpbiB3cml0ZSBzaWRlIG9yIGRlYnVnIGNvZGUuDQorICov
DQorc3RhdGljIGlubGluZSB2b2lkIG1hc19kZXNjZW5kKHN0cnVjdCBtYV9zdGF0ZSAqbWFzKQ0K
K3sNCisJZW51bSBtYXBsZV90eXBlIHR5cGU7DQorCXVuc2lnbmVkIGxvbmcgKnBpdm90czsNCisJ
c3RydWN0IG1hcGxlX25vZGUgKm5vZGU7DQorCXZvaWQgX19yY3UgKipzbG90czsNCisNCisJbm9k
ZSA9IG1hc19tbihtYXMpOw0KKwl0eXBlID0gbXRlX25vZGVfdHlwZShtYXMtPm5vZGUpOw0KKwlw
aXZvdHMgPSBtYV9waXZvdHMobm9kZSwgdHlwZSk7DQorCXNsb3RzID0gbWFfc2xvdHMobm9kZSwg
dHlwZSk7DQorDQorCWlmIChtYXMtPm9mZnNldCkNCisJCW1hcy0+bWluID0gcGl2b3RzW21hcy0+
b2Zmc2V0IC0gMV0gKyAxOw0KKwltYXMtPm1heCA9IG1hc19zYWZlX3Bpdm90KG1hcywgcGl2b3Rz
LCBtYXMtPm9mZnNldCwgdHlwZSk7DQorCW1hcy0+bm9kZSA9IG1hc19zbG90KG1hcywgc2xvdHMs
IG1hcy0+b2Zmc2V0KTsNCit9DQorDQorLyoNCisgKiBtdGVfc2V0X2dhcCgpIC0gU2V0IGEgbWFw
bGUgbm9kZSBnYXAuDQorICogQG1uOiBUaGUgZW5jb2RlZCBtYXBsZSBub2RlDQorICogQGdhcDog
VGhlIG9mZnNldCBvZiB0aGUgZ2FwIHRvIHNldA0KKyAqIEB2YWw6IFRoZSBnYXAgdmFsdWUNCisg
Ki8NCitzdGF0aWMgaW5saW5lIHZvaWQgbXRlX3NldF9nYXAoY29uc3Qgc3RydWN0IG1hcGxlX2Vu
b2RlICptbiwNCisJCQkJIHVuc2lnbmVkIGNoYXIgZ2FwLCB1bnNpZ25lZCBsb25nIHZhbCkNCit7
DQorCXN3aXRjaCAobXRlX25vZGVfdHlwZShtbikpIHsNCisJZGVmYXVsdDoNCisJCWJyZWFrOw0K
KwljYXNlIG1hcGxlX2FyYW5nZV82NDoNCisJCW10ZV90b19ub2RlKG1uKS0+bWE2NC5nYXBbZ2Fw
XSA9IHZhbDsNCisJCWJyZWFrOw0KKwl9DQorfQ0KKw0KKy8qDQorICogbWFzX2FzY2VuZCgpIC0g
V2FsayB1cCBhIGxldmVsIG9mIHRoZSB0cmVlLg0KKyAqIEBtYXM6IFRoZSBtYXBsZSBzdGF0ZQ0K
KyAqDQorICogU2V0cyB0aGUgQG1hcy0+bWF4IGFuZCBAbWFzLT5taW4gdG8gdGhlIGNvcnJlY3Qg
dmFsdWVzIHdoZW4gd2Fsa2luZyB1cC4gIFRoaXMNCisgKiBtYXkgY2F1c2Ugc2V2ZXJhbCBsZXZl
bHMgb2Ygd2Fsa2luZyB1cCB0byBmaW5kIHRoZSBjb3JyZWN0IG1pbiBhbmQgbWF4Lg0KKyAqIE1h
eSBmaW5kIGEgZGVhZCBub2RlIHdoaWNoIHdpbGwgY2F1c2UgYSBwcmVtYXR1cmUgcmV0dXJuLg0K
KyAqIFJldHVybjogMSBvbiBkZWFkIG5vZGUsIDAgb3RoZXJ3aXNlDQorICovDQorc3RhdGljIGlu
dCBtYXNfYXNjZW5kKHN0cnVjdCBtYV9zdGF0ZSAqbWFzKQ0KK3sNCisJc3RydWN0IG1hcGxlX2Vu
b2RlICpwX2Vub2RlOyAvKiBwYXJlbnQgZW5vZGUuICovDQorCXN0cnVjdCBtYXBsZV9lbm9kZSAq
YV9lbm9kZTsgLyogYW5jZXN0b3IgZW5vZGUuICovDQorCXN0cnVjdCBtYXBsZV9ub2RlICphX25v
ZGU7IC8qIGFuY2VzdG9yIG5vZGUuICovDQorCXN0cnVjdCBtYXBsZV9ub2RlICpwX25vZGU7IC8q
IHBhcmVudCBub2RlLiAqLw0KKwl1bnNpZ25lZCBjaGFyIGFfc2xvdDsNCisJZW51bSBtYXBsZV90
eXBlIGFfdHlwZTsNCisJdW5zaWduZWQgbG9uZyBtaW4sIG1heDsNCisJdW5zaWduZWQgbG9uZyAq
cGl2b3RzOw0KKwl1bnNpZ25lZCBjaGFyIG9mZnNldDsNCisJYm9vbCBzZXRfbWF4ID0gZmFsc2Us
IHNldF9taW4gPSBmYWxzZTsNCisNCisJYV9ub2RlID0gbWFzX21uKG1hcyk7DQorCWlmIChtYV9p
c19yb290KGFfbm9kZSkpIHsNCisJCW1hcy0+b2Zmc2V0ID0gMDsNCisJCXJldHVybiAwOw0KKwl9
DQorDQorCXBfbm9kZSA9IG10ZV9wYXJlbnQobWFzLT5ub2RlKTsNCisJaWYgKHVubGlrZWx5KGFf
bm9kZSA9PSBwX25vZGUpKQ0KKwkJcmV0dXJuIDE7DQorCWFfdHlwZSA9IG1hc19wYXJlbnRfZW51
bShtYXMsIG1hcy0+bm9kZSk7DQorCW9mZnNldCA9IG10ZV9wYXJlbnRfc2xvdChtYXMtPm5vZGUp
Ow0KKwlhX2Vub2RlID0gbXRfbWtfbm9kZShwX25vZGUsIGFfdHlwZSk7DQorDQorCS8qIENoZWNr
IHRvIG1ha2Ugc3VyZSBhbGwgcGFyZW50IGluZm9ybWF0aW9uIGlzIHN0aWxsIGFjY3VyYXRlICov
DQorCWlmIChwX25vZGUgIT0gbXRlX3BhcmVudChtYXMtPm5vZGUpKQ0KKwkJcmV0dXJuIDE7DQor
DQorCW1hcy0+bm9kZSA9IGFfZW5vZGU7DQorCW1hcy0+b2Zmc2V0ID0gb2Zmc2V0Ow0KKw0KKwlp
ZiAobXRlX2lzX3Jvb3QoYV9lbm9kZSkpIHsNCisJCW1hcy0+bWF4ID0gVUxPTkdfTUFYOw0KKwkJ
bWFzLT5taW4gPSAwOw0KKwkJcmV0dXJuIDA7DQorCX0NCisNCisJbWluID0gMDsNCisJbWF4ID0g
VUxPTkdfTUFYOw0KKwlkbyB7DQorCQlwX2Vub2RlID0gYV9lbm9kZTsNCisJCWFfdHlwZSA9IG1h
c19wYXJlbnRfZW51bShtYXMsIHBfZW5vZGUpOw0KKwkJYV9ub2RlID0gbXRlX3BhcmVudChwX2Vu
b2RlKTsNCisJCWFfc2xvdCA9IG10ZV9wYXJlbnRfc2xvdChwX2Vub2RlKTsNCisJCXBpdm90cyA9
IG1hX3Bpdm90cyhhX25vZGUsIGFfdHlwZSk7DQorCQlhX2Vub2RlID0gbXRfbWtfbm9kZShhX25v
ZGUsIGFfdHlwZSk7DQorDQorCQlpZiAoIXNldF9taW4gJiYgYV9zbG90KSB7DQorCQkJc2V0X21p
biA9IHRydWU7DQorCQkJbWluID0gcGl2b3RzW2Ffc2xvdCAtIDFdICsgMTsNCisJCX0NCisNCisJ
CWlmICghc2V0X21heCAmJiBhX3Nsb3QgPCBtdF9waXZvdHNbYV90eXBlXSkgew0KKwkJCXNldF9t
YXggPSB0cnVlOw0KKwkJCW1heCA9IHBpdm90c1thX3Nsb3RdOw0KKwkJfQ0KKw0KKwkJaWYgKHVu
bGlrZWx5KG1hX2RlYWRfbm9kZShhX25vZGUpKSkNCisJCQlyZXR1cm4gMTsNCisNCisJCWlmICh1
bmxpa2VseShtYV9pc19yb290KGFfbm9kZSkpKQ0KKwkJCWJyZWFrOw0KKw0KKwl9IHdoaWxlICgh
c2V0X21pbiB8fCAhc2V0X21heCk7DQorDQorCW1hcy0+bWF4ID0gbWF4Ow0KKwltYXMtPm1pbiA9
IG1pbjsNCisJcmV0dXJuIDA7DQorfQ0KKw0KKy8qDQorICogbWFzX3BvcF9ub2RlKCkgLSBHZXQg
YSBwcmV2aW91c2x5IGFsbG9jYXRlZCBtYXBsZSBub2RlIGZyb20gdGhlIG1hcGxlIHN0YXRlLg0K
KyAqIEBtYXM6IFRoZSBtYXBsZSBzdGF0ZQ0KKyAqDQorICogUmV0dXJuOiBBIHBvaW50ZXIgdG8g
YSBtYXBsZSBub2RlLg0KKyAqLw0KK3N0YXRpYyBpbmxpbmUgc3RydWN0IG1hcGxlX25vZGUgKm1h
c19wb3Bfbm9kZShzdHJ1Y3QgbWFfc3RhdGUgKm1hcykNCit7DQorCXN0cnVjdCBtYXBsZV9hbGxv
YyAqcmV0LCAqbm9kZSA9IG1hcy0+YWxsb2M7DQorCXVuc2lnbmVkIGxvbmcgdG90YWwgPSBtYXNf
YWxsb2NhdGVkKG1hcyk7DQorDQorCS8qIG5vdGhpbmcgb3IgYSByZXF1ZXN0IHBlbmRpbmcuICov
DQorCWlmICh1bmxpa2VseSghdG90YWwpKQ0KKwkJcmV0dXJuIE5VTEw7DQorDQorCWlmICh0b3Rh
bCA9PSAxKSB7DQorCQkvKiBzaW5nbGUgYWxsb2NhdGlvbiBpbiB0aGlzIG1hX3N0YXRlICovDQor
CQltYXMtPmFsbG9jID0gTlVMTDsNCisJCXJldCA9IG5vZGU7DQorCQlnb3RvIHNpbmdsZV9ub2Rl
Ow0KKwl9DQorDQorCWlmICghbm9kZS0+bm9kZV9jb3VudCkgew0KKwkJLyogU2luZ2xlIGFsbG9j
YXRpb24gaW4gdGhpcyBub2RlLiAqLw0KKwkJbWFzLT5hbGxvYyA9IG5vZGUtPnNsb3RbMF07DQor
CQlub2RlLT5zbG90WzBdID0gTlVMTDsNCisJCW1hcy0+YWxsb2MtPnRvdGFsID0gbm9kZS0+dG90
YWwgLSAxOw0KKwkJcmV0ID0gbm9kZTsNCisJCWdvdG8gbmV3X2hlYWQ7DQorCX0NCisNCisJbm9k
ZS0+dG90YWwtLTsNCisJcmV0ID0gbm9kZS0+c2xvdFtub2RlLT5ub2RlX2NvdW50XTsNCisJbm9k
ZS0+c2xvdFtub2RlLT5ub2RlX2NvdW50LS1dID0gTlVMTDsNCisNCitzaW5nbGVfbm9kZToNCitu
ZXdfaGVhZDoNCisJcmV0LT50b3RhbCA9IDA7DQorCXJldC0+bm9kZV9jb3VudCA9IDA7DQorCWlm
IChyZXQtPnJlcXVlc3RfY291bnQpIHsNCisJCW1hc19zZXRfYWxsb2NfcmVxKG1hcywgcmV0LT5y
ZXF1ZXN0X2NvdW50ICsgMSk7DQorCQlyZXQtPnJlcXVlc3RfY291bnQgPSAwOw0KKwl9DQorCXJl
dHVybiAoc3RydWN0IG1hcGxlX25vZGUgKilyZXQ7DQorfQ0KKw0KKy8qDQorICogbWFzX3B1c2hf
bm9kZSgpIC0gUHVzaCBhIG5vZGUgYmFjayBvbiB0aGUgbWFwbGUgc3RhdGUgYWxsb2NhdGlvbi4N
CisgKiBAbWFzOiBUaGUgbWFwbGUgc3RhdGUNCisgKiBAdXNlZDogVGhlIHVzZWQgbWFwbGUgbm9k
ZQ0KKyAqDQorICogU3RvcmVzIHRoZSBtYXBsZSBub2RlIGJhY2sgaW50byBAbWFzLT5hbGxvYyBm
b3IgcmV1c2UuICBVcGRhdGVzIGFsbG9jYXRlZCBhbmQNCisgKiByZXF1ZXN0ZWQgbm9kZSBjb3Vu
dCBhcyBuZWNlc3NhcnkuDQorICovDQorc3RhdGljIGlubGluZSB2b2lkIG1hc19wdXNoX25vZGUo
c3RydWN0IG1hX3N0YXRlICptYXMsIHN0cnVjdCBtYXBsZV9ub2RlICp1c2VkKQ0KK3sNCisJc3Ry
dWN0IG1hcGxlX2FsbG9jICpyZXVzZSA9IChzdHJ1Y3QgbWFwbGVfYWxsb2MgKil1c2VkOw0KKwlz
dHJ1Y3QgbWFwbGVfYWxsb2MgKmhlYWQgPSBtYXMtPmFsbG9jOw0KKwl1bnNpZ25lZCBsb25nIGNv
dW50Ow0KKwl1bnNpZ25lZCBpbnQgcmVxdWVzdGVkID0gbWFzX2FsbG9jX3JlcShtYXMpOw0KKw0K
KwltZW1zZXQocmV1c2UsIDAsIHNpemVvZigqcmV1c2UpKTsNCisJY291bnQgPSBtYXNfYWxsb2Nh
dGVkKG1hcyk7DQorDQorCWlmIChjb3VudCAmJiAoaGVhZC0+bm9kZV9jb3VudCA8IE1BUExFX0FM
TE9DX1NMT1RTIC0gMSkpIHsNCisJCWlmIChoZWFkLT5zbG90WzBdKQ0KKwkJCWhlYWQtPm5vZGVf
Y291bnQrKzsNCisJCWhlYWQtPnNsb3RbaGVhZC0+bm9kZV9jb3VudF0gPSByZXVzZTsNCisJCWhl
YWQtPnRvdGFsKys7DQorCQlnb3RvIGRvbmU7DQorCX0NCisNCisJcmV1c2UtPnRvdGFsID0gMTsN
CisJaWYgKChoZWFkKSAmJiAhKCh1bnNpZ25lZCBsb25nKWhlYWQgJiAweDEpKSB7DQorCQloZWFk
LT5yZXF1ZXN0X2NvdW50ID0gMDsNCisJCXJldXNlLT5zbG90WzBdID0gaGVhZDsNCisJCXJldXNl
LT50b3RhbCArPSBoZWFkLT50b3RhbDsNCisJfQ0KKw0KKwltYXMtPmFsbG9jID0gcmV1c2U7DQor
ZG9uZToNCisJaWYgKHJlcXVlc3RlZCA+IDEpDQorCQltYXNfc2V0X2FsbG9jX3JlcShtYXMsIHJl
cXVlc3RlZCAtIDEpOw0KK30NCisNCisvKg0KKyAqIG1hc19hbGxvY19ub2RlcygpIC0gQWxsb2Nh
dGUgbm9kZXMgaW50byBhIG1hcGxlIHN0YXRlDQorICogQG1hczogVGhlIG1hcGxlIHN0YXRlDQor
ICogQGdmcDogVGhlIEdGUCBGbGFncw0KKyAqLw0KK3N0YXRpYyBpbmxpbmUgdm9pZCBtYXNfYWxs
b2Nfbm9kZXMoc3RydWN0IG1hX3N0YXRlICptYXMsIGdmcF90IGdmcCkNCit7DQorCXN0cnVjdCBt
YXBsZV9hbGxvYyAqbm9kZTsNCisJc3RydWN0IG1hcGxlX2FsbG9jICoqbm9kZXAgPSAmbWFzLT5h
bGxvYzsNCisJdW5zaWduZWQgbG9uZyBhbGxvY2F0ZWQgPSBtYXNfYWxsb2NhdGVkKG1hcyk7DQor
CXVuc2lnbmVkIGxvbmcgc3VjY2VzcyA9IGFsbG9jYXRlZDsNCisJdW5zaWduZWQgaW50IHJlcXVl
c3RlZCA9IG1hc19hbGxvY19yZXEobWFzKTsNCisJdW5zaWduZWQgaW50IGNvdW50Ow0KKwl2b2lk
ICoqc2xvdHMgPSBOVUxMOw0KKwl1bnNpZ25lZCBpbnQgbWF4X3JlcSA9IDA7DQorDQorCWlmICgh
cmVxdWVzdGVkKQ0KKwkJcmV0dXJuOw0KKw0KKwltYXNfc2V0X2FsbG9jX3JlcShtYXMsIDApOw0K
KwlpZiAoIWFsbG9jYXRlZCB8fCBtYXMtPmFsbG9jLT5ub2RlX2NvdW50ID09IE1BUExFX0FMTE9D
X1NMT1RTIC0gMSkgew0KKwkJbm9kZSA9IChzdHJ1Y3QgbWFwbGVfYWxsb2MgKiltdF9hbGxvY19v
bmUoZ2ZwKTsNCisJCWlmICghbm9kZSkNCisJCQlnb3RvIG5vbWVtX29uZTsNCisNCisJCWlmIChh
bGxvY2F0ZWQpDQorCQkJbm9kZS0+c2xvdFswXSA9IG1hcy0+YWxsb2M7DQorDQorCQlzdWNjZXNz
Kys7DQorCQltYXMtPmFsbG9jID0gbm9kZTsNCisJCXJlcXVlc3RlZC0tOw0KKwl9DQorDQorCW5v
ZGUgPSBtYXMtPmFsbG9jOw0KKwl3aGlsZSAocmVxdWVzdGVkKSB7DQorCQltYXhfcmVxID0gTUFQ
TEVfTk9ERV9TTE9UUyAtIDE7DQorCQlpZiAobm9kZS0+c2xvdFswXSkgew0KKwkJCXVuc2lnbmVk
IGludCBvZmZzZXQgPSBub2RlLT5ub2RlX2NvdW50ICsgMTsNCisNCisJCQlzbG90cyA9ICh2b2lk
ICoqKSZub2RlLT5zbG90W29mZnNldF07DQorCQkJbWF4X3JlcSAtPSBvZmZzZXQ7DQorCQl9IGVs
c2Ugew0KKwkJCXNsb3RzID0gKHZvaWQgKiopJm5vZGUtPnNsb3Q7DQorCQl9DQorDQorCQltYXhf
cmVxID0gbWluKHJlcXVlc3RlZCwgbWF4X3JlcSk7DQorCQljb3VudCA9IG10X2FsbG9jX2J1bGso
Z2ZwLCBtYXhfcmVxLCBzbG90cyk7DQorCQlpZiAoIWNvdW50KQ0KKwkJCWdvdG8gbm9tZW1fYnVs
azsNCisNCisJCW5vZGUtPm5vZGVfY291bnQgKz0gY291bnQ7DQorCQkvKiB6ZXJvIGluZGV4ZWQu
ICovDQorCQlpZiAoc2xvdHMgPT0gKHZvaWQgKiopJm5vZGUtPnNsb3QpDQorCQkJbm9kZS0+bm9k
ZV9jb3VudC0tOw0KKw0KKwkJc3VjY2VzcyArPSBjb3VudDsNCisJCW5vZGVwID0gJm5vZGUtPnNs
b3RbMF07DQorCQlub2RlID0gKm5vZGVwOw0KKwkJcmVxdWVzdGVkIC09IGNvdW50Ow0KKwl9DQor
CW1hcy0+YWxsb2MtPnRvdGFsID0gc3VjY2VzczsNCisJcmV0dXJuOw0KKw0KK25vbWVtX2J1bGs6
DQorCS8qIENsZWFuIHVwIHBvdGVudGlhbCBmcmVlZCBhbGxvY2F0aW9ucyBvbiBidWxrIGZhaWx1
cmUgKi8NCisJbWVtc2V0KHNsb3RzLCAwLCBtYXhfcmVxICogc2l6ZW9mKHVuc2lnbmVkIGxvbmcp
KTsNCitub21lbV9vbmU6DQorCW1hc19zZXRfYWxsb2NfcmVxKG1hcywgcmVxdWVzdGVkKTsNCisJ
aWYgKG1hcy0+YWxsb2MgJiYgISgoKHVuc2lnbmVkIGxvbmcpbWFzLT5hbGxvYyAmIDB4MSkpKQ0K
KwkJbWFzLT5hbGxvYy0+dG90YWwgPSBzdWNjZXNzOw0KKwltYXNfc2V0X2VycihtYXMsIC1FTk9N
RU0pOw0KKwlyZXR1cm47DQorDQorfQ0KKw0KKy8qDQorICogbWFzX2ZyZWUoKSAtIEZyZWUgYW4g
ZW5jb2RlZCBtYXBsZSBub2RlDQorICogQG1hczogVGhlIG1hcGxlIHN0YXRlDQorICogQHVzZWQ6
IFRoZSBlbmNvZGVkIG1hcGxlIG5vZGUgdG8gZnJlZS4NCisgKg0KKyAqIFVzZXMgcmN1IGZyZWUg
aWYgbmVjZXNzYXJ5LCBwdXNoZXMgQHVzZWQgYmFjayBvbiB0aGUgbWFwbGUgc3RhdGUgYWxsb2Nh
dGlvbnMNCisgKiBvdGhlcndpc2UuDQorICovDQorc3RhdGljIGlubGluZSB2b2lkIG1hc19mcmVl
KHN0cnVjdCBtYV9zdGF0ZSAqbWFzLCBzdHJ1Y3QgbWFwbGVfZW5vZGUgKnVzZWQpDQorew0KKwlz
dHJ1Y3QgbWFwbGVfbm9kZSAqdG1wID0gbXRlX3RvX25vZGUodXNlZCk7DQorDQorCWlmIChtdF9p
bl9yY3UobWFzLT50cmVlKSkNCisJCW1hX2ZyZWVfcmN1KHRtcCk7DQorCWVsc2UNCisJCW1hc19w
dXNoX25vZGUobWFzLCB0bXApOw0KK30NCisNCisvKg0KKyAqIG1hc19ub2RlX2NvdW50KCkgLSBD
aGVjayBpZiBlbm91Z2ggbm9kZXMgYXJlIGFsbG9jYXRlZCBhbmQgcmVxdWVzdCBtb3JlIGlmDQor
ICogdGhlcmUgaXMgbm90IGVub3VnaCBub2Rlcy4NCisgKiBAbWFzOiBUaGUgbWFwbGUgc3RhdGUN
CisgKiBAY291bnQ6IFRoZSBudW1iZXIgb2Ygbm9kZXMgbmVlZGVkDQorICogQGdmcDogdGhlIGdm
cCBmbGFncw0KKyAqLw0KK3N0YXRpYyB2b2lkIG1hc19ub2RlX2NvdW50X2dmcChzdHJ1Y3QgbWFf
c3RhdGUgKm1hcywgaW50IGNvdW50LCBnZnBfdCBnZnApDQorew0KKwl1bnNpZ25lZCBsb25nIGFs
bG9jYXRlZCA9IG1hc19hbGxvY2F0ZWQobWFzKTsNCisNCisJaWYgKGFsbG9jYXRlZCA8IGNvdW50
KSB7DQorCQltYXNfc2V0X2FsbG9jX3JlcShtYXMsIGNvdW50IC0gYWxsb2NhdGVkKTsNCisJCW1h
c19hbGxvY19ub2RlcyhtYXMsIGdmcCk7DQorCX0NCit9DQorDQorLyoNCisgKiBtYXNfbm9kZV9j
b3VudCgpIC0gQ2hlY2sgaWYgZW5vdWdoIG5vZGVzIGFyZSBhbGxvY2F0ZWQgYW5kIHJlcXVlc3Qg
bW9yZSBpZg0KKyAqIHRoZXJlIGlzIG5vdCBlbm91Z2ggbm9kZXMuDQorICogQG1hczogVGhlIG1h
cGxlIHN0YXRlDQorICogQGNvdW50OiBUaGUgbnVtYmVyIG9mIG5vZGVzIG5lZWRlZA0KKyAqDQor
ICogTm90ZTogVXNlcyBHRlBfTk9XQUlUIHwgX19HRlBfTk9XQVJOIGZvciBnZnAgZmxhZ3MuDQor
ICovDQorc3RhdGljIHZvaWQgbWFzX25vZGVfY291bnQoc3RydWN0IG1hX3N0YXRlICptYXMsIGlu
dCBjb3VudCkNCit7DQorCXJldHVybiBtYXNfbm9kZV9jb3VudF9nZnAobWFzLCBjb3VudCwgR0ZQ
X05PV0FJVCB8IF9fR0ZQX05PV0FSTik7DQorfQ0KKw0KKy8qDQorICogbWFzX3N0YXJ0KCkgLSBT
ZXRzIHVwIG1hcGxlIHN0YXRlIGZvciBvcGVyYXRpb25zLg0KKyAqIEBtYXM6IFRoZSBtYXBsZSBz
dGF0ZS4NCisgKg0KKyAqIElmIG1hcy0+bm9kZSA9PSBNQVNfU1RBUlQsIHRoZW4gc2V0IHRoZSBt
aW4sIG1heCwgZGVwdGgsIGFuZCBvZmZzZXQgdG8NCisgKiBkZWZhdWx0cy4NCisgKg0KKyAqIFJl
dHVybjoNCisgKiAtIElmIG1hcy0+bm9kZSBpcyBhbiBlcnJvciBvciBub3QgTUFTX1NUQVJULCBy
ZXR1cm4gTlVMTC4NCisgKiAtIElmIGl0J3MgYW4gZW1wdHkgdHJlZTogICAgIE5VTEwgJiBtYXMt
Pm5vZGUgPT0gTUFTX05PTkUNCisgKiAtIElmIGl0J3MgYSBzaW5nbGUgZW50cnk6ICAgIFRoZSBl
bnRyeSAmIG1hcy0+bm9kZSA9PSBNQVNfUk9PVA0KKyAqIC0gSWYgaXQncyBhIHRyZWU6ICAgICAg
ICAgICAgTlVMTCAmIG1hcy0+bm9kZSA9PSBzYWZlIHJvb3Qgbm9kZS4NCisgKi8NCitzdGF0aWMg
aW5saW5lIHN0cnVjdCBtYXBsZV9lbm9kZSAqbWFzX3N0YXJ0KHN0cnVjdCBtYV9zdGF0ZSAqbWFz
KQ0KK3sNCisJaWYgKGxpa2VseShtYXNfaXNfc3RhcnQobWFzKSkpIHsNCisJCXN0cnVjdCBtYXBs
ZV9lbm9kZSAqcm9vdDsNCisNCisJCW1hcy0+bm9kZSA9IE1BU19OT05FOw0KKwkJbWFzLT5taW4g
PSAwOw0KKwkJbWFzLT5tYXggPSBVTE9OR19NQVg7DQorCQltYXMtPmRlcHRoID0gMDsNCisJCW1h
cy0+b2Zmc2V0ID0gMDsNCisNCisJCXJvb3QgPSBtYXNfcm9vdChtYXMpOw0KKwkJLyogVHJlZSB3
aXRoIG5vZGVzICovDQorCQlpZiAobGlrZWx5KHhhX2lzX25vZGUocm9vdCkpKSB7DQorCQkJbWFz
LT5ub2RlID0gbXRlX3NhZmVfcm9vdChyb290KTsNCisJCQlyZXR1cm4gTlVMTDsNCisJCX0NCisN
CisJCS8qIGVtcHR5IHRyZWUgKi8NCisJCWlmICh1bmxpa2VseSghcm9vdCkpIHsNCisJCQltYXMt
Pm9mZnNldCA9IE1BUExFX05PREVfU0xPVFM7DQorCQkJcmV0dXJuIE5VTEw7DQorCQl9DQorDQor
CQkvKiBTaW5nbGUgZW50cnkgdHJlZSAqLw0KKwkJbWFzLT5ub2RlID0gTUFTX1JPT1Q7DQorCQlt
YXMtPm9mZnNldCA9IE1BUExFX05PREVfU0xPVFM7DQorDQorCQkvKiBTaW5nbGUgZW50cnkgdHJl
ZS4gKi8NCisJCWlmIChtYXMtPmluZGV4ID4gMCkNCisJCQlyZXR1cm4gTlVMTDsNCisNCisJCXJl
dHVybiByb290Ow0KKwl9DQorDQorCXJldHVybiBOVUxMOw0KK30NCisNCisvKg0KKyAqIG1hX2Rh
dGFfZW5kKCkgLSBGaW5kIHRoZSBlbmQgb2YgdGhlIGRhdGEgaW4gYSBub2RlLg0KKyAqIEBub2Rl
OiBUaGUgbWFwbGUgbm9kZQ0KKyAqIEB0eXBlOiBUaGUgbWFwbGUgbm9kZSB0eXBlDQorICogQHBp
dm90czogVGhlIGFycmF5IG9mIHBpdm90cyBpbiB0aGUgbm9kZQ0KKyAqIEBtYXg6IFRoZSBtYXhp
bXVtIHZhbHVlIGluIHRoZSBub2RlDQorICoNCisgKiBVc2VzIG1ldGFkYXRhIHRvIGZpbmQgdGhl
IGVuZCBvZiB0aGUgZGF0YSB3aGVuIHBvc3NpYmxlLg0KKyAqIFJldHVybjogVGhlIHplcm8gaW5k
ZXhlZCBsYXN0IHNsb3Qgd2l0aCBkYXRhIChtYXkgYmUgbnVsbCkuDQorICovDQorc3RhdGljIGlu
bGluZSB1bnNpZ25lZCBjaGFyIG1hX2RhdGFfZW5kKHN0cnVjdCBtYXBsZV9ub2RlICpub2RlLA0K
KwkJCQkJZW51bSBtYXBsZV90eXBlIHR5cGUsDQorCQkJCQl1bnNpZ25lZCBsb25nICpwaXZvdHMs
DQorCQkJCQl1bnNpZ25lZCBsb25nIG1heCkNCit7DQorCXVuc2lnbmVkIGNoYXIgb2Zmc2V0Ow0K
Kw0KKwlpZiAodHlwZSA9PSBtYXBsZV9hcmFuZ2VfNjQpDQorCQlyZXR1cm4gbWFfbWV0YV9lbmQo
bm9kZSwgdHlwZSk7DQorDQorCW9mZnNldCA9IG10X3Bpdm90c1t0eXBlXSAtIDE7DQorCWlmIChs
aWtlbHkoIXBpdm90c1tvZmZzZXRdKSkNCisJCXJldHVybiBtYV9tZXRhX2VuZChub2RlLCB0eXBl
KTsNCisNCisJaWYgKGxpa2VseShwaXZvdHNbb2Zmc2V0XSA9PSBtYXgpKQ0KKwkJcmV0dXJuIG9m
ZnNldDsNCisNCisJcmV0dXJuIG10X3Bpdm90c1t0eXBlXTsNCit9DQorDQorLyoNCisgKiBtYXNf
ZGF0YV9lbmQoKSAtIEZpbmQgdGhlIGVuZCBvZiB0aGUgZGF0YSAoc2xvdCkuDQorICogQG1hczog
dGhlIG1hcGxlIHN0YXRlDQorICoNCisgKiBUaGlzIG1ldGhvZCBpcyBvcHRpbWl6ZWQgdG8gY2hl
Y2sgdGhlIG1ldGFkYXRhIG9mIGEgbm9kZSBpZiB0aGUgbm9kZSB0eXBlDQorICogc3VwcG9ydHMg
ZGF0YSBlbmQgbWV0YWRhdGEuDQorICoNCisgKiBSZXR1cm46IFRoZSB6ZXJvIGluZGV4ZWQgbGFz
dCBzbG90IHdpdGggZGF0YSAobWF5IGJlIG51bGwpLg0KKyAqLw0KK3N0YXRpYyBpbmxpbmUgdW5z
aWduZWQgY2hhciBtYXNfZGF0YV9lbmQoc3RydWN0IG1hX3N0YXRlICptYXMpDQorew0KKwllbnVt
IG1hcGxlX3R5cGUgdHlwZTsNCisJc3RydWN0IG1hcGxlX25vZGUgKm5vZGU7DQorCXVuc2lnbmVk
IGNoYXIgb2Zmc2V0Ow0KKwl1bnNpZ25lZCBsb25nICpwaXZvdHM7DQorDQorCXR5cGUgPSBtdGVf
bm9kZV90eXBlKG1hcy0+bm9kZSk7DQorCW5vZGUgPSBtYXNfbW4obWFzKTsNCisJaWYgKHR5cGUg
PT0gbWFwbGVfYXJhbmdlXzY0KQ0KKwkJcmV0dXJuIG1hX21ldGFfZW5kKG5vZGUsIHR5cGUpOw0K
Kw0KKwlwaXZvdHMgPSBtYV9waXZvdHMobm9kZSwgdHlwZSk7DQorCW9mZnNldCA9IG10X3Bpdm90
c1t0eXBlXSAtIDE7DQorCWlmIChsaWtlbHkoIXBpdm90c1tvZmZzZXRdKSkNCisJCXJldHVybiBt
YV9tZXRhX2VuZChub2RlLCB0eXBlKTsNCisNCisJaWYgKGxpa2VseShwaXZvdHNbb2Zmc2V0XSA9
PSBtYXMtPm1heCkpDQorCQlyZXR1cm4gb2Zmc2V0Ow0KKw0KKwlyZXR1cm4gbXRfcGl2b3RzW3R5
cGVdOw0KK30NCisNCisvKg0KKyAqIG1hc19sZWFmX21heF9nYXAoKSAtIFJldHVybnMgdGhlIGxh
cmdlc3QgZ2FwIGluIGEgbGVhZiBub2RlDQorICogQG1hcyAtIHRoZSBtYXBsZSBzdGF0ZQ0KKyAq
DQorICogUmV0dXJuOiBUaGUgbWF4aW11bSBnYXAgaW4gdGhlIGxlYWYuDQorICovDQorc3RhdGlj
IHVuc2lnbmVkIGxvbmcgbWFzX2xlYWZfbWF4X2dhcChzdHJ1Y3QgbWFfc3RhdGUgKm1hcykNCit7
DQorCWVudW0gbWFwbGVfdHlwZSBtdDsNCisJdW5zaWduZWQgbG9uZyBwc3RhcnQsIGdhcCwgbWF4
X2dhcDsNCisJc3RydWN0IG1hcGxlX25vZGUgKm1uOw0KKwl1bnNpZ25lZCBsb25nICpwaXZvdHM7
DQorCXZvaWQgX19yY3UgKipzbG90czsNCisJdW5zaWduZWQgY2hhciBpOw0KKwl1bnNpZ25lZCBj
aGFyIG1heF9waXY7DQorDQorCW10ID0gbXRlX25vZGVfdHlwZShtYXMtPm5vZGUpOw0KKwltbiA9
IG1hc19tbihtYXMpOw0KKwlzbG90cyA9IG1hX3Nsb3RzKG1uLCBtdCk7DQorCW1heF9nYXAgPSAw
Ow0KKwlpZiAodW5saWtlbHkobWFfaXNfZGVuc2UobXQpKSkgew0KKwkJZ2FwID0gMDsNCisJCWZv
ciAoaSA9IDA7IGkgPCBtdF9zbG90c1ttdF07IGkrKykgew0KKwkJCWlmIChzbG90c1tpXSkgew0K
KwkJCQlpZiAoZ2FwID4gbWF4X2dhcCkNCisJCQkJCW1heF9nYXAgPSBnYXA7DQorCQkJCWdhcCA9
IDA7DQorCQkJfSBlbHNlIHsNCisJCQkJZ2FwKys7DQorCQkJfQ0KKwkJfQ0KKwkJaWYgKGdhcCA+
IG1heF9nYXApDQorCQkJbWF4X2dhcCA9IGdhcDsNCisJCXJldHVybiBtYXhfZ2FwOw0KKwl9DQor
DQorCS8qDQorCSAqIENoZWNrIHRoZSBmaXJzdCBpbXBsaWVkIHBpdm90IG9wdGltaXplcyB0aGUg
bG9vcCBiZWxvdyBhbmQgc2xvdCAxIG1heQ0KKwkgKiBiZSBza2lwcGVkIGlmIHRoZXJlIGlzIGEg
Z2FwIGluIHNsb3QgMC4NCisJICovDQorCXBpdm90cyA9IG1hX3Bpdm90cyhtbiwgbXQpOw0KKwlp
ZiAobGlrZWx5KCFzbG90c1swXSkpIHsNCisJCW1heF9nYXAgPSBwaXZvdHNbMF0gLSBtYXMtPm1p
biArIDE7DQorCQlpID0gMjsNCisJfSBlbHNlIHsNCisJCWkgPSAxOw0KKwl9DQorDQorCS8qIHJl
ZHVjZSBtYXhfcGl2IGFzIHRoZSBzcGVjaWFsIGNhc2UgaXMgY2hlY2tlZCBiZWZvcmUgdGhlIGxv
b3AgKi8NCisJbWF4X3BpdiA9IG1hX2RhdGFfZW5kKG1uLCBtdCwgcGl2b3RzLCBtYXMtPm1heCkg
LSAxOw0KKwkvKg0KKwkgKiBDaGVjayBlbmQgaW1wbGllZCBwaXZvdCB3aGljaCBjYW4gb25seSBi
ZSBhIGdhcCBvbiB0aGUgcmlnaHQgbW9zdA0KKwkgKiBub2RlLg0KKwkgKi8NCisJaWYgKHVubGlr
ZWx5KG1hcy0+bWF4ID09IFVMT05HX01BWCkgJiYgIXNsb3RzW21heF9waXYgKyAxXSkgew0KKwkJ
Z2FwID0gVUxPTkdfTUFYIC0gcGl2b3RzW21heF9waXZdOw0KKwkJaWYgKGdhcCA+IG1heF9nYXAp
DQorCQkJbWF4X2dhcCA9IGdhcDsNCisJfQ0KKw0KKwlmb3IgKDsgaSA8PSBtYXhfcGl2OyBpKysp
IHsNCisJCS8qIGRhdGEgPT0gbm8gZ2FwLiAqLw0KKwkJaWYgKGxpa2VseShzbG90c1tpXSkpDQor
CQkJY29udGludWU7DQorDQorCQlwc3RhcnQgPSBwaXZvdHNbaSAtIDFdOw0KKwkJZ2FwID0gcGl2
b3RzW2ldIC0gcHN0YXJ0Ow0KKwkJaWYgKGdhcCA+IG1heF9nYXApDQorCQkJbWF4X2dhcCA9IGdh
cDsNCisNCisJCS8qIFRoZXJlIGNhbm5vdCBiZSB0d28gZ2FwcyBpbiBhIHJvdy4gKi8NCisJCWkr
KzsNCisJfQ0KKwlyZXR1cm4gbWF4X2dhcDsNCit9DQorDQorLyoNCisgKiBtYV9tYXhfZ2FwKCkg
LSBHZXQgdGhlIG1heGltdW0gZ2FwIGluIGEgbWFwbGUgbm9kZSAobm9uLWxlYWYpDQorICogQG5v
ZGU6IFRoZSBtYXBsZSBub2RlDQorICogQGdhcHM6IFRoZSBwb2ludGVyIHRvIHRoZSBnYXBzDQor
ICogQG10OiBUaGUgbWFwbGUgbm9kZSB0eXBlDQorICogQCpvZmY6IFBvaW50ZXIgdG8gc3RvcmUg
dGhlIG9mZnNldCBsb2NhdGlvbiBvZiB0aGUgZ2FwLg0KKyAqDQorICogVXNlcyB0aGUgbWV0YWRh
dGEgZGF0YSBlbmQgdG8gc2NhbiBiYWNrd2FyZHMgYWNyb3NzIHNldCBnYXBzLg0KKyAqDQorICog
UmV0dXJuOiBUaGUgbWF4aW11bSBnYXAgdmFsdWUNCisgKi8NCitzdGF0aWMgaW5saW5lIHVuc2ln
bmVkIGxvbmcNCittYV9tYXhfZ2FwKHN0cnVjdCBtYXBsZV9ub2RlICpub2RlLCB1bnNpZ25lZCBs
b25nICpnYXBzLCBlbnVtIG1hcGxlX3R5cGUgbXQsDQorCSAgICB1bnNpZ25lZCBjaGFyICpvZmYp
DQorew0KKwl1bnNpZ25lZCBjaGFyIG9mZnNldCwgaTsNCisJdW5zaWduZWQgbG9uZyBtYXhfZ2Fw
ID0gMDsNCisNCisJaSA9IG9mZnNldCA9IG1hX21ldGFfZW5kKG5vZGUsIG10KTsNCisJZG8gew0K
KwkJaWYgKGdhcHNbaV0gPiBtYXhfZ2FwKSB7DQorCQkJbWF4X2dhcCA9IGdhcHNbaV07DQorCQkJ
b2Zmc2V0ID0gaTsNCisJCX0NCisJfSB3aGlsZSAoaS0tKTsNCisNCisJKm9mZiA9IG9mZnNldDsN
CisJcmV0dXJuIG1heF9nYXA7DQorfQ0KKw0KKy8qDQorICogbWFzX21heF9nYXAoKSAtIGZpbmQg
dGhlIGxhcmdlc3QgZ2FwIGluIGEgbm9uLWxlYWYgbm9kZSBhbmQgc2V0IHRoZSBzbG90Lg0KKyAq
IEBtYXM6IFRoZSBtYXBsZSBzdGF0ZS4NCisgKg0KKyAqIElmIHRoZSBtZXRhZGF0YSBnYXAgaXMg
c2V0IHRvIE1BUExFX0FSQU5HRTY0X01FVEFfTUFYLCB0aGVyZSBpcyBubyBnYXAuDQorICoNCisg
KiBSZXR1cm46IFRoZSBnYXAgdmFsdWUuDQorICovDQorc3RhdGljIGlubGluZSB1bnNpZ25lZCBs
b25nIG1hc19tYXhfZ2FwKHN0cnVjdCBtYV9zdGF0ZSAqbWFzKQ0KK3sNCisJdW5zaWduZWQgbG9u
ZyAqZ2FwczsNCisJdW5zaWduZWQgY2hhciBvZmZzZXQ7DQorCWVudW0gbWFwbGVfdHlwZSBtdDsN
CisJc3RydWN0IG1hcGxlX25vZGUgKm5vZGU7DQorDQorCW10ID0gbXRlX25vZGVfdHlwZShtYXMt
Pm5vZGUpOw0KKwlpZiAobWFfaXNfbGVhZihtdCkpDQorCQlyZXR1cm4gbWFzX2xlYWZfbWF4X2dh
cChtYXMpOw0KKw0KKwlub2RlID0gbWFzX21uKG1hcyk7DQorCW9mZnNldCA9IG1hX21ldGFfZ2Fw
KG5vZGUsIG10KTsNCisJaWYgKG9mZnNldCA9PSBNQVBMRV9BUkFOR0U2NF9NRVRBX01BWCkNCisJ
CXJldHVybiAwOw0KKw0KKwlnYXBzID0gbWFfZ2Fwcyhub2RlLCBtdCk7DQorCXJldHVybiBnYXBz
W29mZnNldF07DQorfQ0KKw0KKy8qDQorICogbWFzX3BhcmVudF9nYXAoKSAtIFNldCB0aGUgcGFy
ZW50IGdhcCBhbmQgYW55IGdhcHMgYWJvdmUsIGFzIG5lZWRlZA0KKyAqIEBtYXM6IFRoZSBtYXBs
ZSBzdGF0ZQ0KKyAqIEBvZmZzZXQ6IFRoZSBnYXAgb2Zmc2V0IGluIHRoZSBwYXJlbnQgdG8gc2V0
DQorICogQG5ldzogVGhlIG5ldyBnYXAgdmFsdWUuDQorICoNCisgKiBTZXQgdGhlIHBhcmVudCBn
YXAgdGhlbiBjb250aW51ZSB0byBzZXQgdGhlIGdhcCB1cHdhcmRzLCB1c2luZyB0aGUgbWV0YWRh
dGENCisgKiBvZiB0aGUgcGFyZW50IHRvIHNlZSBpZiBpdCBpcyBuZWNlc3NhcnkgdG8gY2hlY2sg
dGhlIG5vZGUgYWJvdmUuDQorICovDQorc3RhdGljIGlubGluZSB2b2lkIG1hc19wYXJlbnRfZ2Fw
KHN0cnVjdCBtYV9zdGF0ZSAqbWFzLCB1bnNpZ25lZCBjaGFyIG9mZnNldCwNCisJCXVuc2lnbmVk
IGxvbmcgbmV3KQ0KK3sNCisJdW5zaWduZWQgbG9uZyBtZXRhX2dhcCA9IDA7DQorCXN0cnVjdCBt
YXBsZV9ub2RlICpwbm9kZTsNCisJc3RydWN0IG1hcGxlX2Vub2RlICpwZW5vZGU7DQorCXVuc2ln
bmVkIGxvbmcgKnBnYXBzOw0KKwl1bnNpZ25lZCBjaGFyIG1ldGFfb2Zmc2V0Ow0KKwllbnVtIG1h
cGxlX3R5cGUgcG10Ow0KKw0KKwlwbm9kZSA9IG10ZV9wYXJlbnQobWFzLT5ub2RlKTsNCisJcG10
ID0gbWFzX3BhcmVudF9lbnVtKG1hcywgbWFzLT5ub2RlKTsNCisJcGVub2RlID0gbXRfbWtfbm9k
ZShwbm9kZSwgcG10KTsNCisJcGdhcHMgPSBtYV9nYXBzKHBub2RlLCBwbXQpOw0KKw0KK2FzY2Vu
ZDoNCisJbWV0YV9vZmZzZXQgPSBtYV9tZXRhX2dhcChwbm9kZSwgcG10KTsNCisJaWYgKG1ldGFf
b2Zmc2V0ID09IE1BUExFX0FSQU5HRTY0X01FVEFfTUFYKQ0KKwkJbWV0YV9nYXAgPSAwOw0KKwll
bHNlDQorCQltZXRhX2dhcCA9IHBnYXBzW21ldGFfb2Zmc2V0XTsNCisNCisJcGdhcHNbb2Zmc2V0
XSA9IG5ldzsNCisNCisJaWYgKG1ldGFfZ2FwID09IG5ldykNCisJCXJldHVybjsNCisNCisJaWYg
KG9mZnNldCAhPSBtZXRhX29mZnNldCkgew0KKwkJaWYgKG1ldGFfZ2FwID4gbmV3KQ0KKwkJCXJl
dHVybjsNCisNCisJCW1hX3NldF9tZXRhX2dhcChwbm9kZSwgcG10LCBvZmZzZXQpOw0KKwl9IGVs
c2UgaWYgKG5ldyA8IG1ldGFfZ2FwKSB7DQorCQltZXRhX29mZnNldCA9IDE1Ow0KKwkJbmV3ID0g
bWFfbWF4X2dhcChwbm9kZSwgcGdhcHMsIHBtdCwgJm1ldGFfb2Zmc2V0KTsNCisJCW1hX3NldF9t
ZXRhX2dhcChwbm9kZSwgcG10LCBtZXRhX29mZnNldCk7DQorCX0NCisNCisJaWYgKG1hX2lzX3Jv
b3QocG5vZGUpKQ0KKwkJcmV0dXJuOw0KKw0KKwkvKiBHbyB0byB0aGUgcGFyZW50IG5vZGUuICov
DQorCXBub2RlID0gbXRlX3BhcmVudChwZW5vZGUpOw0KKwlwbXQgPSBtYXNfcGFyZW50X2VudW0o
bWFzLCBwZW5vZGUpOw0KKwlwZ2FwcyA9IG1hX2dhcHMocG5vZGUsIHBtdCk7DQorCW9mZnNldCA9
IG10ZV9wYXJlbnRfc2xvdChwZW5vZGUpOw0KKwlwZW5vZGUgPSBtdF9ta19ub2RlKHBub2RlLCBw
bXQpOw0KKwlnb3RvIGFzY2VuZDsNCit9DQorDQorLyoNCisgKiBtYXNfdXBkYXRlX2dhcCgpIC0g
VXBkYXRlIGEgbm9kZXMgZ2FwcyBhbmQgcHJvcGFnYXRlIHVwIGlmIG5lY2Vzc2FyeS4NCisgKiBA
bWFzIC0gdGhlIG1hcGxlIHN0YXRlLg0KKyAqLw0KK3N0YXRpYyBpbmxpbmUgdm9pZCBtYXNfdXBk
YXRlX2dhcChzdHJ1Y3QgbWFfc3RhdGUgKm1hcykNCit7DQorCXVuc2lnbmVkIGNoYXIgcHNsb3Q7
DQorCXVuc2lnbmVkIGxvbmcgcF9nYXA7DQorCXVuc2lnbmVkIGxvbmcgbWF4X2dhcDsNCisNCisJ
aWYgKCFtdF9pc19hbGxvYyhtYXMtPnRyZWUpKQ0KKwkJcmV0dXJuOw0KKw0KKwlpZiAobXRlX2lz
X3Jvb3QobWFzLT5ub2RlKSkNCisJCXJldHVybjsNCisNCisJbWF4X2dhcCA9IG1hc19tYXhfZ2Fw
KG1hcyk7DQorDQorCXBzbG90ID0gbXRlX3BhcmVudF9zbG90KG1hcy0+bm9kZSk7DQorCXBfZ2Fw
ID0gbWFfZ2FwcyhtdGVfcGFyZW50KG1hcy0+bm9kZSksDQorCQkJbWFzX3BhcmVudF9lbnVtKG1h
cywgbWFzLT5ub2RlKSlbcHNsb3RdOw0KKw0KKwlpZiAocF9nYXAgIT0gbWF4X2dhcCkNCisJCW1h
c19wYXJlbnRfZ2FwKG1hcywgcHNsb3QsIG1heF9nYXApOw0KK30NCisNCisvKg0KKyAqIG1hc19h
ZG9wdF9jaGlsZHJlbigpIC0gU2V0IHRoZSBwYXJlbnQgcG9pbnRlciBvZiBhbGwgbm9kZXMgaW4g
QHBhcmVudCB0bw0KKyAqIEBwYXJlbnQgd2l0aCB0aGUgc2xvdCBlbmNvZGVkLg0KKyAqIEBtYXMg
LSB0aGUgbWFwbGUgc3RhdGUgKGZvciB0aGUgdHJlZSkNCisgKiBAcGFyZW50IC0gdGhlIG1hcGxl
IGVuY29kZWQgbm9kZSBjb250YWluaW5nIHRoZSBjaGlsZHJlbi4NCisgKi8NCitzdGF0aWMgaW5s
aW5lIHZvaWQgbWFzX2Fkb3B0X2NoaWxkcmVuKHN0cnVjdCBtYV9zdGF0ZSAqbWFzLA0KKwkJc3Ry
dWN0IG1hcGxlX2Vub2RlICpwYXJlbnQpDQorew0KKwllbnVtIG1hcGxlX3R5cGUgdHlwZSA9IG10
ZV9ub2RlX3R5cGUocGFyZW50KTsNCisJc3RydWN0IG1hcGxlX25vZGUgKm5vZGUgPSBtYXNfbW4o
bWFzKTsNCisJdm9pZCBfX3JjdSAqKnNsb3RzID0gbWFfc2xvdHMobm9kZSwgdHlwZSk7DQorCXVu
c2lnbmVkIGxvbmcgKnBpdm90cyA9IG1hX3Bpdm90cyhub2RlLCB0eXBlKTsNCisJc3RydWN0IG1h
cGxlX2Vub2RlICpjaGlsZDsNCisJdW5zaWduZWQgY2hhciBvZmZzZXQ7DQorDQorCW9mZnNldCA9
IG1hX2RhdGFfZW5kKG5vZGUsIHR5cGUsIHBpdm90cywgbWFzLT5tYXgpOw0KKwlkbyB7DQorCQlj
aGlsZCA9IG1hc19zbG90X2xvY2tlZChtYXMsIHNsb3RzLCBvZmZzZXQpOw0KKwkJbXRlX3NldF9w
YXJlbnQoY2hpbGQsIHBhcmVudCwgb2Zmc2V0KTsNCisJfSB3aGlsZSAob2Zmc2V0LS0pOw0KK30N
CisNCisvKg0KKyAqIG1hc19yZXBsYWNlKCkgLSBSZXBsYWNlIGEgbWFwbGUgbm9kZSBpbiB0aGUg
dHJlZSB3aXRoIG1hcy0+bm9kZS4gIFVzZXMgdGhlDQorICogcGFyZW50IGVuY29kaW5nIHRvIGxv
Y2F0ZSB0aGUgbWFwbGUgbm9kZSBpbiB0aGUgdHJlZS4NCisgKiBAbWFzIC0gdGhlIG1hX3N0YXRl
IHRvIHVzZSBmb3Igb3BlcmF0aW9ucy4NCisgKiBAYWR2YW5jZWQgLSBib29sZWFuIHRvIGFkb3B0
IHRoZSBjaGlsZCBub2RlcyBhbmQgZnJlZSB0aGUgb2xkIG5vZGUgKGZhbHNlKSBvcg0KKyAqIGxl
YXZlIHRoZSBub2RlICh0cnVlKSBhbmQgaGFuZGxlIHRoZSBhZG9wdGlvbiBhbmQgZnJlZSBlbHNl
d2hlcmUuDQorICovDQorc3RhdGljIGlubGluZSB2b2lkIG1hc19yZXBsYWNlKHN0cnVjdCBtYV9z
dGF0ZSAqbWFzLCBib29sIGFkdmFuY2VkKQ0KKwlfX211c3RfaG9sZChtYXMtPnRyZWUtPmxvY2sp
DQorew0KKwlzdHJ1Y3QgbWFwbGVfbm9kZSAqbW4gPSBtYXNfbW4obWFzKTsNCisJc3RydWN0IG1h
cGxlX2Vub2RlICpvbGRfZW5vZGU7DQorCXVuc2lnbmVkIGNoYXIgb2Zmc2V0ID0gMDsNCisJdm9p
ZCBfX3JjdSAqKnNsb3RzID0gTlVMTDsNCisNCisJaWYgKG1hX2lzX3Jvb3QobW4pKSB7DQorCQlv
bGRfZW5vZGUgPSBtYXNfcm9vdF9sb2NrZWQobWFzKTsNCisJfSBlbHNlIHsNCisJCW9mZnNldCA9
IG10ZV9wYXJlbnRfc2xvdChtYXMtPm5vZGUpOw0KKwkJc2xvdHMgPSBtYV9zbG90cyhtdGVfcGFy
ZW50KG1hcy0+bm9kZSksDQorCQkJCSBtYXNfcGFyZW50X2VudW0obWFzLCBtYXMtPm5vZGUpKTsN
CisJCW9sZF9lbm9kZSA9IG1hc19zbG90X2xvY2tlZChtYXMsIHNsb3RzLCBvZmZzZXQpOw0KKwl9
DQorDQorCWlmICghYWR2YW5jZWQgJiYgIW10ZV9pc19sZWFmKG1hcy0+bm9kZSkpDQorCQltYXNf
YWRvcHRfY2hpbGRyZW4obWFzLCBtYXMtPm5vZGUpOw0KKw0KKwlpZiAobXRlX2lzX3Jvb3QobWFz
LT5ub2RlKSkgew0KKwkJbW4tPnBhcmVudCA9IG1hX3BhcmVudF9wdHIoDQorCQkJICAgICAgKCh1
bnNpZ25lZCBsb25nKW1hcy0+dHJlZSB8IE1BX1JPT1RfUEFSRU5UKSk7DQorCQlyY3VfYXNzaWdu
X3BvaW50ZXIobWFzLT50cmVlLT5tYV9yb290LCBtdGVfbWtfcm9vdChtYXMtPm5vZGUpKTsNCisJ
CW1hc19zZXRfaGVpZ2h0KG1hcyk7DQorCX0gZWxzZSB7DQorCQlyY3VfYXNzaWduX3BvaW50ZXIo
c2xvdHNbb2Zmc2V0XSwgbWFzLT5ub2RlKTsNCisJfQ0KKw0KKwlpZiAoIWFkdmFuY2VkKQ0KKwkJ
bWFzX2ZyZWUobWFzLCBvbGRfZW5vZGUpOw0KK30NCisNCisvKg0KKyAqIG1hc19uZXdfY2hpbGQo
KSAtIEZpbmQgdGhlIG5ldyBjaGlsZCBvZiBhIG5vZGUuDQorICogQG1hczogdGhlIG1hcGxlIHN0
YXRlDQorICogQGNoaWxkOiB0aGUgbWFwbGUgc3RhdGUgdG8gc3RvcmUgdGhlIGNoaWxkLg0KKyAq
Lw0KK3N0YXRpYyBpbmxpbmUgYm9vbCBtYXNfbmV3X2NoaWxkKHN0cnVjdCBtYV9zdGF0ZSAqbWFz
LCBzdHJ1Y3QgbWFfc3RhdGUgKmNoaWxkKQ0KKwlfX211c3RfaG9sZChtYXMtPnRyZWUtPmxvY2sp
DQorew0KKwllbnVtIG1hcGxlX3R5cGUgbXQ7DQorCXVuc2lnbmVkIGNoYXIgb2Zmc2V0Ow0KKwl1
bnNpZ25lZCBjaGFyIGVuZDsNCisJdW5zaWduZWQgbG9uZyAqcGl2b3RzOw0KKwlzdHJ1Y3QgbWFw
bGVfZW5vZGUgKmVudHJ5Ow0KKwlzdHJ1Y3QgbWFwbGVfbm9kZSAqbm9kZTsNCisJdm9pZCBfX3Jj
dSAqKnNsb3RzOw0KKw0KKwltdCA9IG10ZV9ub2RlX3R5cGUobWFzLT5ub2RlKTsNCisJbm9kZSA9
IG1hc19tbihtYXMpOw0KKwlzbG90cyA9IG1hX3Nsb3RzKG5vZGUsIG10KTsNCisJcGl2b3RzID0g
bWFfcGl2b3RzKG5vZGUsIG10KTsNCisJZW5kID0gbWFfZGF0YV9lbmQobm9kZSwgbXQsIHBpdm90
cywgbWFzLT5tYXgpOw0KKwlmb3IgKG9mZnNldCA9IG1hcy0+b2Zmc2V0OyBvZmZzZXQgPD0gZW5k
OyBvZmZzZXQrKykgew0KKwkJZW50cnkgPSBtYXNfc2xvdF9sb2NrZWQobWFzLCBzbG90cywgb2Zm
c2V0KTsNCisJCWlmIChtdGVfcGFyZW50KGVudHJ5KSA9PSBub2RlKSB7DQorCQkJKmNoaWxkID0g
Km1hczsNCisJCQltYXMtPm9mZnNldCA9IG9mZnNldCArIDE7DQorCQkJY2hpbGQtPm9mZnNldCA9
IG9mZnNldDsNCisJCQltYXNfZGVzY2VuZChjaGlsZCk7DQorCQkJY2hpbGQtPm9mZnNldCA9IDA7
DQorCQkJcmV0dXJuIHRydWU7DQorCQl9DQorCX0NCisJcmV0dXJuIGZhbHNlOw0KK30NCisNCisv
Kg0KKyAqIG1hYl9zaGlmdF9yaWdodCgpIC0gU2hpZnQgdGhlIGRhdGEgaW4gbWFiIHJpZ2h0LiBO
b3RlLCBkb2VzIG5vdCBjbGVhbiBvdXQgdGhlDQorICogb2xkIGRhdGEgb3Igc2V0IGJfbm9kZS0+
Yl9lbmQuDQorICogQGJfbm9kZTogdGhlIG1hcGxlX2JpZ19ub2RlDQorICogQHNoaWZ0OiB0aGUg
c2hpZnQgY291bnQNCisgKi8NCitzdGF0aWMgaW5saW5lIHZvaWQgbWFiX3NoaWZ0X3JpZ2h0KHN0
cnVjdCBtYXBsZV9iaWdfbm9kZSAqYl9ub2RlLA0KKwkJCQkgdW5zaWduZWQgY2hhciBzaGlmdCkN
Cit7DQorCXVuc2lnbmVkIGxvbmcgc2l6ZSA9IGJfbm9kZS0+Yl9lbmQgKiBzaXplb2YodW5zaWdu
ZWQgbG9uZyk7DQorDQorCW1lbW1vdmUoYl9ub2RlLT5waXZvdCArIHNoaWZ0LCBiX25vZGUtPnBp
dm90LCBzaXplKTsNCisJbWVtbW92ZShiX25vZGUtPnNsb3QgKyBzaGlmdCwgYl9ub2RlLT5zbG90
LCBzaXplKTsNCisJaWYgKGJfbm9kZS0+dHlwZSA9PSBtYXBsZV9hcmFuZ2VfNjQpDQorCQltZW1t
b3ZlKGJfbm9kZS0+Z2FwICsgc2hpZnQsIGJfbm9kZS0+Z2FwLCBzaXplKTsNCit9DQorDQorLyoN
CisgKiBtYWJfbWlkZGxlX25vZGUoKSAtIENoZWNrIGlmIGEgbWlkZGxlIG5vZGUgaXMgbmVlZGVk
ICh1bmxpa2VseSkNCisgKiBAYl9ub2RlOiB0aGUgbWFwbGVfYmlnX25vZGUgdGhhdCBjb250YWlu
cyB0aGUgZGF0YS4NCisgKiBAc2l6ZTogdGhlIGFtb3VudCBvZiBkYXRhIGluIHRoZSBiX25vZGUN
CisgKiBAc3BsaXQ6IHRoZSBwb3RlbnRpYWwgc3BsaXQgbG9jYXRpb24NCisgKiBAc2xvdF9jb3Vu
dDogdGhlIHNpemUgdGhhdCBjYW4gYmUgc3RvcmVkIGluIGEgc2luZ2xlIG5vZGUgYmVpbmcgY29u
c2lkZXJlZC4NCisgKg0KKyAqIFJldHVybjogdHJ1ZSBpZiBhIG1pZGRsZSBub2RlIGlzIHJlcXVp
cmVkLg0KKyAqLw0KK3N0YXRpYyBpbmxpbmUgYm9vbCBtYWJfbWlkZGxlX25vZGUoc3RydWN0IG1h
cGxlX2JpZ19ub2RlICpiX25vZGUsIGludCBzcGxpdCwNCisJCQkJICAgdW5zaWduZWQgY2hhciBz
bG90X2NvdW50KQ0KK3sNCisJdW5zaWduZWQgY2hhciBzaXplID0gYl9ub2RlLT5iX2VuZDsNCisN
CisJaWYgKHNpemUgPj0gMiAqIHNsb3RfY291bnQpDQorCQlyZXR1cm4gdHJ1ZTsNCisNCisJaWYg
KCFiX25vZGUtPnNsb3Rbc3BsaXRdICYmIChzaXplID49IDIgKiBzbG90X2NvdW50IC0gMSkpDQor
CQlyZXR1cm4gdHJ1ZTsNCisNCisJcmV0dXJuIGZhbHNlOw0KK30NCisNCisvKg0KKyAqIG1hYl9u
b19udWxsX3NwbGl0KCkgLSBlbnN1cmUgdGhlIHNwbGl0IGRvZXNuJ3QgZmFsbCBvbiBhIE5VTEwN
CisgKiBAYl9ub2RlOiB0aGUgbWFwbGVfYmlnX25vZGUgd2l0aCB0aGUgZGF0YQ0KKyAqIEBzcGxp
dDogdGhlIHN1Z2dlc3RlZCBzcGxpdCBsb2NhdGlvbg0KKyAqIEBzbG90X2NvdW50OiB0aGUgbnVt
YmVyIG9mIHNsb3RzIGluIHRoZSBub2RlIGJlaW5nIGNvbnNpZGVyZWQuDQorICoNCisgKiBSZXR1
cm46IHRoZSBzcGxpdCBsb2NhdGlvbi4NCisgKi8NCitzdGF0aWMgaW5saW5lIGludCBtYWJfbm9f
bnVsbF9zcGxpdChzdHJ1Y3QgbWFwbGVfYmlnX25vZGUgKmJfbm9kZSwNCisJCQkJICAgIHVuc2ln
bmVkIGNoYXIgc3BsaXQsIHVuc2lnbmVkIGNoYXIgc2xvdF9jb3VudCkNCit7DQorCWlmICghYl9u
b2RlLT5zbG90W3NwbGl0XSkgew0KKwkJLyoNCisJCSAqIElmIHRoZSBzcGxpdCBpcyBsZXNzIHRo
YW4gdGhlIG1heCBzbG90ICYmIHRoZSByaWdodCBzaWRlIHdpbGwNCisJCSAqIHN0aWxsIGJlIHN1
ZmZpY2llbnQsIHRoZW4gaW5jcmVtZW50IHRoZSBzcGxpdCBvbiBOVUxMLg0KKwkJICovDQorCQlp
ZiAoKHNwbGl0IDwgc2xvdF9jb3VudCAtIDEpICYmDQorCQkgICAgKGJfbm9kZS0+Yl9lbmQgLSBz
cGxpdCkgPiAobXRfbWluX3Nsb3RzW2Jfbm9kZS0+dHlwZV0pKQ0KKwkJCXNwbGl0Kys7DQorCQll
bHNlDQorCQkJc3BsaXQtLTsNCisJfQ0KKwlyZXR1cm4gc3BsaXQ7DQorfQ0KKw0KKy8qDQorICog
bWFiX2NhbGNfc3BsaXQoKSAtIENhbGN1bGF0ZSB0aGUgc3BsaXQgbG9jYXRpb24gYW5kIGlmIHRo
ZXJlIG5lZWRzIHRvIGJlIHR3bw0KKyAqIHNwbGl0cy4NCisgKiBAYm46IFRoZSBtYXBsZV9iaWdf
bm9kZSB3aXRoIHRoZSBkYXRhDQorICogQG1pZF9zcGxpdDogVGhlIHNlY29uZCBzcGxpdCwgaWYg
cmVxdWlyZWQuICAwIG90aGVyd2lzZS4NCisgKg0KKyAqIFJldHVybjogVGhlIGZpcnN0IHNwbGl0
IGxvY2F0aW9uLiAgVGhlIG1pZGRsZSBzcGxpdCBpcyBzZXQgaW4gQG1pZF9zcGxpdC4NCisgKi8N
CitzdGF0aWMgaW5saW5lIGludCBtYWJfY2FsY19zcGxpdChzdHJ1Y3QgbWFfc3RhdGUgKm1hcywN
CisJIHN0cnVjdCBtYXBsZV9iaWdfbm9kZSAqYm4sIHVuc2lnbmVkIGNoYXIgKm1pZF9zcGxpdCwg
dW5zaWduZWQgbG9uZyBtaW4pDQorew0KKwl1bnNpZ25lZCBjaGFyIGJfZW5kID0gYm4tPmJfZW5k
Ow0KKwlpbnQgc3BsaXQgPSBiX2VuZCAvIDI7IC8qIEFzc3VtZSBlcXVhbCBzcGxpdC4gKi8NCisJ
dW5zaWduZWQgY2hhciBzbG90X21pbiwgc2xvdF9jb3VudCA9IG10X3Nsb3RzW2JuLT50eXBlXTsN
CisNCisJLyoNCisJICogVG8gc3VwcG9ydCBnYXAgdHJhY2tpbmcsIGFsbCBOVUxMIGVudHJpZXMg
YXJlIGtlcHQgdG9nZXRoZXIgYW5kIGEgbm9kZSBjYW5ub3QNCisJICogZW5kIG9uIGEgTlVMTCBl
bnRyeSwgd2l0aCB0aGUgZXhjZXB0aW9uIG9mIHRoZSBsZWZ0LW1vc3QgbGVhZi4gIFRoZQ0KKwkg
KiBsaW1pdGF0aW9uIG1lYW5zIHRoYXQgdGhlIHNwbGl0IG9mIGEgbm9kZSBtdXN0IGJlIGNoZWNr
ZWQgZm9yIHRoaXMgY29uZGl0aW9uDQorCSAqIGFuZCBiZSBhYmxlIHRvIHB1dCBtb3JlIGRhdGEg
aW4gb25lIGRpcmVjdGlvbiBvciB0aGUgb3RoZXIuDQorCSAqLw0KKwlpZiAodW5saWtlbHkoKG1h
cy0+bWFzX2ZsYWdzICYgTUFfU1RBVEVfQlVMSykpKSB7DQorCQkqbWlkX3NwbGl0ID0gMDsNCisJ
CWlmIChtYV9pc19sZWFmKGJuLT50eXBlKSkNCisJCQlzbG90X21pbiA9IDI7DQorCQllbHNlDQor
CQkJcmV0dXJuIGJfZW5kIC0gbXRfbWluX3Nsb3RzW2JuLT50eXBlXTsNCisNCisJCXNwbGl0ID0g
Yl9lbmQgLSBzbG90X21pbjsNCisJCW1hcy0+bWFzX2ZsYWdzIHw9IE1BX1NUQVRFX1JFQkFMQU5D
RTsNCisJCWlmICghYm4tPnNsb3Rbc3BsaXRdKQ0KKwkJCXNwbGl0LS07DQorCQlyZXR1cm4gc3Bs
aXQ7DQorCX0NCisNCisJLyoNCisJICogQWx0aG91Z2ggZXh0cmVtZWx5IHJhcmUsIGl0IGlzIHBv
c3NpYmxlIHRvIGVudGVyIHdoYXQgaXMga25vd24gYXMgdGhlIDMtd2F5DQorCSAqIHNwbGl0IHNj
ZW5hcmlvLiAgVGhlIDMtd2F5IHNwbGl0IGNvbWVzIGFib3V0IGJ5IG1lYW5zIG9mIGEgc3RvcmUg
b2YgYSByYW5nZQ0KKwkgKiB0aGF0IG92ZXJ3cml0ZXMgdGhlIGVuZCBhbmQgYmVnaW5uaW5nIG9m
IHR3byBmdWxsIG5vZGVzLiAgVGhlIHJlc3VsdCBpcyBhIHNldA0KKwkgKiBvZiBlbnRyaWVzIHRo
YXQgY2Fubm90IGJlIHN0b3JlZCBpbiAyIG5vZGVzLiAgU29tZXRpbWVzLCB0aGVzZSB0d28gbm9k
ZXMgY2FuDQorCSAqIGFsc28gYmUgbG9jYXRlZCBpbiBkaWZmZXJlbnQgcGFyZW50IG5vZGVzIHdo
aWNoIGFyZSBhbHNvIGZ1bGwuICBUaGlzIGNhbg0KKwkgKiBjYXJyeSB1cHdhcmRzIGFsbCB0aGUg
d2F5IHRvIHRoZSByb290IGluIHRoZSB3b3JzdCBjYXNlLg0KKwkgKi8NCisJaWYgKHVubGlrZWx5
KG1hYl9taWRkbGVfbm9kZShibiwgc3BsaXQsIHNsb3RfY291bnQpKSkgew0KKwkJc3BsaXQgPSBi
X2VuZCAvIDM7DQorCQkqbWlkX3NwbGl0ID0gc3BsaXQgKiAyOw0KKwl9IGVsc2Ugew0KKwkJc2xv
dF9taW4gPSBtdF9taW5fc2xvdHNbYm4tPnR5cGVdOw0KKw0KKwkJKm1pZF9zcGxpdCA9IDA7DQor
CQkvKg0KKwkJICogQXZvaWQgaGF2aW5nIGEgcmFuZ2UgbGVzcyB0aGFuIHRoZSBzbG90IGNvdW50
IHVubGVzcyBpdA0KKwkJICogY2F1c2VzIG9uZSBub2RlIHRvIGJlIGRlZmljaWVudC4NCisJCSAq
IE5PVEU6IG10X21pbl9zbG90cyBpcyAxIGJhc2VkLCBiX2VuZCBhbmQgc3BsaXQgYXJlIHplcm8u
DQorCQkgKi8NCisJCXdoaWxlICgoKGJuLT5waXZvdFtzcGxpdF0gLSBtaW4pIDwgc2xvdF9jb3Vu
dCAtIDEpICYmDQorCQkgICAgICAgKHNwbGl0IDwgc2xvdF9jb3VudCAtIDEpICYmIChiX2VuZCAt
IHNwbGl0ID4gc2xvdF9taW4pKQ0KKwkJCXNwbGl0Kys7DQorCX0NCisNCisJLyogQXZvaWQgZW5k
aW5nIGEgbm9kZSBvbiBhIE5VTEwgZW50cnkgKi8NCisJc3BsaXQgPSBtYWJfbm9fbnVsbF9zcGxp
dChibiwgc3BsaXQsIHNsb3RfY291bnQpOw0KKwlpZiAoISgqbWlkX3NwbGl0KSkNCisJCXJldHVy
biBzcGxpdDsNCisNCisJKm1pZF9zcGxpdCA9IG1hYl9ub19udWxsX3NwbGl0KGJuLCAqbWlkX3Nw
bGl0LCBzbG90X2NvdW50KTsNCisNCisJcmV0dXJuIHNwbGl0Ow0KK30NCisNCisvKg0KKyAqIG1h
c19tYWJfY3AoKSAtIENvcHkgZGF0YSBmcm9tIGEgbWFwbGUgc3RhdGUgaW5jbHVzaXZlbHkgdG8g
YSBtYXBsZV9iaWdfbm9kZQ0KKyAqIGFuZCBzZXQgQGJfbm9kZS0+Yl9lbmQgdG8gdGhlIG5leHQg
ZnJlZSBzbG90Lg0KKyAqIEBtYXM6IFRoZSBtYXBsZSBzdGF0ZQ0KKyAqIEBtYXNfc3RhcnQ6IFRo
ZSBzdGFydGluZyBzbG90IHRvIGNvcHkNCisgKiBAbWFzX2VuZDogVGhlIGVuZCBzbG90IHRvIGNv
cHkgKGluY2x1c2l2ZWx5KQ0KKyAqIEBiX25vZGU6IFRoZSBtYXBsZV9iaWdfbm9kZSB0byBwbGFj
ZSB0aGUgZGF0YQ0KKyAqIEBtYWJfc3RhcnQ6IFRoZSBzdGFydGluZyBsb2NhdGlvbiBpbiBtYXBs
ZV9iaWdfbm9kZSB0byBzdG9yZSB0aGUgZGF0YS4NCisgKi8NCitzdGF0aWMgaW5saW5lIHZvaWQg
bWFzX21hYl9jcChzdHJ1Y3QgbWFfc3RhdGUgKm1hcywgdW5zaWduZWQgY2hhciBtYXNfc3RhcnQs
DQorCQkJdW5zaWduZWQgY2hhciBtYXNfZW5kLCBzdHJ1Y3QgbWFwbGVfYmlnX25vZGUgKmJfbm9k
ZSwNCisJCQl1bnNpZ25lZCBjaGFyIG1hYl9zdGFydCkNCit7DQorCWVudW0gbWFwbGVfdHlwZSBt
dDsNCisJc3RydWN0IG1hcGxlX25vZGUgKm5vZGU7DQorCXZvaWQgX19yY3UgKipzbG90czsNCisJ
dW5zaWduZWQgbG9uZyAqcGl2b3RzLCAqZ2FwczsNCisJaW50IGkgPSBtYXNfc3RhcnQsIGogPSBt
YWJfc3RhcnQ7DQorCXVuc2lnbmVkIGNoYXIgcGl2X2VuZDsNCisNCisJbm9kZSA9IG1hc19tbiht
YXMpOw0KKwltdCA9IG10ZV9ub2RlX3R5cGUobWFzLT5ub2RlKTsNCisJcGl2b3RzID0gbWFfcGl2
b3RzKG5vZGUsIG10KTsNCisJaWYgKCFpKSB7DQorCQliX25vZGUtPnBpdm90W2pdID0gcGl2b3Rz
W2krK107DQorCQlpZiAodW5saWtlbHkoaSA+IG1hc19lbmQpKQ0KKwkJCWdvdG8gY29tcGxldGU7
DQorCQlqKys7DQorCX0NCisNCisJcGl2X2VuZCA9IG1pbihtYXNfZW5kLCBtdF9waXZvdHNbbXRd
KTsNCisJZm9yICg7IGkgPCBwaXZfZW5kOyBpKyssIGorKykgew0KKwkJYl9ub2RlLT5waXZvdFtq
XSA9IHBpdm90c1tpXTsNCisJCWlmICh1bmxpa2VseSghYl9ub2RlLT5waXZvdFtqXSkpDQorCQkJ
YnJlYWs7DQorDQorCQlpZiAodW5saWtlbHkobWFzLT5tYXggPT0gYl9ub2RlLT5waXZvdFtqXSkp
DQorCQkJZ290byBjb21wbGV0ZTsNCisJfQ0KKw0KKwlpZiAobGlrZWx5KGkgPD0gbWFzX2VuZCkp
DQorCQliX25vZGUtPnBpdm90W2pdID0gbWFzX3NhZmVfcGl2b3QobWFzLCBwaXZvdHMsIGksIG10
KTsNCisNCitjb21wbGV0ZToNCisJYl9ub2RlLT5iX2VuZCA9ICsrajsNCisJaiAtPSBtYWJfc3Rh
cnQ7DQorCXNsb3RzID0gbWFfc2xvdHMobm9kZSwgbXQpOw0KKwltZW1jcHkoYl9ub2RlLT5zbG90
ICsgbWFiX3N0YXJ0LCBzbG90cyArIG1hc19zdGFydCwgc2l6ZW9mKHZvaWQgKikgKiBqKTsNCisJ
aWYgKCFtYV9pc19sZWFmKG10KSAmJiBtdF9pc19hbGxvYyhtYXMtPnRyZWUpKSB7DQorCQlnYXBz
ID0gbWFfZ2Fwcyhub2RlLCBtdCk7DQorCQltZW1jcHkoYl9ub2RlLT5nYXAgKyBtYWJfc3RhcnQs
IGdhcHMgKyBtYXNfc3RhcnQsDQorCQkgICAgICAgc2l6ZW9mKHVuc2lnbmVkIGxvbmcpICogaik7
DQorCX0NCit9DQorDQorLyoNCisgKiBtYXNfbGVhZl9zZXRfbWV0YSgpIC0gU2V0IHRoZSBtZXRh
ZGF0YSBvZiBhIGxlYWYgaWYgcG9zc2libGUuDQorICogQG1hczogVGhlIG1hcGxlIHN0YXRlDQor
ICogQG5vZGU6IFRoZSBtYXBsZSBub2RlDQorICogQHBpdm90czogcG9pbnRlciB0byB0aGUgbWFw
bGUgbm9kZSBwaXZvdHMNCisgKiBAbXQ6IFRoZSBtYXBsZSB0eXBlDQorICogQGVuZDogVGhlIGFz
c3VtZWQgZW5kDQorICoNCisgKiBOb3RlLCBlbmQgbWF5IGJlIGluY3JlbWVudGVkIHdpdGhpbiB0
aGlzIGZ1bmN0aW9uIGJ1dCBub3QgbW9kaWZpZWQgYXQgdGhlDQorICogc291cmNlLiAgVGhpcyBp
cyBmaW5lIHNpbmNlIHRoZSBtZXRhZGF0YSBpcyB0aGUgbGFzdCB0aGluZyB0byBiZSBzdG9yZWQg
aW4gYQ0KKyAqIG5vZGUgZHVyaW5nIGEgd3JpdGUuDQorICovDQorc3RhdGljIGlubGluZSB2b2lk
IG1hc19sZWFmX3NldF9tZXRhKHN0cnVjdCBtYV9zdGF0ZSAqbWFzLA0KKwkJc3RydWN0IG1hcGxl
X25vZGUgKm5vZGUsIHVuc2lnbmVkIGxvbmcgKnBpdm90cywNCisJCWVudW0gbWFwbGVfdHlwZSBt
dCwgdW5zaWduZWQgY2hhciBlbmQpDQorew0KKwkvKiBUaGVyZSBpcyBubyByb29tIGZvciBtZXRh
ZGF0YSBhbHJlYWR5ICovDQorCWlmIChtdF9waXZvdHNbbXRdIDw9IGVuZCkNCisJCXJldHVybjsN
CisNCisJaWYgKHBpdm90c1tlbmRdICYmIHBpdm90c1tlbmRdIDwgbWFzLT5tYXgpDQorCQllbmQr
KzsNCisNCisJaWYgKGVuZCA8IG10X3Nsb3RzW210XSAtIDEpDQorCQltYV9zZXRfbWV0YShub2Rl
LCBtdCwgMCwgZW5kKTsNCit9DQorDQorLyoNCisgKiBtYWJfbWFzX2NwKCkgLSBDb3B5IGRhdGEg
ZnJvbSBtYXBsZV9iaWdfbm9kZSB0byBhIG1hcGxlIGVuY29kZWQgbm9kZS4NCisgKiBAYl9ub2Rl
OiB0aGUgbWFwbGVfYmlnX25vZGUgdGhhdCBoYXMgdGhlIGRhdGENCisgKiBAbWFiX3N0YXJ0OiB0
aGUgc3RhcnQgbG9jYXRpb24gaW4gQGJfbm9kZS4NCisgKiBAbWFiX2VuZDogVGhlIGVuZCBsb2Nh
dGlvbiBpbiBAYl9ub2RlIChpbmNsdXNpdmVseSkNCisgKiBAbWFzOiBUaGUgbWFwbGUgc3RhdGUg
d2l0aCB0aGUgbWFwbGUgZW5jb2RlZCBub2RlLg0KKyAqLw0KK3N0YXRpYyBpbmxpbmUgdm9pZCBt
YWJfbWFzX2NwKHN0cnVjdCBtYXBsZV9iaWdfbm9kZSAqYl9ub2RlLA0KKwkJCSAgICAgIHVuc2ln
bmVkIGNoYXIgbWFiX3N0YXJ0LCB1bnNpZ25lZCBjaGFyIG1hYl9lbmQsDQorCQkJICAgICAgc3Ry
dWN0IG1hX3N0YXRlICptYXMsIGJvb2wgbmV3X21heCkNCit7DQorCWludCBpLCBqID0gMDsNCisJ
ZW51bSBtYXBsZV90eXBlIG10ID0gbXRlX25vZGVfdHlwZShtYXMtPm5vZGUpOw0KKwlzdHJ1Y3Qg
bWFwbGVfbm9kZSAqbm9kZSA9IG10ZV90b19ub2RlKG1hcy0+bm9kZSk7DQorCXZvaWQgX19yY3Ug
KipzbG90cyA9IG1hX3Nsb3RzKG5vZGUsIG10KTsNCisJdW5zaWduZWQgbG9uZyAqcGl2b3RzID0g
bWFfcGl2b3RzKG5vZGUsIG10KTsNCisJdW5zaWduZWQgbG9uZyAqZ2FwcyA9IE5VTEw7DQorCXVu
c2lnbmVkIGNoYXIgZW5kOw0KKw0KKwlpZiAobWFiX2VuZCAtIG1hYl9zdGFydCA+IG10X3Bpdm90
c1ttdF0pDQorCQltYWJfZW5kLS07DQorDQorCWlmICghcGl2b3RzW210X3Bpdm90c1ttdF0gLSAx
XSkNCisJCXNsb3RzW210X3Bpdm90c1ttdF1dID0gTlVMTDsNCisNCisJaSA9IG1hYl9zdGFydDsN
CisJZG8gew0KKwkJcGl2b3RzW2orK10gPSBiX25vZGUtPnBpdm90W2krK107DQorCX0gd2hpbGUg
KGkgPD0gbWFiX2VuZCAmJiBsaWtlbHkoYl9ub2RlLT5waXZvdFtpXSkpOw0KKw0KKwltZW1jcHko
c2xvdHMsIGJfbm9kZS0+c2xvdCArIG1hYl9zdGFydCwNCisJICAgICAgIHNpemVvZih2b2lkICop
ICogKGkgLSBtYWJfc3RhcnQpKTsNCisNCisJaWYgKG5ld19tYXgpDQorCQltYXMtPm1heCA9IGJf
bm9kZS0+cGl2b3RbaSAtIDFdOw0KKw0KKwllbmQgPSBqIC0gMTsNCisJaWYgKGxpa2VseSghbWFf
aXNfbGVhZihtdCkgJiYgbXRfaXNfYWxsb2MobWFzLT50cmVlKSkpIHsNCisJCXVuc2lnbmVkIGxv
bmcgbWF4X2dhcCA9IDA7DQorCQl1bnNpZ25lZCBjaGFyIG9mZnNldCA9IDE1Ow0KKw0KKwkJZ2Fw
cyA9IG1hX2dhcHMobm9kZSwgbXQpOw0KKwkJZG8gew0KKwkJCWdhcHNbLS1qXSA9IGJfbm9kZS0+
Z2FwWy0taV07DQorCQkJaWYgKGdhcHNbal0gPiBtYXhfZ2FwKSB7DQorCQkJCW9mZnNldCA9IGo7
DQorCQkJCW1heF9nYXAgPSBnYXBzW2pdOw0KKwkJCX0NCisJCX0gd2hpbGUgKGopOw0KKw0KKwkJ
bWFfc2V0X21ldGEobm9kZSwgbXQsIG9mZnNldCwgZW5kKTsNCisJfSBlbHNlIHsNCisJCW1hc19s
ZWFmX3NldF9tZXRhKG1hcywgbm9kZSwgcGl2b3RzLCBtdCwgZW5kKTsNCisJfQ0KK30NCisNCisv
Kg0KKyAqIG1hc19kZXNjZW5kX2Fkb3B0KCkgLSBEZXNjZW5kIHRocm91Z2ggYSBzdWItdHJlZSBh
bmQgYWRvcHQgY2hpbGRyZW4uDQorICogQG1hczogdGhlIG1hcGxlIHN0YXRlIHdpdGggdGhlIG1h
cGxlIGVuY29kZWQgbm9kZSBvZiB0aGUgc3ViLXRyZWUuDQorICoNCisgKiBEZXNjZW5kIHRocm91
Z2ggYSBzdWItdHJlZSBhbmQgYWRvcHQgY2hpbGRyZW4gd2hvIGRvIG5vdCBoYXZlIHRoZSBjb3Jy
ZWN0DQorICogcGFyZW50cyBzZXQuICBGb2xsb3cgdGhlIHBhcmVudHMgd2hpY2ggaGF2ZSB0aGUg
Y29ycmVjdCBwYXJlbnRzIGFzIHRoZXkgYXJlDQorICogdGhlIG5ldyBlbnRyaWVzIHdoaWNoIG5l
ZWQgdG8gYmUgZm9sbG93ZWQgdG8gZmluZCBvdGhlciBpbmNvcnJlY3RseSBzZXQNCisgKiBwYXJl
bnRzLg0KKyAqLw0KK3N0YXRpYyBpbmxpbmUgdm9pZCBtYXNfZGVzY2VuZF9hZG9wdChzdHJ1Y3Qg
bWFfc3RhdGUgKm1hcykNCit7DQorCXN0cnVjdCBtYV9zdGF0ZSBsaXN0WzNdLCBuZXh0WzNdOw0K
KwlpbnQgaSwgbjsNCisNCisJLyoNCisJICogQXQgZWFjaCBsZXZlbCB0aGVyZSBtYXkgYmUgdXAg
dG8gMyBjb3JyZWN0IHBhcmVudCBwb2ludGVycyB3aGljaCBpbmRpY2F0ZXMNCisJICogdGhlIG5l
dyBub2RlcyB3aGljaCBuZWVkIHRvIGJlIHdhbGtlZCB0byBmaW5kIGFueSBuZXcgbm9kZXMgYXQg
YSBsb3dlciBsZXZlbC4NCisJICovDQorDQorCWZvciAoaSA9IDA7IGkgPCAzOyBpKyspIHsNCisJ
CWxpc3RbaV0gPSAqbWFzOw0KKwkJbGlzdFtpXS5vZmZzZXQgPSAwOw0KKwkJbmV4dFtpXS5vZmZz
ZXQgPSAwOw0KKwl9DQorCW5leHRbMF0gPSAqbWFzOw0KKw0KKwl3aGlsZSAoIW10ZV9pc19sZWFm
KGxpc3RbMF0ubm9kZSkpIHsNCisJCW4gPSAwOw0KKwkJZm9yIChpID0gMDsgaSA8IDM7IGkrKykg
ew0KKwkJCWlmIChtYXNfaXNfbm9uZSgmbGlzdFtpXSkpDQorCQkJCWNvbnRpbnVlOw0KKw0KKwkJ
CWlmIChpICYmIGxpc3RbaS0xXS5ub2RlID09IGxpc3RbaV0ubm9kZSkNCisJCQkJY29udGludWU7
DQorDQorCQkJd2hpbGUgKChuIDwgMykgJiYgKG1hc19uZXdfY2hpbGQoJmxpc3RbaV0sICZuZXh0
W25dKSkpDQorCQkJCW4rKzsNCisNCisJCQltYXNfYWRvcHRfY2hpbGRyZW4oJmxpc3RbaV0sIGxp
c3RbaV0ubm9kZSk7DQorCQl9DQorDQorCQl3aGlsZSAobiA8IDMpDQorCQkJbmV4dFtuKytdLm5v
ZGUgPSBNQVNfTk9ORTsNCisNCisJCS8qIGRlc2NlbmQgYnkgc2V0dGluZyB0aGUgbGlzdCB0byB0
aGUgY2hpbGRyZW4gKi8NCisJCWZvciAoaSA9IDA7IGkgPCAzOyBpKyspDQorCQkJbGlzdFtpXSA9
IG5leHRbaV07DQorCX0NCit9DQorDQorLyoNCisgKiBtYXNfYnVsa19yZWJhbGFuY2UoKSAtIFJl
YmFsYW5jZSB0aGUgZW5kIG9mIGEgdHJlZSBhZnRlciBhIGJ1bGsgaW5zZXJ0Lg0KKyAqIEBtYXM6
IFRoZSBtYXBsZSBzdGF0ZQ0KKyAqIEBlbmQ6IFRoZSBtYXBsZSBub2RlIGVuZA0KKyAqIEBtdDog
VGhlIG1hcGxlIG5vZGUgdHlwZQ0KKyAqLw0KK3N0YXRpYyBpbmxpbmUgdm9pZCBtYXNfYnVsa19y
ZWJhbGFuY2Uoc3RydWN0IG1hX3N0YXRlICptYXMsIHVuc2lnbmVkIGNoYXIgZW5kLA0KKwkJCQkg
ICAgICBlbnVtIG1hcGxlX3R5cGUgbXQpDQorew0KKwlpZiAoIShtYXMtPm1hc19mbGFncyAmIE1B
X1NUQVRFX0JVTEspKQ0KKwkJcmV0dXJuOw0KKw0KKwlpZiAobXRlX2lzX3Jvb3QobWFzLT5ub2Rl
KSkNCisJCXJldHVybjsNCisNCisJaWYgKGVuZCA+IG10X21pbl9zbG90c1ttdF0pIHsNCisJCW1h
cy0+bWFzX2ZsYWdzICY9IH5NQV9TVEFURV9SRUJBTEFOQ0U7DQorCQlyZXR1cm47DQorCX0NCit9
DQorDQorLyoNCisgKiBtYXNfc3RvcmVfYl9ub2RlKCkgLSBTdG9yZSBhbiBAZW50cnkgaW50byB0
aGUgYl9ub2RlIHdoaWxlIGFsc28gY29weWluZyB0aGUNCisgKiBkYXRhIGZyb20gYSBtYXBsZSBl
bmNvZGVkIG5vZGUuDQorICogQHdyX21hczogdGhlIG1hcGxlIHdyaXRlIHN0YXRlDQorICogQGJf
bm9kZTogdGhlIG1hcGxlX2JpZ19ub2RlIHRvIGZpbGwgd2l0aCBkYXRhDQorICogQG9mZnNldF9l
bmQ6IHRoZSBvZmZzZXQgdG8gZW5kIGNvcHlpbmcNCisgKg0KKyAqIFJldHVybjogVGhlIGFjdHVh
bCBlbmQgb2YgdGhlIGRhdGEgc3RvcmVkIGluIEBiX25vZGUNCisgKi8NCitzdGF0aWMgaW5saW5l
IHZvaWQgbWFzX3N0b3JlX2Jfbm9kZShzdHJ1Y3QgbWFfd3Jfc3RhdGUgKndyX21hcywNCisJCXN0
cnVjdCBtYXBsZV9iaWdfbm9kZSAqYl9ub2RlLCB1bnNpZ25lZCBjaGFyIG9mZnNldF9lbmQpDQor
ew0KKwl1bnNpZ25lZCBjaGFyIHNsb3Q7DQorCXVuc2lnbmVkIGNoYXIgYl9lbmQ7DQorCS8qIFBv
c3NpYmxlIHVuZGVyZmxvdyBvZiBwaXYgd2lsbCB3cmFwIGJhY2sgdG8gMCBiZWZvcmUgdXNlLiAq
Lw0KKwl1bnNpZ25lZCBsb25nIHBpdjsNCisJc3RydWN0IG1hX3N0YXRlICptYXMgPSB3cl9tYXMt
Pm1hczsNCisNCisJYl9ub2RlLT50eXBlID0gd3JfbWFzLT50eXBlOw0KKwliX2VuZCA9IDA7DQor
CXNsb3QgPSBtYXMtPm9mZnNldDsNCisJaWYgKHNsb3QpIHsNCisJCS8qIENvcHkgc3RhcnQgZGF0
YSB1cCB0byBpbnNlcnQuICovDQorCQltYXNfbWFiX2NwKG1hcywgMCwgc2xvdCAtIDEsIGJfbm9k
ZSwgMCk7DQorCQliX2VuZCA9IGJfbm9kZS0+Yl9lbmQ7DQorCQlwaXYgPSBiX25vZGUtPnBpdm90
W2JfZW5kIC0gMV07DQorCX0gZWxzZQ0KKwkJcGl2ID0gbWFzLT5taW4gLSAxOw0KKw0KKwlpZiAo
cGl2ICsgMSA8IG1hcy0+aW5kZXgpIHsNCisJCS8qIEhhbmRsZSByYW5nZSBzdGFydGluZyBhZnRl
ciBvbGQgcmFuZ2UgKi8NCisJCWJfbm9kZS0+c2xvdFtiX2VuZF0gPSB3cl9tYXMtPmNvbnRlbnQ7
DQorCQlpZiAoIXdyX21hcy0+Y29udGVudCkNCisJCQliX25vZGUtPmdhcFtiX2VuZF0gPSBtYXMt
PmluZGV4IC0gMSAtIHBpdjsNCisJCWJfbm9kZS0+cGl2b3RbYl9lbmQrK10gPSBtYXMtPmluZGV4
IC0gMTsNCisJfQ0KKw0KKwkvKiBTdG9yZSB0aGUgbmV3IGVudHJ5LiAqLw0KKwltYXMtPm9mZnNl
dCA9IGJfZW5kOw0KKwliX25vZGUtPnNsb3RbYl9lbmRdID0gd3JfbWFzLT5lbnRyeTsNCisJYl9u
b2RlLT5waXZvdFtiX2VuZF0gPSBtYXMtPmxhc3Q7DQorDQorCS8qIEFwcGVuZGVkLiAqLw0KKwlp
ZiAobWFzLT5sYXN0ID49IG1hcy0+bWF4KQ0KKwkJZ290byBiX2VuZDsNCisNCisJLyogSGFuZGxl
IG5ldyByYW5nZSBlbmRpbmcgYmVmb3JlIG9sZCByYW5nZSBlbmRzICovDQorCXBpdiA9IG1hc19s
b2dpY2FsX3Bpdm90KG1hcywgd3JfbWFzLT5waXZvdHMsIG9mZnNldF9lbmQsIHdyX21hcy0+dHlw
ZSk7DQorCWlmIChwaXYgPiBtYXMtPmxhc3QpIHsNCisJCWlmIChwaXYgPT0gVUxPTkdfTUFYKQ0K
KwkJCW1hc19idWxrX3JlYmFsYW5jZShtYXMsIGJfbm9kZS0+Yl9lbmQsIHdyX21hcy0+dHlwZSk7
DQorDQorCQlpZiAob2Zmc2V0X2VuZCAhPSBzbG90KQ0KKwkJCXdyX21hcy0+Y29udGVudCA9IG1h
c19zbG90X2xvY2tlZChtYXMsIHdyX21hcy0+c2xvdHMsDQorCQkJCQkJCSAgb2Zmc2V0X2VuZCk7
DQorDQorCQliX25vZGUtPnNsb3RbKytiX2VuZF0gPSB3cl9tYXMtPmNvbnRlbnQ7DQorCQlpZiAo
IXdyX21hcy0+Y29udGVudCkNCisJCQliX25vZGUtPmdhcFtiX2VuZF0gPSBwaXYgLSBtYXMtPmxh
c3QgKyAxOw0KKwkJYl9ub2RlLT5waXZvdFtiX2VuZF0gPSBwaXY7DQorCX0NCisNCisJc2xvdCA9
IG9mZnNldF9lbmQgKyAxOw0KKwlpZiAoc2xvdCA+IHdyX21hcy0+bm9kZV9lbmQpDQorCQlnb3Rv
IGJfZW5kOw0KKw0KKwkvKiBDb3B5IGVuZCBkYXRhIHRvIHRoZSBlbmQgb2YgdGhlIG5vZGUuICov
DQorCW1hc19tYWJfY3AobWFzLCBzbG90LCB3cl9tYXMtPm5vZGVfZW5kICsgMSwgYl9ub2RlLCAr
K2JfZW5kKTsNCisJYl9ub2RlLT5iX2VuZC0tOw0KKwlyZXR1cm47DQorDQorYl9lbmQ6DQorCWJf
bm9kZS0+Yl9lbmQgPSBiX2VuZDsNCit9DQorDQorLyoNCisgKiBtYXNfcHJldl9zaWJsaW5nKCkg
LSBGaW5kIHRoZSBwcmV2aW91cyBub2RlIHdpdGggdGhlIHNhbWUgcGFyZW50Lg0KKyAqIEBtYXM6
IHRoZSBtYXBsZSBzdGF0ZQ0KKyAqDQorICogUmV0dXJuOiBUcnVlIGlmIHRoZXJlIGlzIGEgcHJl
dmlvdXMgc2libGluZywgZmFsc2Ugb3RoZXJ3aXNlLg0KKyAqLw0KK3N0YXRpYyBpbmxpbmUgYm9v
bCBtYXNfcHJldl9zaWJsaW5nKHN0cnVjdCBtYV9zdGF0ZSAqbWFzKQ0KK3sNCisJdW5zaWduZWQg
aW50IHBfc2xvdCA9IG10ZV9wYXJlbnRfc2xvdChtYXMtPm5vZGUpOw0KKw0KKwlpZiAobXRlX2lz
X3Jvb3QobWFzLT5ub2RlKSkNCisJCXJldHVybiBmYWxzZTsNCisNCisJaWYgKCFwX3Nsb3QpDQor
CQlyZXR1cm4gZmFsc2U7DQorDQorCW1hc19hc2NlbmQobWFzKTsNCisJbWFzLT5vZmZzZXQgPSBw
X3Nsb3QgLSAxOw0KKwltYXNfZGVzY2VuZChtYXMpOw0KKwlyZXR1cm4gdHJ1ZTsNCit9DQorDQor
LyoNCisgKiBtYXNfbmV4dF9zaWJsaW5nKCkgLSBGaW5kIHRoZSBuZXh0IG5vZGUgd2l0aCB0aGUg
c2FtZSBwYXJlbnQuDQorICogQG1hczogdGhlIG1hcGxlIHN0YXRlDQorICoNCisgKiBSZXR1cm46
IHRydWUgaWYgdGhlcmUgaXMgYSBuZXh0IHNpYmxpbmcsIGZhbHNlIG90aGVyd2lzZS4NCisgKi8N
CitzdGF0aWMgaW5saW5lIGJvb2wgbWFzX25leHRfc2libGluZyhzdHJ1Y3QgbWFfc3RhdGUgKm1h
cykNCit7DQorCU1BX1NUQVRFKHBhcmVudCwgbWFzLT50cmVlLCBtYXMtPmluZGV4LCBtYXMtPmxh
c3QpOw0KKw0KKwlpZiAobXRlX2lzX3Jvb3QobWFzLT5ub2RlKSkNCisJCXJldHVybiBmYWxzZTsN
CisNCisJcGFyZW50ID0gKm1hczsNCisJbWFzX2FzY2VuZCgmcGFyZW50KTsNCisJcGFyZW50Lm9m
ZnNldCA9IG10ZV9wYXJlbnRfc2xvdChtYXMtPm5vZGUpICsgMTsNCisJaWYgKHBhcmVudC5vZmZz
ZXQgPiBtYXNfZGF0YV9lbmQoJnBhcmVudCkpDQorCQlyZXR1cm4gZmFsc2U7DQorDQorCSptYXMg
PSBwYXJlbnQ7DQorCW1hc19kZXNjZW5kKG1hcyk7DQorCXJldHVybiB0cnVlOw0KK30NCisNCisv
Kg0KKyAqIG10ZV9ub2RlX29yX25vZGUoKSAtIFJldHVybiB0aGUgZW5jb2RlZCBub2RlIG9yIE1B
U19OT05FLg0KKyAqIEBlbm9kZTogVGhlIGVuY29kZWQgbWFwbGUgbm9kZS4NCisgKg0KKyAqIFNo
b3J0aGFuZCB0byBhdm9pZCBzZXR0aW5nICVOVUxMcyBpbiB0aGUgdHJlZSBvciBtYXBsZV9zdWJ0
cmVlX3N0YXRlLg0KKyAqDQorICogUmV0dXJuOiBAZW5vZGUgb3IgTUFTX05PTkUNCisgKi8NCitz
dGF0aWMgaW5saW5lIHN0cnVjdCBtYXBsZV9lbm9kZSAqbXRlX25vZGVfb3Jfbm9uZShzdHJ1Y3Qg
bWFwbGVfZW5vZGUgKmVub2RlKQ0KK3sNCisJaWYgKGVub2RlKQ0KKwkJcmV0dXJuIGVub2RlOw0K
Kw0KKwlyZXR1cm4gbWFfZW5vZGVfcHRyKE1BU19OT05FKTsNCit9DQorDQorLyoNCisgKiBtYXNf
d3Jfbm9kZV93YWxrKCkgLSBGaW5kIHRoZSBjb3JyZWN0IG9mZnNldCBmb3IgdGhlIGluZGV4IGlu
IHRoZSBAbWFzLg0KKyAqIEB3cl9tYXM6IFRoZSBtYXBsZSB3cml0ZSBzdGF0ZQ0KKyAqDQorICog
VXNlcyBtYXNfc2xvdF9sb2NrZWQoKSBhbmQgZG9lcyBub3QgbmVlZCB0byB3b3JyeSBhYm91dCBk
ZWFkIG5vZGVzLg0KKyAqLw0KK3N0YXRpYyBpbmxpbmUgdm9pZCBtYXNfd3Jfbm9kZV93YWxrKHN0
cnVjdCBtYV93cl9zdGF0ZSAqd3JfbWFzKQ0KK3sNCisJc3RydWN0IG1hX3N0YXRlICptYXMgPSB3
cl9tYXMtPm1hczsNCisJdW5zaWduZWQgY2hhciBjb3VudDsNCisJdW5zaWduZWQgY2hhciBvZmZz
ZXQ7DQorCXVuc2lnbmVkIGxvbmcgaW5kZXgsIG1pbiwgbWF4Ow0KKw0KKwlpZiAodW5saWtlbHko
bWFfaXNfZGVuc2Uod3JfbWFzLT50eXBlKSkpIHsNCisJCXdyX21hcy0+cl9tYXggPSB3cl9tYXMt
PnJfbWluID0gbWFzLT5pbmRleDsNCisJCW1hcy0+b2Zmc2V0ID0gbWFzLT5pbmRleCA9IG1hcy0+
bWluOw0KKwkJcmV0dXJuOw0KKwl9DQorDQorCXdyX21hcy0+bm9kZSA9IG1hc19tbih3cl9tYXMt
Pm1hcyk7DQorCXdyX21hcy0+cGl2b3RzID0gbWFfcGl2b3RzKHdyX21hcy0+bm9kZSwgd3JfbWFz
LT50eXBlKTsNCisJY291bnQgPSB3cl9tYXMtPm5vZGVfZW5kID0gbWFfZGF0YV9lbmQod3JfbWFz
LT5ub2RlLCB3cl9tYXMtPnR5cGUsDQorCQkJCQkgICAgICAgd3JfbWFzLT5waXZvdHMsIG1hcy0+
bWF4KTsNCisJb2Zmc2V0ID0gbWFzLT5vZmZzZXQ7DQorCW1pbiA9IG1hc19zYWZlX21pbihtYXMs
IHdyX21hcy0+cGl2b3RzLCBvZmZzZXQpOw0KKwlpZiAodW5saWtlbHkob2Zmc2V0ID09IGNvdW50
KSkNCisJCWdvdG8gbWF4Ow0KKw0KKwltYXggPSB3cl9tYXMtPnBpdm90c1tvZmZzZXRdOw0KKwlp
bmRleCA9IG1hcy0+aW5kZXg7DQorCWlmICh1bmxpa2VseShpbmRleCA8PSBtYXgpKQ0KKwkJZ290
byBkb25lOw0KKw0KKwlpZiAodW5saWtlbHkoIW1heCAmJiBvZmZzZXQpKQ0KKwkJZ290byBtYXg7
DQorDQorCW1pbiA9IG1heCArIDE7DQorCXdoaWxlICgrK29mZnNldCA8IGNvdW50KSB7DQorCQlt
YXggPSB3cl9tYXMtPnBpdm90c1tvZmZzZXRdOw0KKwkJaWYgKGluZGV4IDw9IG1heCkNCisJCQln
b3RvIGRvbmU7DQorCQllbHNlIGlmICh1bmxpa2VseSghbWF4KSkNCisJCQlicmVhazsNCisNCisJ
CW1pbiA9IG1heCArIDE7DQorCX0NCisNCittYXg6DQorCW1heCA9IG1hcy0+bWF4Ow0KK2RvbmU6
DQorCXdyX21hcy0+cl9tYXggPSBtYXg7DQorCXdyX21hcy0+cl9taW4gPSBtaW47DQorCXdyX21h
cy0+b2Zmc2V0X2VuZCA9IG1hcy0+b2Zmc2V0ID0gb2Zmc2V0Ow0KK30NCisNCisvKg0KKyAqIG1h
c190b3BpYXJ5X3JhbmdlKCkgLSBBZGQgYSByYW5nZSBvZiBzbG90cyB0byB0aGUgdG9waWFyeS4N
CisgKiBAbWFzOiBUaGUgbWFwbGUgc3RhdGUNCisgKiBAZGVzdHJveTogVGhlIHRvcGlhcnkgdG8g
YWRkIHRoZSBzbG90cyAodXN1YWxseSBkZXN0cm95KQ0KKyAqIEBzdGFydDogVGhlIHN0YXJ0aW5n
IHNsb3QgaW5jbHVzaXZlbHkNCisgKiBAZW5kOiBUaGUgZW5kIHNsb3QgaW5jbHVzaXZlbHkNCisg
Ki8NCitzdGF0aWMgaW5saW5lIHZvaWQgbWFzX3RvcGlhcnlfcmFuZ2Uoc3RydWN0IG1hX3N0YXRl
ICptYXMsDQorCXN0cnVjdCBtYV90b3BpYXJ5ICpkZXN0cm95LCB1bnNpZ25lZCBjaGFyIHN0YXJ0
LCB1bnNpZ25lZCBjaGFyIGVuZCkNCit7DQorCXZvaWQgX19yY3UgKipzbG90czsNCisJdW5zaWdu
ZWQgY2hhciBvZmZzZXQ7DQorDQorCU1UX0JVR19PTihtYXMtPnRyZWUsIG10ZV9pc19sZWFmKG1h
cy0+bm9kZSkpOw0KKwlzbG90cyA9IG1hX3Nsb3RzKG1hc19tbihtYXMpLCBtdGVfbm9kZV90eXBl
KG1hcy0+bm9kZSkpOw0KKwlmb3IgKG9mZnNldCA9IHN0YXJ0OyBvZmZzZXQgPD0gZW5kOyBvZmZz
ZXQrKykgew0KKwkJc3RydWN0IG1hcGxlX2Vub2RlICplbm9kZSA9IG1hc19zbG90X2xvY2tlZCht
YXMsIHNsb3RzLCBvZmZzZXQpOw0KKw0KKwkJaWYgKG10ZV9kZWFkX25vZGUoZW5vZGUpKQ0KKwkJ
CWNvbnRpbnVlOw0KKw0KKwkJbWF0X2FkZChkZXN0cm95LCBlbm9kZSk7DQorCX0NCit9DQorDQor
LyoNCisgKiBtYXN0X3RvcGlhcnkoKSAtIEFkZCB0aGUgcG9ydGlvbnMgb2YgdGhlIHRyZWUgdG8g
dGhlIHJlbW92YWwgbGlzdDsgZWl0aGVyIHRvDQorICogYmUgZnJlZWQgb3IgZGlzY2FyZGVkIChk
ZXN0cm95IHdhbGspLg0KKyAqIEBtYXN0OiBUaGUgbWFwbGVfc3VidHJlZV9zdGF0ZS4NCisgKi8N
CitzdGF0aWMgaW5saW5lIHZvaWQgbWFzdF90b3BpYXJ5KHN0cnVjdCBtYXBsZV9zdWJ0cmVlX3N0
YXRlICptYXN0KQ0KK3sNCisJTUFfV1JfU1RBVEUod3JfbWFzLCBtYXN0LT5vcmlnX2wsIE5VTEwp
Ow0KKwl1bnNpZ25lZCBjaGFyIHJfc3RhcnQsIHJfZW5kOw0KKwl1bnNpZ25lZCBjaGFyIGxfc3Rh
cnQsIGxfZW5kOw0KKwl2b2lkIF9fcmN1ICoqbF9zbG90cywgKipyX3Nsb3RzOw0KKw0KKwl3cl9t
YXMudHlwZSA9IG10ZV9ub2RlX3R5cGUobWFzdC0+b3JpZ19sLT5ub2RlKTsNCisJbWFzdC0+b3Jp
Z19sLT5pbmRleCA9IG1hc3QtPm9yaWdfbC0+bGFzdDsNCisJbWFzX3dyX25vZGVfd2Fsaygmd3Jf
bWFzKTsNCisJbF9zdGFydCA9IG1hc3QtPm9yaWdfbC0+b2Zmc2V0ICsgMTsNCisJbF9lbmQgPSBt
YXNfZGF0YV9lbmQobWFzdC0+b3JpZ19sKTsNCisJcl9zdGFydCA9IDA7DQorCXJfZW5kID0gbWFz
dC0+b3JpZ19yLT5vZmZzZXQ7DQorDQorCWlmIChyX2VuZCkNCisJCXJfZW5kLS07DQorDQorCWxf
c2xvdHMgPSBtYV9zbG90cyhtYXNfbW4obWFzdC0+b3JpZ19sKSwNCisJCQkgICBtdGVfbm9kZV90
eXBlKG1hc3QtPm9yaWdfbC0+bm9kZSkpOw0KKw0KKwlyX3Nsb3RzID0gbWFfc2xvdHMobWFzX21u
KG1hc3QtPm9yaWdfciksDQorCQkJICAgbXRlX25vZGVfdHlwZShtYXN0LT5vcmlnX3ItPm5vZGUp
KTsNCisNCisJaWYgKChsX3N0YXJ0IDwgbF9lbmQpICYmDQorCSAgICBtdGVfZGVhZF9ub2RlKG1h
c19zbG90X2xvY2tlZChtYXN0LT5vcmlnX2wsIGxfc2xvdHMsIGxfc3RhcnQpKSkgew0KKwkJbF9z
dGFydCsrOw0KKwl9DQorDQorCWlmIChtdGVfZGVhZF9ub2RlKG1hc19zbG90X2xvY2tlZChtYXN0
LT5vcmlnX3IsIHJfc2xvdHMsIHJfZW5kKSkpIHsNCisJCWlmIChyX2VuZCkNCisJCQlyX2VuZC0t
Ow0KKwl9DQorDQorCWlmICgobF9zdGFydCA+IHJfZW5kKSAmJiAobWFzdC0+b3JpZ19sLT5ub2Rl
ID09IG1hc3QtPm9yaWdfci0+bm9kZSkpDQorCQlyZXR1cm47DQorDQorCS8qIEF0IHRoZSBub2Rl
IHdoZXJlIGxlZnQgYW5kIHJpZ2h0IHNpZGVzIG1lZXQsIGFkZCB0aGUgcGFydHMgYmV0d2VlbiAq
Lw0KKwlpZiAobWFzdC0+b3JpZ19sLT5ub2RlID09IG1hc3QtPm9yaWdfci0+bm9kZSkgew0KKwkJ
cmV0dXJuIG1hc190b3BpYXJ5X3JhbmdlKG1hc3QtPm9yaWdfbCwgbWFzdC0+ZGVzdHJveSwNCisJ
CQkJCSAgICAgbF9zdGFydCwgcl9lbmQpOw0KKwl9DQorDQorCS8qIG1hc3QtPm9yaWdfciBpcyBk
aWZmZXJlbnQgYW5kIGNvbnN1bWVkLiAqLw0KKwlpZiAobXRlX2lzX2xlYWYobWFzdC0+b3JpZ19y
LT5ub2RlKSkNCisJCXJldHVybjsNCisNCisJaWYgKG10ZV9kZWFkX25vZGUobWFzX3Nsb3RfbG9j
a2VkKG1hc3QtPm9yaWdfbCwgbF9zbG90cywgbF9lbmQpKSkNCisJCWxfZW5kLS07DQorDQorDQor
CWlmIChsX3N0YXJ0IDw9IGxfZW5kKQ0KKwkJbWFzX3RvcGlhcnlfcmFuZ2UobWFzdC0+b3JpZ19s
LCBtYXN0LT5kZXN0cm95LCBsX3N0YXJ0LCBsX2VuZCk7DQorDQorCWlmIChtdGVfZGVhZF9ub2Rl
KG1hc19zbG90X2xvY2tlZChtYXN0LT5vcmlnX3IsIHJfc2xvdHMsIHJfc3RhcnQpKSkNCisJCXJf
c3RhcnQrKzsNCisNCisJaWYgKHJfc3RhcnQgPD0gcl9lbmQpDQorCQltYXNfdG9waWFyeV9yYW5n
ZShtYXN0LT5vcmlnX3IsIG1hc3QtPmRlc3Ryb3ksIDAsIHJfZW5kKTsNCit9DQorDQorLyoNCisg
KiBtYXN0X3JlYmFsYW5jZV9uZXh0KCkgLSBSZWJhbGFuY2UgYWdhaW5zdCB0aGUgbmV4dCBub2Rl
DQorICogQG1hc3Q6IFRoZSBtYXBsZSBzdWJ0cmVlIHN0YXRlDQorICogQG9sZF9yOiBUaGUgZW5j
b2RlZCBtYXBsZSBub2RlIHRvIHRoZSByaWdodCAobmV4dCBub2RlKS4NCisgKi8NCitzdGF0aWMg
aW5saW5lIHZvaWQgbWFzdF9yZWJhbGFuY2VfbmV4dChzdHJ1Y3QgbWFwbGVfc3VidHJlZV9zdGF0
ZSAqbWFzdCkNCit7DQorCXVuc2lnbmVkIGNoYXIgYl9lbmQgPSBtYXN0LT5ibi0+Yl9lbmQ7DQor
DQorCW1hc19tYWJfY3AobWFzdC0+b3JpZ19yLCAwLCBtdF9zbG90X2NvdW50KG1hc3QtPm9yaWdf
ci0+bm9kZSksDQorCQkgICBtYXN0LT5ibiwgYl9lbmQpOw0KKwltYXN0LT5vcmlnX3ItPmxhc3Qg
PSBtYXN0LT5vcmlnX3ItPm1heDsNCit9DQorDQorLyoNCisgKiBtYXN0X3JlYmFsYW5jZV9wcmV2
KCkgLSBSZWJhbGFuY2UgYWdhaW5zdCB0aGUgcHJldmlvdXMgbm9kZQ0KKyAqIEBtYXN0OiBUaGUg
bWFwbGUgc3VidHJlZSBzdGF0ZQ0KKyAqIEBvbGRfbDogVGhlIGVuY29kZWQgbWFwbGUgbm9kZSB0
byB0aGUgbGVmdCAocHJldmlvdXMgbm9kZSkNCisgKi8NCitzdGF0aWMgaW5saW5lIHZvaWQgbWFz
dF9yZWJhbGFuY2VfcHJldihzdHJ1Y3QgbWFwbGVfc3VidHJlZV9zdGF0ZSAqbWFzdCkNCit7DQor
CXVuc2lnbmVkIGNoYXIgZW5kID0gbWFzX2RhdGFfZW5kKG1hc3QtPm9yaWdfbCkgKyAxOw0KKwl1
bnNpZ25lZCBjaGFyIGJfZW5kID0gbWFzdC0+Ym4tPmJfZW5kOw0KKw0KKwltYWJfc2hpZnRfcmln
aHQobWFzdC0+Ym4sIGVuZCk7DQorCW1hc19tYWJfY3AobWFzdC0+b3JpZ19sLCAwLCBlbmQgLSAx
LCBtYXN0LT5ibiwgMCk7DQorCW1hc3QtPmwtPm1pbiA9IG1hc3QtPm9yaWdfbC0+bWluOw0KKwlt
YXN0LT5vcmlnX2wtPmluZGV4ID0gbWFzdC0+b3JpZ19sLT5taW47DQorCW1hc3QtPmJuLT5iX2Vu
ZCA9IGVuZCArIGJfZW5kOw0KKwltYXN0LT5sLT5vZmZzZXQgKz0gZW5kOw0KK30NCisNCisvKg0K
KyAqIG1hc3Rfc3Bhbm5pbmdfcmViYWxhbmNlKCkgLSBSZWJhbGFuY2Ugbm9kZXMgd2l0aCBuZWFy
ZXN0IG5laWdoYm91ciBmYXZvdXJpbmcNCisgKiB0aGUgbm9kZSB0byB0aGUgcmlnaHQuICBDaGVj
a2luZyB0aGUgbm9kZXMgdG8gdGhlIHJpZ2h0IHRoZW4gdGhlIGxlZnQgYXQgZWFjaA0KKyAqIGxl
dmVsIHVwd2FyZHMgdW50aWwgcm9vdCBpcyByZWFjaGVkLiAgRnJlZSBhbmQgZGVzdHJveSBhcyBu
ZWVkZWQuDQorICogRGF0YSBpcyBjb3BpZWQgaW50byB0aGUgQG1hc3QtPmJuLg0KKyAqIEBtYXN0
OiBUaGUgbWFwbGVfc3VidHJlZV9zdGF0ZS4NCisgKi8NCitzdGF0aWMgaW5saW5lDQorYm9vbCBt
YXN0X3NwYW5uaW5nX3JlYmFsYW5jZShzdHJ1Y3QgbWFwbGVfc3VidHJlZV9zdGF0ZSAqbWFzdCkN
Cit7DQorCXN0cnVjdCBtYV9zdGF0ZSByX3RtcCA9ICptYXN0LT5vcmlnX3I7DQorCXN0cnVjdCBt
YV9zdGF0ZSBsX3RtcCA9ICptYXN0LT5vcmlnX2w7DQorCXN0cnVjdCBtYXBsZV9lbm9kZSAqYW5j
ZXN0b3IgPSBOVUxMOw0KKwl1bnNpZ25lZCBjaGFyIHN0YXJ0LCBlbmQ7DQorCXVuc2lnbmVkIGNo
YXIgZGVwdGggPSAwOw0KKw0KKwlyX3RtcCA9ICptYXN0LT5vcmlnX3I7DQorCWxfdG1wID0gKm1h
c3QtPm9yaWdfbDsNCisJZG8gew0KKwkJbWFzX2FzY2VuZChtYXN0LT5vcmlnX3IpOw0KKwkJbWFz
X2FzY2VuZChtYXN0LT5vcmlnX2wpOw0KKwkJZGVwdGgrKzsNCisJCWlmICghYW5jZXN0b3IgJiYN
CisJCSAgICAobWFzdC0+b3JpZ19yLT5ub2RlID09IG1hc3QtPm9yaWdfbC0+bm9kZSkpIHsNCisJ
CQlhbmNlc3RvciA9IG1hc3QtPm9yaWdfci0+bm9kZTsNCisJCQllbmQgPSBtYXN0LT5vcmlnX3It
Pm9mZnNldCAtIDE7DQorCQkJc3RhcnQgPSBtYXN0LT5vcmlnX2wtPm9mZnNldCArIDE7DQorCQl9
DQorDQorCQlpZiAobWFzdC0+b3JpZ19yLT5vZmZzZXQgPCBtYXNfZGF0YV9lbmQobWFzdC0+b3Jp
Z19yKSkgew0KKwkJCWlmICghYW5jZXN0b3IpIHsNCisJCQkJYW5jZXN0b3IgPSBtYXN0LT5vcmln
X3ItPm5vZGU7DQorCQkJCXN0YXJ0ID0gMDsNCisJCQl9DQorDQorCQkJbWFzdC0+b3JpZ19yLT5v
ZmZzZXQrKzsNCisJCQlkbyB7DQorCQkJCW1hc19kZXNjZW5kKG1hc3QtPm9yaWdfcik7DQorCQkJ
CW1hc3QtPm9yaWdfci0+b2Zmc2V0ID0gMDsNCisJCQkJZGVwdGgtLTsNCisJCQl9IHdoaWxlIChk
ZXB0aCk7DQorDQorCQkJbWFzdF9yZWJhbGFuY2VfbmV4dChtYXN0KTsNCisJCQlkbyB7DQorCQkJ
CXVuc2lnbmVkIGNoYXIgbF9vZmYgPSAwOw0KKwkJCQlzdHJ1Y3QgbWFwbGVfZW5vZGUgKmNoaWxk
ID0gcl90bXAubm9kZTsNCisNCisJCQkJbWFzX2FzY2VuZCgmcl90bXApOw0KKwkJCQlpZiAoYW5j
ZXN0b3IgPT0gcl90bXAubm9kZSkNCisJCQkJCWxfb2ZmID0gc3RhcnQ7DQorDQorCQkJCWlmIChy
X3RtcC5vZmZzZXQpDQorCQkJCQlyX3RtcC5vZmZzZXQtLTsNCisNCisJCQkJaWYgKGxfb2ZmIDwg
cl90bXAub2Zmc2V0KQ0KKwkJCQkJbWFzX3RvcGlhcnlfcmFuZ2UoJnJfdG1wLCBtYXN0LT5kZXN0
cm95LA0KKwkJCQkJCQkgIGxfb2ZmLCByX3RtcC5vZmZzZXQpOw0KKw0KKwkJCQlpZiAobF90bXAu
bm9kZSAhPSBjaGlsZCkNCisJCQkJCW1hdF9hZGQobWFzdC0+ZnJlZSwgY2hpbGQpOw0KKw0KKwkJ
CX0gd2hpbGUgKHJfdG1wLm5vZGUgIT0gYW5jZXN0b3IpOw0KKw0KKwkJCSptYXN0LT5vcmlnX2wg
PSBsX3RtcDsNCisJCQlyZXR1cm4gdHJ1ZTsNCisNCisJCX0gZWxzZSBpZiAobWFzdC0+b3JpZ19s
LT5vZmZzZXQgIT0gMCkgew0KKwkJCWlmICghYW5jZXN0b3IpIHsNCisJCQkJYW5jZXN0b3IgPSBt
YXN0LT5vcmlnX2wtPm5vZGU7DQorCQkJCWVuZCA9IG1hc19kYXRhX2VuZChtYXN0LT5vcmlnX2wp
Ow0KKwkJCX0NCisNCisJCQltYXN0LT5vcmlnX2wtPm9mZnNldC0tOw0KKwkJCWRvIHsNCisJCQkJ
bWFzX2Rlc2NlbmQobWFzdC0+b3JpZ19sKTsNCisJCQkJbWFzdC0+b3JpZ19sLT5vZmZzZXQgPQ0K
KwkJCQkJbWFzX2RhdGFfZW5kKG1hc3QtPm9yaWdfbCk7DQorCQkJCWRlcHRoLS07DQorCQkJfSB3
aGlsZSAoZGVwdGgpOw0KKw0KKwkJCW1hc3RfcmViYWxhbmNlX3ByZXYobWFzdCk7DQorCQkJZG8g
ew0KKwkJCQl1bnNpZ25lZCBjaGFyIHJfb2ZmOw0KKwkJCQlzdHJ1Y3QgbWFwbGVfZW5vZGUgKmNo
aWxkID0gbF90bXAubm9kZTsNCisNCisJCQkJbWFzX2FzY2VuZCgmbF90bXApOw0KKwkJCQlpZiAo
YW5jZXN0b3IgPT0gbF90bXAubm9kZSkNCisJCQkJCXJfb2ZmID0gZW5kOw0KKwkJCQllbHNlDQor
CQkJCQlyX29mZiA9IG1hc19kYXRhX2VuZCgmbF90bXApOw0KKw0KKwkJCQlpZiAobF90bXAub2Zm
c2V0IDwgcl9vZmYpDQorCQkJCQlsX3RtcC5vZmZzZXQrKzsNCisNCisJCQkJaWYgKGxfdG1wLm9m
ZnNldCA8IHJfb2ZmKQ0KKwkJCQkJbWFzX3RvcGlhcnlfcmFuZ2UoJmxfdG1wLCBtYXN0LT5kZXN0
cm95LA0KKwkJCQkJCQkgIGxfdG1wLm9mZnNldCwgcl9vZmYpOw0KKw0KKwkJCQlpZiAocl90bXAu
bm9kZSAhPSBjaGlsZCkNCisJCQkJCW1hdF9hZGQobWFzdC0+ZnJlZSwgY2hpbGQpOw0KKw0KKwkJ
CX0gd2hpbGUgKGxfdG1wLm5vZGUgIT0gYW5jZXN0b3IpOw0KKw0KKwkJCSptYXN0LT5vcmlnX3Ig
PSByX3RtcDsNCisJCQlyZXR1cm4gdHJ1ZTsNCisJCX0NCisJfSB3aGlsZSAoIW10ZV9pc19yb290
KG1hc3QtPm9yaWdfci0+bm9kZSkpOw0KKw0KKwkqbWFzdC0+b3JpZ19yID0gcl90bXA7DQorCSpt
YXN0LT5vcmlnX2wgPSBsX3RtcDsNCisJcmV0dXJuIGZhbHNlOw0KK30NCisNCisvKg0KKyAqIG1h
c3RfYXNjZW5kX2ZyZWUoKSAtIEFkZCBjdXJyZW50IG9yaWdpbmFsIG1hcGxlIHN0YXRlIG5vZGVz
IHRvIHRoZSBmcmVlIGxpc3QNCisgKiBhbmQgYXNjZW5kLg0KKyAqIEBtYXN0OiB0aGUgbWFwbGUg
c3VidHJlZSBzdGF0ZS4NCisgKg0KKyAqIEFzY2VuZCB0aGUgb3JpZ2luYWwgbGVmdCBhbmQgcmln
aHQgc2lkZXMgYW5kIGFkZCB0aGUgcHJldmlvdXMgbm9kZXMgdG8gdGhlDQorICogZnJlZSBsaXN0
LiAgU2V0IHRoZSBzbG90cyB0byBwb2ludCB0byB0aGUgY29ycmVjdCBsb2NhdGlvbiBpbiB0aGUg
bmV3IG5vZGVzLg0KKyAqLw0KK3N0YXRpYyBpbmxpbmUgdm9pZA0KK21hc3RfYXNjZW5kX2ZyZWUo
c3RydWN0IG1hcGxlX3N1YnRyZWVfc3RhdGUgKm1hc3QpDQorew0KKwlNQV9XUl9TVEFURSh3cl9t
YXMsIG1hc3QtPm9yaWdfciwgIE5VTEwpOw0KKwlzdHJ1Y3QgbWFwbGVfZW5vZGUgKmxlZnQgPSBt
YXN0LT5vcmlnX2wtPm5vZGU7DQorCXN0cnVjdCBtYXBsZV9lbm9kZSAqcmlnaHQgPSBtYXN0LT5v
cmlnX3ItPm5vZGU7DQorDQorCW1hc19hc2NlbmQobWFzdC0+b3JpZ19sKTsNCisJbWFzX2FzY2Vu
ZChtYXN0LT5vcmlnX3IpOw0KKwltYXRfYWRkKG1hc3QtPmZyZWUsIGxlZnQpOw0KKw0KKwlpZiAo
bGVmdCAhPSByaWdodCkNCisJCW1hdF9hZGQobWFzdC0+ZnJlZSwgcmlnaHQpOw0KKw0KKwltYXN0
LT5vcmlnX3ItPm9mZnNldCA9IDA7DQorCW1hc3QtPm9yaWdfci0+aW5kZXggPSBtYXN0LT5yLT5t
YXg7DQorCS8qIGxhc3Qgc2hvdWxkIGJlIGxhcmdlciB0aGFuIG9yIGVxdWFsIHRvIGluZGV4ICov
DQorCWlmIChtYXN0LT5vcmlnX3ItPmxhc3QgPCBtYXN0LT5vcmlnX3ItPmluZGV4KQ0KKwkJbWFz
dC0+b3JpZ19yLT5sYXN0ID0gbWFzdC0+b3JpZ19yLT5pbmRleDsNCisJLyoNCisJICogVGhlIG5v
ZGUgbWF5IG5vdCBjb250YWluIHRoZSB2YWx1ZSBzbyBzZXQgc2xvdCB0byBlbnN1cmUgYWxsDQor
CSAqIG9mIHRoZSBub2RlcyBjb250ZW50cyBhcmUgZnJlZWQgb3IgZGVzdHJveWVkLg0KKwkgKi8N
CisJd3JfbWFzLnR5cGUgPSBtdGVfbm9kZV90eXBlKG1hc3QtPm9yaWdfci0+bm9kZSk7DQorCW1h
c193cl9ub2RlX3dhbGsoJndyX21hcyk7DQorCS8qIFNldCB1cCB0aGUgbGVmdCBzaWRlIG9mIHRo
aW5ncyAqLw0KKwltYXN0LT5vcmlnX2wtPm9mZnNldCA9IDA7DQorCW1hc3QtPm9yaWdfbC0+aW5k
ZXggPSBtYXN0LT5sLT5taW47DQorCXdyX21hcy5tYXMgPSBtYXN0LT5vcmlnX2w7DQorCXdyX21h
cy50eXBlID0gbXRlX25vZGVfdHlwZShtYXN0LT5vcmlnX2wtPm5vZGUpOw0KKwltYXNfd3Jfbm9k
ZV93YWxrKCZ3cl9tYXMpOw0KKw0KKwltYXN0LT5ibi0+dHlwZSA9IHdyX21hcy50eXBlOw0KK30N
CisNCisvKg0KKyAqIG1hc19uZXdfbWFfbm9kZSgpIC0gQ3JlYXRlIGFuZCByZXR1cm4gYSBuZXcg
bWFwbGUgbm9kZS4gIEhlbHBlciBmdW5jdGlvbi4NCisgKiBAbWFzOiB0aGUgbWFwbGUgc3RhdGUg
d2l0aCB0aGUgYWxsb2NhdGlvbnMuDQorICogQGJfbm9kZTogdGhlIG1hcGxlX2JpZ19ub2RlIHdp
dGggdGhlIHR5cGUgZW5jb2RpbmcuDQorICoNCisgKiBVc2UgdGhlIG5vZGUgdHlwZSBmcm9tIHRo
ZSBtYXBsZV9iaWdfbm9kZSB0byBhbGxvY2F0ZSBhIG5ldyBub2RlIGZyb20gdGhlDQorICogbWFf
c3RhdGUuICBUaGlzIGZ1bmN0aW9uIGV4aXN0cyBtYWlubHkgZm9yIGNvZGUgcmVhZGFiaWxpdHku
DQorICoNCisgKiBSZXR1cm46IEEgbmV3IG1hcGxlIGVuY29kZWQgbm9kZQ0KKyAqLw0KK3N0YXRp
YyBpbmxpbmUgc3RydWN0IG1hcGxlX2Vub2RlDQorKm1hc19uZXdfbWFfbm9kZShzdHJ1Y3QgbWFf
c3RhdGUgKm1hcywgc3RydWN0IG1hcGxlX2JpZ19ub2RlICpiX25vZGUpDQorew0KKwlyZXR1cm4g
bXRfbWtfbm9kZShtYV9tbm9kZV9wdHIobWFzX3BvcF9ub2RlKG1hcykpLCBiX25vZGUtPnR5cGUp
Ow0KK30NCisNCisvKg0KKyAqIG1hc19tYWJfdG9fbm9kZSgpIC0gU2V0IHVwIHJpZ2h0IGFuZCBt
aWRkbGUgbm9kZXMNCisgKg0KKyAqIEBtYXM6IHRoZSBtYXBsZSBzdGF0ZSB0aGF0IGNvbnRhaW5z
IHRoZSBhbGxvY2F0aW9ucy4NCisgKiBAYl9ub2RlOiB0aGUgbm9kZSB3aGljaCBjb250YWlucyB0
aGUgZGF0YS4NCisgKiBAbGVmdDogVGhlIHBvaW50ZXIgd2hpY2ggd2lsbCBoYXZlIHRoZSBsZWZ0
IG5vZGUNCisgKiBAcmlnaHQ6IFRoZSBwb2ludGVyIHdoaWNoIG1heSBoYXZlIHRoZSByaWdodCBu
b2RlDQorICogQG1pZGRsZTogdGhlIHBvaW50ZXIgd2hpY2ggbWF5IGhhdmUgdGhlIG1pZGRsZSBu
b2RlIChyYXJlKQ0KKyAqIEBtaWRfc3BsaXQ6IHRoZSBzcGxpdCBsb2NhdGlvbiBmb3IgdGhlIG1p
ZGRsZSBub2RlDQorICoNCisgKiBSZXR1cm46IHRoZSBzcGxpdCBvZiBsZWZ0Lg0KKyAqLw0KK3N0
YXRpYyBpbmxpbmUgdW5zaWduZWQgY2hhciBtYXNfbWFiX3RvX25vZGUoc3RydWN0IG1hX3N0YXRl
ICptYXMsDQorCXN0cnVjdCBtYXBsZV9iaWdfbm9kZSAqYl9ub2RlLCBzdHJ1Y3QgbWFwbGVfZW5v
ZGUgKipsZWZ0LA0KKwlzdHJ1Y3QgbWFwbGVfZW5vZGUgKipyaWdodCwgc3RydWN0IG1hcGxlX2Vu
b2RlICoqbWlkZGxlLA0KKwl1bnNpZ25lZCBjaGFyICptaWRfc3BsaXQsIHVuc2lnbmVkIGxvbmcg
bWluKQ0KK3sNCisJdW5zaWduZWQgY2hhciBzcGxpdCA9IDA7DQorCXVuc2lnbmVkIGNoYXIgc2xv
dF9jb3VudCA9IG10X3Nsb3RzW2Jfbm9kZS0+dHlwZV07DQorDQorCSpsZWZ0ID0gbWFzX25ld19t
YV9ub2RlKG1hcywgYl9ub2RlKTsNCisJKnJpZ2h0ID0gTlVMTDsNCisJKm1pZGRsZSA9IE5VTEw7
DQorCSptaWRfc3BsaXQgPSAwOw0KKw0KKwlpZiAoYl9ub2RlLT5iX2VuZCA8IHNsb3RfY291bnQp
IHsNCisJCXNwbGl0ID0gYl9ub2RlLT5iX2VuZDsNCisJfSBlbHNlIHsNCisJCXNwbGl0ID0gbWFi
X2NhbGNfc3BsaXQobWFzLCBiX25vZGUsIG1pZF9zcGxpdCwgbWluKTsNCisJCSpyaWdodCA9IG1h
c19uZXdfbWFfbm9kZShtYXMsIGJfbm9kZSk7DQorCX0NCisNCisJaWYgKCptaWRfc3BsaXQpDQor
CQkqbWlkZGxlID0gbWFzX25ld19tYV9ub2RlKG1hcywgYl9ub2RlKTsNCisNCisJcmV0dXJuIHNw
bGl0Ow0KKw0KK30NCisNCisvKg0KKyAqIG1hYl9zZXRfYl9lbmQoKSAtIEFkZCBlbnRyeSB0byBi
X25vZGUgYXQgYl9ub2RlLT5iX2VuZCBhbmQgaW5jcmVtZW50IHRoZSBlbmQNCisgKiBwb2ludGVy
Lg0KKyAqIEBiX25vZGUgLSB0aGUgYmlnIG5vZGUgdG8gYWRkIHRoZSBlbnRyeQ0KKyAqIEBtYXMg
LSB0aGUgbWFwbGUgc3RhdGUgdG8gZ2V0IHRoZSBwaXZvdCAobWFzLT5tYXgpDQorICogQGVudHJ5
IC0gdGhlIGVudHJ5IHRvIGFkZCwgaWYgTlVMTCBub3RoaW5nIGhhcHBlbnMuDQorICovDQorc3Rh
dGljIGlubGluZSB2b2lkIG1hYl9zZXRfYl9lbmQoc3RydWN0IG1hcGxlX2JpZ19ub2RlICpiX25v
ZGUsDQorCQkJCSBzdHJ1Y3QgbWFfc3RhdGUgKm1hcywNCisJCQkJIHZvaWQgKmVudHJ5KQ0KK3sN
CisJaWYgKCFlbnRyeSkNCisJCXJldHVybjsNCisNCisJYl9ub2RlLT5zbG90W2Jfbm9kZS0+Yl9l
bmRdID0gZW50cnk7DQorCWlmIChtdF9pc19hbGxvYyhtYXMtPnRyZWUpKQ0KKwkJYl9ub2RlLT5n
YXBbYl9ub2RlLT5iX2VuZF0gPSBtYXNfbWF4X2dhcChtYXMpOw0KKwliX25vZGUtPnBpdm90W2Jf
bm9kZS0+Yl9lbmQrK10gPSBtYXMtPm1heDsNCit9DQorDQorLyoNCisgKiBtYXNfc2V0X3NwbGl0
X3BhcmVudCgpIC0gY29tYmluZV90aGVuX3NlcGFyYXRlIGhlbHBlciBmdW5jdGlvbi4gIFNldHMg
dGhlIHBhcmVudA0KKyAqIG9mIEBtYXMtPm5vZGUgdG8gZWl0aGVyIEBsZWZ0IG9yIEByaWdodCwg
ZGVwZW5kaW5nIG9uIEBzbG90IGFuZCBAc3BsaXQNCisgKg0KKyAqIEBtYXMgLSB0aGUgbWFwbGUg
c3RhdGUgd2l0aCB0aGUgbm9kZSB0aGF0IG5lZWRzIGEgcGFyZW50DQorICogQGxlZnQgLSBwb3Nz
aWJsZSBwYXJlbnQgMQ0KKyAqIEByaWdodCAtIHBvc3NpYmxlIHBhcmVudCAyDQorICogQHNsb3Qg
LSB0aGUgc2xvdCB0aGUgbWFzLT5ub2RlIHdhcyBwbGFjZWQNCisgKiBAc3BsaXQgLSB0aGUgc3Bs
aXQgbG9jYXRpb24gYmV0d2VlbiBAbGVmdCBhbmQgQHJpZ2h0DQorICovDQorc3RhdGljIGlubGlu
ZSB2b2lkIG1hc19zZXRfc3BsaXRfcGFyZW50KHN0cnVjdCBtYV9zdGF0ZSAqbWFzLA0KKwkJCQkJ
c3RydWN0IG1hcGxlX2Vub2RlICpsZWZ0LA0KKwkJCQkJc3RydWN0IG1hcGxlX2Vub2RlICpyaWdo
dCwNCisJCQkJCXVuc2lnbmVkIGNoYXIgKnNsb3QsIHVuc2lnbmVkIGNoYXIgc3BsaXQpDQorew0K
KwlpZiAobWFzX2lzX25vbmUobWFzKSkNCisJCXJldHVybjsNCisNCisJaWYgKCgqc2xvdCkgPD0g
c3BsaXQpDQorCQltdGVfc2V0X3BhcmVudChtYXMtPm5vZGUsIGxlZnQsICpzbG90KTsNCisJZWxz
ZSBpZiAocmlnaHQpDQorCQltdGVfc2V0X3BhcmVudChtYXMtPm5vZGUsIHJpZ2h0LCAoKnNsb3Qp
IC0gc3BsaXQgLSAxKTsNCisNCisJKCpzbG90KSsrOw0KK30NCisNCisvKg0KKyAqIG10ZV9taWRf
c3BsaXRfY2hlY2soKSAtIENoZWNrIGlmIHRoZSBuZXh0IG5vZGUgcGFzc2VzIHRoZSBtaWQtc3Bs
aXQNCisgKiBAKipsOiBQb2ludGVyIHRvIGxlZnQgZW5jb2RlZCBtYXBsZSBub2RlLg0KKyAqIEAq
Km06IFBvaW50ZXIgdG8gbWlkZGxlIGVuY29kZWQgbWFwbGUgbm9kZS4NCisgKiBAKipyOiBQb2lu
dGVyIHRvIHJpZ2h0IGVuY29kZWQgbWFwbGUgbm9kZS4NCisgKiBAc2xvdDogVGhlIG9mZnNldA0K
KyAqIEAqc3BsaXQ6IFRoZSBzcGxpdCBsb2NhdGlvbi4NCisgKiBAbWlkX3NwbGl0OiBUaGUgbWlk
ZGxlIHNwbGl0Lg0KKyAqLw0KK3N0YXRpYyBpbmxpbmUgdm9pZCBtdGVfbWlkX3NwbGl0X2NoZWNr
KHN0cnVjdCBtYXBsZV9lbm9kZSAqKmwsDQorCQkJCSAgICAgICBzdHJ1Y3QgbWFwbGVfZW5vZGUg
KipyLA0KKwkJCQkgICAgICAgc3RydWN0IG1hcGxlX2Vub2RlICpyaWdodCwNCisJCQkJICAgICAg
IHVuc2lnbmVkIGNoYXIgc2xvdCwNCisJCQkJICAgICAgIHVuc2lnbmVkIGNoYXIgKnNwbGl0LA0K
KwkJCQkgICAgICAgdW5zaWduZWQgY2hhciBtaWRfc3BsaXQpDQorew0KKwlpZiAoKnIgPT0gcmln
aHQpDQorCQlyZXR1cm47DQorDQorCWlmIChzbG90IDwgbWlkX3NwbGl0KQ0KKwkJcmV0dXJuOw0K
Kw0KKwkqbCA9ICpyOw0KKwkqciA9IHJpZ2h0Ow0KKwkqc3BsaXQgPSBtaWRfc3BsaXQ7DQorfQ0K
Kw0KKy8qDQorICogbWFzdF9zZXRfc3BsaXRfcGFyZW50cygpIC0gSGVscGVyIGZ1bmN0aW9uIHRv
IHNldCB0aHJlZSBub2RlcyBwYXJlbnRzLiAgU2xvdA0KKyAqIGlzIHRha2VuIGZyb20gQG1hc3Qt
PmwuDQorICogQG1hc3QgLSB0aGUgbWFwbGUgc3VidHJlZSBzdGF0ZQ0KKyAqIEBsZWZ0IC0gdGhl
IGxlZnQgbm9kZQ0KKyAqIEByaWdodCAtIHRoZSByaWdodCBub2RlDQorICogQHNwbGl0IC0gdGhl
IHNwbGl0IGxvY2F0aW9uLg0KKyAqLw0KK3N0YXRpYyBpbmxpbmUgdm9pZCBtYXN0X3NldF9zcGxp
dF9wYXJlbnRzKHN0cnVjdCBtYXBsZV9zdWJ0cmVlX3N0YXRlICptYXN0LA0KKwkJCQkJICBzdHJ1
Y3QgbWFwbGVfZW5vZGUgKmxlZnQsDQorCQkJCQkgIHN0cnVjdCBtYXBsZV9lbm9kZSAqbWlkZGxl
LA0KKwkJCQkJICBzdHJ1Y3QgbWFwbGVfZW5vZGUgKnJpZ2h0LA0KKwkJCQkJICB1bnNpZ25lZCBj
aGFyIHNwbGl0LA0KKwkJCQkJICB1bnNpZ25lZCBjaGFyIG1pZF9zcGxpdCkNCit7DQorCXVuc2ln
bmVkIGNoYXIgc2xvdDsNCisJc3RydWN0IG1hcGxlX2Vub2RlICpsID0gbGVmdDsNCisJc3RydWN0
IG1hcGxlX2Vub2RlICpyID0gcmlnaHQ7DQorDQorCWlmIChtYXNfaXNfbm9uZShtYXN0LT5sKSkN
CisJCXJldHVybjsNCisNCisJaWYgKG1pZGRsZSkNCisJCXIgPSBtaWRkbGU7DQorDQorCXNsb3Qg
PSBtYXN0LT5sLT5vZmZzZXQ7DQorDQorCW10ZV9taWRfc3BsaXRfY2hlY2soJmwsICZyLCByaWdo
dCwgc2xvdCwgJnNwbGl0LCBtaWRfc3BsaXQpOw0KKwltYXNfc2V0X3NwbGl0X3BhcmVudChtYXN0
LT5sLCBsLCByLCAmc2xvdCwgc3BsaXQpOw0KKw0KKwltdGVfbWlkX3NwbGl0X2NoZWNrKCZsLCAm
ciwgcmlnaHQsIHNsb3QsICZzcGxpdCwgbWlkX3NwbGl0KTsNCisJbWFzX3NldF9zcGxpdF9wYXJl
bnQobWFzdC0+bSwgbCwgciwgJnNsb3QsIHNwbGl0KTsNCisNCisJbXRlX21pZF9zcGxpdF9jaGVj
aygmbCwgJnIsIHJpZ2h0LCBzbG90LCAmc3BsaXQsIG1pZF9zcGxpdCk7DQorCW1hc19zZXRfc3Bs
aXRfcGFyZW50KG1hc3QtPnIsIGwsIHIsICZzbG90LCBzcGxpdCk7DQorfQ0KKw0KKy8qDQorICog
bWFzX3dtYl9yZXBsYWNlKCkgLSBXcml0ZSBtZW1vcnkgYmFycmllciBhbmQgcmVwbGFjZQ0KKyAq
IEBtYXM6IFRoZSBtYXBsZSBzdGF0ZQ0KKyAqIEBmcmVlOiB0aGUgbWFwbGUgdG9waWFyeSBsaXN0
IG9mIG5vZGVzIHRvIGZyZWUNCisgKiBAZGVzdHJveTogVGhlIG1hcGxlIHRvcGlhcnkgbGlzdCBv
ZiBub2RlcyB0byBkZXN0cm95ICh3YWxrIGFuZCBmcmVlKQ0KKyAqDQorICogVXBkYXRlcyBnYXAg
YXMgbmVjZXNzYXJ5Lg0KKyAqLw0KK3N0YXRpYyBpbmxpbmUgdm9pZCBtYXNfd21iX3JlcGxhY2Uo
c3RydWN0IG1hX3N0YXRlICptYXMsDQorCQkJCSAgIHN0cnVjdCBtYV90b3BpYXJ5ICpmcmVlLA0K
KwkJCQkgICBzdHJ1Y3QgbWFfdG9waWFyeSAqZGVzdHJveSkNCit7DQorCS8qIEFsbCBub2RlcyBt
dXN0IHNlZSBvbGQgZGF0YSBhcyBkZWFkIHByaW9yIHRvIHJlcGxhY2luZyB0aGF0IGRhdGEgKi8N
CisJc21wX3dtYigpOyAvKiBOZWVkZWQgZm9yIFJDVSAqLw0KKw0KKwkvKiBJbnNlcnQgdGhlIG5l
dyBkYXRhIGluIHRoZSB0cmVlICovDQorCW1hc19yZXBsYWNlKG1hcywgdHJ1ZSk7DQorDQorCWlm
ICghbXRlX2lzX2xlYWYobWFzLT5ub2RlKSkNCisJCW1hc19kZXNjZW5kX2Fkb3B0KG1hcyk7DQor
DQorCW1hc19tYXRfZnJlZShtYXMsIGZyZWUpOw0KKw0KKwlpZiAoZGVzdHJveSkNCisJCW1hc19t
YXRfZGVzdHJveShtYXMsIGRlc3Ryb3kpOw0KKw0KKwlpZiAobXRlX2lzX2xlYWYobWFzLT5ub2Rl
KSkNCisJCXJldHVybjsNCisNCisJbWFzX3VwZGF0ZV9nYXAobWFzKTsNCit9DQorDQorLyoNCisg
KiBtYXN0X25ld19yb290KCkgLSBTZXQgYSBuZXcgdHJlZSByb290IGR1cmluZyBzdWJ0cmVlIGNy
ZWF0aW9uDQorICogQG1hc3Q6IFRoZSBtYXBsZSBzdWJ0cmVlIHN0YXRlDQorICogQG1hczogVGhl
IG1hcGxlIHN0YXRlDQorICovDQorc3RhdGljIGlubGluZSB2b2lkIG1hc3RfbmV3X3Jvb3Qoc3Ry
dWN0IG1hcGxlX3N1YnRyZWVfc3RhdGUgKm1hc3QsDQorCQkJCSBzdHJ1Y3QgbWFfc3RhdGUgKm1h
cykNCit7DQorCW1hc19tbihtYXN0LT5sKS0+cGFyZW50ID0NCisJCW1hX3BhcmVudF9wdHIoKCh1
bnNpZ25lZCBsb25nKW1hcy0+dHJlZSB8IE1BX1JPT1RfUEFSRU5UKSk7DQorCWlmICghbXRlX2Rl
YWRfbm9kZShtYXN0LT5vcmlnX2wtPm5vZGUpICYmDQorCSAgICAhbXRlX2lzX3Jvb3QobWFzdC0+
b3JpZ19sLT5ub2RlKSkgew0KKwkJZG8gew0KKwkJCW1hc3RfYXNjZW5kX2ZyZWUobWFzdCk7DQor
CQkJbWFzdF90b3BpYXJ5KG1hc3QpOw0KKwkJfSB3aGlsZSAoIW10ZV9pc19yb290KG1hc3QtPm9y
aWdfbC0+bm9kZSkpOw0KKwl9DQorCWlmICgobWFzdC0+b3JpZ19sLT5ub2RlICE9IG1hcy0+bm9k
ZSkgJiYNCisJCSAgIChtYXN0LT5sLT5kZXB0aCA+IG1hc19tdF9oZWlnaHQobWFzKSkpIHsNCisJ
CW1hdF9hZGQobWFzdC0+ZnJlZSwgbWFzLT5ub2RlKTsNCisJfQ0KK30NCisNCisvKg0KKyAqIG1h
c3RfY3BfdG9fbm9kZXMoKSAtIENvcHkgZGF0YSBvdXQgdG8gbm9kZXMuDQorICogQG1hc3Q6IFRo
ZSBtYXBsZSBzdWJ0cmVlIHN0YXRlDQorICogQGxlZnQ6IFRoZSBsZWZ0IGVuY29kZWQgbWFwbGUg
bm9kZQ0KKyAqIEBtaWRkbGU6IFRoZSBtaWRkbGUgZW5jb2RlZCBtYXBsZSBub2RlDQorICogQHJp
Z2h0OiBUaGUgcmlnaHQgZW5jb2RlZCBtYXBsZSBub2RlDQorICogQHNwbGl0OiBUaGUgbG9jYXRp
b24gdG8gc3BsaXQgYmV0d2VlbiBsZWZ0IGFuZCAobWlkZGxlID8gbWlkZGxlIDogcmlnaHQpDQor
ICogQG1pZF9zcGxpdDogVGhlIGxvY2F0aW9uIHRvIHNwbGl0IGJldHdlZW4gbWlkZGxlIGFuZCBy
aWdodC4NCisgKi8NCitzdGF0aWMgaW5saW5lIHZvaWQgbWFzdF9jcF90b19ub2RlcyhzdHJ1Y3Qg
bWFwbGVfc3VidHJlZV9zdGF0ZSAqbWFzdCwNCisJc3RydWN0IG1hcGxlX2Vub2RlICpsZWZ0LCBz
dHJ1Y3QgbWFwbGVfZW5vZGUgKm1pZGRsZSwNCisJc3RydWN0IG1hcGxlX2Vub2RlICpyaWdodCwg
dW5zaWduZWQgY2hhciBzcGxpdCwgdW5zaWduZWQgY2hhciBtaWRfc3BsaXQpDQorew0KKwlib29s
IG5ld19sbWF4ID0gdHJ1ZTsNCisNCisJbWFzdC0+bC0+bm9kZSA9IG10ZV9ub2RlX29yX25vbmUo
bGVmdCk7DQorCW1hc3QtPm0tPm5vZGUgPSBtdGVfbm9kZV9vcl9ub25lKG1pZGRsZSk7DQorCW1h
c3QtPnItPm5vZGUgPSBtdGVfbm9kZV9vcl9ub25lKHJpZ2h0KTsNCisNCisJbWFzdC0+bC0+bWlu
ID0gbWFzdC0+b3JpZ19sLT5taW47DQorCWlmIChzcGxpdCA9PSBtYXN0LT5ibi0+Yl9lbmQpIHsN
CisJCW1hc3QtPmwtPm1heCA9IG1hc3QtPm9yaWdfci0+bWF4Ow0KKwkJbmV3X2xtYXggPSBmYWxz
ZTsNCisJfQ0KKw0KKwltYWJfbWFzX2NwKG1hc3QtPmJuLCAwLCBzcGxpdCwgbWFzdC0+bCwgbmV3
X2xtYXgpOw0KKw0KKwlpZiAobWlkZGxlKSB7DQorCQltYWJfbWFzX2NwKG1hc3QtPmJuLCAxICsg
c3BsaXQsIG1pZF9zcGxpdCwgbWFzdC0+bSwgdHJ1ZSk7DQorCQltYXN0LT5tLT5taW4gPSBtYXN0
LT5ibi0+cGl2b3Rbc3BsaXRdICsgMTsNCisJCXNwbGl0ID0gbWlkX3NwbGl0Ow0KKwl9DQorDQor
CW1hc3QtPnItPm1heCA9IG1hc3QtPm9yaWdfci0+bWF4Ow0KKwlpZiAocmlnaHQpIHsNCisJCW1h
Yl9tYXNfY3AobWFzdC0+Ym4sIDEgKyBzcGxpdCwgbWFzdC0+Ym4tPmJfZW5kLCBtYXN0LT5yLCBm
YWxzZSk7DQorCQltYXN0LT5yLT5taW4gPSBtYXN0LT5ibi0+cGl2b3Rbc3BsaXRdICsgMTsNCisJ
fQ0KK30NCisNCisvKg0KKyAqIG1hc3RfY29tYmluZV9jcF9sZWZ0IC0gQ29weSBpbiB0aGUgb3Jp
Z2luYWwgbGVmdCBzaWRlIG9mIHRoZSB0cmVlIGludG8gdGhlDQorICogY29tYmluZWQgZGF0YSBz
ZXQgaW4gdGhlIG1hcGxlIHN1YnRyZWUgc3RhdGUgYmlnIG5vZGUuDQorICogQG1hc3Q6IFRoZSBt
YXBsZSBzdWJ0cmVlIHN0YXRlDQorICovDQorc3RhdGljIGlubGluZSB2b2lkIG1hc3RfY29tYmlu
ZV9jcF9sZWZ0KHN0cnVjdCBtYXBsZV9zdWJ0cmVlX3N0YXRlICptYXN0KQ0KK3sNCisJdW5zaWdu
ZWQgY2hhciBsX3Nsb3QgPSBtYXN0LT5vcmlnX2wtPm9mZnNldDsNCisNCisJaWYgKCFsX3Nsb3Qp
DQorCQlyZXR1cm47DQorDQorCW1hc19tYWJfY3AobWFzdC0+b3JpZ19sLCAwLCBsX3Nsb3QgLSAx
LCBtYXN0LT5ibiwgMCk7DQorfQ0KKw0KKy8qDQorICogbWFzdF9jb21iaW5lX2NwX3JpZ2h0OiBD
b3B5IGluIHRoZSBvcmlnaW5hbCByaWdodCBzaWRlIG9mIHRoZSB0cmVlIGludG8gdGhlDQorICog
Y29tYmluZWQgZGF0YSBzZXQgaW4gdGhlIG1hcGxlIHN1YnRyZWUgc3RhdGUgYmlnIG5vZGUuDQor
ICogQG1hc3Q6IFRoZSBtYXBsZSBzdWJ0cmVlIHN0YXRlDQorICovDQorc3RhdGljIGlubGluZSB2
b2lkIG1hc3RfY29tYmluZV9jcF9yaWdodChzdHJ1Y3QgbWFwbGVfc3VidHJlZV9zdGF0ZSAqbWFz
dCkNCit7DQorCWlmIChtYXN0LT5ibi0+cGl2b3RbbWFzdC0+Ym4tPmJfZW5kIC0gMV0gPj0gbWFz
dC0+b3JpZ19yLT5tYXgpDQorCQlyZXR1cm47DQorDQorCW1hc19tYWJfY3AobWFzdC0+b3JpZ19y
LCBtYXN0LT5vcmlnX3ItPm9mZnNldCArIDEsDQorCQkgICBtdF9zbG90X2NvdW50KG1hc3QtPm9y
aWdfci0+bm9kZSksIG1hc3QtPmJuLA0KKwkJICAgbWFzdC0+Ym4tPmJfZW5kKTsNCisJbWFzdC0+
b3JpZ19yLT5sYXN0ID0gbWFzdC0+b3JpZ19yLT5tYXg7DQorfQ0KKw0KKy8qDQorICogbWFzdF9z
dWZmaWNpZW50OiBDaGVjayBpZiB0aGUgbWFwbGUgc3VidHJlZSBzdGF0ZSBoYXMgZW5vdWdoIGRh
dGEgaW4gdGhlIGJpZw0KKyAqIG5vZGUgdG8gY3JlYXRlIGF0IGxlYXN0IG9uZSBzdWZmaWNpZW50
IG5vZGUNCisgKiBAbWFzdDogdGhlIG1hcGxlIHN1YnRyZWUgc3RhdGUNCisgKi8NCitzdGF0aWMg
aW5saW5lIGJvb2wgbWFzdF9zdWZmaWNpZW50KHN0cnVjdCBtYXBsZV9zdWJ0cmVlX3N0YXRlICpt
YXN0KQ0KK3sNCisJaWYgKG1hc3QtPmJuLT5iX2VuZCA+IG10X21pbl9zbG90X2NvdW50KG1hc3Qt
Pm9yaWdfbC0+bm9kZSkpDQorCQlyZXR1cm4gdHJ1ZTsNCisNCisJcmV0dXJuIGZhbHNlOw0KK30N
CisNCisvKg0KKyAqIG1hc3Rfb3ZlcmZsb3c6IENoZWNrIGlmIHRoZXJlIGlzIHRvbyBtdWNoIGRh
dGEgaW4gdGhlIHN1YnRyZWUgc3RhdGUgZm9yIGENCisgKiBzaW5nbGUgbm9kZS4NCisgKiBAbWFz
dDogVGhlIG1hcGxlIHN1YnRyZWUgc3RhdGUNCisgKi8NCitzdGF0aWMgaW5saW5lIGJvb2wgbWFz
dF9vdmVyZmxvdyhzdHJ1Y3QgbWFwbGVfc3VidHJlZV9zdGF0ZSAqbWFzdCkNCit7DQorCWlmICht
YXN0LT5ibi0+Yl9lbmQgPj0gbXRfc2xvdF9jb3VudChtYXN0LT5vcmlnX2wtPm5vZGUpKQ0KKwkJ
cmV0dXJuIHRydWU7DQorDQorCXJldHVybiBmYWxzZTsNCit9DQorDQorc3RhdGljIGlubGluZSB2
b2lkICptdHJlZV9yYW5nZV93YWxrKHN0cnVjdCBtYV9zdGF0ZSAqbWFzKQ0KK3sNCisJdW5zaWdu
ZWQgbG9uZyAqcGl2b3RzOw0KKwl1bnNpZ25lZCBjaGFyIG9mZnNldDsNCisJc3RydWN0IG1hcGxl
X25vZGUgKm5vZGU7DQorCXN0cnVjdCBtYXBsZV9lbm9kZSAqbmV4dCwgKmxhc3Q7DQorCWVudW0g
bWFwbGVfdHlwZSB0eXBlOw0KKwl2b2lkIF9fcmN1ICoqc2xvdHM7DQorCXVuc2lnbmVkIGNoYXIg
ZW5kOw0KKwl1bnNpZ25lZCBsb25nIG1heCwgbWluOw0KKwl1bnNpZ25lZCBsb25nIHByZXZfbWF4
LCBwcmV2X21pbjsNCisNCisJbGFzdCA9IG5leHQgPSBtYXMtPm5vZGU7DQorCXByZXZfbWluID0g
bWluID0gbWFzLT5taW47DQorCW1heCA9IG1hcy0+bWF4Ow0KKwlkbyB7DQorCQlvZmZzZXQgPSAw
Ow0KKwkJbGFzdCA9IG5leHQ7DQorCQlub2RlID0gbXRlX3RvX25vZGUobmV4dCk7DQorCQl0eXBl
ID0gbXRlX25vZGVfdHlwZShuZXh0KTsNCisJCXBpdm90cyA9IG1hX3Bpdm90cyhub2RlLCB0eXBl
KTsNCisJCWVuZCA9IG1hX2RhdGFfZW5kKG5vZGUsIHR5cGUsIHBpdm90cywgbWF4KTsNCisJCWlm
ICh1bmxpa2VseShtYV9kZWFkX25vZGUobm9kZSkpKQ0KKwkJCWdvdG8gZGVhZF9ub2RlOw0KKw0K
KwkJaWYgKHBpdm90c1tvZmZzZXRdID49IG1hcy0+aW5kZXgpIHsNCisJCQlwcmV2X21heCA9IG1h
eDsNCisJCQlwcmV2X21pbiA9IG1pbjsNCisJCQltYXggPSBwaXZvdHNbb2Zmc2V0XTsNCisJCQln
b3RvIG5leHQ7DQorCQl9DQorDQorCQlkbyB7DQorCQkJb2Zmc2V0Kys7DQorCQl9IHdoaWxlICgo
b2Zmc2V0IDwgZW5kKSAmJiAocGl2b3RzW29mZnNldF0gPCBtYXMtPmluZGV4KSk7DQorDQorCQlw
cmV2X21pbiA9IG1pbjsNCisJCW1pbiA9IHBpdm90c1tvZmZzZXQgLSAxXSArIDE7DQorCQlwcmV2
X21heCA9IG1heDsNCisJCWlmIChsaWtlbHkob2Zmc2V0IDwgZW5kICYmIHBpdm90c1tvZmZzZXRd
KSkNCisJCQltYXggPSBwaXZvdHNbb2Zmc2V0XTsNCisNCituZXh0Og0KKwkJc2xvdHMgPSBtYV9z
bG90cyhub2RlLCB0eXBlKTsNCisJCW5leHQgPSBtdF9zbG90KG1hcy0+dHJlZSwgc2xvdHMsIG9m
ZnNldCk7DQorCQlpZiAodW5saWtlbHkobWFfZGVhZF9ub2RlKG5vZGUpKSkNCisJCQlnb3RvIGRl
YWRfbm9kZTsNCisJfSB3aGlsZSAoIW1hX2lzX2xlYWYodHlwZSkpOw0KKw0KKwltYXMtPm9mZnNl
dCA9IG9mZnNldDsNCisJbWFzLT5pbmRleCA9IG1pbjsNCisJbWFzLT5sYXN0ID0gbWF4Ow0KKwlt
YXMtPm1pbiA9IHByZXZfbWluOw0KKwltYXMtPm1heCA9IHByZXZfbWF4Ow0KKwltYXMtPm5vZGUg
PSBsYXN0Ow0KKwlyZXR1cm4gKHZvaWQgKikgbmV4dDsNCisNCitkZWFkX25vZGU6DQorCW1hc19y
ZXNldChtYXMpOw0KKwlyZXR1cm4gTlVMTDsNCit9DQorDQorLyoNCisgKiBtYXNfc3Bhbm5pbmdf
cmViYWxhbmNlKCkgLSBSZWJhbGFuY2UgYWNyb3NzIHR3byBub2RlcyB3aGljaCBtYXkgbm90IGJl
IHBlZXJzLg0KKyAqIEBtYXM6IFRoZSBzdGFydGluZyBtYXBsZSBzdGF0ZQ0KKyAqIEBtYXN0OiBU
aGUgbWFwbGVfc3VidHJlZV9zdGF0ZSwga2VlcHMgdHJhY2sgb2YgNCBtYXBsZSBzdGF0ZXMuDQor
ICogQGNvdW50OiBUaGUgZXN0aW1hdGVkIGNvdW50IG9mIGl0ZXJhdGlvbnMgbmVlZGVkLg0KKyAq
DQorICogRm9sbG93IHRoZSB0cmVlIHVwd2FyZHMgZnJvbSBAbF9tYXMgYW5kIEByX21hcyBmb3Ig
QGNvdW50LCBvciB1bnRpbCB0aGUgcm9vdA0KKyAqIGlzIGhpdC4gIEZpcnN0IEBiX25vZGUgaXMg
c3BsaXQgaW50byB0d28gZW50cmllcyB3aGljaCBhcmUgaW5zZXJ0ZWQgaW50byB0aGUNCisgKiBu
ZXh0IGl0ZXJhdGlvbiBvZiB0aGUgbG9vcC4gIEBiX25vZGUgaXMgcmV0dXJuZWQgcG9wdWxhdGVk
IHdpdGggdGhlIGZpbmFsDQorICogaXRlcmF0aW9uLiBAbWFzIGlzIHVzZWQgdG8gb2J0YWluIGFs
bG9jYXRpb25zLiAgb3JpZ19sX21hcyBrZWVwcyB0cmFjayBvZiB0aGUNCisgKiBub2RlcyB0aGF0
IHdpbGwgcmVtYWluIGFjdGl2ZSBieSB1c2luZyBvcmlnX2xfbWFzLT5pbmRleCBhbmQgb3JpZ19s
X21hcy0+bGFzdA0KKyAqIHRvIGFjY291bnQgb2Ygd2hhdCBoYXMgYmVlbiBjb3BpZWQgaW50byB0
aGUgbmV3IHN1Yi10cmVlLiAgVGhlIHVwZGF0ZSBvZg0KKyAqIG9yaWdfbF9tYXMtPmxhc3QgaXMg
dXNlZCBpbiBtYXNfY29uc3VtZSB0byBmaW5kIHRoZSBzbG90cyB0aGF0IHdpbGwgbmVlZCB0bw0K
KyAqIGJlIGVpdGhlciBmcmVlZCBvciBkZXN0cm95ZWQuICBvcmlnX2xfbWFzLT5kZXB0aCBrZWVw
cyB0cmFjayBvZiB0aGUgaGVpZ2h0IG9mDQorICogdGhlIG5ldyBzdWItdHJlZSBpbiBjYXNlIHRo
ZSBzdWItdHJlZSBiZWNvbWVzIHRoZSBmdWxsIHRyZWUuDQorICoNCisgKiBSZXR1cm46IHRoZSBu
dW1iZXIgb2YgZWxlbWVudHMgaW4gYl9ub2RlIGR1cmluZyB0aGUgbGFzdCBsb29wLg0KKyAqLw0K
K3N0YXRpYyBpbnQgbWFzX3NwYW5uaW5nX3JlYmFsYW5jZShzdHJ1Y3QgbWFfc3RhdGUgKm1hcywN
CisJCXN0cnVjdCBtYXBsZV9zdWJ0cmVlX3N0YXRlICptYXN0LCB1bnNpZ25lZCBjaGFyIGNvdW50
KQ0KK3sNCisJdW5zaWduZWQgY2hhciBzcGxpdCwgbWlkX3NwbGl0Ow0KKwl1bnNpZ25lZCBjaGFy
IHNsb3QgPSAwOw0KKwlzdHJ1Y3QgbWFwbGVfZW5vZGUgKmxlZnQgPSBOVUxMLCAqbWlkZGxlID0g
TlVMTCwgKnJpZ2h0ID0gTlVMTDsNCisNCisJTUFfU1RBVEUobF9tYXMsIG1hcy0+dHJlZSwgbWFz
LT5pbmRleCwgbWFzLT5pbmRleCk7DQorCU1BX1NUQVRFKHJfbWFzLCBtYXMtPnRyZWUsIG1hcy0+
aW5kZXgsIG1hcy0+bGFzdCk7DQorCU1BX1NUQVRFKG1fbWFzLCBtYXMtPnRyZWUsIG1hcy0+aW5k
ZXgsIG1hcy0+aW5kZXgpOw0KKwlNQV9UT1BJQVJZKGZyZWUsIG1hcy0+dHJlZSk7DQorCU1BX1RP
UElBUlkoZGVzdHJveSwgbWFzLT50cmVlKTsNCisNCisJLyoNCisJICogVGhlIHRyZWUgbmVlZHMg
dG8gYmUgcmViYWxhbmNlZCBhbmQgbGVhdmVzIG5lZWQgdG8gYmUga2VwdCBhdCB0aGUgc2FtZSBs
ZXZlbC4NCisJICogUmViYWxhbmNpbmcgaXMgZG9uZSBieSB1c2Ugb2YgdGhlIGBgc3RydWN0IG1h
cGxlX3RvcGlhcnlgYC4NCisJICovDQorCW1hc3QtPmwgPSAmbF9tYXM7DQorCW1hc3QtPm0gPSAm
bV9tYXM7DQorCW1hc3QtPnIgPSAmcl9tYXM7DQorCW1hc3QtPmZyZWUgPSAmZnJlZTsNCisJbWFz
dC0+ZGVzdHJveSA9ICZkZXN0cm95Ow0KKwlsX21hcy5ub2RlID0gcl9tYXMubm9kZSA9IG1fbWFz
Lm5vZGUgPSBNQVNfTk9ORTsNCisJaWYgKCEobWFzdC0+b3JpZ19sLT5taW4gJiYgbWFzdC0+b3Jp
Z19yLT5tYXggPT0gVUxPTkdfTUFYKSAmJg0KKwkgICAgdW5saWtlbHkobWFzdC0+Ym4tPmJfZW5k
IDw9IG10X21pbl9zbG90c1ttYXN0LT5ibi0+dHlwZV0pKQ0KKwkJbWFzdF9zcGFubmluZ19yZWJh
bGFuY2UobWFzdCk7DQorDQorCW1hc3QtPm9yaWdfbC0+ZGVwdGggPSAwOw0KKw0KKwkvKg0KKwkg
KiBFYWNoIGxldmVsIG9mIHRoZSB0cmVlIGlzIGV4YW1pbmVkIGFuZCBiYWxhbmNlZCwgcHVzaGlu
ZyBkYXRhIHRvIHRoZSBsZWZ0IG9yDQorCSAqIHJpZ2h0LCBvciByZWJhbGFuY2luZyBhZ2FpbnN0
IGxlZnQgb3IgcmlnaHQgbm9kZXMgaXMgZW1wbG95ZWQgdG8gYXZvaWQNCisJICogcmlwcGxpbmcg
dXAgdGhlIHRyZWUgdG8gbGltaXQgdGhlIGFtb3VudCBvZiBjaHVybi4gIE9uY2UgYSBuZXcgc3Vi
LXNlY3Rpb24gb2YNCisJICogdGhlIHRyZWUgaXMgY3JlYXRlZCwgdGhlcmUgbWF5IGJlIGEgbWl4
IG9mIG5ldyBhbmQgb2xkIG5vZGVzLiAgVGhlIG9sZCBub2Rlcw0KKwkgKiB3aWxsIGhhdmUgdGhl
IGluY29ycmVjdCBwYXJlbnQgcG9pbnRlcnMgYW5kIGN1cnJlbnRseSBiZSBpbiB0d28gdHJlZXM6
IHRoZQ0KKwkgKiBvcmlnaW5hbCB0cmVlIGFuZCB0aGUgcGFydGlhbGx5IG5ldyB0cmVlLiAgVG8g
cmVtZWR5IHRoZSBwYXJlbnQgcG9pbnRlcnMgaW4NCisJICogdGhlIG9sZCB0cmVlLCB0aGUgbmV3
IGRhdGEgaXMgc3dhcHBlZCBpbnRvIHRoZSBhY3RpdmUgdHJlZSBhbmQgYSB3YWxrIGRvd24NCisJ
ICogdGhlIHRyZWUgaXMgcGVyZm9ybWVkIGFuZCB0aGUgcGFyZW50IHBvaW50ZXJzIGFyZSB1cGRh
dGVkLg0KKwkgKiBTZWUgbWFzX2Rlc2NlbmRfYWRvcHQoKSBmb3IgbW9yZSBpbmZvcm1hdGlvbi4u
DQorCSAqLw0KKwl3aGlsZSAoY291bnQtLSkgew0KKwkJbWFzdC0+Ym4tPmJfZW5kLS07DQorCQlt
YXN0LT5ibi0+dHlwZSA9IG10ZV9ub2RlX3R5cGUobWFzdC0+b3JpZ19sLT5ub2RlKTsNCisJCXNw
bGl0ID0gbWFzX21hYl90b19ub2RlKG1hcywgbWFzdC0+Ym4sICZsZWZ0LCAmcmlnaHQsICZtaWRk
bGUsDQorCQkJCQkmbWlkX3NwbGl0LCBtYXN0LT5vcmlnX2wtPm1pbik7DQorCQltYXN0X3NldF9z
cGxpdF9wYXJlbnRzKG1hc3QsIGxlZnQsIG1pZGRsZSwgcmlnaHQsIHNwbGl0LA0KKwkJCQkgICAg
ICAgbWlkX3NwbGl0KTsNCisJCW1hc3RfY3BfdG9fbm9kZXMobWFzdCwgbGVmdCwgbWlkZGxlLCBy
aWdodCwgc3BsaXQsIG1pZF9zcGxpdCk7DQorDQorCQkvKg0KKwkJICogQ29weSBkYXRhIGZyb20g
bmV4dCBsZXZlbCBpbiB0aGUgdHJlZSB0byBtYXN0LT5ibiBmcm9tIG5leHQNCisJCSAqIGl0ZXJh
dGlvbg0KKwkJICovDQorCQltZW1zZXQobWFzdC0+Ym4sIDAsIHNpemVvZihzdHJ1Y3QgbWFwbGVf
YmlnX25vZGUpKTsNCisJCW1hc3QtPmJuLT50eXBlID0gbXRlX25vZGVfdHlwZShsZWZ0KTsNCisJ
CW1hc3QtPm9yaWdfbC0+ZGVwdGgrKzsNCisNCisJCS8qIFJvb3QgYWxyZWFkeSBzdG9yZWQgaW4g
bC0+bm9kZS4gKi8NCisJCWlmIChtYXNfaXNfcm9vdF9saW1pdHMobWFzdC0+bCkpDQorCQkJZ290
byBuZXdfcm9vdDsNCisNCisJCW1hc3RfYXNjZW5kX2ZyZWUobWFzdCk7DQorCQltYXN0X2NvbWJp
bmVfY3BfbGVmdChtYXN0KTsNCisJCWxfbWFzLm9mZnNldCA9IG1hc3QtPmJuLT5iX2VuZDsNCisJ
CW1hYl9zZXRfYl9lbmQobWFzdC0+Ym4sICZsX21hcywgbGVmdCk7DQorCQltYWJfc2V0X2JfZW5k
KG1hc3QtPmJuLCAmbV9tYXMsIG1pZGRsZSk7DQorCQltYWJfc2V0X2JfZW5kKG1hc3QtPmJuLCAm
cl9tYXMsIHJpZ2h0KTsNCisNCisJCS8qIENvcHkgYW55dGhpbmcgbmVjZXNzYXJ5IG91dCBvZiB0
aGUgcmlnaHQgbm9kZS4gKi8NCisJCW1hc3RfY29tYmluZV9jcF9yaWdodChtYXN0KTsNCisJCW1h
c3RfdG9waWFyeShtYXN0KTsNCisJCW1hc3QtPm9yaWdfbC0+bGFzdCA9IG1hc3QtPm9yaWdfbC0+
bWF4Ow0KKw0KKwkJaWYgKG1hc3Rfc3VmZmljaWVudChtYXN0KSkNCisJCQljb250aW51ZTsNCisN
CisJCWlmIChtYXN0X292ZXJmbG93KG1hc3QpKQ0KKwkJCWNvbnRpbnVlOw0KKw0KKwkJLyogTWF5
IGJlIGEgbmV3IHJvb3Qgc3RvcmVkIGluIG1hc3QtPmJuICovDQorCQlpZiAobWFzX2lzX3Jvb3Rf
bGltaXRzKG1hc3QtPm9yaWdfbCkpDQorCQkJYnJlYWs7DQorDQorCQltYXN0X3NwYW5uaW5nX3Jl
YmFsYW5jZShtYXN0KTsNCisNCisJCS8qIHJlYmFsYW5jaW5nIGZyb20gb3RoZXIgbm9kZXMgbWF5
IHJlcXVpcmUgYW5vdGhlciBsb29wLiAqLw0KKwkJaWYgKCFjb3VudCkNCisJCQljb3VudCsrOw0K
Kwl9DQorDQorCWxfbWFzLm5vZGUgPSBtdF9ta19ub2RlKG1hX21ub2RlX3B0cihtYXNfcG9wX25v
ZGUobWFzKSksDQorCQkJCW10ZV9ub2RlX3R5cGUobWFzdC0+b3JpZ19sLT5ub2RlKSk7DQorCW1h
c3QtPm9yaWdfbC0+ZGVwdGgrKzsNCisJbWFiX21hc19jcChtYXN0LT5ibiwgMCwgbXRfc2xvdHNb
bWFzdC0+Ym4tPnR5cGVdIC0gMSwgJmxfbWFzLCB0cnVlKTsNCisJbXRlX3NldF9wYXJlbnQobGVm
dCwgbF9tYXMubm9kZSwgc2xvdCk7DQorCWlmIChtaWRkbGUpDQorCQltdGVfc2V0X3BhcmVudCht
aWRkbGUsIGxfbWFzLm5vZGUsICsrc2xvdCk7DQorDQorCWlmIChyaWdodCkNCisJCW10ZV9zZXRf
cGFyZW50KHJpZ2h0LCBsX21hcy5ub2RlLCArK3Nsb3QpOw0KKw0KKwlpZiAobWFzX2lzX3Jvb3Rf
bGltaXRzKG1hc3QtPmwpKSB7DQorbmV3X3Jvb3Q6DQorCQltYXN0X25ld19yb290KG1hc3QsIG1h
cyk7DQorCX0gZWxzZSB7DQorCQltYXNfbW4oJmxfbWFzKS0+cGFyZW50ID0gbWFzX21uKG1hc3Qt
Pm9yaWdfbCktPnBhcmVudDsNCisJfQ0KKw0KKwlpZiAoIW10ZV9kZWFkX25vZGUobWFzdC0+b3Jp
Z19sLT5ub2RlKSkNCisJCW1hdF9hZGQoJmZyZWUsIG1hc3QtPm9yaWdfbC0+bm9kZSk7DQorDQor
CW1hcy0+ZGVwdGggPSBtYXN0LT5vcmlnX2wtPmRlcHRoOw0KKwkqbWFzdC0+b3JpZ19sID0gbF9t
YXM7DQorCW10ZV9zZXRfbm9kZV9kZWFkKG1hcy0+bm9kZSk7DQorDQorCS8qIFNldCB1cCBtYXMg
Zm9yIGluc2VydGlvbi4gKi8NCisJbWFzdC0+b3JpZ19sLT5kZXB0aCA9IG1hcy0+ZGVwdGg7DQor
CW1hc3QtPm9yaWdfbC0+YWxsb2MgPSBtYXMtPmFsbG9jOw0KKwkqbWFzID0gKm1hc3QtPm9yaWdf
bDsNCisJbWFzX3dtYl9yZXBsYWNlKG1hcywgJmZyZWUsICZkZXN0cm95KTsNCisJbXRyZWVfcmFu
Z2Vfd2FsayhtYXMpOw0KKwlyZXR1cm4gbWFzdC0+Ym4tPmJfZW5kOw0KK30NCisNCisvKg0KKyAq
IG1hc19yZWJhbGFuY2UoKSAtIFJlYmFsYW5jZSBhIGdpdmVuIG5vZGUuDQorICogQG1hczogVGhl
IG1hcGxlIHN0YXRlDQorICogQGJfbm9kZTogVGhlIGJpZyBtYXBsZSBub2RlLg0KKyAqDQorICog
UmViYWxhbmNlIHR3byBub2RlcyBpbnRvIGEgc2luZ2xlIG5vZGUgb3IgdHdvIG5ldyBub2RlcyB0
aGF0IGFyZSBzdWZmaWNpZW50Lg0KKyAqIENvbnRpbnVlIHVwd2FyZHMgdW50aWwgdHJlZSBpcyBz
dWZmaWNpZW50Lg0KKyAqDQorICogUmV0dXJuOiB0aGUgbnVtYmVyIG9mIGVsZW1lbnRzIGluIGJf
bm9kZSBkdXJpbmcgdGhlIGxhc3QgbG9vcC4NCisgKi8NCitzdGF0aWMgaW5saW5lIGludCBtYXNf
cmViYWxhbmNlKHN0cnVjdCBtYV9zdGF0ZSAqbWFzLA0KKwkJCQlzdHJ1Y3QgbWFwbGVfYmlnX25v
ZGUgKmJfbm9kZSkNCit7DQorCWNoYXIgZW1wdHlfY291bnQgPSBtYXNfbXRfaGVpZ2h0KG1hcyk7
DQorCXN0cnVjdCBtYXBsZV9zdWJ0cmVlX3N0YXRlIG1hc3Q7DQorCXVuc2lnbmVkIGNoYXIgc2hp
ZnQsIGJfZW5kID0gKytiX25vZGUtPmJfZW5kOw0KKw0KKwlNQV9TVEFURShsX21hcywgbWFzLT50
cmVlLCBtYXMtPmluZGV4LCBtYXMtPmxhc3QpOw0KKwlNQV9TVEFURShyX21hcywgbWFzLT50cmVl
LCBtYXMtPmluZGV4LCBtYXMtPmxhc3QpOw0KKw0KKwl0cmFjZV9tYV9vcChfX2Z1bmNfXywgbWFz
KTsNCisNCisJLyoNCisJICogUmViYWxhbmNpbmcgb2NjdXJzIGlmIGEgbm9kZSBpcyBpbnN1ZmZp
Y2llbnQuICBEYXRhIGlzIHJlYmFsYW5jZWQNCisJICogYWdhaW5zdCB0aGUgbm9kZSB0byB0aGUg
cmlnaHQgaWYgaXQgZXhpc3RzLCBvdGhlcndpc2UgdGhlIG5vZGUgdG8gdGhlDQorCSAqIGxlZnQg
b2YgdGhpcyBub2RlIGlzIHJlYmFsYW5jZWQgYWdhaW5zdCB0aGlzIG5vZGUuICBJZiByZWJhbGFu
Y2luZw0KKwkgKiBjYXVzZXMganVzdCBvbmUgbm9kZSB0byBiZSBwcm9kdWNlZCBpbnN0ZWFkIG9m
IHR3bywgdGhlbiB0aGUgcGFyZW50DQorCSAqIGlzIGFsc28gZXhhbWluZWQgYW5kIHJlYmFsYW5j
ZWQgaWYgaXQgaXMgaW5zdWZmaWNpZW50LiAgRXZlcnkgbGV2ZWwNCisJICogdHJpZXMgdG8gY29t
YmluZSB0aGUgZGF0YSBpbiB0aGUgc2FtZSB3YXkuICBJZiBvbmUgbm9kZSBjb250YWlucyB0aGUN
CisJICogZW50aXJlIHJhbmdlIG9mIHRoZSB0cmVlLCB0aGVuIHRoYXQgbm9kZSBpcyB1c2VkIGFz
IGEgbmV3IHJvb3Qgbm9kZS4NCisJICovDQorCW1hc19ub2RlX2NvdW50KG1hcywgMSArIGVtcHR5
X2NvdW50ICogMyk7DQorCWlmIChtYXNfaXNfZXJyKG1hcykpDQorCQlyZXR1cm4gMDsNCisNCisJ
bWFzdC5vcmlnX2wgPSAmbF9tYXM7DQorCW1hc3Qub3JpZ19yID0gJnJfbWFzOw0KKwltYXN0LmJu
ID0gYl9ub2RlOw0KKwltYXN0LmJuLT50eXBlID0gbXRlX25vZGVfdHlwZShtYXMtPm5vZGUpOw0K
Kw0KKwlsX21hcyA9IHJfbWFzID0gKm1hczsNCisNCisJaWYgKG1hc19uZXh0X3NpYmxpbmcoJnJf
bWFzKSkgew0KKwkJbWFzX21hYl9jcCgmcl9tYXMsIDAsIG10X3Nsb3RfY291bnQocl9tYXMubm9k
ZSksIGJfbm9kZSwgYl9lbmQpOw0KKwkJcl9tYXMubGFzdCA9IHJfbWFzLmluZGV4ID0gcl9tYXMu
bWF4Ow0KKwl9IGVsc2Ugew0KKwkJbWFzX3ByZXZfc2libGluZygmbF9tYXMpOw0KKwkJc2hpZnQg
PSBtYXNfZGF0YV9lbmQoJmxfbWFzKSArIDE7DQorCQltYWJfc2hpZnRfcmlnaHQoYl9ub2RlLCBz
aGlmdCk7DQorCQltYXMtPm9mZnNldCArPSBzaGlmdDsNCisJCW1hc19tYWJfY3AoJmxfbWFzLCAw
LCBzaGlmdCAtIDEsIGJfbm9kZSwgMCk7DQorCQliX25vZGUtPmJfZW5kID0gc2hpZnQgKyBiX2Vu
ZDsNCisJCWxfbWFzLmluZGV4ID0gbF9tYXMubGFzdCA9IGxfbWFzLm1pbjsNCisJfQ0KKw0KKwly
ZXR1cm4gbWFzX3NwYW5uaW5nX3JlYmFsYW5jZShtYXMsICZtYXN0LCBlbXB0eV9jb3VudCk7DQor
fQ0KKw0KKy8qDQorICogbWFzX2Rlc3Ryb3lfcmViYWxhbmNlKCkgLSBSZWJhbGFuY2UgbGVmdC1t
b3N0IG5vZGUgd2hpbGUgZGVzdHJveWluZyB0aGUgbWFwbGUNCisgKiBzdGF0ZS4NCisgKiBAbWFz
OiBUaGUgbWFwbGUgc3RhdGUNCisgKiBAZW5kOiBUaGUgZW5kIG9mIHRoZSBsZWZ0LW1vc3Qgbm9k
ZS4NCisgKg0KKyAqIER1cmluZyBhIG1hc3MtaW5zZXJ0IGV2ZW50IChzdWNoIGFzIGZvcmtpbmcp
LCBpdCBtYXkgYmUgbmVjZXNzYXJ5IHRvDQorICogcmViYWxhbmNlIHRoZSBsZWZ0LW1vc3Qgbm9k
ZSB3aGVuIGl0IGlzIG5vdCBzdWZmaWNpZW50Lg0KKyAqLw0KK3N0YXRpYyBpbmxpbmUgdm9pZCBt
YXNfZGVzdHJveV9yZWJhbGFuY2Uoc3RydWN0IG1hX3N0YXRlICptYXMsIHVuc2lnbmVkIGNoYXIg
ZW5kKQ0KK3sNCisJZW51bSBtYXBsZV90eXBlIG10ID0gbXRlX25vZGVfdHlwZShtYXMtPm5vZGUp
Ow0KKwlzdHJ1Y3QgbWFwbGVfbm9kZSByZXVzZSwgKm5ld25vZGUsICpwYXJlbnQsICpuZXdfbGVm
dCwgKmxlZnQsICpub2RlOw0KKwlzdHJ1Y3QgbWFwbGVfZW5vZGUgKmVwYXJlbnQ7DQorCXVuc2ln
bmVkIGNoYXIgb2Zmc2V0LCB0bXAsIHNwbGl0ID0gbXRfc2xvdHNbbXRdIC8gMjsNCisJdm9pZCBf
X3JjdSAqKmxfc2xvdHMsICoqc2xvdHM7DQorCXVuc2lnbmVkIGxvbmcgKmxfcGl2cywgKnBpdnMs
IGdhcDsNCisJYm9vbCBpbl9yY3UgPSBtdF9pbl9yY3UobWFzLT50cmVlKTsNCisNCisJTUFfU1RB
VEUobF9tYXMsIG1hcy0+dHJlZSwgbWFzLT5pbmRleCwgbWFzLT5sYXN0KTsNCisNCisJbF9tYXMg
PSAqbWFzOw0KKwltYXNfcHJldl9zaWJsaW5nKCZsX21hcyk7DQorDQorCS8qIHNldCB1cCBub2Rl
LiAqLw0KKwlpZiAoaW5fcmN1KSB7DQorCQkvKiBBbGxvY2F0ZSBmb3IgYm90aCBsZWZ0IGFuZCBy
aWdodCBhcyB3ZWxsIGFzIHBhcmVudC4gKi8NCisJCW1hc19ub2RlX2NvdW50KG1hcywgMyk7DQor
CQlpZiAobWFzX2lzX2VycihtYXMpKQ0KKwkJCXJldHVybjsNCisNCisJCW5ld25vZGUgPSBtYXNf
cG9wX25vZGUobWFzKTsNCisJfSBlbHNlIHsNCisJCW5ld25vZGUgPSAmcmV1c2U7DQorCX0NCisN
CisJbm9kZSA9IG1hc19tbihtYXMpOw0KKwluZXdub2RlLT5wYXJlbnQgPSBub2RlLT5wYXJlbnQ7
DQorCXNsb3RzID0gbWFfc2xvdHMobmV3bm9kZSwgbXQpOw0KKwlwaXZzID0gbWFfcGl2b3RzKG5l
d25vZGUsIG10KTsNCisJbGVmdCA9IG1hc19tbigmbF9tYXMpOw0KKwlsX3Nsb3RzID0gbWFfc2xv
dHMobGVmdCwgbXQpOw0KKwlsX3BpdnMgPSBtYV9waXZvdHMobGVmdCwgbXQpOw0KKwlpZiAoIWxf
c2xvdHNbc3BsaXRdKQ0KKwkJc3BsaXQrKzsNCisJdG1wID0gbWFzX2RhdGFfZW5kKCZsX21hcykg
LSBzcGxpdDsNCisNCisJbWVtY3B5KHNsb3RzLCBsX3Nsb3RzICsgc3BsaXQgKyAxLCBzaXplb2Yo
dm9pZCAqKSAqIHRtcCk7DQorCW1lbWNweShwaXZzLCBsX3BpdnMgKyBzcGxpdCArIDEsIHNpemVv
Zih1bnNpZ25lZCBsb25nKSAqIHRtcCk7DQorCXBpdnNbdG1wXSA9IGxfbWFzLm1heDsNCisJbWVt
Y3B5KHNsb3RzICsgdG1wLCBtYV9zbG90cyhub2RlLCBtdCksIHNpemVvZih2b2lkICopICogZW5k
KTsNCisJbWVtY3B5KHBpdnMgKyB0bXAsIG1hX3Bpdm90cyhub2RlLCBtdCksIHNpemVvZih1bnNp
Z25lZCBsb25nKSAqIGVuZCk7DQorDQorCWxfbWFzLm1heCA9IGxfcGl2c1tzcGxpdF07DQorCW1h
cy0+bWluID0gbF9tYXMubWF4ICsgMTsNCisJZXBhcmVudCA9IG10X21rX25vZGUobXRlX3BhcmVu
dChsX21hcy5ub2RlKSwNCisJCQkgICAgIG1hc19wYXJlbnRfZW51bSgmbF9tYXMsIGxfbWFzLm5v
ZGUpKTsNCisJdG1wICs9IGVuZDsNCisJaWYgKCFpbl9yY3UpIHsNCisJCXVuc2lnbmVkIGNoYXIg
bWF4X3AgPSBtdF9waXZvdHNbbXRdOw0KKwkJdW5zaWduZWQgY2hhciBtYXhfcyA9IG10X3Nsb3Rz
W210XTsNCisNCisJCWlmICh0bXAgPCBtYXhfcCkNCisJCQltZW1zZXQocGl2cyArIHRtcCwgMCwN
CisJCQkgICAgICAgc2l6ZW9mKHVuc2lnbmVkIGxvbmcgKikgKiAobWF4X3AgLSB0bXApKTsNCisN
CisJCWlmICh0bXAgPCBtdF9zbG90c1ttdF0pDQorCQkJbWVtc2V0KHNsb3RzICsgdG1wLCAwLCBz
aXplb2Yodm9pZCAqKSAqIChtYXhfcyAtIHRtcCkpOw0KKw0KKwkJbWVtY3B5KG5vZGUsIG5ld25v
ZGUsIHNpemVvZihzdHJ1Y3QgbWFwbGVfbm9kZSkpOw0KKwkJbWFfc2V0X21ldGEobm9kZSwgbXQs
IDAsIHRtcCAtIDEpOw0KKwkJbXRlX3NldF9waXZvdChlcGFyZW50LCBtdGVfcGFyZW50X3Nsb3Qo
bF9tYXMubm9kZSksDQorCQkJICAgICAgbF9waXZzW3NwbGl0XSk7DQorDQorCQkvKiBSZW1vdmUg
ZGF0YSBmcm9tIGxfcGl2cy4gKi8NCisJCXRtcCA9IHNwbGl0ICsgMTsNCisJCW1lbXNldChsX3Bp
dnMgKyB0bXAsIDAsIHNpemVvZih1bnNpZ25lZCBsb25nKSAqIChtYXhfcCAtIHRtcCkpOw0KKwkJ
bWVtc2V0KGxfc2xvdHMgKyB0bXAsIDAsIHNpemVvZih2b2lkICopICogKG1heF9zIC0gdG1wKSk7
DQorCQltYV9zZXRfbWV0YShsZWZ0LCBtdCwgMCwgc3BsaXQpOw0KKw0KKwkJZ290byBkb25lOw0K
Kwl9DQorDQorCS8qIFJDVSByZXF1aXJlcyByZXBsYWNpbmcgYm90aCBsX21hcywgbWFzLCBhbmQg
cGFyZW50LiAqLw0KKwltYXMtPm5vZGUgPSBtdF9ta19ub2RlKG5ld25vZGUsIG10KTsNCisJbWFf
c2V0X21ldGEobmV3bm9kZSwgbXQsIDAsIHRtcCk7DQorDQorCW5ld19sZWZ0ID0gbWFzX3BvcF9u
b2RlKG1hcyk7DQorCW5ld19sZWZ0LT5wYXJlbnQgPSBsZWZ0LT5wYXJlbnQ7DQorCW10ID0gbXRl
X25vZGVfdHlwZShsX21hcy5ub2RlKTsNCisJc2xvdHMgPSBtYV9zbG90cyhuZXdfbGVmdCwgbXQp
Ow0KKwlwaXZzID0gbWFfcGl2b3RzKG5ld19sZWZ0LCBtdCk7DQorCW1lbWNweShzbG90cywgbF9z
bG90cywgc2l6ZW9mKHZvaWQgKikgKiBzcGxpdCk7DQorCW1lbWNweShwaXZzLCBsX3BpdnMsIHNp
emVvZih1bnNpZ25lZCBsb25nKSAqIHNwbGl0KTsNCisJbWFfc2V0X21ldGEobmV3X2xlZnQsIG10
LCAwLCBzcGxpdCk7DQorCWxfbWFzLm5vZGUgPSBtdF9ta19ub2RlKG5ld19sZWZ0LCBtdCk7DQor
DQorCS8qIHJlcGxhY2UgcGFyZW50LiAqLw0KKwlvZmZzZXQgPSBtdGVfcGFyZW50X3Nsb3QobWFz
LT5ub2RlKTsNCisJbXQgPSBtYXNfcGFyZW50X2VudW0oJmxfbWFzLCBsX21hcy5ub2RlKTsNCisJ
cGFyZW50ID0gbWFzX3BvcF9ub2RlKG1hcyk7DQorCXNsb3RzID0gbWFfc2xvdHMocGFyZW50LCBt
dCk7DQorCXBpdnMgPSBtYV9waXZvdHMocGFyZW50LCBtdCk7DQorCW1lbWNweShwYXJlbnQsIG10
ZV90b19ub2RlKGVwYXJlbnQpLCBzaXplb2Yoc3RydWN0IG1hcGxlX25vZGUpKTsNCisJcmN1X2Fz
c2lnbl9wb2ludGVyKHNsb3RzW29mZnNldF0sIG1hcy0+bm9kZSk7DQorCXJjdV9hc3NpZ25fcG9p
bnRlcihzbG90c1tvZmZzZXQgLSAxXSwgbF9tYXMubm9kZSk7DQorCXBpdnNbb2Zmc2V0IC0gMV0g
PSBsX21hcy5tYXg7DQorCWVwYXJlbnQgPSBtdF9ta19ub2RlKHBhcmVudCwgbXQpOw0KK2RvbmU6
DQorCWdhcCA9IG1hc19sZWFmX21heF9nYXAobWFzKTsNCisJbXRlX3NldF9nYXAoZXBhcmVudCwg
bXRlX3BhcmVudF9zbG90KG1hcy0+bm9kZSksIGdhcCk7DQorCWdhcCA9IG1hc19sZWFmX21heF9n
YXAoJmxfbWFzKTsNCisJbXRlX3NldF9nYXAoZXBhcmVudCwgbXRlX3BhcmVudF9zbG90KGxfbWFz
Lm5vZGUpLCBnYXApOw0KKwltYXNfYXNjZW5kKG1hcyk7DQorDQorCWlmIChpbl9yY3UpDQorCQlt
YXNfcmVwbGFjZShtYXMsIGZhbHNlKTsNCisNCisJbWFzX3VwZGF0ZV9nYXAobWFzKTsNCit9DQor
DQorLyoNCisgKiBtYXNfc3BsaXRfZmluYWxfbm9kZSgpIC0gU3BsaXQgdGhlIGZpbmFsIG5vZGUg
aW4gYSBzdWJ0cmVlIG9wZXJhdGlvbi4NCisgKiBAbWFzdDogdGhlIG1hcGxlIHN1YnRyZWUgc3Rh
dGUNCisgKiBAbWFzOiBUaGUgbWFwbGUgc3RhdGUNCisgKiBAaGVpZ2h0OiBUaGUgaGVpZ2h0IG9m
IHRoZSB0cmVlIGluIGNhc2UgaXQncyBhIG5ldyByb290Lg0KKyAqLw0KK3N0YXRpYyBpbmxpbmUg
Ym9vbCBtYXNfc3BsaXRfZmluYWxfbm9kZShzdHJ1Y3QgbWFwbGVfc3VidHJlZV9zdGF0ZSAqbWFz
dCwNCisJCQkJCXN0cnVjdCBtYV9zdGF0ZSAqbWFzLCBpbnQgaGVpZ2h0KQ0KK3sNCisJc3RydWN0
IG1hcGxlX2Vub2RlICphbmNlc3RvcjsNCisNCisJaWYgKG10ZV9pc19yb290KG1hcy0+bm9kZSkp
IHsNCisJCWlmIChtdF9pc19hbGxvYyhtYXMtPnRyZWUpKQ0KKwkJCW1hc3QtPmJuLT50eXBlID0g
bWFwbGVfYXJhbmdlXzY0Ow0KKwkJZWxzZQ0KKwkJCW1hc3QtPmJuLT50eXBlID0gbWFwbGVfcmFu
Z2VfNjQ7DQorCQltYXMtPmRlcHRoID0gaGVpZ2h0Ow0KKwl9DQorCS8qDQorCSAqIE9ubHkgYSBz
aW5nbGUgbm9kZSBpcyB1c2VkIGhlcmUsIGNvdWxkIGJlIHJvb3QuDQorCSAqIFRoZSBCaWdfbm9k
ZSBkYXRhIHNob3VsZCBqdXN0IGZpdCBpbiBhIHNpbmdsZSBub2RlLg0KKwkgKi8NCisJYW5jZXN0
b3IgPSBtYXNfbmV3X21hX25vZGUobWFzLCBtYXN0LT5ibik7DQorCW10ZV9zZXRfcGFyZW50KG1h
c3QtPmwtPm5vZGUsIGFuY2VzdG9yLCBtYXN0LT5sLT5vZmZzZXQpOw0KKwltdGVfc2V0X3BhcmVu
dChtYXN0LT5yLT5ub2RlLCBhbmNlc3RvciwgbWFzdC0+ci0+b2Zmc2V0KTsNCisJbXRlX3RvX25v
ZGUoYW5jZXN0b3IpLT5wYXJlbnQgPSBtYXNfbW4obWFzKS0+cGFyZW50Ow0KKw0KKwltYXN0LT5s
LT5ub2RlID0gYW5jZXN0b3I7DQorCW1hYl9tYXNfY3AobWFzdC0+Ym4sIDAsIG10X3Nsb3RzW21h
c3QtPmJuLT50eXBlXSAtIDEsIG1hc3QtPmwsIHRydWUpOw0KKwltYXMtPm9mZnNldCA9IG1hc3Qt
PmJuLT5iX2VuZCAtIDE7DQorCXJldHVybiB0cnVlOw0KK30NCisNCisvKg0KKyAqIG1hc3RfZmls
bF9ibm9kZSgpIC0gQ29weSBkYXRhIGludG8gdGhlIGJpZyBub2RlIGluIHRoZSBzdWJ0cmVlIHN0
YXRlDQorICogQG1hc3Q6IFRoZSBtYXBsZSBzdWJ0cmVlIHN0YXRlDQorICogQG1hczogdGhlIG1h
cGxlIHN0YXRlDQorICogQHNraXA6IFRoZSBudW1iZXIgb2YgZW50cmllcyB0byBza2lwIGZvciBu
ZXcgbm9kZXMgaW5zZXJ0aW9uLg0KKyAqLw0KK3N0YXRpYyBpbmxpbmUgdm9pZCBtYXN0X2ZpbGxf
Ym5vZGUoc3RydWN0IG1hcGxlX3N1YnRyZWVfc3RhdGUgKm1hc3QsDQorCQkJCQkgc3RydWN0IG1h
X3N0YXRlICptYXMsDQorCQkJCQkgdW5zaWduZWQgY2hhciBza2lwKQ0KK3sNCisJYm9vbCBjcCA9
IHRydWU7DQorCXN0cnVjdCBtYXBsZV9lbm9kZSAqb2xkID0gbWFzLT5ub2RlOw0KKwl1bnNpZ25l
ZCBjaGFyIHNwbGl0Ow0KKw0KKwltZW1zZXQobWFzdC0+Ym4tPmdhcCwgMCwgc2l6ZW9mKHVuc2ln
bmVkIGxvbmcpICogQVJSQVlfU0laRShtYXN0LT5ibi0+Z2FwKSk7DQorCW1lbXNldChtYXN0LT5i
bi0+c2xvdCwgMCwgc2l6ZW9mKHVuc2lnbmVkIGxvbmcpICogQVJSQVlfU0laRShtYXN0LT5ibi0+
c2xvdCkpOw0KKwltZW1zZXQobWFzdC0+Ym4tPnBpdm90LCAwLCBzaXplb2YodW5zaWduZWQgbG9u
ZykgKiBBUlJBWV9TSVpFKG1hc3QtPmJuLT5waXZvdCkpOw0KKwltYXN0LT5ibi0+Yl9lbmQgPSAw
Ow0KKw0KKwlpZiAobXRlX2lzX3Jvb3QobWFzLT5ub2RlKSkgew0KKwkJY3AgPSBmYWxzZTsNCisJ
fSBlbHNlIHsNCisJCW1hc19hc2NlbmQobWFzKTsNCisJCW1hdF9hZGQobWFzdC0+ZnJlZSwgb2xk
KTsNCisJCW1hcy0+b2Zmc2V0ID0gbXRlX3BhcmVudF9zbG90KG1hcy0+bm9kZSk7DQorCX0NCisN
CisJaWYgKGNwICYmIG1hc3QtPmwtPm9mZnNldCkNCisJCW1hc19tYWJfY3AobWFzLCAwLCBtYXN0
LT5sLT5vZmZzZXQgLSAxLCBtYXN0LT5ibiwgMCk7DQorDQorCXNwbGl0ID0gbWFzdC0+Ym4tPmJf
ZW5kOw0KKwltYWJfc2V0X2JfZW5kKG1hc3QtPmJuLCBtYXN0LT5sLCBtYXN0LT5sLT5ub2RlKTsN
CisJbWFzdC0+ci0+b2Zmc2V0ID0gbWFzdC0+Ym4tPmJfZW5kOw0KKwltYWJfc2V0X2JfZW5kKG1h
c3QtPmJuLCBtYXN0LT5yLCBtYXN0LT5yLT5ub2RlKTsNCisJaWYgKG1hc3QtPmJuLT5waXZvdFtt
YXN0LT5ibi0+Yl9lbmQgLSAxXSA9PSBtYXMtPm1heCkNCisJCWNwID0gZmFsc2U7DQorDQorCWlm
IChjcCkNCisJCW1hc19tYWJfY3AobWFzLCBzcGxpdCArIHNraXAsIG10X3Nsb3RfY291bnQobWFz
LT5ub2RlKSAtIDEsDQorCQkJICAgbWFzdC0+Ym4sIG1hc3QtPmJuLT5iX2VuZCk7DQorDQorCW1h
c3QtPmJuLT5iX2VuZC0tOw0KKwltYXN0LT5ibi0+dHlwZSA9IG10ZV9ub2RlX3R5cGUobWFzLT5u
b2RlKTsNCit9DQorDQorLyoNCisgKiBtYXN0X3NwbGl0X2RhdGEoKSAtIFNwbGl0IHRoZSBkYXRh
IGluIHRoZSBzdWJ0cmVlIHN0YXRlIGJpZyBub2RlIGludG8gcmVndWxhcg0KKyAqIG5vZGVzLg0K
KyAqIEBtYXN0OiBUaGUgbWFwbGUgc3VidHJlZSBzdGF0ZQ0KKyAqIEBtYXM6IFRoZSBtYXBsZSBz
dGF0ZQ0KKyAqIEBzcGxpdDogVGhlIGxvY2F0aW9uIHRvIHNwbGl0IHRoZSBiaWcgbm9kZQ0KKyAq
Lw0KK3N0YXRpYyBpbmxpbmUgdm9pZCBtYXN0X3NwbGl0X2RhdGEoc3RydWN0IG1hcGxlX3N1YnRy
ZWVfc3RhdGUgKm1hc3QsDQorCSAgIHN0cnVjdCBtYV9zdGF0ZSAqbWFzLCB1bnNpZ25lZCBjaGFy
IHNwbGl0KQ0KK3sNCisJdW5zaWduZWQgY2hhciBwX3Nsb3Q7DQorDQorCW1hYl9tYXNfY3AobWFz
dC0+Ym4sIDAsIHNwbGl0LCBtYXN0LT5sLCB0cnVlKTsNCisJbXRlX3NldF9waXZvdChtYXN0LT5y
LT5ub2RlLCAwLCBtYXN0LT5yLT5tYXgpOw0KKwltYWJfbWFzX2NwKG1hc3QtPmJuLCBzcGxpdCAr
IDEsIG1hc3QtPmJuLT5iX2VuZCwgbWFzdC0+ciwgZmFsc2UpOw0KKwltYXN0LT5sLT5vZmZzZXQg
PSBtdGVfcGFyZW50X3Nsb3QobWFzLT5ub2RlKTsNCisJbWFzdC0+bC0+bWF4ID0gbWFzdC0+Ym4t
PnBpdm90W3NwbGl0XTsNCisJbWFzdC0+ci0+bWluID0gbWFzdC0+bC0+bWF4ICsgMTsNCisJaWYg
KG10ZV9pc19sZWFmKG1hcy0+bm9kZSkpDQorCQlyZXR1cm47DQorDQorCXBfc2xvdCA9IG1hc3Qt
Pm9yaWdfbC0+b2Zmc2V0Ow0KKwltYXNfc2V0X3NwbGl0X3BhcmVudChtYXN0LT5vcmlnX2wsIG1h
c3QtPmwtPm5vZGUsIG1hc3QtPnItPm5vZGUsDQorCQkJICAgICAmcF9zbG90LCBzcGxpdCk7DQor
CW1hc19zZXRfc3BsaXRfcGFyZW50KG1hc3QtPm9yaWdfciwgbWFzdC0+bC0+bm9kZSwgbWFzdC0+
ci0+bm9kZSwNCisJCQkgICAgICZwX3Nsb3QsIHNwbGl0KTsNCit9DQorDQorLyoNCisgKiBtYXNf
cHVzaF9kYXRhKCkgLSBJbnN0ZWFkIG9mIHNwbGl0dGluZyBhIG5vZGUsIGl0IGlzIGJlbmVmaWNp
YWwgdG8gcHVzaCB0aGUNCisgKiBkYXRhIHRvIHRoZSByaWdodCBvciBsZWZ0IG5vZGUgaWYgdGhl
cmUgaXMgcm9vbS4NCisgKiBAbWFzOiBUaGUgbWFwbGUgc3RhdGUNCisgKiBAaGVpZ2h0OiBUaGUg
Y3VycmVudCBoZWlnaHQgb2YgdGhlIG1hcGxlIHN0YXRlDQorICogQG1hc3Q6IFRoZSBtYXBsZSBz
dWJ0cmVlIHN0YXRlDQorICogQGxlZnQ6IFB1c2ggbGVmdCBvciBub3QuDQorICoNCisgKiBLZWVw
aW5nIHRoZSBoZWlnaHQgb2YgdGhlIHRyZWUgbG93IG1lYW5zIGZhc3RlciBsb29rdXBzLg0KKyAq
DQorICogUmV0dXJuOiBUcnVlIGlmIHB1c2hlZCwgZmFsc2Ugb3RoZXJ3aXNlLg0KKyAqLw0KK3N0
YXRpYyBpbmxpbmUgYm9vbCBtYXNfcHVzaF9kYXRhKHN0cnVjdCBtYV9zdGF0ZSAqbWFzLCBpbnQg
aGVpZ2h0LA0KKwkJCQkgc3RydWN0IG1hcGxlX3N1YnRyZWVfc3RhdGUgKm1hc3QsIGJvb2wgbGVm
dCkNCit7DQorCXVuc2lnbmVkIGNoYXIgc2xvdF90b3RhbCA9IG1hc3QtPmJuLT5iX2VuZDsNCisJ
dW5zaWduZWQgY2hhciBlbmQsIHNwYWNlLCBzcGxpdDsNCisNCisJTUFfU1RBVEUodG1wX21hcywg
bWFzLT50cmVlLCBtYXMtPmluZGV4LCBtYXMtPmxhc3QpOw0KKwl0bXBfbWFzID0gKm1hczsNCisJ
dG1wX21hcy5kZXB0aCA9IG1hc3QtPmwtPmRlcHRoOw0KKw0KKwlpZiAobGVmdCAmJiAhbWFzX3By
ZXZfc2libGluZygmdG1wX21hcykpDQorCQlyZXR1cm4gZmFsc2U7DQorCWVsc2UgaWYgKCFsZWZ0
ICYmICFtYXNfbmV4dF9zaWJsaW5nKCZ0bXBfbWFzKSkNCisJCXJldHVybiBmYWxzZTsNCisNCisJ
ZW5kID0gbWFzX2RhdGFfZW5kKCZ0bXBfbWFzKTsNCisJc2xvdF90b3RhbCArPSBlbmQ7DQorCXNw
YWNlID0gMiAqIG10X3Nsb3RfY291bnQobWFzLT5ub2RlKSAtIDI7DQorCS8qIC0yIGluc3RlYWQg
b2YgLTEgdG8gZW5zdXJlIHRoZXJlIGlzbid0IGEgdHJpcGxlIHNwbGl0ICovDQorCWlmIChtYV9p
c19sZWFmKG1hc3QtPmJuLT50eXBlKSkNCisJCXNwYWNlLS07DQorDQorCWlmIChtYXMtPm1heCA9
PSBVTE9OR19NQVgpDQorCQlzcGFjZS0tOw0KKw0KKwlpZiAoc2xvdF90b3RhbCA+PSBzcGFjZSkN
CisJCXJldHVybiBmYWxzZTsNCisNCisJLyogR2V0IHRoZSBkYXRhOyBGaWxsIG1hc3QtPmJuICov
DQorCW1hc3QtPmJuLT5iX2VuZCsrOw0KKwlpZiAobGVmdCkgew0KKwkJbWFiX3NoaWZ0X3JpZ2h0
KG1hc3QtPmJuLCBlbmQgKyAxKTsNCisJCW1hc19tYWJfY3AoJnRtcF9tYXMsIDAsIGVuZCwgbWFz
dC0+Ym4sIDApOw0KKwkJbWFzdC0+Ym4tPmJfZW5kID0gc2xvdF90b3RhbCArIDE7DQorCX0gZWxz
ZSB7DQorCQltYXNfbWFiX2NwKCZ0bXBfbWFzLCAwLCBlbmQsIG1hc3QtPmJuLCBtYXN0LT5ibi0+
Yl9lbmQpOw0KKwl9DQorDQorCS8qIENvbmZpZ3VyZSBtYXN0IGZvciBzcGxpdHRpbmcgb2YgbWFz
dC0+Ym4gKi8NCisJc3BsaXQgPSBtdF9zbG90c1ttYXN0LT5ibi0+dHlwZV0gLSAyOw0KKwlpZiAo
bGVmdCkgew0KKwkJLyogIFN3aXRjaCBtYXMgdG8gcHJldiBub2RlICAqLw0KKwkJbWF0X2FkZCht
YXN0LT5mcmVlLCBtYXMtPm5vZGUpOw0KKwkJKm1hcyA9IHRtcF9tYXM7DQorCQkvKiBTdGFydCB1
c2luZyBtYXN0LT5sIGZvciB0aGUgbGVmdCBzaWRlLiAqLw0KKwkJdG1wX21hcy5ub2RlID0gbWFz
dC0+bC0+bm9kZTsNCisJCSptYXN0LT5sID0gdG1wX21hczsNCisJfSBlbHNlIHsNCisJCW1hdF9h
ZGQobWFzdC0+ZnJlZSwgdG1wX21hcy5ub2RlKTsNCisJCXRtcF9tYXMubm9kZSA9IG1hc3QtPnIt
Pm5vZGU7DQorCQkqbWFzdC0+ciA9IHRtcF9tYXM7DQorCQlzcGxpdCA9IHNsb3RfdG90YWwgLSBz
cGxpdDsNCisJfQ0KKwlzcGxpdCA9IG1hYl9ub19udWxsX3NwbGl0KG1hc3QtPmJuLCBzcGxpdCwg
bXRfc2xvdHNbbWFzdC0+Ym4tPnR5cGVdKTsNCisJLyogVXBkYXRlIHBhcmVudCBzbG90IGZvciBz
cGxpdCBjYWxjdWxhdGlvbi4gKi8NCisJaWYgKGxlZnQpDQorCQltYXN0LT5vcmlnX2wtPm9mZnNl
dCArPSBlbmQgKyAxOw0KKw0KKwltYXN0X3NwbGl0X2RhdGEobWFzdCwgbWFzLCBzcGxpdCk7DQor
CW1hc3RfZmlsbF9ibm9kZShtYXN0LCBtYXMsIDIpOw0KKwltYXNfc3BsaXRfZmluYWxfbm9kZSht
YXN0LCBtYXMsIGhlaWdodCArIDEpOw0KKwlyZXR1cm4gdHJ1ZTsNCit9DQorDQorLyoNCisgKiBt
YXNfc3BsaXQoKSAtIFNwbGl0IGRhdGEgdGhhdCBpcyB0b28gYmlnIGZvciBvbmUgbm9kZSBpbnRv
IHR3by4NCisgKiBAbWFzOiBUaGUgbWFwbGUgc3RhdGUNCisgKiBAYl9ub2RlOiBUaGUgbWFwbGUg
YmlnIG5vZGUNCisgKiBSZXR1cm46IDEgb24gc3VjY2VzcywgMCBvbiBmYWlsdXJlLg0KKyAqLw0K
K3N0YXRpYyBpbnQgbWFzX3NwbGl0KHN0cnVjdCBtYV9zdGF0ZSAqbWFzLCBzdHJ1Y3QgbWFwbGVf
YmlnX25vZGUgKmJfbm9kZSkNCit7DQorDQorCXN0cnVjdCBtYXBsZV9zdWJ0cmVlX3N0YXRlIG1h
c3Q7DQorCWludCBoZWlnaHQgPSAwOw0KKwl1bnNpZ25lZCBjaGFyIG1pZF9zcGxpdCwgc3BsaXQg
PSAwOw0KKw0KKwkvKg0KKwkgKiBTcGxpdHRpbmcgaXMgaGFuZGxlZCBkaWZmZXJlbnRseSBmcm9t
IGFueSBvdGhlciBCLXRyZWU7IHRoZSBNYXBsZQ0KKwkgKiBUcmVlIHNwbGl0cyB1cHdhcmRzLiAg
U3BsaXR0aW5nIHVwIG1lYW5zIHRoYXQgdGhlIHNwbGl0IG9wZXJhdGlvbg0KKwkgKiBvY2N1cnMg
d2hlbiB0aGUgd2FsayBvZiB0aGUgdHJlZSBoaXRzIHRoZSBsZWF2ZXMgYW5kIG5vdCBvbiB0aGUg
d2F5DQorCSAqIGRvd24uICBUaGUgcmVhc29uIGZvciBzcGxpdHRpbmcgdXAgaXMgdGhhdCBpdCBp
cyBpbXBvc3NpYmxlIHRvIGtub3cNCisJICogaG93IG11Y2ggc3BhY2Ugd2lsbCBiZSBuZWVkZWQg
dW50aWwgdGhlIGxlYWYgaXMgKG9yIGxlYXZlcyBhcmUpDQorCSAqIHJlYWNoZWQuICBTaW5jZSBv
dmVyd3JpdGluZyBkYXRhIGlzIGFsbG93ZWQgYW5kIGEgcmFuZ2UgY291bGQNCisJICogb3Zlcndy
aXRlIG1vcmUgdGhhbiBvbmUgcmFuZ2Ugb3IgcmVzdWx0IGluIGNoYW5naW5nIG9uZSBlbnRyeSBp
bnRvIDMNCisJICogZW50cmllcywgaXQgaXMgaW1wb3NzaWJsZSB0byBrbm93IGlmIGEgc3BsaXQg
aXMgcmVxdWlyZWQgdW50aWwgdGhlDQorCSAqIGRhdGEgaXMgZXhhbWluZWQuDQorCSAqDQorCSAq
IFNwbGl0dGluZyBpcyBhIGJhbGFuY2luZyBhY3QgYmV0d2VlbiBrZWVwaW5nIGFsbG9jYXRpb25z
IHRvIGEgbWluaW11bQ0KKwkgKiBhbmQgYXZvaWRpbmcgYSAnaml0dGVyJyBldmVudCB3aGVyZSBh
IHRyZWUgaXMgZXhwYW5kZWQgdG8gbWFrZSByb29tDQorCSAqIGZvciBhbiBlbnRyeSBmb2xsb3dl
ZCBieSBhIGNvbnRyYWN0aW9uIHdoZW4gdGhlIGVudHJ5IGlzIHJlbW92ZWQuICBUbw0KKwkgKiBh
Y2NvbXBsaXNoIHRoZSBiYWxhbmNlLCB0aGVyZSBhcmUgZW1wdHkgc2xvdHMgcmVtYWluaW5nIGlu
IGJvdGggbGVmdA0KKwkgKiBhbmQgcmlnaHQgbm9kZXMgYWZ0ZXIgYSBzcGxpdC4NCisJICovDQor
CU1BX1NUQVRFKGxfbWFzLCBtYXMtPnRyZWUsIG1hcy0+aW5kZXgsIG1hcy0+bGFzdCk7DQorCU1B
X1NUQVRFKHJfbWFzLCBtYXMtPnRyZWUsIG1hcy0+aW5kZXgsIG1hcy0+bGFzdCk7DQorCU1BX1NU
QVRFKHByZXZfbF9tYXMsIG1hcy0+dHJlZSwgbWFzLT5pbmRleCwgbWFzLT5sYXN0KTsNCisJTUFf
U1RBVEUocHJldl9yX21hcywgbWFzLT50cmVlLCBtYXMtPmluZGV4LCBtYXMtPmxhc3QpOw0KKwlN
QV9UT1BJQVJZKG1hdCwgbWFzLT50cmVlKTsNCisNCisJdHJhY2VfbWFfb3AoX19mdW5jX18sIG1h
cyk7DQorCW1hcy0+ZGVwdGggPSBtYXNfbXRfaGVpZ2h0KG1hcyk7DQorCS8qIEFsbG9jYXRpb24g
ZmFpbHVyZXMgd2lsbCBoYXBwZW4gZWFybHkuICovDQorCW1hc19ub2RlX2NvdW50KG1hcywgMSAr
IG1hcy0+ZGVwdGggKiAyKTsNCisJaWYgKG1hc19pc19lcnIobWFzKSkNCisJCXJldHVybiAwOw0K
Kw0KKwltYXN0LmwgPSAmbF9tYXM7DQorCW1hc3QuciA9ICZyX21hczsNCisJbWFzdC5vcmlnX2wg
PSAmcHJldl9sX21hczsNCisJbWFzdC5vcmlnX3IgPSAmcHJldl9yX21hczsNCisJbWFzdC5mcmVl
ID0gJm1hdDsNCisJbWFzdC5ibiA9IGJfbm9kZTsNCisNCisJd2hpbGUgKGhlaWdodCsrIDw9IG1h
cy0+ZGVwdGgpIHsNCisJCWlmIChtdF9zbG90c1tiX25vZGUtPnR5cGVdID4gYl9ub2RlLT5iX2Vu
ZCkgew0KKwkJCW1hc19zcGxpdF9maW5hbF9ub2RlKCZtYXN0LCBtYXMsIGhlaWdodCk7DQorCQkJ
YnJlYWs7DQorCQl9DQorDQorCQlsX21hcyA9IHJfbWFzID0gKm1hczsNCisJCWxfbWFzLm5vZGUg
PSBtYXNfbmV3X21hX25vZGUobWFzLCBiX25vZGUpOw0KKwkJcl9tYXMubm9kZSA9IG1hc19uZXdf
bWFfbm9kZShtYXMsIGJfbm9kZSk7DQorCQkvKg0KKwkJICogQW5vdGhlciB3YXkgdGhhdCAnaml0
dGVyJyBpcyBhdm9pZGVkIGlzIHRvIHRlcm1pbmF0ZSBhIHNwbGl0IHVwIGVhcmx5IGlmIHRoZQ0K
KwkJICogbGVmdCBvciByaWdodCBub2RlIGhhcyBzcGFjZSB0byBzcGFyZS4gIFRoaXMgaXMgcmVm
ZXJyZWQgdG8gYXMgInB1c2hpbmcgbGVmdCINCisJCSAqIG9yICJwdXNoaW5nIHJpZ2h0IiBhbmQg
aXMgc2ltaWxhciB0byB0aGUgQiogdHJlZSwgZXhjZXB0IHRoZSBub2RlcyBsZWZ0IG9yDQorCQkg
KiByaWdodCBjYW4gcmFyZWx5IGJlIHJldXNlZCBkdWUgdG8gUkNVLCBidXQgdGhlIHJpcHBsZSB1
cHdhcmRzIGlzIGhhbHRlZCB3aGljaA0KKwkJICogaXMgYSBzaWduaWZpY2FudCBzYXZpbmdzLg0K
KwkJICovDQorCQkvKiBUcnkgdG8gcHVzaCBsZWZ0LiAqLw0KKwkJaWYgKG1hc19wdXNoX2RhdGEo
bWFzLCBoZWlnaHQsICZtYXN0LCB0cnVlKSkNCisJCQlicmVhazsNCisNCisJCS8qIFRyeSB0byBw
dXNoIHJpZ2h0LiAqLw0KKwkJaWYgKG1hc19wdXNoX2RhdGEobWFzLCBoZWlnaHQsICZtYXN0LCBm
YWxzZSkpDQorCQkJYnJlYWs7DQorDQorCQlzcGxpdCA9IG1hYl9jYWxjX3NwbGl0KG1hcywgYl9u
b2RlLCAmbWlkX3NwbGl0LCBwcmV2X2xfbWFzLm1pbik7DQorCQltYXN0X3NwbGl0X2RhdGEoJm1h
c3QsIG1hcywgc3BsaXQpOw0KKwkJLyoNCisJCSAqIFVzdWFsbHkgY29ycmVjdCwgbWFiX21hc19j
cCBpbiB0aGUgYWJvdmUgY2FsbCBvdmVyd3JpdGVzDQorCQkgKiByLT5tYXguDQorCQkgKi8NCisJ
CW1hc3Quci0+bWF4ID0gbWFzLT5tYXg7DQorCQltYXN0X2ZpbGxfYm5vZGUoJm1hc3QsIG1hcywg
MSk7DQorCQlwcmV2X2xfbWFzID0gKm1hc3QubDsNCisJCXByZXZfcl9tYXMgPSAqbWFzdC5yOw0K
Kwl9DQorDQorCS8qIFNldCB0aGUgb3JpZ2luYWwgbm9kZSBhcyBkZWFkICovDQorCW1hdF9hZGQo
bWFzdC5mcmVlLCBtYXMtPm5vZGUpOw0KKwltYXMtPm5vZGUgPSBsX21hcy5ub2RlOw0KKwltYXNf
d21iX3JlcGxhY2UobWFzLCBtYXN0LmZyZWUsIE5VTEwpOw0KKwltdHJlZV9yYW5nZV93YWxrKG1h
cyk7DQorCXJldHVybiAxOw0KK30NCisNCisvKg0KKyAqIG1hc19yZXVzZV9ub2RlKCkgLSBSZXVz
ZSB0aGUgbm9kZSB0byBzdG9yZSB0aGUgZGF0YS4NCisgKiBAd3JfbWFzOiBUaGUgbWFwbGUgd3Jp
dGUgc3RhdGUNCisgKiBAYm46IFRoZSBtYXBsZSBiaWcgbm9kZQ0KKyAqIEBlbmQ6IFRoZSBlbmQg
b2YgdGhlIGRhdGEuDQorICoNCisgKiBXaWxsIGFsd2F5cyByZXR1cm4gZmFsc2UgaW4gUkNVIG1v
ZGUuDQorICoNCisgKiBSZXR1cm46IFRydWUgaWYgbm9kZSB3YXMgcmV1c2VkLCBmYWxzZSBvdGhl
cndpc2UuDQorICovDQorc3RhdGljIGlubGluZSBib29sIG1hc19yZXVzZV9ub2RlKHN0cnVjdCBt
YV93cl9zdGF0ZSAqd3JfbWFzLA0KKwkJCSAgc3RydWN0IG1hcGxlX2JpZ19ub2RlICpibiwgdW5z
aWduZWQgY2hhciBlbmQpDQorew0KKwkvKiBOZWVkIHRvIGJlIHJjdSBzYWZlLiAqLw0KKwlpZiAo
bXRfaW5fcmN1KHdyX21hcy0+bWFzLT50cmVlKSkNCisJCXJldHVybiBmYWxzZTsNCisNCisJaWYg
KGVuZCA+IGJuLT5iX2VuZCkgew0KKwkJaW50IGNsZWFyID0gbXRfc2xvdHNbd3JfbWFzLT50eXBl
XSAtIGJuLT5iX2VuZDsNCisNCisJCW1lbXNldCh3cl9tYXMtPnNsb3RzICsgYm4tPmJfZW5kLCAw
LCBzaXplb2Yodm9pZCAqKSAqIGNsZWFyLS0pOw0KKwkJbWVtc2V0KHdyX21hcy0+cGl2b3RzICsg
Ym4tPmJfZW5kLCAwLCBzaXplb2Yodm9pZCAqKSAqIGNsZWFyKTsNCisJfQ0KKwltYWJfbWFzX2Nw
KGJuLCAwLCBibi0+Yl9lbmQsIHdyX21hcy0+bWFzLCBmYWxzZSk7DQorCXJldHVybiB0cnVlOw0K
K30NCisNCisvKg0KKyAqIG1hc19jb21taXRfYl9ub2RlKCkgLSBDb21taXQgdGhlIGJpZyBub2Rl
IGludG8gdGhlIHRyZWUuDQorICogQHdyX21hczogVGhlIG1hcGxlIHdyaXRlIHN0YXRlDQorICog
QGJfbm9kZTogVGhlIG1hcGxlIGJpZyBub2RlDQorICogQGVuZDogVGhlIGVuZCBvZiB0aGUgZGF0
YS4NCisgKi8NCitzdGF0aWMgaW5saW5lIGludCBtYXNfY29tbWl0X2Jfbm9kZShzdHJ1Y3QgbWFf
d3Jfc3RhdGUgKndyX21hcywNCisJCQkgICAgc3RydWN0IG1hcGxlX2JpZ19ub2RlICpiX25vZGUs
IHVuc2lnbmVkIGNoYXIgZW5kKQ0KK3sNCisJc3RydWN0IG1hcGxlX25vZGUgKm5vZGU7DQorCXVu
c2lnbmVkIGNoYXIgYl9lbmQgPSBiX25vZGUtPmJfZW5kOw0KKwllbnVtIG1hcGxlX3R5cGUgYl90
eXBlID0gYl9ub2RlLT50eXBlOw0KKw0KKwlpZiAoKGJfZW5kIDwgbXRfbWluX3Nsb3RzW2JfdHlw
ZV0pICYmDQorCSAgICAoIW10ZV9pc19yb290KHdyX21hcy0+bWFzLT5ub2RlKSkgJiYNCisJICAg
IChtYXNfbXRfaGVpZ2h0KHdyX21hcy0+bWFzKSA+IDEpKQ0KKwkJcmV0dXJuIG1hc19yZWJhbGFu
Y2Uod3JfbWFzLT5tYXMsIGJfbm9kZSk7DQorDQorCWlmIChiX2VuZCA+PSBtdF9zbG90c1tiX3R5
cGVdKQ0KKwkJcmV0dXJuIG1hc19zcGxpdCh3cl9tYXMtPm1hcywgYl9ub2RlKTsNCisNCisJaWYg
KG1hc19yZXVzZV9ub2RlKHdyX21hcywgYl9ub2RlLCBlbmQpKQ0KKwkJZ290byByZXVzZV9ub2Rl
Ow0KKw0KKwltYXNfbm9kZV9jb3VudCh3cl9tYXMtPm1hcywgMSk7DQorCWlmIChtYXNfaXNfZXJy
KHdyX21hcy0+bWFzKSkNCisJCXJldHVybiAwOw0KKw0KKwlub2RlID0gbWFzX3BvcF9ub2RlKHdy
X21hcy0+bWFzKTsNCisJbm9kZS0+cGFyZW50ID0gbWFzX21uKHdyX21hcy0+bWFzKS0+cGFyZW50
Ow0KKwl3cl9tYXMtPm1hcy0+bm9kZSA9IG10X21rX25vZGUobm9kZSwgYl90eXBlKTsNCisJbWFi
X21hc19jcChiX25vZGUsIDAsIGJfZW5kLCB3cl9tYXMtPm1hcywgdHJ1ZSk7DQorDQorCW1hc19y
ZXBsYWNlKHdyX21hcy0+bWFzLCBmYWxzZSk7DQorcmV1c2Vfbm9kZToNCisJbWFzX3VwZGF0ZV9n
YXAod3JfbWFzLT5tYXMpOw0KKwlyZXR1cm4gMTsNCit9DQorDQorLyoNCisgKiBtYXNfcm9vdF9l
eHBhbmQoKSAtIEV4cGFuZCBhIHJvb3QgdG8gYSBub2RlDQorICogQG1hczogVGhlIG1hcGxlIHN0
YXRlDQorICogQGVudHJ5OiBUaGUgZW50cnkgdG8gc3RvcmUgaW50byB0aGUgdHJlZQ0KKyAqLw0K
K3N0YXRpYyBpbmxpbmUgaW50IG1hc19yb290X2V4cGFuZChzdHJ1Y3QgbWFfc3RhdGUgKm1hcywg
dm9pZCAqZW50cnkpDQorew0KKwl2b2lkICpjb250ZW50cyA9IG1hc19yb290X2xvY2tlZChtYXMp
Ow0KKwllbnVtIG1hcGxlX3R5cGUgdHlwZSA9IG1hcGxlX2xlYWZfNjQ7DQorCXN0cnVjdCBtYXBs
ZV9ub2RlICpub2RlOw0KKwl2b2lkIF9fcmN1ICoqc2xvdHM7DQorCXVuc2lnbmVkIGxvbmcgKnBp
dm90czsNCisJaW50IHNsb3QgPSAwOw0KKw0KKwltYXNfbm9kZV9jb3VudChtYXMsIDEpOw0KKwlp
ZiAodW5saWtlbHkobWFzX2lzX2VycihtYXMpKSkNCisJCXJldHVybiAwOw0KKw0KKwlub2RlID0g
bWFzX3BvcF9ub2RlKG1hcyk7DQorCXBpdm90cyA9IG1hX3Bpdm90cyhub2RlLCB0eXBlKTsNCisJ
c2xvdHMgPSBtYV9zbG90cyhub2RlLCB0eXBlKTsNCisJbm9kZS0+cGFyZW50ID0gbWFfcGFyZW50
X3B0cigNCisJCSAgICAgICgodW5zaWduZWQgbG9uZyltYXMtPnRyZWUgfCBNQV9ST09UX1BBUkVO
VCkpOw0KKwltYXMtPm5vZGUgPSBtdF9ta19ub2RlKG5vZGUsIHR5cGUpOw0KKw0KKwlpZiAobWFz
LT5pbmRleCkgew0KKwkJaWYgKGNvbnRlbnRzKSB7DQorCQkJcmN1X2Fzc2lnbl9wb2ludGVyKHNs
b3RzW3Nsb3RdLCBjb250ZW50cyk7DQorCQkJaWYgKGxpa2VseShtYXMtPmluZGV4ID4gMSkpDQor
CQkJCXNsb3QrKzsNCisJCX0NCisJCXBpdm90c1tzbG90KytdID0gbWFzLT5pbmRleCAtIDE7DQor
CX0NCisNCisJcmN1X2Fzc2lnbl9wb2ludGVyKHNsb3RzW3Nsb3RdLCBlbnRyeSk7DQorCW1hcy0+
b2Zmc2V0ID0gc2xvdDsNCisJcGl2b3RzW3Nsb3RdID0gbWFzLT5sYXN0Ow0KKwlpZiAobWFzLT5s
YXN0ICE9IFVMT05HX01BWCkNCisJCXNsb3QrKzsNCisJbWFzLT5kZXB0aCA9IDE7DQorCW1hc19z
ZXRfaGVpZ2h0KG1hcyk7DQorDQorCS8qIHN3YXAgdGhlIG5ldyByb290IGludG8gdGhlIHRyZWUg
Ki8NCisJcmN1X2Fzc2lnbl9wb2ludGVyKG1hcy0+dHJlZS0+bWFfcm9vdCwgbXRlX21rX3Jvb3Qo
bWFzLT5ub2RlKSk7DQorCW1hX3NldF9tZXRhKG5vZGUsIG1hcGxlX2xlYWZfNjQsIDAsIHNsb3Qp
Ow0KKwlyZXR1cm4gc2xvdDsNCit9DQorDQorc3RhdGljIGlubGluZSB2b2lkIG1hc19zdG9yZV9y
b290KHN0cnVjdCBtYV9zdGF0ZSAqbWFzLCB2b2lkICplbnRyeSkNCit7DQorCWlmIChsaWtlbHko
KG1hcy0+bGFzdCAhPSAwKSB8fCAobWFzLT5pbmRleCAhPSAwKSkpDQorCQltYXNfcm9vdF9leHBh
bmQobWFzLCBlbnRyeSk7DQorCWVsc2UgaWYgKCgodW5zaWduZWQgbG9uZykgKGVudHJ5KSAmIDMp
ID09IDIpDQorCQltYXNfcm9vdF9leHBhbmQobWFzLCBlbnRyeSk7DQorCWVsc2Ugew0KKwkJcmN1
X2Fzc2lnbl9wb2ludGVyKG1hcy0+dHJlZS0+bWFfcm9vdCwgZW50cnkpOw0KKwkJbWFzLT5ub2Rl
ID0gTUFTX1NUQVJUOw0KKwl9DQorfQ0KKw0KKy8qDQorICogbWFzX2lzX3NwYW5fd3IoKSAtIENo
ZWNrIGlmIHRoZSB3cml0ZSBuZWVkcyB0byBiZSB0cmVhdGVkIGFzIGEgd3JpdGUgdGhhdA0KKyAq
IHNwYW5zIHRoZSBub2RlLg0KKyAqIEBtYXM6IFRoZSBtYXBsZSBzdGF0ZQ0KKyAqIEBwaXY6IFRo
ZSBwaXZvdCB2YWx1ZSBiZWluZyB3cml0dGVuDQorICogQHR5cGU6IFRoZSBtYXBsZSBub2RlIHR5
cGUNCisgKiBAZW50cnk6IFRoZSBkYXRhIHRvIHdyaXRlDQorICoNCisgKiBTcGFubmluZyB3cml0
ZXMgYXJlIHdyaXRlcyB0aGF0IHN0YXJ0IGluIG9uZSBub2RlIGFuZCBlbmQgaW4gYW5vdGhlciBP
UiBpZg0KKyAqIHRoZSB3cml0ZSBvZiBhICVOVUxMIHdpbGwgY2F1c2UgdGhlIG5vZGUgdG8gZW5k
IHdpdGggYSAlTlVMTC4NCisgKg0KKyAqIFJldHVybjogVHJ1ZSBpZiB0aGlzIGlzIGEgc3Bhbm5p
bmcgd3JpdGUsIGZhbHNlIG90aGVyd2lzZS4NCisgKi8NCitzdGF0aWMgYm9vbCBtYXNfaXNfc3Bh
bl93cihzdHJ1Y3QgbWFfd3Jfc3RhdGUgKndyX21hcykNCit7DQorCXVuc2lnbmVkIGxvbmcgbWF4
Ow0KKwl1bnNpZ25lZCBsb25nIGxhc3QgPSB3cl9tYXMtPm1hcy0+bGFzdDsNCisJdW5zaWduZWQg
bG9uZyBwaXYgPSB3cl9tYXMtPnJfbWF4Ow0KKwllbnVtIG1hcGxlX3R5cGUgdHlwZSA9IHdyX21h
cy0+dHlwZTsNCisJdm9pZCAqZW50cnkgPSB3cl9tYXMtPmVudHJ5Ow0KKw0KKwkvKiBDb250YWlu
ZWQgaW4gdGhpcyBwaXZvdCAqLw0KKwlpZiAocGl2ID4gbGFzdCkNCisJCXJldHVybiBmYWxzZTsN
CisNCisJbWF4ID0gd3JfbWFzLT5tYXMtPm1heDsNCisJaWYgKHVubGlrZWx5KG1hX2lzX2xlYWYo
dHlwZSkpKSB7DQorCQkvKiBGaXRzIGluIHRoZSBub2RlLCBidXQgbWF5IHNwYW4gc2xvdHMuICov
DQorCQlpZiAobGFzdCA8IG1heCkNCisJCQlyZXR1cm4gZmFsc2U7DQorDQorCQkvKiBXcml0ZXMg
dG8gdGhlIGVuZCBvZiB0aGUgbm9kZSBidXQgbm90IG51bGwuICovDQorCQlpZiAoKGxhc3QgPT0g
bWF4KSAmJiBlbnRyeSkNCisJCQlyZXR1cm4gZmFsc2U7DQorDQorCQkvKg0KKwkJICogV3JpdGlu
ZyBVTE9OR19NQVggaXMgbm90IGEgc3Bhbm5pbmcgd3JpdGUgcmVnYXJkbGVzcyBvZiB0aGUNCisJ
CSAqIHZhbHVlIGJlaW5nIHdyaXR0ZW4gYXMgbG9uZyBhcyB0aGUgcmFuZ2UgZml0cyBpbiB0aGUg
bm9kZS4NCisJCSAqLw0KKwkJaWYgKChsYXN0ID09IFVMT05HX01BWCkgJiYgKGxhc3QgPT0gbWF4
KSkNCisJCQlyZXR1cm4gZmFsc2U7DQorCX0gZWxzZSBpZiAocGl2ID09IGxhc3QpIHsNCisJCWlm
IChlbnRyeSkNCisJCQlyZXR1cm4gZmFsc2U7DQorDQorCQkvKiBEZXRlY3Qgc3Bhbm5pbmcgc3Rv
cmUgd3Igd2FsayAqLw0KKwkJaWYgKGxhc3QgPT0gVUxPTkdfTUFYKQ0KKwkJCXJldHVybiBmYWxz
ZTsNCisJfQ0KKw0KKwl0cmFjZV9tYV93cml0ZShfX2Z1bmNfXywgd3JfbWFzLT5tYXMsIHBpdiwg
ZW50cnkpOw0KKw0KKwlyZXR1cm4gdHJ1ZTsNCit9DQorDQorc3RhdGljIGlubGluZSB2b2lkIG1h
c193cl93YWxrX2Rlc2NlbmQoc3RydWN0IG1hX3dyX3N0YXRlICp3cl9tYXMpDQorew0KKwl3cl9t
YXMtPm1hcy0+ZGVwdGgrKzsNCisJd3JfbWFzLT50eXBlID0gbXRlX25vZGVfdHlwZSh3cl9tYXMt
Pm1hcy0+bm9kZSk7DQorCW1hc193cl9ub2RlX3dhbGsod3JfbWFzKTsNCisJd3JfbWFzLT5zbG90
cyA9IG1hX3Nsb3RzKHdyX21hcy0+bm9kZSwgd3JfbWFzLT50eXBlKTsNCit9DQorDQorc3RhdGlj
IGlubGluZSB2b2lkIG1hc193cl93YWxrX3RyYXZlcnNlKHN0cnVjdCBtYV93cl9zdGF0ZSAqd3Jf
bWFzKQ0KK3sNCisJd3JfbWFzLT5tYXMtPm1heCA9IHdyX21hcy0+cl9tYXg7DQorCXdyX21hcy0+
bWFzLT5taW4gPSB3cl9tYXMtPnJfbWluOw0KKwl3cl9tYXMtPm1hcy0+bm9kZSA9IHdyX21hcy0+
Y29udGVudDsNCisJd3JfbWFzLT5tYXMtPm9mZnNldCA9IDA7DQorfQ0KKy8qDQorICogbWFzX3dy
X3dhbGsoKSAtIFdhbGsgdGhlIHRyZWUgZm9yIGEgd3JpdGUuDQorICogQHdyX21hczogVGhlIG1h
cGxlIHdyaXRlIHN0YXRlDQorICoNCisgKiBVc2VzIG1hc19zbG90X2xvY2tlZCgpIGFuZCBkb2Vz
IG5vdCBuZWVkIHRvIHdvcnJ5IGFib3V0IGRlYWQgbm9kZXMuDQorICoNCisgKiBSZXR1cm46IFRy
dWUgaWYgaXQncyBjb250YWluZWQgaW4gYSBub2RlLCBmYWxzZSBvbiBzcGFubmluZyB3cml0ZS4N
CisgKi8NCitzdGF0aWMgYm9vbCBtYXNfd3Jfd2FsayhzdHJ1Y3QgbWFfd3Jfc3RhdGUgKndyX21h
cykNCit7DQorCXN0cnVjdCBtYV9zdGF0ZSAqbWFzID0gd3JfbWFzLT5tYXM7DQorDQorCXdoaWxl
ICh0cnVlKSB7DQorCQltYXNfd3Jfd2Fsa19kZXNjZW5kKHdyX21hcyk7DQorCQlpZiAodW5saWtl
bHkobWFzX2lzX3NwYW5fd3Iod3JfbWFzKSkpDQorCQkJcmV0dXJuIGZhbHNlOw0KKw0KKwkJd3Jf
bWFzLT5jb250ZW50ID0gbWFzX3Nsb3RfbG9ja2VkKG1hcywgd3JfbWFzLT5zbG90cywNCisJCQkJ
CQkgIG1hcy0+b2Zmc2V0KTsNCisJCWlmIChtYV9pc19sZWFmKHdyX21hcy0+dHlwZSkpDQorCQkJ
cmV0dXJuIHRydWU7DQorDQorCQltYXNfd3Jfd2Fsa190cmF2ZXJzZSh3cl9tYXMpOw0KKwl9DQor
DQorCXJldHVybiB0cnVlOw0KK30NCisNCitzdGF0aWMgYm9vbCBtYXNfd3Jfd2Fsa19pbmRleChz
dHJ1Y3QgbWFfd3Jfc3RhdGUgKndyX21hcykNCit7DQorCXN0cnVjdCBtYV9zdGF0ZSAqbWFzID0g
d3JfbWFzLT5tYXM7DQorDQorCXdoaWxlICh0cnVlKSB7DQorCQltYXNfd3Jfd2Fsa19kZXNjZW5k
KHdyX21hcyk7DQorCQl3cl9tYXMtPmNvbnRlbnQgPSBtYXNfc2xvdF9sb2NrZWQobWFzLCB3cl9t
YXMtPnNsb3RzLA0KKwkJCQkJCSAgbWFzLT5vZmZzZXQpOw0KKwkJaWYgKG1hX2lzX2xlYWYod3Jf
bWFzLT50eXBlKSkNCisJCQlyZXR1cm4gdHJ1ZTsNCisJCW1hc193cl93YWxrX3RyYXZlcnNlKHdy
X21hcyk7DQorDQorCX0NCisJcmV0dXJuIHRydWU7DQorfQ0KKy8qDQorICogbWFzX2V4dGVuZF9z
cGFubmluZ19udWxsKCkgLSBFeHRlbmQgYSBzdG9yZSBvZiBhICVOVUxMIHRvIGluY2x1ZGUgc3Vy
cm91bmRpbmcgJU5VTExzLg0KKyAqIEBsX3dyX21hczogVGhlIGxlZnQgbWFwbGUgd3JpdGUgc3Rh
dGUNCisgKiBAcl93cl9tYXM6IFRoZSByaWdodCBtYXBsZSB3cml0ZSBzdGF0ZQ0KKyAqLw0KK3N0
YXRpYyBpbmxpbmUgdm9pZCBtYXNfZXh0ZW5kX3NwYW5uaW5nX251bGwoc3RydWN0IG1hX3dyX3N0
YXRlICpsX3dyX21hcywNCisJCQkJCSAgICBzdHJ1Y3QgbWFfd3Jfc3RhdGUgKnJfd3JfbWFzKQ0K
K3sNCisJc3RydWN0IG1hX3N0YXRlICpyX21hcyA9IHJfd3JfbWFzLT5tYXM7DQorCXN0cnVjdCBt
YV9zdGF0ZSAqbF9tYXMgPSBsX3dyX21hcy0+bWFzOw0KKwl1bnNpZ25lZCBjaGFyIGxfc2xvdDsN
CisNCisJbF9zbG90ID0gbF9tYXMtPm9mZnNldDsNCisJaWYgKCFsX3dyX21hcy0+Y29udGVudCkN
CisJCWxfbWFzLT5pbmRleCA9IGxfd3JfbWFzLT5yX21pbjsNCisNCisJaWYgKChsX21hcy0+aW5k
ZXggPT0gbF93cl9tYXMtPnJfbWluKSAmJg0KKwkJIChsX3Nsb3QgJiYNCisJCSAgIW1hc19zbG90
X2xvY2tlZChsX21hcywgbF93cl9tYXMtPnNsb3RzLCBsX3Nsb3QgLSAxKSkpIHsNCisJCWlmIChs
X3Nsb3QgPiAxKQ0KKwkJCWxfbWFzLT5pbmRleCA9IGxfd3JfbWFzLT5waXZvdHNbbF9zbG90IC0g
Ml0gKyAxOw0KKwkJZWxzZQ0KKwkJCWxfbWFzLT5pbmRleCA9IGxfbWFzLT5taW47DQorDQorCQls
X21hcy0+b2Zmc2V0ID0gbF9zbG90IC0gMTsNCisJfQ0KKw0KKwlpZiAoIXJfd3JfbWFzLT5jb250
ZW50KSB7DQorCQlpZiAocl9tYXMtPmxhc3QgPCByX3dyX21hcy0+cl9tYXgpDQorCQkJcl9tYXMt
Pmxhc3QgPSByX3dyX21hcy0+cl9tYXg7DQorCQlyX21hcy0+b2Zmc2V0Kys7DQorCX0gZWxzZSBp
ZiAoKHJfbWFzLT5sYXN0ID09IHJfd3JfbWFzLT5yX21heCkgJiYNCisJICAgIChyX21hcy0+bGFz
dCA8IHJfbWFzLT5tYXgpICYmDQorCSAgICAhbWFzX3Nsb3RfbG9ja2VkKHJfbWFzLCByX3dyX21h
cy0+c2xvdHMsIHJfbWFzLT5vZmZzZXQgKyAxKSkgew0KKwkJcl9tYXMtPmxhc3QgPSBtYXNfc2Fm
ZV9waXZvdChyX21hcywgcl93cl9tYXMtPnBpdm90cywNCisJCQkJCSAgICAgcl93cl9tYXMtPnR5
cGUsIHJfbWFzLT5vZmZzZXQgKyAxKTsNCisJCXJfbWFzLT5vZmZzZXQrKzsNCisJfQ0KK30NCisN
CitzdGF0aWMgaW5saW5lIHZvaWQgKm1hc19zdGF0ZV93YWxrKHN0cnVjdCBtYV9zdGF0ZSAqbWFz
KQ0KK3sNCisJdm9pZCAqZW50cnk7DQorDQorCWVudHJ5ID0gbWFzX3N0YXJ0KG1hcyk7DQorCWlm
IChtYXNfaXNfbm9uZShtYXMpKQ0KKwkJcmV0dXJuIE5VTEw7DQorDQorCWlmIChtYXNfaXNfcHRy
KG1hcykpDQorCQlyZXR1cm4gZW50cnk7DQorDQorCXJldHVybiBtdHJlZV9yYW5nZV93YWxrKG1h
cyk7DQorfQ0KKw0KKy8qDQorICogbXRyZWVfbG9va3VwX3dhbGsoKSAtIEludGVybmFsIHF1aWNr
IGxvb2t1cCB0aGF0IGRvZXMgbm90IGtlZXAgbWFwbGUgc3RhdGUgdXANCisgKiB0byBkYXRlLg0K
KyAqDQorICogQG1hczogVGhlIG1hcGxlIHN0YXRlLg0KKyAqDQorICogTm90ZTogTGVhdmVzIG1h
cyBpbiB1bmRlc2lyYWJsZSBzdGF0ZS4NCisgKiBSZXR1cm46IFRoZSBlbnRyeSBmb3IgQG1hcy0+
aW5kZXggb3IgJU5VTEwgb24gZGVhZCBub2RlLg0KKyAqLw0KK3N0YXRpYyBpbmxpbmUgdm9pZCAq
bXRyZWVfbG9va3VwX3dhbGsoc3RydWN0IG1hX3N0YXRlICptYXMpDQorew0KKwl1bnNpZ25lZCBs
b25nICpwaXZvdHM7DQorCXVuc2lnbmVkIGNoYXIgb2Zmc2V0Ow0KKwlzdHJ1Y3QgbWFwbGVfbm9k
ZSAqbm9kZTsNCisJc3RydWN0IG1hcGxlX2Vub2RlICpuZXh0Ow0KKwllbnVtIG1hcGxlX3R5cGUg
dHlwZTsNCisJdm9pZCBfX3JjdSAqKnNsb3RzOw0KKwl1bnNpZ25lZCBjaGFyIGVuZDsNCisJdW5z
aWduZWQgbG9uZyBtYXg7DQorDQorCW5leHQgPSBtYXMtPm5vZGU7DQorCW1heCA9IFVMT05HX01B
WDsNCisJZG8gew0KKwkJb2Zmc2V0ID0gMDsNCisJCW5vZGUgPSBtdGVfdG9fbm9kZShuZXh0KTsN
CisJCXR5cGUgPSBtdGVfbm9kZV90eXBlKG5leHQpOw0KKwkJcGl2b3RzID0gbWFfcGl2b3RzKG5v
ZGUsIHR5cGUpOw0KKwkJZW5kID0gbWFfZGF0YV9lbmQobm9kZSwgdHlwZSwgcGl2b3RzLCBtYXgp
Ow0KKwkJaWYgKHVubGlrZWx5KG1hX2RlYWRfbm9kZShub2RlKSkpDQorCQkJZ290byBkZWFkX25v
ZGU7DQorDQorCQlpZiAocGl2b3RzW29mZnNldF0gPj0gbWFzLT5pbmRleCkNCisJCQlnb3RvIG5l
eHQ7DQorDQorCQlkbyB7DQorCQkJb2Zmc2V0Kys7DQorCQl9IHdoaWxlICgob2Zmc2V0IDwgZW5k
KSAmJiAocGl2b3RzW29mZnNldF0gPCBtYXMtPmluZGV4KSk7DQorDQorCQlpZiAobGlrZWx5KG9m
ZnNldCA+IGVuZCkpDQorCQkJbWF4ID0gcGl2b3RzW29mZnNldF07DQorDQorbmV4dDoNCisJCXNs
b3RzID0gbWFfc2xvdHMobm9kZSwgdHlwZSk7DQorCQluZXh0ID0gbXRfc2xvdChtYXMtPnRyZWUs
IHNsb3RzLCBvZmZzZXQpOw0KKwkJaWYgKHVubGlrZWx5KG1hX2RlYWRfbm9kZShub2RlKSkpDQor
CQkJZ290byBkZWFkX25vZGU7DQorCX0gd2hpbGUgKCFtYV9pc19sZWFmKHR5cGUpKTsNCisNCisJ
cmV0dXJuICh2b2lkICopIG5leHQ7DQorDQorZGVhZF9ub2RlOg0KKwltYXNfcmVzZXQobWFzKTsN
CisJcmV0dXJuIE5VTEw7DQorfQ0KKw0KKy8qDQorICogbWFzX25ld19yb290KCkgLSBDcmVhdGUg
YSBuZXcgcm9vdCBub2RlIHRoYXQgb25seSBjb250YWlucyB0aGUgZW50cnkgcGFzc2VkDQorICog
aW4uDQorICogQG1hczogVGhlIG1hcGxlIHN0YXRlDQorICogQGVudHJ5OiBUaGUgZW50cnkgdG8g
c3RvcmUuDQorICoNCisgKiBPbmx5IHZhbGlkIHdoZW4gdGhlIGluZGV4ID09IDAgYW5kIHRoZSBs
YXN0ID09IFVMT05HX01BWA0KKyAqDQorICogUmV0dXJuIDAgb24gZXJyb3IsIDEgb24gc3VjY2Vz
cy4NCisgKi8NCitzdGF0aWMgaW5saW5lIGludCBtYXNfbmV3X3Jvb3Qoc3RydWN0IG1hX3N0YXRl
ICptYXMsIHZvaWQgKmVudHJ5KQ0KK3sNCisJc3RydWN0IG1hcGxlX2Vub2RlICpyb290ID0gbWFz
X3Jvb3RfbG9ja2VkKG1hcyk7DQorCWVudW0gbWFwbGVfdHlwZSB0eXBlID0gbWFwbGVfbGVhZl82
NDsNCisJc3RydWN0IG1hcGxlX25vZGUgKm5vZGU7DQorCXZvaWQgX19yY3UgKipzbG90czsNCisJ
dW5zaWduZWQgbG9uZyAqcGl2b3RzOw0KKw0KKwlpZiAoIWVudHJ5ICYmICFtYXMtPmluZGV4ICYm
IG1hcy0+bGFzdCA9PSBVTE9OR19NQVgpIHsNCisJCW1hcy0+ZGVwdGggPSAwOw0KKwkJbWFzX3Nl
dF9oZWlnaHQobWFzKTsNCisJCXJjdV9hc3NpZ25fcG9pbnRlcihtYXMtPnRyZWUtPm1hX3Jvb3Qs
IGVudHJ5KTsNCisJCW1hcy0+bm9kZSA9IE1BU19TVEFSVDsNCisJCWdvdG8gZG9uZTsNCisJfQ0K
Kw0KKwltYXNfbm9kZV9jb3VudChtYXMsIDEpOw0KKwlpZiAobWFzX2lzX2VycihtYXMpKQ0KKwkJ
cmV0dXJuIDA7DQorDQorCW5vZGUgPSBtYXNfcG9wX25vZGUobWFzKTsNCisJcGl2b3RzID0gbWFf
cGl2b3RzKG5vZGUsIHR5cGUpOw0KKwlzbG90cyA9IG1hX3Nsb3RzKG5vZGUsIHR5cGUpOw0KKwlu
b2RlLT5wYXJlbnQgPSBtYV9wYXJlbnRfcHRyKA0KKwkJICAgICAgKCh1bnNpZ25lZCBsb25nKW1h
cy0+dHJlZSB8IE1BX1JPT1RfUEFSRU5UKSk7DQorCW1hcy0+bm9kZSA9IG10X21rX25vZGUobm9k
ZSwgdHlwZSk7DQorCXJjdV9hc3NpZ25fcG9pbnRlcihzbG90c1swXSwgZW50cnkpOw0KKwlwaXZv
dHNbMF0gPSBtYXMtPmxhc3Q7DQorCW1hcy0+ZGVwdGggPSAxOw0KKwltYXNfc2V0X2hlaWdodCht
YXMpOw0KKwlyY3VfYXNzaWduX3BvaW50ZXIobWFzLT50cmVlLT5tYV9yb290LCBtdGVfbWtfcm9v
dChtYXMtPm5vZGUpKTsNCisNCitkb25lOg0KKwlpZiAoeGFfaXNfbm9kZShyb290KSkNCisJCW10
ZV9kZXN0cm95X3dhbGsocm9vdCwgbWFzLT50cmVlKTsNCisNCisJcmV0dXJuIDE7DQorfQ0KKy8q
DQorICogbWFzX3dyX3NwYW5uaW5nX3N0b3JlKCkgLSBDcmVhdGUgYSBzdWJ0cmVlIHdpdGggdGhl
IHN0b3JlIG9wZXJhdGlvbiBjb21wbGV0ZWQNCisgKiBhbmQgbmV3IG5vZGVzIHdoZXJlIG5lY2Vz
c2FyeSwgdGhlbiBwbGFjZSB0aGUgc3ViLXRyZWUgaW4gdGhlIGFjdHVhbCB0cmVlLg0KKyAqIE5v
dGUgdGhhdCBtYXMgaXMgZXhwZWN0ZWQgdG8gcG9pbnQgdG8gdGhlIG5vZGUgd2hpY2ggY2F1c2Vk
IHRoZSBzdG9yZSB0bw0KKyAqIHNwYW4uDQorICogQHdyX21hczogVGhlIG1hcGxlIHdyaXRlIHN0
YXRlDQorICoNCisgKiBSZXR1cm46IDAgb24gZXJyb3IsIHBvc2l0aXZlIG9uIHN1Y2Nlc3MuDQor
ICovDQorc3RhdGljIGlubGluZSBpbnQgbWFzX3dyX3NwYW5uaW5nX3N0b3JlKHN0cnVjdCBtYV93
cl9zdGF0ZSAqd3JfbWFzKQ0KK3sNCisJc3RydWN0IG1hcGxlX3N1YnRyZWVfc3RhdGUgbWFzdDsN
CisJc3RydWN0IG1hcGxlX2JpZ19ub2RlIGJfbm9kZTsNCisJc3RydWN0IG1hX3N0YXRlICptYXM7
DQorCXVuc2lnbmVkIGNoYXIgaGVpZ2h0Ow0KKw0KKwkvKiBMZWZ0IGFuZCBSaWdodCBzaWRlIG9m
IHNwYW5uaW5nIHN0b3JlICovDQorCU1BX1NUQVRFKGxfbWFzLCBOVUxMLCAwLCAwKTsNCisJTUFf
U1RBVEUocl9tYXMsIE5VTEwsIDAsIDApOw0KKw0KKwlNQV9XUl9TVEFURShyX3dyX21hcywgJnJf
bWFzLCB3cl9tYXMtPmVudHJ5KTsNCisJTUFfV1JfU1RBVEUobF93cl9tYXMsICZsX21hcywgd3Jf
bWFzLT5lbnRyeSk7DQorDQorCS8qDQorCSAqIEEgc3RvcmUgb3BlcmF0aW9uIHRoYXQgc3BhbnMg
bXVsdGlwbGUgbm9kZXMgaXMgY2FsbGVkIGEgc3Bhbm5pbmcNCisJICogc3RvcmUgYW5kIGlzIGhh
bmRsZWQgZWFybHkgaW4gdGhlIHN0b3JlIGNhbGwgc3RhY2sgYnkgdGhlIGZ1bmN0aW9uDQorCSAq
IG1hc19pc19zcGFuX3dyKCkuICBXaGVuIGEgc3Bhbm5pbmcgc3RvcmUgaXMgaWRlbnRpZmllZCwg
dGhlIG1hcGxlDQorCSAqIHN0YXRlIGlzIGR1cGxpY2F0ZWQuICBUaGUgZmlyc3QgbWFwbGUgc3Rh
dGUgd2Fsa3MgdGhlIGxlZnQgdHJlZSBwYXRoDQorCSAqIHRvIGBgaW5kZXhgYCwgdGhlIGR1cGxp
Y2F0ZSB3YWxrcyB0aGUgcmlnaHQgdHJlZSBwYXRoIHRvIGBgbGFzdGBgLg0KKwkgKiBUaGUgZGF0
YSBpbiB0aGUgdHdvIG5vZGVzIGFyZSBjb21iaW5lZCBpbnRvIGEgc2luZ2xlIG5vZGUsIHR3byBu
b2RlcywNCisJICogb3IgcG9zc2libHkgdGhyZWUgbm9kZXMgKHNlZSB0aGUgMy13YXkgc3BsaXQg
YWJvdmUpLiAgQSBgYE5VTExgYA0KKwkgKiB3cml0dGVuIHRvIHRoZSBsYXN0IGVudHJ5IG9mIGEg
bm9kZSBpcyBjb25zaWRlcmVkIGEgc3Bhbm5pbmcgc3RvcmUgYXMNCisJICogYSByZWJhbGFuY2Ug
aXMgcmVxdWlyZWQgZm9yIHRoZSBvcGVyYXRpb24gdG8gY29tcGxldGUgYW5kIGFuIG92ZXJmbG93
DQorCSAqIG9mIGRhdGEgbWF5IGhhcHBlbi4NCisJICovDQorCW1hcyA9IHdyX21hcy0+bWFzOw0K
Kwl0cmFjZV9tYV9vcChfX2Z1bmNfXywgbWFzKTsNCisNCisJaWYgKHVubGlrZWx5KCFtYXMtPmlu
ZGV4ICYmIG1hcy0+bGFzdCA9PSBVTE9OR19NQVgpKQ0KKwkJcmV0dXJuIG1hc19uZXdfcm9vdCht
YXMsIHdyX21hcy0+ZW50cnkpOw0KKwkvKg0KKwkgKiBOb2RlIHJlYmFsYW5jaW5nIG1heSBvY2N1
ciBkdWUgdG8gdGhpcyBzdG9yZSwgc28gdGhlcmUgbWF5IGJlIHRocmVlIG5ldw0KKwkgKiBlbnRy
aWVzIHBlciBsZXZlbCBwbHVzIGEgbmV3IHJvb3QuDQorCSAqLw0KKwloZWlnaHQgPSBtYXNfbXRf
aGVpZ2h0KG1hcyk7DQorCW1hc19ub2RlX2NvdW50KG1hcywgMSArIGhlaWdodCAqIDMpOw0KKwlp
ZiAobWFzX2lzX2VycihtYXMpKQ0KKwkJcmV0dXJuIDA7DQorDQorCS8qDQorCSAqIFNldCB1cCBy
aWdodCBzaWRlLiAgTmVlZCB0byBnZXQgdG8gdGhlIG5leHQgb2Zmc2V0IGFmdGVyIHRoZSBzcGFu
bmluZw0KKwkgKiBzdG9yZSB0byBlbnN1cmUgaXQncyBub3QgTlVMTCBhbmQgdG8gY29tYmluZSBi
b3RoIHRoZSBuZXh0IG5vZGUgYW5kDQorCSAqIHRoZSBub2RlIHdpdGggdGhlIHN0YXJ0IHRvZ2V0
aGVyLg0KKwkgKi8NCisJcl9tYXMgPSAqbWFzOw0KKwkvKiBBdm9pZCBvdmVyZmxvdywgd2FsayB0
byBuZXh0IHNsb3QgaW4gdGhlIHRyZWUuICovDQorCWlmIChyX21hcy5sYXN0ICsgMSkNCisJCXJf
bWFzLmxhc3QrKzsNCisNCisJcl9tYXMuaW5kZXggPSByX21hcy5sYXN0Ow0KKwltYXNfd3Jfd2Fs
a19pbmRleCgmcl93cl9tYXMpOw0KKwlyX21hcy5sYXN0ID0gcl9tYXMuaW5kZXggPSBtYXMtPmxh
c3Q7DQorDQorCS8qIFNldCB1cCBsZWZ0IHNpZGUuICovDQorCWxfbWFzID0gKm1hczsNCisJbWFz
X3dyX3dhbGtfaW5kZXgoJmxfd3JfbWFzKTsNCisNCisJaWYgKCF3cl9tYXMtPmVudHJ5KSB7DQor
CQltYXNfZXh0ZW5kX3NwYW5uaW5nX251bGwoJmxfd3JfbWFzLCAmcl93cl9tYXMpOw0KKwkJbWFz
LT5vZmZzZXQgPSBsX21hcy5vZmZzZXQ7DQorCQltYXMtPmluZGV4ID0gbF9tYXMuaW5kZXg7DQor
CQltYXMtPmxhc3QgPSBsX21hcy5sYXN0ID0gcl9tYXMubGFzdDsNCisJfQ0KKw0KKwkvKiBleHBh
bmRpbmcgTlVMTHMgbWF5IG1ha2UgdGhpcyBjb3ZlciB0aGUgZW50aXJlIHJhbmdlICovDQorCWlm
ICghbF9tYXMuaW5kZXggJiYgcl9tYXMubGFzdCA9PSBVTE9OR19NQVgpIHsNCisJCW1hc19zZXRf
cmFuZ2UobWFzLCAwLCBVTE9OR19NQVgpOw0KKwkJcmV0dXJuIG1hc19uZXdfcm9vdChtYXMsIHdy
X21hcy0+ZW50cnkpOw0KKwl9DQorDQorCW1lbXNldCgmYl9ub2RlLCAwLCBzaXplb2Yoc3RydWN0
IG1hcGxlX2JpZ19ub2RlKSk7DQorCS8qIENvcHkgbF9tYXMgYW5kIHN0b3JlIHRoZSB2YWx1ZSBp
biBiX25vZGUuICovDQorCW1hc19zdG9yZV9iX25vZGUoJmxfd3JfbWFzLCAmYl9ub2RlLCBsX3dy
X21hcy5ub2RlX2VuZCk7DQorCS8qIENvcHkgcl9tYXMgaW50byBiX25vZGUuICovDQorCWlmIChy
X21hcy5vZmZzZXQgPD0gcl93cl9tYXMubm9kZV9lbmQpDQorCQltYXNfbWFiX2NwKCZyX21hcywg
cl9tYXMub2Zmc2V0LCByX3dyX21hcy5ub2RlX2VuZCwNCisJCQkgICAmYl9ub2RlLCBiX25vZGUu
Yl9lbmQgKyAxKTsNCisJZWxzZQ0KKwkJYl9ub2RlLmJfZW5kKys7DQorDQorCS8qIFN0b3Agc3Bh
bm5pbmcgc2VhcmNoZXMgYnkgc2VhcmNoaW5nIGZvciBqdXN0IGluZGV4LiAqLw0KKwlsX21hcy5p
bmRleCA9IGxfbWFzLmxhc3QgPSBtYXMtPmluZGV4Ow0KKw0KKwltYXN0LmJuID0gJmJfbm9kZTsN
CisJbWFzdC5vcmlnX2wgPSAmbF9tYXM7DQorCW1hc3Qub3JpZ19yID0gJnJfbWFzOw0KKwkvKiBD
b21iaW5lIGxfbWFzIGFuZCByX21hcyBhbmQgc3BsaXQgdGhlbSB1cCBldmVubHkgYWdhaW4uICov
DQorCXJldHVybiBtYXNfc3Bhbm5pbmdfcmViYWxhbmNlKG1hcywgJm1hc3QsIGhlaWdodCArIDEp
Ow0KK30NCisNCisvKg0KKyAqIG1hc193cl9ub2RlX3N0b3JlKCkgLSBBdHRlbXB0IHRvIHN0b3Jl
IHRoZSB2YWx1ZSBpbiBhIG5vZGUNCisgKiBAd3JfbWFzOiBUaGUgbWFwbGUgd3JpdGUgc3RhdGUN
CisgKg0KKyAqIEF0dGVtcHRzIHRvIHJldXNlIHRoZSBub2RlLCBidXQgbWF5IGFsbG9jYXRlLg0K
KyAqDQorICogUmV0dXJuOiBUcnVlIGlmIHN0b3JlZCwgZmFsc2Ugb3RoZXJ3aXNlDQorICovDQor
c3RhdGljIGlubGluZSBib29sIG1hc193cl9ub2RlX3N0b3JlKHN0cnVjdCBtYV93cl9zdGF0ZSAq
d3JfbWFzKQ0KK3sNCisJc3RydWN0IG1hX3N0YXRlICptYXMgPSB3cl9tYXMtPm1hczsNCisJdm9p
ZCBfX3JjdSAqKmRzdF9zbG90czsNCisJdW5zaWduZWQgbG9uZyAqZHN0X3Bpdm90czsNCisJdW5z
aWduZWQgY2hhciBkc3Rfb2Zmc2V0Ow0KKwl1bnNpZ25lZCBjaGFyIG5ld19lbmQgPSB3cl9tYXMt
Pm5vZGVfZW5kOw0KKwl1bnNpZ25lZCBjaGFyIG9mZnNldDsNCisJdW5zaWduZWQgY2hhciBub2Rl
X3Nsb3RzID0gbXRfc2xvdHNbd3JfbWFzLT50eXBlXTsNCisJc3RydWN0IG1hcGxlX25vZGUgcmV1
c2UsICpuZXdub2RlOw0KKwl1bnNpZ25lZCBjaGFyIGNvcHlfc2l6ZSwgbWF4X3BpdiA9IG10X3Bp
dm90c1t3cl9tYXMtPnR5cGVdOw0KKwlib29sIGluX3JjdSA9IG10X2luX3JjdShtYXMtPnRyZWUp
Ow0KKw0KKwlvZmZzZXQgPSBtYXMtPm9mZnNldDsNCisJaWYgKG1hcy0+bGFzdCA9PSB3cl9tYXMt
PnJfbWF4KSB7DQorCQkvKiBydW5zIHJpZ2h0IHRvIHRoZSBlbmQgb2YgdGhlIG5vZGUgKi8NCisJ
CWlmIChtYXMtPmxhc3QgPT0gbWFzLT5tYXgpDQorCQkJbmV3X2VuZCA9IG9mZnNldDsNCisJCS8q
IGRvbid0IGNvcHkgdGhpcyBvZmZzZXQgKi8NCisJCXdyX21hcy0+b2Zmc2V0X2VuZCsrOw0KKwl9
IGVsc2UgaWYgKG1hcy0+bGFzdCA8IHdyX21hcy0+cl9tYXgpIHsNCisJCS8qIG5ldyByYW5nZSBl
bmRzIGluIHRoaXMgcmFuZ2UgKi8NCisJCWlmICh1bmxpa2VseSh3cl9tYXMtPnJfbWF4ID09IFVM
T05HX01BWCkpDQorCQkJbWFzX2J1bGtfcmViYWxhbmNlKG1hcywgd3JfbWFzLT5ub2RlX2VuZCwg
d3JfbWFzLT50eXBlKTsNCisNCisJCW5ld19lbmQrKzsNCisJfSBlbHNlIHsNCisJCWlmICh3cl9t
YXMtPmVuZF9waXYgPT0gbWFzLT5sYXN0KQ0KKwkJCXdyX21hcy0+b2Zmc2V0X2VuZCsrOw0KKw0K
KwkJbmV3X2VuZCAtPSB3cl9tYXMtPm9mZnNldF9lbmQgLSBvZmZzZXQgLSAxOw0KKwl9DQorDQor
CS8qIG5ldyByYW5nZSBzdGFydHMgd2l0aGluIGEgcmFuZ2UgKi8NCisJaWYgKHdyX21hcy0+cl9t
aW4gPCBtYXMtPmluZGV4KQ0KKwkJbmV3X2VuZCsrOw0KKw0KKwkvKiBOb3QgZW5vdWdoIHJvb20g
Ki8NCisJaWYgKG5ld19lbmQgPj0gbm9kZV9zbG90cykNCisJCXJldHVybiBmYWxzZTsNCisNCisJ
LyogTm90IGVub3VnaCBkYXRhLiAqLw0KKwlpZiAoIW10ZV9pc19yb290KG1hcy0+bm9kZSkgJiYg
KG5ld19lbmQgPD0gbXRfbWluX3Nsb3RzW3dyX21hcy0+dHlwZV0pICYmDQorCSAgICAhKG1hcy0+
bWFzX2ZsYWdzICYgTUFfU1RBVEVfQlVMSykpDQorCQlyZXR1cm4gZmFsc2U7DQorDQorCS8qIHNl
dCB1cCBub2RlLiAqLw0KKwlpZiAoaW5fcmN1KSB7DQorCQltYXNfbm9kZV9jb3VudChtYXMsIDEp
Ow0KKwkJaWYgKG1hc19pc19lcnIobWFzKSkNCisJCQlyZXR1cm4gZmFsc2U7DQorDQorCQluZXdu
b2RlID0gbWFzX3BvcF9ub2RlKG1hcyk7DQorCX0gZWxzZSB7DQorCQltZW1zZXQoJnJldXNlLCAw
LCBzaXplb2Yoc3RydWN0IG1hcGxlX25vZGUpKTsNCisJCW5ld25vZGUgPSAmcmV1c2U7DQorCX0N
CisNCisJbmV3bm9kZS0+cGFyZW50ID0gbWFzX21uKG1hcyktPnBhcmVudDsNCisJZHN0X3Bpdm90
cyA9IG1hX3Bpdm90cyhuZXdub2RlLCB3cl9tYXMtPnR5cGUpOw0KKwlkc3Rfc2xvdHMgPSBtYV9z
bG90cyhuZXdub2RlLCB3cl9tYXMtPnR5cGUpOw0KKwkvKiBDb3B5IGZyb20gc3RhcnQgdG8gaW5z
ZXJ0IHBvaW50ICovDQorCW1lbWNweShkc3RfcGl2b3RzLCB3cl9tYXMtPnBpdm90cywgc2l6ZW9m
KHVuc2lnbmVkIGxvbmcpICogKG9mZnNldCArIDEpKTsNCisJbWVtY3B5KGRzdF9zbG90cywgd3Jf
bWFzLT5zbG90cywgc2l6ZW9mKHZvaWQgKikgKiAob2Zmc2V0ICsgMSkpOw0KKwlkc3Rfb2Zmc2V0
ID0gb2Zmc2V0Ow0KKw0KKwkvKiBIYW5kbGUgaW5zZXJ0IG9mIG5ldyByYW5nZSBzdGFydGluZyBh
ZnRlciBvbGQgcmFuZ2UgKi8NCisJaWYgKHdyX21hcy0+cl9taW4gPCBtYXMtPmluZGV4KSB7DQor
CQltYXMtPm9mZnNldCsrOw0KKwkJcmN1X2Fzc2lnbl9wb2ludGVyKGRzdF9zbG90c1tkc3Rfb2Zm
c2V0XSwgd3JfbWFzLT5jb250ZW50KTsNCisJCWRzdF9waXZvdHNbZHN0X29mZnNldCsrXSA9IG1h
cy0+aW5kZXggLSAxOw0KKwl9DQorDQorCS8qIFN0b3JlIHRoZSBuZXcgZW50cnkgYW5kIHJhbmdl
IGVuZC4gKi8NCisJaWYgKGRzdF9vZmZzZXQgPCBtYXhfcGl2KQ0KKwkJZHN0X3Bpdm90c1tkc3Rf
b2Zmc2V0XSA9IG1hcy0+bGFzdDsNCisJbWFzLT5vZmZzZXQgPSBkc3Rfb2Zmc2V0Ow0KKwlyY3Vf
YXNzaWduX3BvaW50ZXIoZHN0X3Nsb3RzW2RzdF9vZmZzZXRdLCB3cl9tYXMtPmVudHJ5KTsNCisN
CisJLyoNCisJICogdGhpcyByYW5nZSB3cm90ZSB0byB0aGUgZW5kIG9mIHRoZSBub2RlIG9yIGl0
IG92ZXJ3cm90ZSB0aGUgcmVzdCBvZg0KKwkgKiB0aGUgZGF0YQ0KKwkgKi8NCisJaWYgKHdyX21h
cy0+b2Zmc2V0X2VuZCA+IHdyX21hcy0+bm9kZV9lbmQgfHwgbWFzLT5sYXN0ID49IG1hcy0+bWF4
KSB7DQorCQluZXdfZW5kID0gZHN0X29mZnNldDsNCisJCWdvdG8gZG9uZTsNCisJfQ0KKw0KKwlk
c3Rfb2Zmc2V0Kys7DQorCS8qIENvcHkgdG8gdGhlIGVuZCBvZiBub2RlIGlmIG5lY2Vzc2FyeS4g
Ki8NCisJY29weV9zaXplID0gd3JfbWFzLT5ub2RlX2VuZCAtIHdyX21hcy0+b2Zmc2V0X2VuZCAr
IDE7DQorCW1lbWNweShkc3Rfc2xvdHMgKyBkc3Rfb2Zmc2V0LCB3cl9tYXMtPnNsb3RzICsgd3Jf
bWFzLT5vZmZzZXRfZW5kLA0KKwkgICAgICAgc2l6ZW9mKHZvaWQgKikgKiBjb3B5X3NpemUpOw0K
KwlpZiAoZHN0X29mZnNldCA8IG1heF9waXYpIHsNCisJCWlmIChjb3B5X3NpemUgPiBtYXhfcGl2
IC0gZHN0X29mZnNldCkNCisJCQljb3B5X3NpemUgPSBtYXhfcGl2IC0gZHN0X29mZnNldDsNCisN
CisJCW1lbWNweShkc3RfcGl2b3RzICsgZHN0X29mZnNldCwNCisJCSAgICAgICB3cl9tYXMtPnBp
dm90cyArIHdyX21hcy0+b2Zmc2V0X2VuZCwNCisJCSAgICAgICBzaXplb2YodW5zaWduZWQgbG9u
ZykgKiBjb3B5X3NpemUpOw0KKwl9DQorDQorCWlmICgod3JfbWFzLT5ub2RlX2VuZCA9PSBub2Rl
X3Nsb3RzIC0gMSkgJiYgKG5ld19lbmQgPCBub2RlX3Nsb3RzIC0gMSkpDQorCQlkc3RfcGl2b3Rz
W25ld19lbmRdID0gbWFzLT5tYXg7DQorDQorZG9uZToNCisJbWFzX2xlYWZfc2V0X21ldGEobWFz
LCBuZXdub2RlLCBkc3RfcGl2b3RzLCBtYXBsZV9sZWFmXzY0LCBuZXdfZW5kKTsNCisJaWYgKGlu
X3JjdSkgew0KKwkJbWFzLT5ub2RlID0gbXRfbWtfbm9kZShuZXdub2RlLCB3cl9tYXMtPnR5cGUp
Ow0KKwkJbWFzX3JlcGxhY2UobWFzLCBmYWxzZSk7DQorCX0gZWxzZSB7DQorCQltZW1jcHkod3Jf
bWFzLT5ub2RlLCBuZXdub2RlLCBzaXplb2Yoc3RydWN0IG1hcGxlX25vZGUpKTsNCisJfQ0KKwl0
cmFjZV9tYV93cml0ZShfX2Z1bmNfXywgbWFzLCAwLCB3cl9tYXMtPmVudHJ5KTsNCisJbWFzX3Vw
ZGF0ZV9nYXAobWFzKTsNCisJcmV0dXJuIHRydWU7DQorfQ0KKw0KKy8qDQorICogbWFzX3dyX3Ns
b3Rfc3RvcmU6IEF0dGVtcHQgdG8gc3RvcmUgYSB2YWx1ZSBpbiBhIHNsb3QuDQorICogQHdyX21h
czogdGhlIG1hcGxlIHdyaXRlIHN0YXRlDQorICoNCisgKiBSZXR1cm46IFRydWUgaWYgc3RvcmVk
LCBmYWxzZSBvdGhlcndpc2UNCisgKi8NCitzdGF0aWMgaW5saW5lIGJvb2wgbWFzX3dyX3Nsb3Rf
c3RvcmUoc3RydWN0IG1hX3dyX3N0YXRlICp3cl9tYXMpDQorew0KKwlzdHJ1Y3QgbWFfc3RhdGUg
Km1hcyA9IHdyX21hcy0+bWFzOw0KKwl1bnNpZ25lZCBsb25nIGxtYXg7IC8qIExvZ2ljYWwgbWF4
LiAqLw0KKwl1bnNpZ25lZCBjaGFyIG9mZnNldCA9IG1hcy0+b2Zmc2V0Ow0KKw0KKwlpZiAoKHdy
X21hcy0+cl9tYXggPiBtYXMtPmxhc3QpICYmICgod3JfbWFzLT5yX21pbiAhPSBtYXMtPmluZGV4
KSB8fA0KKwkJCQkgIChvZmZzZXQgIT0gd3JfbWFzLT5ub2RlX2VuZCkpKQ0KKwkJcmV0dXJuIGZh
bHNlOw0KKw0KKwlpZiAob2Zmc2V0ID09IHdyX21hcy0+bm9kZV9lbmQgLSAxKQ0KKwkJbG1heCA9
IG1hcy0+bWF4Ow0KKwllbHNlDQorCQlsbWF4ID0gd3JfbWFzLT5waXZvdHNbb2Zmc2V0ICsgMV07
DQorDQorCS8qIGdvaW5nIHRvIG92ZXJ3cml0ZSB0b28gbWFueSBzbG90cy4gKi8NCisJaWYgKGxt
YXggPCBtYXMtPmxhc3QpDQorCQlyZXR1cm4gZmFsc2U7DQorDQorCWlmICh3cl9tYXMtPnJfbWlu
ID09IG1hcy0+aW5kZXgpIHsNCisJCS8qIG92ZXJ3cml0aW5nIHR3byBvciBtb3JlIHJhbmdlcyB3
aXRoIG9uZS4gKi8NCisJCWlmIChsbWF4ID09IG1hcy0+bGFzdCkNCisJCQlyZXR1cm4gZmFsc2U7
DQorDQorCQkvKiBPdmVyd3JpdGluZyBhbGwgb2Ygb2Zmc2V0IGFuZCBhIHBvcnRpb24gb2Ygb2Zm
c2V0ICsgMS4gKi8NCisJCXJjdV9hc3NpZ25fcG9pbnRlcih3cl9tYXMtPnNsb3RzW29mZnNldF0s
IHdyX21hcy0+ZW50cnkpOw0KKwkJd3JfbWFzLT5waXZvdHNbb2Zmc2V0XSA9IG1hcy0+bGFzdDsN
CisJCWdvdG8gZG9uZTsNCisJfQ0KKw0KKwkvKiBEb2Vzbid0IGVuZCBvbiB0aGUgbmV4dCByYW5n
ZSBlbmQuICovDQorCWlmIChsbWF4ICE9IG1hcy0+bGFzdCkNCisJCXJldHVybiBmYWxzZTsNCisN
CisJLyogT3ZlcndyaXRpbmcgYSBwb3J0aW9uIG9mIG9mZnNldCBhbmQgYWxsIG9mIG9mZnNldCAr
IDEgKi8NCisJaWYgKChvZmZzZXQgKyAxIDwgbXRfcGl2b3RzW3dyX21hcy0+dHlwZV0pICYmDQor
CSAgICAod3JfbWFzLT5lbnRyeSB8fCB3cl9tYXMtPnBpdm90c1tvZmZzZXQgKyAxXSkpDQorCQl3
cl9tYXMtPnBpdm90c1tvZmZzZXQgKyAxXSA9IG1hcy0+bGFzdDsNCisNCisJcmN1X2Fzc2lnbl9w
b2ludGVyKHdyX21hcy0+c2xvdHNbb2Zmc2V0ICsgMV0sIHdyX21hcy0+ZW50cnkpOw0KKwl3cl9t
YXMtPnBpdm90c1tvZmZzZXRdID0gbWFzLT5pbmRleCAtIDE7DQorCW1hcy0+b2Zmc2V0Kys7IC8q
IEtlZXAgbWFzIGFjY3VyYXRlLiAqLw0KKw0KK2RvbmU6DQorCXRyYWNlX21hX3dyaXRlKF9fZnVu
Y19fLCBtYXMsIDAsIHdyX21hcy0+ZW50cnkpOw0KKwltYXNfdXBkYXRlX2dhcChtYXMpOw0KKwly
ZXR1cm4gdHJ1ZTsNCit9DQorDQorc3RhdGljIGlubGluZSB2b2lkIG1hc193cl9lbmRfcGl2KHN0
cnVjdCBtYV93cl9zdGF0ZSAqd3JfbWFzKQ0KK3sNCisJd2hpbGUgKCh3cl9tYXMtPm1hcy0+bGFz
dCA+IHdyX21hcy0+ZW5kX3BpdikgJiYNCisJICAgICAgICh3cl9tYXMtPm9mZnNldF9lbmQgPCB3
cl9tYXMtPm5vZGVfZW5kKSkNCisJCXdyX21hcy0+ZW5kX3BpdiA9IHdyX21hcy0+cGl2b3RzWysr
d3JfbWFzLT5vZmZzZXRfZW5kXTsNCisNCisJaWYgKHdyX21hcy0+bWFzLT5sYXN0ID4gd3JfbWFz
LT5lbmRfcGl2KQ0KKwkJd3JfbWFzLT5lbmRfcGl2ID0gd3JfbWFzLT5tYXMtPm1heDsNCit9DQor
DQorc3RhdGljIGlubGluZSB2b2lkIG1hc193cl9leHRlbmRfbnVsbChzdHJ1Y3QgbWFfd3Jfc3Rh
dGUgKndyX21hcykNCit7DQorCXN0cnVjdCBtYV9zdGF0ZSAqbWFzID0gd3JfbWFzLT5tYXM7DQor
DQorCWlmIChtYXMtPmxhc3QgPCB3cl9tYXMtPmVuZF9waXYgJiYgIXdyX21hcy0+c2xvdHNbd3Jf
bWFzLT5vZmZzZXRfZW5kXSkNCisJCW1hcy0+bGFzdCA9IHdyX21hcy0+ZW5kX3BpdjsNCisNCisJ
LyogQ2hlY2sgbmV4dCBzbG90KHMpIGlmIHdlIGFyZSBvdmVyd3JpdGluZyB0aGUgZW5kICovDQor
CWlmICgobWFzLT5sYXN0ID09IHdyX21hcy0+ZW5kX3BpdikgJiYNCisJICAgICh3cl9tYXMtPm5v
ZGVfZW5kICE9IHdyX21hcy0+b2Zmc2V0X2VuZCkgJiYNCisJICAgICF3cl9tYXMtPnNsb3RzW3dy
X21hcy0+b2Zmc2V0X2VuZCArIDFdKSB7DQorCQl3cl9tYXMtPm9mZnNldF9lbmQrKzsNCisJCWlm
ICh3cl9tYXMtPm9mZnNldF9lbmQgPT0gd3JfbWFzLT5ub2RlX2VuZCkNCisJCQltYXMtPmxhc3Qg
PSBtYXMtPm1heDsNCisJCWVsc2UNCisJCQltYXMtPmxhc3QgPSB3cl9tYXMtPnBpdm90c1t3cl9t
YXMtPm9mZnNldF9lbmRdOw0KKwkJd3JfbWFzLT5lbmRfcGl2ID0gbWFzLT5sYXN0Ow0KKwl9DQor
DQorCWlmICghd3JfbWFzLT5jb250ZW50KSB7DQorCQkvKiBJZiB0aGlzIG9uZSBpcyBudWxsLCB0
aGUgbmV4dCBhbmQgcHJldiBhcmUgbm90ICovDQorCQltYXMtPmluZGV4ID0gd3JfbWFzLT5yX21p
bjsNCisJfSBlbHNlIHsNCisJCS8qIENoZWNrIHByZXYgc2xvdCBpZiB3ZSBhcmUgb3ZlcndyaXRp
bmcgdGhlIHN0YXJ0ICovDQorCQlpZiAobWFzLT5pbmRleCA9PSB3cl9tYXMtPnJfbWluICYmIG1h
cy0+b2Zmc2V0ICYmDQorCQkgICAgIXdyX21hcy0+c2xvdHNbbWFzLT5vZmZzZXQgLSAxXSkgew0K
KwkJCW1hcy0+b2Zmc2V0LS07DQorCQkJd3JfbWFzLT5yX21pbiA9IG1hcy0+aW5kZXggPQ0KKwkJ
CQltYXNfc2FmZV9taW4obWFzLCB3cl9tYXMtPnBpdm90cywgbWFzLT5vZmZzZXQpOw0KKwkJCXdy
X21hcy0+cl9tYXggPSB3cl9tYXMtPnBpdm90c1ttYXMtPm9mZnNldF07DQorCQl9DQorCX0NCit9
DQorDQorc3RhdGljIGlubGluZSBib29sIG1hc193cl9hcHBlbmQoc3RydWN0IG1hX3dyX3N0YXRl
ICp3cl9tYXMpDQorew0KKwl1bnNpZ25lZCBjaGFyIGVuZCA9IHdyX21hcy0+bm9kZV9lbmQ7DQor
CXVuc2lnbmVkIGNoYXIgbmV3X2VuZCA9IGVuZCArIDE7DQorCXN0cnVjdCBtYV9zdGF0ZSAqbWFz
ID0gd3JfbWFzLT5tYXM7DQorCXVuc2lnbmVkIGNoYXIgbm9kZV9waXZvdHMgPSBtdF9waXZvdHNb
d3JfbWFzLT50eXBlXTsNCisNCisJaWYgKChtYXMtPmluZGV4ICE9IHdyX21hcy0+cl9taW4pICYm
IChtYXMtPmxhc3QgPT0gd3JfbWFzLT5yX21heCkpIHsNCisJCWlmIChuZXdfZW5kIDwgbm9kZV9w
aXZvdHMpDQorCQkJd3JfbWFzLT5waXZvdHNbbmV3X2VuZF0gPSB3cl9tYXMtPnBpdm90c1tlbmRd
Ow0KKw0KKwkJaWYgKG5ld19lbmQgPCBub2RlX3Bpdm90cykNCisJCQltYV9zZXRfbWV0YSh3cl9t
YXMtPm5vZGUsIG1hcGxlX2xlYWZfNjQsIDAsIG5ld19lbmQpOw0KKw0KKwkJcmN1X2Fzc2lnbl9w
b2ludGVyKHdyX21hcy0+c2xvdHNbbmV3X2VuZF0sIHdyX21hcy0+ZW50cnkpOw0KKwkJbWFzLT5v
ZmZzZXQgPSBuZXdfZW5kOw0KKwkJd3JfbWFzLT5waXZvdHNbZW5kXSA9IG1hcy0+aW5kZXggLSAx
Ow0KKw0KKwkJcmV0dXJuIHRydWU7DQorCX0NCisNCisJaWYgKChtYXMtPmluZGV4ID09IHdyX21h
cy0+cl9taW4pICYmIChtYXMtPmxhc3QgPCB3cl9tYXMtPnJfbWF4KSkgew0KKwkJaWYgKG5ld19l
bmQgPCBub2RlX3Bpdm90cykNCisJCQl3cl9tYXMtPnBpdm90c1tuZXdfZW5kXSA9IHdyX21hcy0+
cGl2b3RzW2VuZF07DQorDQorCQlyY3VfYXNzaWduX3BvaW50ZXIod3JfbWFzLT5zbG90c1tuZXdf
ZW5kXSwgd3JfbWFzLT5jb250ZW50KTsNCisJCWlmIChuZXdfZW5kIDwgbm9kZV9waXZvdHMpDQor
CQkJbWFfc2V0X21ldGEod3JfbWFzLT5ub2RlLCBtYXBsZV9sZWFmXzY0LCAwLCBuZXdfZW5kKTsN
CisNCisJCXdyX21hcy0+cGl2b3RzW2VuZF0gPSBtYXMtPmxhc3Q7DQorCQlyY3VfYXNzaWduX3Bv
aW50ZXIod3JfbWFzLT5zbG90c1tlbmRdLCB3cl9tYXMtPmVudHJ5KTsNCisJCXJldHVybiB0cnVl
Ow0KKwl9DQorDQorCXJldHVybiBmYWxzZTsNCit9DQorDQorc3RhdGljIGlubGluZSB2b2lkIG1h
c193cl9tb2RpZnkoc3RydWN0IG1hX3dyX3N0YXRlICp3cl9tYXMpDQorew0KKwl1bnNpZ25lZCBj
aGFyIG5vZGVfc2xvdHM7DQorCXVuc2lnbmVkIGNoYXIgbm9kZV9zaXplOw0KKwlzdHJ1Y3QgbWFf
c3RhdGUgKm1hcyA9IHdyX21hcy0+bWFzOw0KKwlzdHJ1Y3QgbWFwbGVfYmlnX25vZGUgYl9ub2Rl
Ow0KKw0KKwkvKiBEaXJlY3QgcmVwbGFjZW1lbnQgKi8NCisJaWYgKHdyX21hcy0+cl9taW4gPT0g
bWFzLT5pbmRleCAmJiB3cl9tYXMtPnJfbWF4ID09IG1hcy0+bGFzdCkgew0KKwkJcmN1X2Fzc2ln
bl9wb2ludGVyKHdyX21hcy0+c2xvdHNbbWFzLT5vZmZzZXRdLCB3cl9tYXMtPmVudHJ5KTsNCisJ
CWlmICghIXdyX21hcy0+ZW50cnkgXiAhIXdyX21hcy0+Y29udGVudCkNCisJCQltYXNfdXBkYXRl
X2dhcChtYXMpOw0KKwkJcmV0dXJuOw0KKwl9DQorDQorCS8qIEF0dGVtcHQgdG8gYXBwZW5kICov
DQorCW5vZGVfc2xvdHMgPSBtdF9zbG90c1t3cl9tYXMtPnR5cGVdOw0KKwlub2RlX3NpemUgPSB3
cl9tYXMtPm5vZGVfZW5kIC0gd3JfbWFzLT5vZmZzZXRfZW5kICsgbWFzLT5vZmZzZXQgKyAyOw0K
KwlpZiAobWFzLT5tYXggPT0gVUxPTkdfTUFYKQ0KKwkJbm9kZV9zaXplKys7DQorDQorCS8qIHNs
b3QgYW5kIG5vZGUgc3RvcmUgd2lsbCBub3QgZml0LCBnbyB0byB0aGUgc2xvdyBwYXRoICovDQor
CWlmICh1bmxpa2VseShub2RlX3NpemUgPj0gbm9kZV9zbG90cykpDQorCQlnb3RvIHNsb3dfcGF0
aDsNCisNCisJaWYgKHdyX21hcy0+ZW50cnkgJiYgKHdyX21hcy0+bm9kZV9lbmQgPCBub2RlX3Ns
b3RzIC0gMSkgJiYNCisJICAgIChtYXMtPm9mZnNldCA9PSB3cl9tYXMtPm5vZGVfZW5kKSAmJiBt
YXNfd3JfYXBwZW5kKHdyX21hcykpIHsNCisJCWlmICghd3JfbWFzLT5jb250ZW50IHx8ICF3cl9t
YXMtPmVudHJ5KQ0KKwkJCW1hc191cGRhdGVfZ2FwKG1hcyk7DQorCQlyZXR1cm47DQorCX0NCisN
CisJaWYgKCh3cl9tYXMtPm9mZnNldF9lbmQgLSBtYXMtPm9mZnNldCA8PSAxKSAmJiBtYXNfd3Jf
c2xvdF9zdG9yZSh3cl9tYXMpKQ0KKwkJcmV0dXJuOw0KKwllbHNlIGlmIChtYXNfd3Jfbm9kZV9z
dG9yZSh3cl9tYXMpKQ0KKwkJcmV0dXJuOw0KKw0KKwlpZiAobWFzX2lzX2VycihtYXMpKQ0KKwkJ
cmV0dXJuOw0KKw0KK3Nsb3dfcGF0aDoNCisJbWVtc2V0KCZiX25vZGUsIDAsIHNpemVvZihzdHJ1
Y3QgbWFwbGVfYmlnX25vZGUpKTsNCisJbWFzX3N0b3JlX2Jfbm9kZSh3cl9tYXMsICZiX25vZGUs
IHdyX21hcy0+b2Zmc2V0X2VuZCk7DQorCXRyYWNlX21hX3dyaXRlKF9fZnVuY19fLCBtYXMsIDAs
IHdyX21hcy0+ZW50cnkpOw0KKwltYXNfY29tbWl0X2Jfbm9kZSh3cl9tYXMsICZiX25vZGUsIHdy
X21hcy0+bm9kZV9lbmQpOw0KK30NCisNCisvKg0KKyAqIG1hc193cl9zdG9yZV9lbnRyeSgpIC0g
SW50ZXJuYWwgY2FsbCB0byBzdG9yZSBhIHZhbHVlDQorICogQG1hczogVGhlIG1hcGxlIHN0YXRl
DQorICogQGVudHJ5OiBUaGUgZW50cnkgdG8gc3RvcmUuDQorICoNCisgKiBSZXR1cm46IFRoZSBj
b250ZW50cyB0aGF0IHdhcyBzdG9yZWQgYXQgdGhlIGluZGV4Lg0KKyAqLw0KK3N0YXRpYyBpbmxp
bmUgdm9pZCAqbWFzX3dyX3N0b3JlX2VudHJ5KHN0cnVjdCBtYV93cl9zdGF0ZSAqd3JfbWFzKQ0K
K3sNCisJc3RydWN0IG1hX3N0YXRlICptYXMgPSB3cl9tYXMtPm1hczsNCisNCisJd3JfbWFzLT5j
b250ZW50ID0gbWFzX3N0YXJ0KG1hcyk7DQorCWlmIChtYXNfaXNfbm9uZShtYXMpIHx8IG1hc19p
c19wdHIobWFzKSkgew0KKwkJbWFzX3N0b3JlX3Jvb3QobWFzLCB3cl9tYXMtPmVudHJ5KTsNCisJ
CXJldHVybiB3cl9tYXMtPmNvbnRlbnQ7DQorCX0NCisNCisJaWYgKHVubGlrZWx5KCFtYXNfd3Jf
d2Fsayh3cl9tYXMpKSkgew0KKwkJbWFzX3dyX3NwYW5uaW5nX3N0b3JlKHdyX21hcyk7DQorCQly
ZXR1cm4gd3JfbWFzLT5jb250ZW50Ow0KKwl9DQorDQorCS8qIEF0IHRoaXMgcG9pbnQsIHdlIGFy
ZSBhdCB0aGUgbGVhZiBub2RlIHRoYXQgbmVlZHMgdG8gYmUgYWx0ZXJlZC4gKi8NCisJd3JfbWFz
LT5lbmRfcGl2ID0gd3JfbWFzLT5yX21heDsNCisJbWFzX3dyX2VuZF9waXYod3JfbWFzKTsNCisN
CisJaWYgKCF3cl9tYXMtPmVudHJ5KQ0KKwkJbWFzX3dyX2V4dGVuZF9udWxsKHdyX21hcyk7DQor
DQorCS8qIE5ldyByb290IGZvciBhIHNpbmdsZSBwb2ludGVyICovDQorCWlmICh1bmxpa2VseSgh
bWFzLT5pbmRleCAmJiBtYXMtPmxhc3QgPT0gVUxPTkdfTUFYKSkgew0KKwkJbWFzX25ld19yb290
KG1hcywgd3JfbWFzLT5lbnRyeSk7DQorCQlyZXR1cm4gd3JfbWFzLT5jb250ZW50Ow0KKwl9DQor
DQorCW1hc193cl9tb2RpZnkod3JfbWFzKTsNCisJcmV0dXJuIHdyX21hcy0+Y29udGVudDsNCit9
DQorDQorLyoqDQorICogbWFzX2luc2VydCgpIC0gSW50ZXJuYWwgY2FsbCB0byBpbnNlcnQgYSB2
YWx1ZQ0KKyAqIEBtYXM6IFRoZSBtYXBsZSBzdGF0ZQ0KKyAqIEBlbnRyeTogVGhlIGVudHJ5IHRv
IHN0b3JlDQorICoNCisgKiBSZXR1cm46ICVOVUxMIG9yIHRoZSBjb250ZW50cyB0aGF0IGFscmVh
ZHkgZXhpc3RzIGF0IHRoZSByZXF1ZXN0ZWQgaW5kZXgNCisgKiBvdGhlcndpc2UuICBUaGUgbWFw
bGUgc3RhdGUgbmVlZHMgdG8gYmUgY2hlY2tlZCBmb3IgZXJyb3IgY29uZGl0aW9ucy4NCisgKi8N
CitzdGF0aWMgaW5saW5lIHZvaWQgKm1hc19pbnNlcnQoc3RydWN0IG1hX3N0YXRlICptYXMsIHZv
aWQgKmVudHJ5KQ0KK3sNCisJTUFfV1JfU1RBVEUod3JfbWFzLCBtYXMsIGVudHJ5KTsNCisNCisJ
LyoNCisJICogSW5zZXJ0aW5nIGEgbmV3IHJhbmdlIGluc2VydHMgZWl0aGVyIDAsIDEsIG9yIDIg
cGl2b3RzIHdpdGhpbiB0aGUNCisJICogdHJlZS4gIElmIHRoZSBpbnNlcnQgZml0cyBleGFjdGx5
IGludG8gYW4gZXhpc3RpbmcgZ2FwIHdpdGggYSB2YWx1ZQ0KKwkgKiBvZiBOVUxMLCB0aGVuIHRo
ZSBzbG90IG9ubHkgbmVlZHMgdG8gYmUgd3JpdHRlbiB3aXRoIHRoZSBuZXcgdmFsdWUuDQorCSAq
IElmIHRoZSByYW5nZSBiZWluZyBpbnNlcnRlZCBpcyBhZGphY2VudCB0byBhbm90aGVyIHJhbmdl
LCB0aGVuIG9ubHkgYQ0KKwkgKiBzaW5nbGUgcGl2b3QgbmVlZHMgdG8gYmUgaW5zZXJ0ZWQgKGFz
IHdlbGwgYXMgd3JpdGluZyB0aGUgZW50cnkpLiAgSWYNCisJICogdGhlIG5ldyByYW5nZSBpcyB3
aXRoaW4gYSBnYXAgYnV0IGRvZXMgbm90IHRvdWNoIGFueSBvdGhlciByYW5nZXMsDQorCSAqIHRo
ZW4gdHdvIHBpdm90cyBuZWVkIHRvIGJlIGluc2VydGVkOiB0aGUgc3RhcnQgLSAxLCBhbmQgdGhl
IGVuZC4gIEFzDQorCSAqIHVzdWFsLCB0aGUgZW50cnkgbXVzdCBiZSB3cml0dGVuLiAgTW9zdCBv
cGVyYXRpb25zIHJlcXVpcmUgYSBuZXcgbm9kZQ0KKwkgKiB0byBiZSBhbGxvY2F0ZWQgYW5kIHJl
cGxhY2UgYW4gZXhpc3Rpbmcgbm9kZSB0byBlbnN1cmUgUkNVIHNhZmV0eSwNCisJICogd2hlbiBp
biBSQ1UgbW9kZS4gIFRoZSBleGNlcHRpb24gdG8gcmVxdWlyaW5nIGEgbmV3bHkgYWxsb2NhdGVk
IG5vZGUNCisJICogaXMgd2hlbiBpbnNlcnRpbmcgYXQgdGhlIGVuZCBvZiBhIG5vZGUgKGFwcGVu
ZGluZykuICBXaGVuIGRvbmUNCisJICogY2FyZWZ1bGx5LCBhcHBlbmRpbmcgY2FuIHJldXNlIHRo
ZSBub2RlIGluIHBsYWNlLg0KKwkgKi8NCisJd3JfbWFzLmNvbnRlbnQgPSBtYXNfc3RhcnQobWFz
KTsNCisJaWYgKHdyX21hcy5jb250ZW50KQ0KKwkJZ290byBleGlzdHM7DQorDQorCWlmIChtYXNf
aXNfbm9uZShtYXMpIHx8IG1hc19pc19wdHIobWFzKSkgew0KKwkJbWFzX3N0b3JlX3Jvb3QobWFz
LCBlbnRyeSk7DQorCQlyZXR1cm4gTlVMTDsNCisJfQ0KKw0KKwkvKiBzcGFubmluZyB3cml0ZXMg
YWx3YXlzIG92ZXJ3cml0ZSBzb21ldGhpbmcgKi8NCisJaWYgKCFtYXNfd3Jfd2Fsaygmd3JfbWFz
KSkNCisJCWdvdG8gZXhpc3RzOw0KKw0KKwkvKiBBdCB0aGlzIHBvaW50LCB3ZSBhcmUgYXQgdGhl
IGxlYWYgbm9kZSB0aGF0IG5lZWRzIHRvIGJlIGFsdGVyZWQuICovDQorCXdyX21hcy5vZmZzZXRf
ZW5kID0gbWFzLT5vZmZzZXQ7DQorCXdyX21hcy5lbmRfcGl2ID0gd3JfbWFzLnJfbWF4Ow0KKw0K
KwlpZiAod3JfbWFzLmNvbnRlbnQgfHwgKG1hcy0+bGFzdCA+IHdyX21hcy5yX21heCkpDQorCQln
b3RvIGV4aXN0czsNCisNCisJaWYgKCFlbnRyeSkNCisJCXJldHVybiBOVUxMOw0KKw0KKwltYXNf
d3JfbW9kaWZ5KCZ3cl9tYXMpOw0KKwlyZXR1cm4gd3JfbWFzLmNvbnRlbnQ7DQorDQorZXhpc3Rz
Og0KKwltYXNfc2V0X2VycihtYXMsIC1FRVhJU1QpOw0KKwlyZXR1cm4gd3JfbWFzLmNvbnRlbnQ7
DQorDQorfQ0KKw0KKy8qDQorICogbWFzX3ByZXZfbm9kZSgpIC0gRmluZCB0aGUgcHJldiBub24t
bnVsbCBlbnRyeSBhdCB0aGUgc2FtZSBsZXZlbCBpbiB0aGUNCisgKiB0cmVlLiAgVGhlIHByZXYg
dmFsdWUgd2lsbCBiZSBtYXMtPm5vZGVbbWFzLT5vZmZzZXRdIG9yIE1BU19OT05FLg0KKyAqIEBt
YXM6IFRoZSBtYXBsZSBzdGF0ZQ0KKyAqIEBtaW46IFRoZSBsb3dlciBsaW1pdCB0byBzZWFyY2gN
CisgKg0KKyAqIFRoZSBwcmV2IG5vZGUgdmFsdWUgd2lsbCBiZSBtYXMtPm5vZGVbbWFzLT5vZmZz
ZXRdIG9yIE1BU19OT05FLg0KKyAqIFJldHVybjogMSBpZiB0aGUgbm9kZSBpcyBkZWFkLCAwIG90
aGVyd2lzZS4NCisgKi8NCitzdGF0aWMgaW5saW5lIGludCBtYXNfcHJldl9ub2RlKHN0cnVjdCBt
YV9zdGF0ZSAqbWFzLCB1bnNpZ25lZCBsb25nIG1pbikNCit7DQorCWVudW0gbWFwbGVfdHlwZSBt
dDsNCisJaW50IG9mZnNldCwgbGV2ZWw7DQorCXZvaWQgX19yY3UgKipzbG90czsNCisJc3RydWN0
IG1hcGxlX25vZGUgKm5vZGU7DQorCXN0cnVjdCBtYXBsZV9lbm9kZSAqZW5vZGU7DQorCXVuc2ln
bmVkIGxvbmcgKnBpdm90czsNCisNCisJaWYgKG1hc19pc19ub25lKG1hcykpDQorCQlyZXR1cm4g
MDsNCisNCisJbGV2ZWwgPSAwOw0KKwlkbyB7DQorCQlub2RlID0gbWFzX21uKG1hcyk7DQorCQlp
ZiAobWFfaXNfcm9vdChub2RlKSkNCisJCQlnb3RvIG5vX2VudHJ5Ow0KKw0KKwkJLyogV2FsayB1
cC4gKi8NCisJCWlmICh1bmxpa2VseShtYXNfYXNjZW5kKG1hcykpKQ0KKwkJCXJldHVybiAxOw0K
KwkJb2Zmc2V0ID0gbWFzLT5vZmZzZXQ7DQorCQlsZXZlbCsrOw0KKwl9IHdoaWxlICghb2Zmc2V0
KTsNCisNCisJb2Zmc2V0LS07DQorCW10ID0gbXRlX25vZGVfdHlwZShtYXMtPm5vZGUpOw0KKwlu
b2RlID0gbWFzX21uKG1hcyk7DQorCXNsb3RzID0gbWFfc2xvdHMobm9kZSwgbXQpOw0KKwlwaXZv
dHMgPSBtYV9waXZvdHMobm9kZSwgbXQpOw0KKwltYXMtPm1heCA9IHBpdm90c1tvZmZzZXRdOw0K
KwlpZiAob2Zmc2V0KQ0KKwkJbWFzLT5taW4gPSBwaXZvdHNbb2Zmc2V0IC0gMV0gKyAxOw0KKwlp
ZiAodW5saWtlbHkobWFfZGVhZF9ub2RlKG5vZGUpKSkNCisJCXJldHVybiAxOw0KKw0KKwlpZiAo
bWFzLT5tYXggPCBtaW4pDQorCQlnb3RvIG5vX2VudHJ5X21pbjsNCisNCisJd2hpbGUgKGxldmVs
ID4gMSkgew0KKwkJbGV2ZWwtLTsNCisJCWVub2RlID0gbWFzX3Nsb3QobWFzLCBzbG90cywgb2Zm
c2V0KTsNCisJCWlmICh1bmxpa2VseShtYV9kZWFkX25vZGUobm9kZSkpKQ0KKwkJCXJldHVybiAx
Ow0KKw0KKwkJbWFzLT5ub2RlID0gZW5vZGU7DQorCQltdCA9IG10ZV9ub2RlX3R5cGUobWFzLT5u
b2RlKTsNCisJCW5vZGUgPSBtYXNfbW4obWFzKTsNCisJCXNsb3RzID0gbWFfc2xvdHMobm9kZSwg
bXQpOw0KKwkJcGl2b3RzID0gbWFfcGl2b3RzKG5vZGUsIG10KTsNCisJCW9mZnNldCA9IG1hX2Rh
dGFfZW5kKG5vZGUsIG10LCBwaXZvdHMsIG1hcy0+bWF4KTsNCisJCWlmIChvZmZzZXQpDQorCQkJ
bWFzLT5taW4gPSBwaXZvdHNbb2Zmc2V0IC0gMV0gKyAxOw0KKw0KKwkJaWYgKG9mZnNldCA8IG10
X3Bpdm90c1ttdF0pDQorCQkJbWFzLT5tYXggPSBwaXZvdHNbb2Zmc2V0XTsNCisNCisJCWlmICht
YXMtPm1heCA8IG1pbikNCisJCQlnb3RvIG5vX2VudHJ5Ow0KKwl9DQorDQorCW1hcy0+bm9kZSA9
IG1hc19zbG90KG1hcywgc2xvdHMsIG9mZnNldCk7DQorCWlmICh1bmxpa2VseShtYV9kZWFkX25v
ZGUobm9kZSkpKQ0KKwkJcmV0dXJuIDE7DQorDQorCW1hcy0+b2Zmc2V0ID0gbWFzX2RhdGFfZW5k
KG1hcyk7DQorCWlmICh1bmxpa2VseShtdGVfZGVhZF9ub2RlKG1hcy0+bm9kZSkpKQ0KKwkJcmV0
dXJuIDE7DQorDQorCXJldHVybiAwOw0KKw0KK25vX2VudHJ5X21pbjoNCisJbWFzLT5vZmZzZXQg
PSBvZmZzZXQ7DQorCWlmIChvZmZzZXQpDQorCQltYXMtPm1pbiA9IHBpdm90c1tvZmZzZXQgLSAx
XSArIDE7DQorbm9fZW50cnk6DQorCWlmICh1bmxpa2VseShtYV9kZWFkX25vZGUobm9kZSkpKQ0K
KwkJcmV0dXJuIDE7DQorDQorCW1hcy0+bm9kZSA9IE1BU19OT05FOw0KKwlyZXR1cm4gMDsNCit9
DQorDQorLyoNCisgKiBtYXNfbmV4dF9ub2RlKCkgLSBHZXQgdGhlIG5leHQgbm9kZSBhdCB0aGUg
c2FtZSBsZXZlbCBpbiB0aGUgdHJlZS4NCisgKiBAbWFzOiBUaGUgbWFwbGUgc3RhdGUNCisgKiBA
bWF4OiBUaGUgbWF4aW11bSBwaXZvdCB2YWx1ZSB0byBjaGVjay4NCisgKg0KKyAqIFRoZSBuZXh0
IHZhbHVlIHdpbGwgYmUgbWFzLT5ub2RlW21hcy0+b2Zmc2V0XSBvciBNQVNfTk9ORS4NCisgKiBS
ZXR1cm46IDEgb24gZGVhZCBub2RlLCAwIG90aGVyd2lzZS4NCisgKi8NCitzdGF0aWMgaW5saW5l
IGludCBtYXNfbmV4dF9ub2RlKHN0cnVjdCBtYV9zdGF0ZSAqbWFzLCBzdHJ1Y3QgbWFwbGVfbm9k
ZSAqbm9kZSwNCisJCQkJdW5zaWduZWQgbG9uZyBtYXgpDQorew0KKwl1bnNpZ25lZCBsb25nIG1p
biwgcGl2b3Q7DQorCXVuc2lnbmVkIGxvbmcgKnBpdm90czsNCisJc3RydWN0IG1hcGxlX2Vub2Rl
ICplbm9kZTsNCisJaW50IGxldmVsID0gMDsNCisJdW5zaWduZWQgY2hhciBvZmZzZXQ7DQorCWVu
dW0gbWFwbGVfdHlwZSBtdDsNCisJdm9pZCBfX3JjdSAqKnNsb3RzOw0KKw0KKwlpZiAobWFzLT5t
YXggPj0gbWF4KQ0KKwkJZ290byBub19lbnRyeTsNCisNCisJbGV2ZWwgPSAwOw0KKwlkbyB7DQor
CQlpZiAobWFfaXNfcm9vdChub2RlKSkNCisJCQlnb3RvIG5vX2VudHJ5Ow0KKw0KKwkJbWluID0g
bWFzLT5tYXggKyAxOw0KKwkJaWYgKG1pbiA+IG1heCkNCisJCQlnb3RvIG5vX2VudHJ5Ow0KKw0K
KwkJaWYgKHVubGlrZWx5KG1hc19hc2NlbmQobWFzKSkpDQorCQkJcmV0dXJuIDE7DQorDQorCQlv
ZmZzZXQgPSBtYXMtPm9mZnNldDsNCisJCWxldmVsKys7DQorCQlub2RlID0gbWFzX21uKG1hcyk7
DQorCQltdCA9IG10ZV9ub2RlX3R5cGUobWFzLT5ub2RlKTsNCisJCXBpdm90cyA9IG1hX3Bpdm90
cyhub2RlLCBtdCk7DQorCX0gd2hpbGUgKHVubGlrZWx5KG9mZnNldCA9PSBtYV9kYXRhX2VuZChu
b2RlLCBtdCwgcGl2b3RzLCBtYXMtPm1heCkpKTsNCisNCisJc2xvdHMgPSBtYV9zbG90cyhub2Rl
LCBtdCk7DQorCXBpdm90ID0gbWFzX3NhZmVfcGl2b3QobWFzLCBwaXZvdHMsICsrb2Zmc2V0LCBt
dCk7DQorCXdoaWxlICh1bmxpa2VseShsZXZlbCA+IDEpKSB7DQorCQkvKiBEZXNjZW5kLCBpZiBu
ZWNlc3NhcnkgKi8NCisJCWVub2RlID0gbWFzX3Nsb3QobWFzLCBzbG90cywgb2Zmc2V0KTsNCisJ
CWlmICh1bmxpa2VseShtYV9kZWFkX25vZGUobm9kZSkpKQ0KKwkJCXJldHVybiAxOw0KKw0KKwkJ
bWFzLT5ub2RlID0gZW5vZGU7DQorCQlsZXZlbC0tOw0KKwkJbm9kZSA9IG1hc19tbihtYXMpOw0K
KwkJbXQgPSBtdGVfbm9kZV90eXBlKG1hcy0+bm9kZSk7DQorCQlzbG90cyA9IG1hX3Nsb3RzKG5v
ZGUsIG10KTsNCisJCXBpdm90cyA9IG1hX3Bpdm90cyhub2RlLCBtdCk7DQorCQlvZmZzZXQgPSAw
Ow0KKwkJcGl2b3QgPSBwaXZvdHNbMF07DQorCX0NCisNCisJZW5vZGUgPSBtYXNfc2xvdChtYXMs
IHNsb3RzLCBvZmZzZXQpOw0KKwlpZiAodW5saWtlbHkobWFfZGVhZF9ub2RlKG5vZGUpKSkNCisJ
CXJldHVybiAxOw0KKw0KKwltYXMtPm5vZGUgPSBlbm9kZTsNCisJbWFzLT5taW4gPSBtaW47DQor
CW1hcy0+bWF4ID0gcGl2b3Q7DQorCXJldHVybiAwOw0KKw0KK25vX2VudHJ5Og0KKwlpZiAodW5s
aWtlbHkobWFfZGVhZF9ub2RlKG5vZGUpKSkNCisJCXJldHVybiAxOw0KKw0KKwltYXMtPm5vZGUg
PSBNQVNfTk9ORTsNCisJcmV0dXJuIDA7DQorfQ0KKw0KKy8qDQorICogbWFzX25leHRfbmVudHJ5
KCkgLSBHZXQgdGhlIG5leHQgbm9kZSBlbnRyeQ0KKyAqIEBtYXM6IFRoZSBtYXBsZSBzdGF0ZQ0K
KyAqIEBtYXg6IFRoZSBtYXhpbXVtIHZhbHVlIHRvIGNoZWNrDQorICogQCpyYW5nZV9zdGFydDog
UG9pbnRlciB0byBzdG9yZSB0aGUgc3RhcnQgb2YgdGhlIHJhbmdlLg0KKyAqDQorICogU2V0cyBA
bWFzLT5vZmZzZXQgdG8gdGhlIG9mZnNldCBvZiB0aGUgbmV4dCBub2RlIGVudHJ5LCBAbWFzLT5s
YXN0IHRvIHRoZQ0KKyAqIHBpdm90IG9mIHRoZSBlbnRyeS4NCisgKg0KKyAqIFJldHVybjogVGhl
IG5leHQgZW50cnksICVOVUxMIG90aGVyd2lzZQ0KKyAqLw0KK3N0YXRpYyBpbmxpbmUgdm9pZCAq
bWFzX25leHRfbmVudHJ5KHN0cnVjdCBtYV9zdGF0ZSAqbWFzLA0KKwkgICAgc3RydWN0IG1hcGxl
X25vZGUgKm5vZGUsIHVuc2lnbmVkIGxvbmcgbWF4LCBlbnVtIG1hcGxlX3R5cGUgdHlwZSkNCit7
DQorCXVuc2lnbmVkIGNoYXIgY291bnQ7DQorCXVuc2lnbmVkIGxvbmcgcGl2b3Q7DQorCXVuc2ln
bmVkIGxvbmcgKnBpdm90czsNCisJdm9pZCBfX3JjdSAqKnNsb3RzOw0KKwl2b2lkICplbnRyeTsN
CisNCisJaWYgKG1hcy0+bGFzdCA9PSBtYXMtPm1heCkgew0KKwkJbWFzLT5pbmRleCA9IG1hcy0+
bWF4Ow0KKwkJcmV0dXJuIE5VTEw7DQorCX0NCisNCisJcGl2b3RzID0gbWFfcGl2b3RzKG5vZGUs
IHR5cGUpOw0KKwlzbG90cyA9IG1hX3Nsb3RzKG5vZGUsIHR5cGUpOw0KKwltYXMtPmluZGV4ID0g
bWFzX3NhZmVfbWluKG1hcywgcGl2b3RzLCBtYXMtPm9mZnNldCk7DQorCWlmIChtYV9kZWFkX25v
ZGUobm9kZSkpDQorCQlyZXR1cm4gTlVMTDsNCisNCisJaWYgKG1hcy0+aW5kZXggPiBtYXgpDQor
CQlyZXR1cm4gTlVMTDsNCisNCisJY291bnQgPSBtYV9kYXRhX2VuZChub2RlLCB0eXBlLCBwaXZv
dHMsIG1hcy0+bWF4KTsNCisJaWYgKG1hcy0+b2Zmc2V0ID4gY291bnQpDQorCQlyZXR1cm4gTlVM
TDsNCisNCisJd2hpbGUgKG1hcy0+b2Zmc2V0IDwgY291bnQpIHsNCisJCXBpdm90ID0gcGl2b3Rz
W21hcy0+b2Zmc2V0XTsNCisJCWVudHJ5ID0gbWFzX3Nsb3QobWFzLCBzbG90cywgbWFzLT5vZmZz
ZXQpOw0KKwkJaWYgKG1hX2RlYWRfbm9kZShub2RlKSkNCisJCQlyZXR1cm4gTlVMTDsNCisNCisJ
CWlmIChlbnRyeSkNCisJCQlnb3RvIGZvdW5kOw0KKw0KKwkJaWYgKHBpdm90ID49IG1heCkNCisJ
CQlyZXR1cm4gTlVMTDsNCisNCisJCW1hcy0+aW5kZXggPSBwaXZvdCArIDE7DQorCQltYXMtPm9m
ZnNldCsrOw0KKwl9DQorDQorCWlmIChtYXMtPmluZGV4ID4gbWFzLT5tYXgpIHsNCisJCW1hcy0+
aW5kZXggPSBtYXMtPmxhc3Q7DQorCQlyZXR1cm4gTlVMTDsNCisJfQ0KKw0KKwlwaXZvdCA9IG1h
c19zYWZlX3Bpdm90KG1hcywgcGl2b3RzLCBtYXMtPm9mZnNldCwgdHlwZSk7DQorCWVudHJ5ID0g
bWFzX3Nsb3QobWFzLCBzbG90cywgbWFzLT5vZmZzZXQpOw0KKwlpZiAobWFfZGVhZF9ub2RlKG5v
ZGUpKQ0KKwkJcmV0dXJuIE5VTEw7DQorDQorCWlmICghcGl2b3QpDQorCQlyZXR1cm4gTlVMTDsN
CisNCisJaWYgKCFlbnRyeSkNCisJCXJldHVybiBOVUxMOw0KKw0KK2ZvdW5kOg0KKwltYXMtPmxh
c3QgPSBwaXZvdDsNCisJcmV0dXJuIGVudHJ5Ow0KK30NCisNCitzdGF0aWMgaW5saW5lIHZvaWQg
bWFzX3Jld2FsayhzdHJ1Y3QgbWFfc3RhdGUgKm1hcywgdW5zaWduZWQgbG9uZyBpbmRleCkNCit7
DQorDQorcmV0cnk6DQorCW1hc19zZXQobWFzLCBpbmRleCk7DQorCW1hc19zdGF0ZV93YWxrKG1h
cyk7DQorCWlmIChtYXNfaXNfc3RhcnQobWFzKSkNCisJCWdvdG8gcmV0cnk7DQorDQorCXJldHVy
bjsNCisNCit9DQorDQorLyoNCisgKiBtYXNfbmV4dF9lbnRyeSgpIC0gSW50ZXJuYWwgZnVuY3Rp
b24gdG8gZ2V0IHRoZSBuZXh0IGVudHJ5Lg0KKyAqIEBtYXM6IFRoZSBtYXBsZSBzdGF0ZQ0KKyAq
IEBsaW1pdDogVGhlIG1heGltdW0gcmFuZ2Ugc3RhcnQuDQorICoNCisgKiBTZXQgdGhlIEBtYXMt
Pm5vZGUgdG8gdGhlIG5leHQgZW50cnkgYW5kIHRoZSByYW5nZV9zdGFydCB0bw0KKyAqIHRoZSBi
ZWdpbm5pbmcgdmFsdWUgZm9yIHRoZSBlbnRyeS4gIERvZXMgbm90IGNoZWNrIGJleW9uZCBAbGlt
aXQuDQorICogU2V0cyBAbWFzLT5pbmRleCBhbmQgQG1hcy0+bGFzdCB0byB0aGUgbGltaXQgaWYg
aXQgaXMgaGl0Lg0KKyAqIFJlc3RhcnRzIG9uIGRlYWQgbm9kZXMuDQorICoNCisgKiBSZXR1cm46
IHRoZSBuZXh0IGVudHJ5IG9yICVOVUxMLg0KKyAqLw0KK3N0YXRpYyBpbmxpbmUgdm9pZCAqbWFz
X25leHRfZW50cnkoc3RydWN0IG1hX3N0YXRlICptYXMsIHVuc2lnbmVkIGxvbmcgbGltaXQpDQor
ew0KKwl2b2lkICplbnRyeSA9IE5VTEw7DQorCXN0cnVjdCBtYXBsZV9lbm9kZSAqcHJldl9ub2Rl
Ow0KKwlzdHJ1Y3QgbWFwbGVfbm9kZSAqbm9kZTsNCisJdW5zaWduZWQgY2hhciBvZmZzZXQ7DQor
CXVuc2lnbmVkIGxvbmcgbGFzdDsNCisJZW51bSBtYXBsZV90eXBlIG10Ow0KKw0KKwlsYXN0ID0g
bWFzLT5sYXN0Ow0KK3JldHJ5Og0KKwlvZmZzZXQgPSBtYXMtPm9mZnNldDsNCisJcHJldl9ub2Rl
ID0gbWFzLT5ub2RlOw0KKwlub2RlID0gbWFzX21uKG1hcyk7DQorCW10ID0gbXRlX25vZGVfdHlw
ZShtYXMtPm5vZGUpOw0KKwltYXMtPm9mZnNldCsrOw0KKwlpZiAodW5saWtlbHkobWFzLT5vZmZz
ZXQgPj0gbXRfc2xvdHNbbXRdKSkgew0KKwkJbWFzLT5vZmZzZXQgPSBtdF9zbG90c1ttdF0gLSAx
Ow0KKwkJZ290byBuZXh0X25vZGU7DQorCX0NCisNCisJd2hpbGUgKCFtYXNfaXNfbm9uZShtYXMp
KSB7DQorCQllbnRyeSA9IG1hc19uZXh0X25lbnRyeShtYXMsIG5vZGUsIGxpbWl0LCBtdCk7DQor
CQlpZiAodW5saWtlbHkobWFfZGVhZF9ub2RlKG5vZGUpKSkgew0KKwkJCW1hc19yZXdhbGsobWFz
LCBsYXN0KTsNCisJCQlnb3RvIHJldHJ5Ow0KKwkJfQ0KKw0KKwkJaWYgKGxpa2VseShlbnRyeSkp
DQorCQkJcmV0dXJuIGVudHJ5Ow0KKw0KKwkJaWYgKHVubGlrZWx5KChtYXMtPmluZGV4ID4gbGlt
aXQpKSkNCisJCQlicmVhazsNCisNCituZXh0X25vZGU6DQorCQlwcmV2X25vZGUgPSBtYXMtPm5v
ZGU7DQorCQlvZmZzZXQgPSBtYXMtPm9mZnNldDsNCisJCWlmICh1bmxpa2VseShtYXNfbmV4dF9u
b2RlKG1hcywgbm9kZSwgbGltaXQpKSkgew0KKwkJCW1hc19yZXdhbGsobWFzLCBsYXN0KTsNCisJ
CQlnb3RvIHJldHJ5Ow0KKwkJfQ0KKwkJbWFzLT5vZmZzZXQgPSAwOw0KKwkJbm9kZSA9IG1hc19t
bihtYXMpOw0KKwkJbXQgPSBtdGVfbm9kZV90eXBlKG1hcy0+bm9kZSk7DQorCX0NCisNCisJbWFz
LT5pbmRleCA9IG1hcy0+bGFzdCA9IGxpbWl0Ow0KKwltYXMtPm9mZnNldCA9IG9mZnNldDsNCisJ
bWFzLT5ub2RlID0gcHJldl9ub2RlOw0KKwlyZXR1cm4gTlVMTDsNCit9DQorDQorLyoNCisgKiBt
YXNfcHJldl9uZW50cnkoKSAtIEdldCB0aGUgcHJldmlvdXMgbm9kZSBlbnRyeS4NCisgKiBAbWFz
OiBUaGUgbWFwbGUgc3RhdGUuDQorICogQGxpbWl0OiBUaGUgbG93ZXIgbGltaXQgdG8gY2hlY2sg
Zm9yIGEgdmFsdWUuDQorICoNCisgKiBSZXR1cm46IHRoZSBlbnRyeSwgJU5VTEwgb3RoZXJ3aXNl
Lg0KKyAqLw0KK3N0YXRpYyBpbmxpbmUgdm9pZCAqbWFzX3ByZXZfbmVudHJ5KHN0cnVjdCBtYV9z
dGF0ZSAqbWFzLCB1bnNpZ25lZCBsb25nIGxpbWl0LA0KKwkJCQkgICAgdW5zaWduZWQgbG9uZyBp
bmRleCkNCit7DQorCXVuc2lnbmVkIGxvbmcgcGl2b3QsIG1pbjsNCisJdW5zaWduZWQgY2hhciBv
ZmZzZXQ7DQorCXN0cnVjdCBtYXBsZV9ub2RlICptbjsNCisJZW51bSBtYXBsZV90eXBlIG10Ow0K
Kwl1bnNpZ25lZCBsb25nICpwaXZvdHM7DQorCXZvaWQgX19yY3UgKipzbG90czsNCisJdm9pZCAq
ZW50cnk7DQorDQorcmV0cnk6DQorCWlmICghbWFzLT5vZmZzZXQpDQorCQlyZXR1cm4gTlVMTDsN
CisNCisJbW4gPSBtYXNfbW4obWFzKTsNCisJbXQgPSBtdGVfbm9kZV90eXBlKG1hcy0+bm9kZSk7
DQorCW9mZnNldCA9IG1hcy0+b2Zmc2V0IC0gMTsNCisJaWYgKG9mZnNldCA+PSBtdF9zbG90c1tt
dF0pDQorCQlvZmZzZXQgPSBtdF9zbG90c1ttdF0gLSAxOw0KKw0KKwlzbG90cyA9IG1hX3Nsb3Rz
KG1uLCBtdCk7DQorCXBpdm90cyA9IG1hX3Bpdm90cyhtbiwgbXQpOw0KKwlpZiAob2Zmc2V0ID09
IG10X3Bpdm90c1ttdF0pDQorCQlwaXZvdCA9IG1hcy0+bWF4Ow0KKwllbHNlDQorCQlwaXZvdCA9
IHBpdm90c1tvZmZzZXRdOw0KKw0KKwlpZiAodW5saWtlbHkobWFfZGVhZF9ub2RlKG1uKSkpIHsN
CisJCW1hc19yZXdhbGsobWFzLCBpbmRleCk7DQorCQlnb3RvIHJldHJ5Ow0KKwl9DQorDQorCXdo
aWxlIChvZmZzZXQgJiYgKCghbWFzX3Nsb3QobWFzLCBzbG90cywgb2Zmc2V0KSAmJiBwaXZvdCA+
PSBsaW1pdCkgfHwNCisJICAgICAgICFwaXZvdCkpDQorCQlwaXZvdCA9IHBpdm90c1stLW9mZnNl
dF07DQorDQorCW1pbiA9IG1hc19zYWZlX21pbihtYXMsIHBpdm90cywgb2Zmc2V0KTsNCisJZW50
cnkgPSBtYXNfc2xvdChtYXMsIHNsb3RzLCBvZmZzZXQpOw0KKwlpZiAodW5saWtlbHkobWFfZGVh
ZF9ub2RlKG1uKSkpIHsNCisJCW1hc19yZXdhbGsobWFzLCBpbmRleCk7DQorCQlnb3RvIHJldHJ5
Ow0KKwl9DQorDQorCWlmIChsaWtlbHkoZW50cnkpKSB7DQorCQltYXMtPm9mZnNldCA9IG9mZnNl
dDsNCisJCW1hcy0+bGFzdCA9IHBpdm90Ow0KKwkJbWFzLT5pbmRleCA9IG1pbjsNCisJfQ0KKwly
ZXR1cm4gZW50cnk7DQorfQ0KKw0KK3N0YXRpYyBpbmxpbmUgdm9pZCAqbWFzX3ByZXZfZW50cnko
c3RydWN0IG1hX3N0YXRlICptYXMsIHVuc2lnbmVkIGxvbmcgbWluKQ0KK3sNCisJdm9pZCAqZW50
cnk7DQorDQorcmV0cnk6DQorCXdoaWxlIChsaWtlbHkoIW1hc19pc19ub25lKG1hcykpKSB7DQor
CQllbnRyeSA9IG1hc19wcmV2X25lbnRyeShtYXMsIG1pbiwgbWFzLT5pbmRleCk7DQorCQlpZiAo
dW5saWtlbHkobWFzLT5sYXN0IDwgbWluKSkNCisJCQlnb3RvIG5vdF9mb3VuZDsNCisNCisJCWlm
IChsaWtlbHkoZW50cnkpKQ0KKwkJCXJldHVybiBlbnRyeTsNCisNCisJCWlmICh1bmxpa2VseSht
YXNfcHJldl9ub2RlKG1hcywgbWluKSkpIHsNCisJCQltYXNfcmV3YWxrKG1hcywgbWFzLT5pbmRl
eCk7DQorCQkJZ290byByZXRyeTsNCisJCX0NCisNCisJCW1hcy0+b2Zmc2V0Kys7DQorCX0NCisN
CisJbWFzLT5vZmZzZXQtLTsNCitub3RfZm91bmQ6DQorCW1hcy0+aW5kZXggPSBtYXMtPmxhc3Qg
PSBtaW47DQorCXJldHVybiBOVUxMOw0KK30NCisNCisvKg0KKyAqIG1hc19yZXZfYXdhbGsoKSAt
IEludGVybmFsIGZ1bmN0aW9uLiAgUmV2ZXJzZSBhbGxvY2F0aW9uIHdhbGsuICBGaW5kIHRoZQ0K
KyAqIGhpZ2hlc3QgZ2FwIGFkZHJlc3Mgb2YgYSBnaXZlbiBzaXplIGluIGEgZ2l2ZW4gbm9kZSBh
bmQgZGVzY2VuZC4NCisgKiBAbWFzOiBUaGUgbWFwbGUgc3RhdGUNCisgKiBAc2l6ZTogVGhlIG5l
ZWRlZCBzaXplLg0KKyAqDQorICogUmV0dXJuOiBUcnVlIGlmIGZvdW5kIGluIGEgbGVhZiwgZmFs
c2Ugb3RoZXJ3aXNlLg0KKyAqDQorICovDQorc3RhdGljIGJvb2wgbWFzX3Jldl9hd2FsayhzdHJ1
Y3QgbWFfc3RhdGUgKm1hcywgdW5zaWduZWQgbG9uZyBzaXplKQ0KK3sNCisJZW51bSBtYXBsZV90
eXBlIHR5cGUgPSBtdGVfbm9kZV90eXBlKG1hcy0+bm9kZSk7DQorCXN0cnVjdCBtYXBsZV9ub2Rl
ICpub2RlID0gbWFzX21uKG1hcyk7DQorCXVuc2lnbmVkIGxvbmcgKnBpdm90cywgKmdhcHM7DQor
CXZvaWQgX19yY3UgKipzbG90czsNCisJdW5zaWduZWQgbG9uZyBnYXAgPSAwOw0KKwl1bnNpZ25l
ZCBsb25nIG1heCwgbWluLCBpbmRleDsNCisJdW5zaWduZWQgY2hhciBvZmZzZXQ7DQorDQorCWlm
ICh1bmxpa2VseShtYXNfaXNfZXJyKG1hcykpKQ0KKwkJcmV0dXJuIHRydWU7DQorDQorCWlmICht
YV9pc19kZW5zZSh0eXBlKSkgew0KKwkJLyogZGVuc2Ugbm9kZXMuICovDQorCQltYXMtPm9mZnNl
dCA9ICh1bnNpZ25lZCBjaGFyKShtYXMtPmluZGV4IC0gbWFzLT5taW4pOw0KKwkJcmV0dXJuIHRy
dWU7DQorCX0NCisNCisJcGl2b3RzID0gbWFfcGl2b3RzKG5vZGUsIHR5cGUpOw0KKwlzbG90cyA9
IG1hX3Nsb3RzKG5vZGUsIHR5cGUpOw0KKwlnYXBzID0gbWFfZ2Fwcyhub2RlLCB0eXBlKTsNCisJ
b2Zmc2V0ID0gbWFzLT5vZmZzZXQ7DQorCW1pbiA9IG1hc19zYWZlX21pbihtYXMsIHBpdm90cywg
b2Zmc2V0KTsNCisJLyogU2tpcCBvdXQgb2YgYm91bmRzLiAqLw0KKwl3aGlsZSAobWFzLT5sYXN0
IDwgbWluKQ0KKwkJbWluID0gbWFzX3NhZmVfbWluKG1hcywgcGl2b3RzLCAtLW9mZnNldCk7DQor
DQorCW1heCA9IG1hc19zYWZlX3Bpdm90KG1hcywgcGl2b3RzLCBvZmZzZXQsIHR5cGUpOw0KKwlp
bmRleCA9IG1hcy0+aW5kZXg7DQorCXdoaWxlIChpbmRleCA8PSBtYXgpIHsNCisJCWdhcCA9IDA7
DQorCQlpZiAoZ2FwcykNCisJCQlnYXAgPSBnYXBzW29mZnNldF07DQorCQllbHNlIGlmICghbWFz
X3Nsb3QobWFzLCBzbG90cywgb2Zmc2V0KSkNCisJCQlnYXAgPSBtYXggLSBtaW4gKyAxOw0KKw0K
KwkJaWYgKGdhcCkgew0KKwkJCWlmICgoc2l6ZSA8PSBnYXApICYmIChzaXplIDw9IG1hcy0+bGFz
dCAtIG1pbiArIDEpKQ0KKwkJCQlicmVhazsNCisNCisJCQlpZiAoIWdhcHMpIHsNCisJCQkJLyog
U2tpcCB0aGUgbmV4dCBzbG90LCBpdCBjYW5ub3QgYmUgYSBnYXAuICovDQorCQkJCWlmIChvZmZz
ZXQgPCAyKQ0KKwkJCQkJZ290byBhc2NlbmQ7DQorDQorCQkJCW9mZnNldCAtPSAyOw0KKwkJCQlt
YXggPSBwaXZvdHNbb2Zmc2V0XTsNCisJCQkJbWluID0gbWFzX3NhZmVfbWluKG1hcywgcGl2b3Rz
LCBvZmZzZXQpOw0KKwkJCQljb250aW51ZTsNCisJCQl9DQorCQl9DQorDQorCQlpZiAoIW9mZnNl
dCkNCisJCQlnb3RvIGFzY2VuZDsNCisNCisJCW9mZnNldC0tOw0KKwkJbWF4ID0gbWluIC0gMTsN
CisJCW1pbiA9IG1hc19zYWZlX21pbihtYXMsIHBpdm90cywgb2Zmc2V0KTsNCisJfQ0KKw0KKwlp
ZiAodW5saWtlbHkoaW5kZXggPiBtYXgpKSB7DQorCQltYXNfc2V0X2VycihtYXMsIC1FQlVTWSk7
DQorCQlyZXR1cm4gZmFsc2U7DQorCX0NCisNCisJaWYgKHVubGlrZWx5KG1hX2lzX2xlYWYodHlw
ZSkpKSB7DQorCQltYXMtPm9mZnNldCA9IG9mZnNldDsNCisJCW1hcy0+bWluID0gbWluOw0KKwkJ
bWFzLT5tYXggPSBtaW4gKyBnYXAgLSAxOw0KKwkJcmV0dXJuIHRydWU7DQorCX0NCisNCisJLyog
ZGVzY2VuZCwgb25seSBoYXBwZW5zIHVuZGVyIGxvY2suICovDQorCW1hcy0+bm9kZSA9IG1hc19z
bG90KG1hcywgc2xvdHMsIG9mZnNldCk7DQorCW1hcy0+bWluID0gbWluOw0KKwltYXMtPm1heCA9
IG1heDsNCisJbWFzLT5vZmZzZXQgPSBtYXNfZGF0YV9lbmQobWFzKTsNCisJcmV0dXJuIGZhbHNl
Ow0KKw0KK2FzY2VuZDoNCisJaWYgKG10ZV9pc19yb290KG1hcy0+bm9kZSkpDQorCQltYXNfc2V0
X2VycihtYXMsIC1FQlVTWSk7DQorDQorCXJldHVybiBmYWxzZTsNCit9DQorDQorc3RhdGljIGlu
bGluZSBib29sIG1hc19hbm9kZV9kZXNjZW5kKHN0cnVjdCBtYV9zdGF0ZSAqbWFzLCB1bnNpZ25l
ZCBsb25nIHNpemUpDQorew0KKwllbnVtIG1hcGxlX3R5cGUgdHlwZSA9IG10ZV9ub2RlX3R5cGUo
bWFzLT5ub2RlKTsNCisJdW5zaWduZWQgbG9uZyBwaXZvdCwgbWluLCBnYXAgPSAwOw0KKwl1bnNp
Z25lZCBjaGFyIGNvdW50LCBvZmZzZXQ7DQorCXVuc2lnbmVkIGxvbmcgKmdhcHMgPSBOVUxMLCAq
cGl2b3RzID0gbWFfcGl2b3RzKG1hc19tbihtYXMpLCB0eXBlKTsNCisJdm9pZCBfX3JjdSAqKnNs
b3RzID0gbWFfc2xvdHMobWFzX21uKG1hcyksIHR5cGUpOw0KKwlib29sIGZvdW5kID0gZmFsc2U7
DQorDQorCWlmIChtYV9pc19kZW5zZSh0eXBlKSkgew0KKwkJbWFzLT5vZmZzZXQgPSAodW5zaWdu
ZWQgY2hhcikobWFzLT5pbmRleCAtIG1hcy0+bWluKTsNCisJCXJldHVybiB0cnVlOw0KKwl9DQor
DQorCWdhcHMgPSBtYV9nYXBzKG10ZV90b19ub2RlKG1hcy0+bm9kZSksIHR5cGUpOw0KKwlvZmZz
ZXQgPSBtYXMtPm9mZnNldDsNCisJY291bnQgPSBtdF9zbG90c1t0eXBlXTsNCisJbWluID0gbWFz
X3NhZmVfbWluKG1hcywgcGl2b3RzLCBvZmZzZXQpOw0KKwlmb3IgKDsgb2Zmc2V0IDwgY291bnQ7
IG9mZnNldCsrKSB7DQorCQlwaXZvdCA9IG1hc19zYWZlX3Bpdm90KG1hcywgcGl2b3RzLCBvZmZz
ZXQsIHR5cGUpOw0KKwkJaWYgKG9mZnNldCAmJiAhcGl2b3QpDQorCQkJYnJlYWs7DQorDQorCQkv
KiBOb3Qgd2l0aGluIGxvd2VyIGJvdW5kcyAqLw0KKwkJaWYgKG1hcy0+aW5kZXggPiBwaXZvdCkN
CisJCQlnb3RvIG5leHRfc2xvdDsNCisNCisJCWlmIChnYXBzKQ0KKwkJCWdhcCA9IGdhcHNbb2Zm
c2V0XTsNCisJCWVsc2UgaWYgKCFtYXNfc2xvdChtYXMsIHNsb3RzLCBvZmZzZXQpKQ0KKwkJCWdh
cCA9IG1pbihwaXZvdCwgbWFzLT5sYXN0KSAtIG1heChtYXMtPmluZGV4LCBtaW4pICsgMTsNCisJ
CWVsc2UNCisJCQlnb3RvIG5leHRfc2xvdDsNCisNCisJCWlmIChnYXAgPj0gc2l6ZSkgew0KKwkJ
CWlmIChtYV9pc19sZWFmKHR5cGUpKSB7DQorCQkJCWZvdW5kID0gdHJ1ZTsNCisJCQkJZ290byBk
b25lOw0KKwkJCX0NCisJCQlpZiAobWFzLT5pbmRleCA8PSBwaXZvdCkgew0KKwkJCQltYXMtPm5v
ZGUgPSBtYXNfc2xvdChtYXMsIHNsb3RzLCBvZmZzZXQpOw0KKwkJCQltYXMtPm1pbiA9IG1pbjsN
CisJCQkJbWFzLT5tYXggPSBwaXZvdDsNCisJCQkJb2Zmc2V0ID0gMDsNCisJCQkJdHlwZSA9IG10
ZV9ub2RlX3R5cGUobWFzLT5ub2RlKTsNCisJCQkJY291bnQgPSBtdF9zbG90c1t0eXBlXTsNCisJ
CQkJYnJlYWs7DQorCQkJfQ0KKwkJfQ0KK25leHRfc2xvdDoNCisJCW1pbiA9IHBpdm90ICsgMTsN
CisJCWlmIChtYXMtPmxhc3QgPD0gcGl2b3QpIHsNCisJCQltYXNfc2V0X2VycihtYXMsIC1FQlVT
WSk7DQorCQkJcmV0dXJuIHRydWU7DQorCQl9DQorCX0NCisNCisJaWYgKG10ZV9pc19yb290KG1h
cy0+bm9kZSkpDQorCQlmb3VuZCA9IHRydWU7DQorZG9uZToNCisJbWFzLT5vZmZzZXQgPSBvZmZz
ZXQ7DQorCXJldHVybiBmb3VuZDsNCit9DQorDQorLyoqDQorICogbWFzX3dhbGsoKSAtIFNlYXJj
aCBmb3IgQG1hcy0+aW5kZXggaW4gdGhlIHRyZWUuDQorICogQG1hczogVGhlIG1hcGxlIHN0YXRl
Lg0KKyAqDQorICogbWFzLT5pbmRleCBhbmQgbWFzLT5sYXN0IHdpbGwgYmUgc2V0IHRvIHRoZSBy
YW5nZSBpZiB0aGVyZSBpcyBhIHZhbHVlLiAgSWYNCisgKiBtYXMtPm5vZGUgaXMgTUFTX05PTkUs
IHJlc2V0IHRvIE1BU19TVEFSVC4NCisgKg0KKyAqIFJldHVybjogdGhlIGVudHJ5IGF0IHRoZSBs
b2NhdGlvbiBvciAlTlVMTC4NCisgKi8NCit2b2lkICptYXNfd2FsayhzdHJ1Y3QgbWFfc3RhdGUg
Km1hcykNCit7DQorCXZvaWQgKmVudHJ5Ow0KKw0KK3JldHJ5Og0KKwllbnRyeSA9IG1hc19zdGF0
ZV93YWxrKG1hcyk7DQorCWlmIChtYXNfaXNfc3RhcnQobWFzKSkNCisJCWdvdG8gcmV0cnk7DQor
DQorCWlmIChtYXNfaXNfcHRyKG1hcykpIHsNCisJCWlmICghbWFzLT5pbmRleCkgew0KKwkJCW1h
cy0+bGFzdCA9IDA7DQorCQl9IGVsc2Ugew0KKwkJCW1hcy0+aW5kZXggPSAxOw0KKwkJCW1hcy0+
bGFzdCA9IFVMT05HX01BWDsNCisJCX0NCisJCXJldHVybiBlbnRyeTsNCisJfQ0KKw0KKwlpZiAo
bWFzX2lzX25vbmUobWFzKSkgew0KKwkJbWFzLT5pbmRleCA9IDA7DQorCQltYXMtPmxhc3QgPSBV
TE9OR19NQVg7DQorCX0NCisNCisJcmV0dXJuIGVudHJ5Ow0KK30NCisNCitzdGF0aWMgaW5saW5l
IGJvb2wgbWFzX3Jld2luZF9ub2RlKHN0cnVjdCBtYV9zdGF0ZSAqbWFzKQ0KK3sNCisJdW5zaWdu
ZWQgY2hhciBzbG90Ow0KKw0KKwlkbyB7DQorCQlpZiAobXRlX2lzX3Jvb3QobWFzLT5ub2RlKSkg
ew0KKwkJCXNsb3QgPSBtYXMtPm9mZnNldDsNCisJCQlpZiAoIXNsb3QpDQorCQkJCXJldHVybiBm
YWxzZTsNCisJCX0gZWxzZSB7DQorCQkJbWFzX2FzY2VuZChtYXMpOw0KKwkJCXNsb3QgPSBtYXMt
Pm9mZnNldDsNCisJCX0NCisJfSB3aGlsZSAoIXNsb3QpOw0KKw0KKwltYXMtPm9mZnNldCA9IC0t
c2xvdDsNCisJcmV0dXJuIHRydWU7DQorfQ0KKw0KKy8qDQorICogbWFzX3NraXBfbm9kZSgpIC0g
SW50ZXJuYWwgZnVuY3Rpb24uICBTa2lwIG92ZXIgYSBub2RlLg0KKyAqIEBtYXM6IFRoZSBtYXBs
ZSBzdGF0ZS4NCisgKg0KKyAqIFJldHVybjogdHJ1ZSBpZiB0aGVyZSBpcyBhbm90aGVyIG5vZGUs
IGZhbHNlIG90aGVyd2lzZS4NCisgKi8NCitzdGF0aWMgaW5saW5lIGJvb2wgbWFzX3NraXBfbm9k
ZShzdHJ1Y3QgbWFfc3RhdGUgKm1hcykNCit7DQorCXVuc2lnbmVkIGNoYXIgc2xvdCwgc2xvdF9j
b3VudDsNCisJdW5zaWduZWQgbG9uZyAqcGl2b3RzOw0KKwllbnVtIG1hcGxlX3R5cGUgbXQ7DQor
DQorCW10ID0gbXRlX25vZGVfdHlwZShtYXMtPm5vZGUpOw0KKwlzbG90X2NvdW50ID0gbXRfc2xv
dHNbbXRdIC0gMTsNCisJZG8gew0KKwkJaWYgKG10ZV9pc19yb290KG1hcy0+bm9kZSkpIHsNCisJ
CQlzbG90ID0gbWFzLT5vZmZzZXQ7DQorCQkJaWYgKHNsb3QgPiBzbG90X2NvdW50KSB7DQorCQkJ
CW1hc19zZXRfZXJyKG1hcywgLUVCVVNZKTsNCisJCQkJcmV0dXJuIGZhbHNlOw0KKwkJCX0NCisJ
CX0gZWxzZSB7DQorCQkJbWFzX2FzY2VuZChtYXMpOw0KKwkJCXNsb3QgPSBtYXMtPm9mZnNldDsN
CisJCQltdCA9IG10ZV9ub2RlX3R5cGUobWFzLT5ub2RlKTsNCisJCQlzbG90X2NvdW50ID0gbXRf
c2xvdHNbbXRdIC0gMTsNCisJCX0NCisJfSB3aGlsZSAoc2xvdCA+IHNsb3RfY291bnQpOw0KKw0K
KwltYXMtPm9mZnNldCA9ICsrc2xvdDsNCisJcGl2b3RzID0gbWFfcGl2b3RzKG1hc19tbihtYXMp
LCBtdCk7DQorCWlmIChzbG90ID4gMCkNCisJCW1hcy0+bWluID0gcGl2b3RzW3Nsb3QgLSAxXSAr
IDE7DQorDQorCWlmIChzbG90IDw9IHNsb3RfY291bnQpDQorCQltYXMtPm1heCA9IHBpdm90c1tz
bG90XTsNCisNCisJcmV0dXJuIHRydWU7DQorfQ0KKw0KKy8qDQorICogbWFzX2F3YWxrKCkgLSBB
bGxvY2F0aW9uIHdhbGsuICBTZWFyY2ggZnJvbSBsb3cgYWRkcmVzcyB0byBoaWdoLCBmb3IgYSBn
YXAgb2YNCisgKiBAc2l6ZQ0KKyAqIEBtYXM6IFRoZSBtYXBsZSBzdGF0ZQ0KKyAqIEBzaXplOiBU
aGUgc2l6ZSBvZiB0aGUgZ2FwIHJlcXVpcmVkDQorICoNCisgKiBTZWFyY2ggYmV0d2VlbiBAbWFz
LT5pbmRleCBhbmQgQG1hcy0+bGFzdCBmb3IgYSBnYXAgb2YgQHNpemUuDQorICovDQorc3RhdGlj
IGlubGluZSB2b2lkIG1hc19hd2FsayhzdHJ1Y3QgbWFfc3RhdGUgKm1hcywgdW5zaWduZWQgbG9u
ZyBzaXplKQ0KK3sNCisJc3RydWN0IG1hcGxlX2Vub2RlICpsYXN0ID0gTlVMTDsNCisNCisJLyoN
CisJICogVGhlcmUgYXJlIDQgb3B0aW9uczoNCisJICogZ28gdG8gY2hpbGQgKGRlc2NlbmQpDQor
CSAqIGdvIGJhY2sgdG8gcGFyZW50IChhc2NlbmQpDQorCSAqIG5vIGdhcCBmb3VuZC4gKHJldHVy
biwgc2xvdCA9PSBNQVBMRV9OT0RFX1NMT1RTKQ0KKwkgKiBmb3VuZCB0aGUgZ2FwLiAocmV0dXJu
LCBzbG90ICE9IE1BUExFX05PREVfU0xPVFMpDQorCSAqLw0KKwl3aGlsZSAoIW1hc19pc19lcnIo
bWFzKSAmJiAhbWFzX2Fub2RlX2Rlc2NlbmQobWFzLCBzaXplKSkgew0KKwkJaWYgKGxhc3QgPT0g
bWFzLT5ub2RlKQ0KKwkJCW1hc19za2lwX25vZGUobWFzKTsNCisJCWVsc2UNCisJCQlsYXN0ID0g
bWFzLT5ub2RlOw0KKwl9DQorfQ0KKw0KKy8qDQorICogbWFzX2ZpbGxfZ2FwKCkgLSBGaWxsIGEg
bG9jYXRlZCBnYXAgd2l0aCBAZW50cnkuDQorICogQG1hczogVGhlIG1hcGxlIHN0YXRlDQorICog
QGVudHJ5OiBUaGUgdmFsdWUgdG8gc3RvcmUNCisgKiBAc2xvdDogVGhlIG9mZnNldCBpbnRvIHRo
ZSBub2RlIHRvIHN0b3JlIHRoZSBAZW50cnkNCisgKiBAc2l6ZTogVGhlIHNpemUgb2YgdGhlIGVu
dHJ5DQorICogQGluZGV4OiBUaGUgc3RhcnQgbG9jYXRpb24NCisgKi8NCitzdGF0aWMgaW5saW5l
IHZvaWQgbWFzX2ZpbGxfZ2FwKHN0cnVjdCBtYV9zdGF0ZSAqbWFzLCB2b2lkICplbnRyeSwNCisJ
CXVuc2lnbmVkIGNoYXIgc2xvdCwgdW5zaWduZWQgbG9uZyBzaXplLCB1bnNpZ25lZCBsb25nICpp
bmRleCkNCit7DQorCU1BX1dSX1NUQVRFKHdyX21hcywgbWFzLCBlbnRyeSk7DQorCXVuc2lnbmVk
IGNoYXIgcHNsb3QgPSBtdGVfcGFyZW50X3Nsb3QobWFzLT5ub2RlKTsNCisJc3RydWN0IG1hcGxl
X2Vub2RlICptbiA9IG1hcy0+bm9kZTsNCisJdW5zaWduZWQgbG9uZyAqcGl2b3RzOw0KKwllbnVt
IG1hcGxlX3R5cGUgcHR5cGU7DQorCS8qDQorCSAqIG1hcy0+aW5kZXggaXMgdGhlIHN0YXJ0IGFk
ZHJlc3MgZm9yIHRoZSBzZWFyY2gNCisJICogIHdoaWNoIG1heSBubyBsb25nZXIgYmUgbmVlZGVk
Lg0KKwkgKiBtYXMtPmxhc3QgaXMgdGhlIGVuZCBhZGRyZXNzIGZvciB0aGUgc2VhcmNoDQorCSAq
Lw0KKw0KKwkqaW5kZXggPSBtYXMtPmluZGV4Ow0KKwltYXMtPmxhc3QgPSBtYXMtPmluZGV4ICsg
c2l6ZSAtIDE7DQorDQorCS8qDQorCSAqIEl0IGlzIHBvc3NpYmxlIHRoYXQgdXNpbmcgbWFzLT5t
YXggYW5kIG1hcy0+bWluIHRvIGNvcnJlY3RseQ0KKwkgKiBjYWxjdWxhdGUgdGhlIGluZGV4IGFu
ZCBsYXN0IHdpbGwgY2F1c2UgYW4gaXNzdWUgaW4gdGhlIGdhcA0KKwkgKiBjYWxjdWxhdGlvbiwg
c28gZml4IHRoZSBtYV9zdGF0ZSBoZXJlDQorCSAqLw0KKwltYXNfYXNjZW5kKG1hcyk7DQorCXB0
eXBlID0gbXRlX25vZGVfdHlwZShtYXMtPm5vZGUpOw0KKwlwaXZvdHMgPSBtYV9waXZvdHMobWFz
X21uKG1hcyksIHB0eXBlKTsNCisJbWFzLT5tYXggPSBtYXNfc2FmZV9waXZvdChtYXMsIHBpdm90
cywgcHNsb3QsIHB0eXBlKTsNCisJbWFzLT5taW4gPSBtYXNfc2FmZV9taW4obWFzLCBwaXZvdHMs
IHBzbG90KTsNCisJbWFzLT5ub2RlID0gbW47DQorCW1hcy0+b2Zmc2V0ID0gc2xvdDsNCisJbWFz
X3dyX3N0b3JlX2VudHJ5KCZ3cl9tYXMpOw0KK30NCisNCisvKg0KKyAqIG1hc19zcGFyc2VfYXJl
YSgpIC0gSW50ZXJuYWwgZnVuY3Rpb24uICBSZXR1cm4gdXBwZXIgb3IgbG93ZXIgbGltaXQgd2hl
bg0KKyAqIHNlYXJjaGluZyBmb3IgYSBnYXAgaW4gYW4gZW1wdHkgdHJlZS4NCisgKiBAbWFzOiBU
aGUgbWFwbGUgc3RhdGUNCisgKiBAbWluOiB0aGUgbWluaW11bSByYW5nZQ0KKyAqIEBtYXg6IFRo
ZSBtYXhpbXVtIHJhbmdlDQorICogQHNpemU6IFRoZSBzaXplIG9mIHRoZSBnYXANCisgKiBAZndk
OiBTZWFyY2hpbmcgZm9yd2FyZCBvciBiYWNrDQorICovDQorc3RhdGljIGlubGluZSB2b2lkIG1h
c19zcGFyc2VfYXJlYShzdHJ1Y3QgbWFfc3RhdGUgKm1hcywgdW5zaWduZWQgbG9uZyBtaW4sDQor
CQkJCXVuc2lnbmVkIGxvbmcgbWF4LCB1bnNpZ25lZCBsb25nIHNpemUsIGJvb2wgZndkKQ0KK3sN
CisJdW5zaWduZWQgbG9uZyBzdGFydCA9IDA7DQorDQorCWlmICghdW5saWtlbHkobWFzX2lzX25v
bmUobWFzKSkpDQorCQlzdGFydCsrOw0KKwkvKiBtYXNfaXNfcHRyICovDQorDQorCWlmIChzdGFy
dCA8IG1pbikNCisJCXN0YXJ0ID0gbWluOw0KKw0KKwlpZiAoZndkKSB7DQorCQltYXMtPmluZGV4
ID0gc3RhcnQ7DQorCQltYXMtPmxhc3QgPSBzdGFydCArIHNpemUgLSAxOw0KKwkJcmV0dXJuOw0K
Kwl9DQorDQorCW1hcy0+aW5kZXggPSBtYXg7DQorfQ0KKw0KKy8qDQorICogbWFzX2VtcHR5X2Fy
ZWEoKSAtIEdldCB0aGUgbG93ZXN0IGFkZHJlc3Mgd2l0aGluIHRoZSByYW5nZSB0aGF0IGlzDQor
ICogc3VmZmljaWVudCBmb3IgdGhlIHNpemUgcmVxdWVzdGVkLg0KKyAqIEBtYXM6IFRoZSBtYXBs
ZSBzdGF0ZQ0KKyAqIEBtaW46IFRoZSBsb3dlc3QgdmFsdWUgb2YgdGhlIHJhbmdlDQorICogQG1h
eDogVGhlIGhpZ2hlc3QgdmFsdWUgb2YgdGhlIHJhbmdlDQorICogQHNpemU6IFRoZSBzaXplIG5l
ZWRlZA0KKyAqLw0KK2ludCBtYXNfZW1wdHlfYXJlYShzdHJ1Y3QgbWFfc3RhdGUgKm1hcywgdW5z
aWduZWQgbG9uZyBtaW4sDQorCQl1bnNpZ25lZCBsb25nIG1heCwgdW5zaWduZWQgbG9uZyBzaXpl
KQ0KK3sNCisJdW5zaWduZWQgY2hhciBvZmZzZXQ7DQorCXVuc2lnbmVkIGxvbmcgKnBpdm90czsN
CisJZW51bSBtYXBsZV90eXBlIG10Ow0KKw0KKwlpZiAobWFzX2lzX3N0YXJ0KG1hcykpDQorCQlt
YXNfc3RhcnQobWFzKTsNCisJZWxzZSBpZiAobWFzLT5vZmZzZXQgPj0gMikNCisJCW1hcy0+b2Zm
c2V0IC09IDI7DQorCWVsc2UgaWYgKCFtYXNfc2tpcF9ub2RlKG1hcykpDQorCQlyZXR1cm4gLUVC
VVNZOw0KKw0KKwkvKiBFbXB0eSBzZXQgKi8NCisJaWYgKG1hc19pc19ub25lKG1hcykgfHwgbWFz
X2lzX3B0cihtYXMpKSB7DQorCQltYXNfc3BhcnNlX2FyZWEobWFzLCBtaW4sIG1heCwgc2l6ZSwg
dHJ1ZSk7DQorCQlyZXR1cm4gMDsNCisJfQ0KKw0KKwkvKiBUaGUgc3RhcnQgb2YgdGhlIHdpbmRv
dyBjYW4gb25seSBiZSB3aXRoaW4gdGhlc2UgdmFsdWVzICovDQorCW1hcy0+aW5kZXggPSBtaW47
DQorCW1hcy0+bGFzdCA9IG1heDsNCisJbWFzX2F3YWxrKG1hcywgc2l6ZSk7DQorDQorCWlmICh1
bmxpa2VseShtYXNfaXNfZXJyKG1hcykpKQ0KKwkJcmV0dXJuIHhhX2VycihtYXMtPm5vZGUpOw0K
Kw0KKwlvZmZzZXQgPSBtYXMtPm9mZnNldDsNCisJaWYgKHVubGlrZWx5KG9mZnNldCA9PSBNQVBM
RV9OT0RFX1NMT1RTKSkNCisJCXJldHVybiAtRUJVU1k7DQorDQorCW10ID0gbXRlX25vZGVfdHlw
ZShtYXMtPm5vZGUpOw0KKwlwaXZvdHMgPSBtYV9waXZvdHMobWFzX21uKG1hcyksIG10KTsNCisJ
aWYgKG9mZnNldCkNCisJCW1hcy0+bWluID0gcGl2b3RzW29mZnNldCAtIDFdICsgMTsNCisNCisJ
aWYgKG9mZnNldCA8IG10X3Bpdm90c1ttdF0pDQorCQltYXMtPm1heCA9IHBpdm90c1tvZmZzZXRd
Ow0KKw0KKwlpZiAobWFzLT5pbmRleCA8IG1hcy0+bWluKQ0KKwkJbWFzLT5pbmRleCA9IG1hcy0+
bWluOw0KKw0KKwltYXMtPmxhc3QgPSBtYXMtPmluZGV4ICsgc2l6ZSAtIDE7DQorCXJldHVybiAw
Ow0KK30NCisNCisvKg0KKyAqIG1hc19lbXB0eV9hcmVhX3JldigpIC0gR2V0IHRoZSBoaWdoZXN0
IGFkZHJlc3Mgd2l0aGluIHRoZSByYW5nZSB0aGF0IGlzDQorICogc3VmZmljaWVudCBmb3IgdGhl
IHNpemUgcmVxdWVzdGVkLg0KKyAqIEBtYXM6IFRoZSBtYXBsZSBzdGF0ZQ0KKyAqIEBtaW46IFRo
ZSBsb3dlc3QgdmFsdWUgb2YgdGhlIHJhbmdlDQorICogQG1heDogVGhlIGhpZ2hlc3QgdmFsdWUg
b2YgdGhlIHJhbmdlDQorICogQHNpemU6IFRoZSBzaXplIG5lZWRlZA0KKyAqLw0KK2ludCBtYXNf
ZW1wdHlfYXJlYV9yZXYoc3RydWN0IG1hX3N0YXRlICptYXMsIHVuc2lnbmVkIGxvbmcgbWluLA0K
KwkJdW5zaWduZWQgbG9uZyBtYXgsIHVuc2lnbmVkIGxvbmcgc2l6ZSkNCit7DQorCXN0cnVjdCBt
YXBsZV9lbm9kZSAqbGFzdCA9IG1hcy0+bm9kZTsNCisNCisJaWYgKG1hc19pc19zdGFydChtYXMp
KSB7DQorCQltYXNfc3RhcnQobWFzKTsNCisJCW1hcy0+b2Zmc2V0ID0gbWFzX2RhdGFfZW5kKG1h
cyk7DQorCX0gZWxzZSBpZiAobWFzLT5vZmZzZXQgPj0gMikgew0KKwkJbWFzLT5vZmZzZXQgLT0g
MjsNCisJfSBlbHNlIGlmICghbWFzX3Jld2luZF9ub2RlKG1hcykpIHsNCisJCXJldHVybiAtRUJV
U1k7DQorCX0NCisNCisJLyogRW1wdHkgc2V0LiAqLw0KKwlpZiAobWFzX2lzX25vbmUobWFzKSB8
fCBtYXNfaXNfcHRyKG1hcykpIHsNCisJCW1hc19zcGFyc2VfYXJlYShtYXMsIG1pbiwgbWF4LCBz
aXplLCBmYWxzZSk7DQorCQlyZXR1cm4gMDsNCisJfQ0KKw0KKwkvKiBUaGUgc3RhcnQgb2YgdGhl
IHdpbmRvdyBjYW4gb25seSBiZSB3aXRoaW4gdGhlc2UgdmFsdWVzLiAqLw0KKwltYXMtPmluZGV4
ID0gbWluOw0KKwltYXMtPmxhc3QgPSBtYXg7DQorDQorCXdoaWxlICghbWFzX3Jldl9hd2Fsayht
YXMsIHNpemUpKSB7DQorCQlpZiAobGFzdCA9PSBtYXMtPm5vZGUpIHsNCisJCQlpZiAoIW1hc19y
ZXdpbmRfbm9kZShtYXMpKQ0KKwkJCQlyZXR1cm4gLUVCVVNZOw0KKwkJfSBlbHNlIHsNCisJCQls
YXN0ID0gbWFzLT5ub2RlOw0KKwkJfQ0KKwl9DQorDQorCWlmIChtYXNfaXNfZXJyKG1hcykpDQor
CQlyZXR1cm4geGFfZXJyKG1hcy0+bm9kZSk7DQorDQorCWlmICh1bmxpa2VseShtYXMtPm9mZnNl
dCA9PSBNQVBMRV9OT0RFX1NMT1RTKSkNCisJCXJldHVybiAtRUJVU1k7DQorDQorCS8qDQorCSAq
IG1hc19yZXZfYXdhbGsoKSBoYXMgc2V0IG1hcy0+bWluIGFuZCBtYXMtPm1heCB0byB0aGUgZ2Fw
IHZhbHVlcy4gIElmDQorCSAqIHRoZSBtYXhpbXVtIGlzIG91dHNpZGUgdGhlIHdpbmRvdyB3ZSBh
cmUgc2VhcmNoaW5nLCB0aGVuIHVzZSB0aGUgbGFzdA0KKwkgKiBsb2NhdGlvbiBpbiB0aGUgc2Vh
cmNoLg0KKwkgKiBtYXMtPm1heCBhbmQgbWFzLT5taW4gaXMgdGhlIHJhbmdlIG9mIHRoZSBnYXAu
DQorCSAqIG1hcy0+aW5kZXggYW5kIG1hcy0+bGFzdCBhcmUgY3VycmVudGx5IHNldCB0byB0aGUg
c2VhcmNoIHJhbmdlLg0KKwkgKi8NCisNCisJLyogVHJpbSB0aGUgdXBwZXIgbGltaXQgdG8gdGhl
IG1heC4gKi8NCisJaWYgKG1hcy0+bWF4IDw9IG1hcy0+bGFzdCkNCisJCW1hcy0+bGFzdCA9IG1h
cy0+bWF4Ow0KKw0KKwltYXMtPmluZGV4ID0gbWFzLT5sYXN0IC0gc2l6ZSArIDE7DQorCXJldHVy
biAwOw0KK30NCisNCitzdGF0aWMgaW5saW5lIGludCBtYXNfYWxsb2Moc3RydWN0IG1hX3N0YXRl
ICptYXMsIHZvaWQgKmVudHJ5LA0KKwkJdW5zaWduZWQgbG9uZyBzaXplLCB1bnNpZ25lZCBsb25n
ICppbmRleCkNCit7DQorCXVuc2lnbmVkIGxvbmcgbWluOw0KKw0KKwltYXNfc3RhcnQobWFzKTsN
CisJaWYgKG1hc19pc19ub25lKG1hcykgfHwgbWFzX2lzX3B0cihtYXMpKSB7DQorCQltYXNfcm9v
dF9leHBhbmQobWFzLCBlbnRyeSk7DQorCQlpZiAobWFzX2lzX2VycihtYXMpKQ0KKwkJCXJldHVy
biB4YV9lcnIobWFzLT5ub2RlKTsNCisNCisJCWlmICghbWFzLT5pbmRleCkNCisJCQlyZXR1cm4g
bXRlX3Bpdm90KG1hcy0+bm9kZSwgMCk7DQorCQlyZXR1cm4gbXRlX3Bpdm90KG1hcy0+bm9kZSwg
MSk7DQorCX0NCisNCisJLyogTXVzdCBiZSB3YWxraW5nIGEgdHJlZS4gKi8NCisJbWFzX2F3YWxr
KG1hcywgc2l6ZSk7DQorCWlmIChtYXNfaXNfZXJyKG1hcykpDQorCQlyZXR1cm4geGFfZXJyKG1h
cy0+bm9kZSk7DQorDQorCWlmIChtYXMtPm9mZnNldCA9PSBNQVBMRV9OT0RFX1NMT1RTKQ0KKwkJ
Z290byBub19nYXA7DQorDQorCS8qDQorCSAqIEF0IHRoaXMgcG9pbnQsIG1hcy0+bm9kZSBwb2lu
dHMgdG8gdGhlIHJpZ2h0IG5vZGUgYW5kIHdlIGhhdmUgYW4NCisJICogb2Zmc2V0IHRoYXQgaGFz
IGEgc3VmZmljaWVudCBnYXAuDQorCSAqLw0KKwltaW4gPSBtYXMtPm1pbjsNCisJaWYgKG1hcy0+
b2Zmc2V0KQ0KKwkJbWluID0gbXRlX3Bpdm90KG1hcy0+bm9kZSwgbWFzLT5vZmZzZXQgLSAxKSAr
IDE7DQorDQorCWlmIChtYXMtPmluZGV4IDwgbWluKQ0KKwkJbWFzLT5pbmRleCA9IG1pbjsNCisN
CisJbWFzX2ZpbGxfZ2FwKG1hcywgZW50cnksIG1hcy0+b2Zmc2V0LCBzaXplLCBpbmRleCk7DQor
CXJldHVybiAwOw0KKw0KK25vX2dhcDoNCisJcmV0dXJuIC1FQlVTWTsNCit9DQorDQorc3RhdGlj
IGlubGluZSBpbnQgbWFzX3Jldl9hbGxvYyhzdHJ1Y3QgbWFfc3RhdGUgKm1hcywgdW5zaWduZWQg
bG9uZyBtaW4sDQorCQkJCXVuc2lnbmVkIGxvbmcgbWF4LCB2b2lkICplbnRyeSwNCisJCQkJdW5z
aWduZWQgbG9uZyBzaXplLCB1bnNpZ25lZCBsb25nICppbmRleCkNCit7DQorCWludCByZXQgPSAw
Ow0KKw0KKwlyZXQgPSBtYXNfZW1wdHlfYXJlYV9yZXYobWFzLCBtaW4sIG1heCwgc2l6ZSk7DQor
CWlmIChyZXQpDQorCQlyZXR1cm4gcmV0Ow0KKw0KKwlpZiAobWFzX2lzX2VycihtYXMpKQ0KKwkJ
cmV0dXJuIHhhX2VycihtYXMtPm5vZGUpOw0KKw0KKwlpZiAobWFzLT5vZmZzZXQgPT0gTUFQTEVf
Tk9ERV9TTE9UUykNCisJCWdvdG8gbm9fZ2FwOw0KKw0KKwltYXNfZmlsbF9nYXAobWFzLCBlbnRy
eSwgbWFzLT5vZmZzZXQsIHNpemUsIGluZGV4KTsNCisJcmV0dXJuIDA7DQorDQorbm9fZ2FwOg0K
KwlyZXR1cm4gLUVCVVNZOw0KK30NCisNCisvKg0KKyAqIG1hc19kZWFkX2xlYXZlcygpIC0gTWFy
ayBhbGwgbGVhdmVzIG9mIGEgbm9kZSBhcyBkZWFkLg0KKyAqIEBtYXM6IFRoZSBtYXBsZSBzdGF0
ZQ0KKyAqIEBzbG90czogUG9pbnRlciB0byB0aGUgc2xvdCBhcnJheQ0KKyAqDQorICogTXVzdCBo
b2xkIHRoZSB3cml0ZSBsb2NrLg0KKyAqDQorICogUmV0dXJuOiBUaGUgbnVtYmVyIG9mIGxlYXZl
cyBtYXJrZWQgYXMgZGVhZC4NCisgKi8NCitzdGF0aWMgaW5saW5lDQordW5zaWduZWQgY2hhciBt
YXNfZGVhZF9sZWF2ZXMoc3RydWN0IG1hX3N0YXRlICptYXMsIHZvaWQgX19yY3UgKipzbG90cykN
Cit7DQorCXN0cnVjdCBtYXBsZV9ub2RlICpub2RlOw0KKwllbnVtIG1hcGxlX3R5cGUgdHlwZTsN
CisJdm9pZCAqZW50cnk7DQorCWludCBvZmZzZXQ7DQorDQorCWZvciAob2Zmc2V0ID0gMDsgb2Zm
c2V0IDwgbXRfc2xvdF9jb3VudChtYXMtPm5vZGUpOyBvZmZzZXQrKykgew0KKwkJZW50cnkgPSBt
YXNfc2xvdF9sb2NrZWQobWFzLCBzbG90cywgb2Zmc2V0KTsNCisJCXR5cGUgPSBtdGVfbm9kZV90
eXBlKGVudHJ5KTsNCisJCW5vZGUgPSBtdGVfdG9fbm9kZShlbnRyeSk7DQorCQkvKiBVc2UgYm90
aCBub2RlIGFuZCB0eXBlIHRvIGNhdGNoIExFICYgQkUgbWV0YWRhdGEgKi8NCisJCWlmICghbm9k
ZSB8fCAhdHlwZSkNCisJCQlicmVhazsNCisNCisJCW10ZV9zZXRfbm9kZV9kZWFkKGVudHJ5KTsN
CisJCXNtcF93bWIoKTsgLyogTmVlZGVkIGZvciBSQ1UgKi8NCisJCW5vZGUtPnR5cGUgPSB0eXBl
Ow0KKwkJcmN1X2Fzc2lnbl9wb2ludGVyKHNsb3RzW29mZnNldF0sIG5vZGUpOw0KKwl9DQorDQor
CXJldHVybiBvZmZzZXQ7DQorfQ0KKw0KK3N0YXRpYyB2b2lkIF9fcmN1ICoqbWFzX2RlYWRfd2Fs
ayhzdHJ1Y3QgbWFfc3RhdGUgKm1hcywgdW5zaWduZWQgY2hhciBvZmZzZXQpDQorew0KKwlzdHJ1
Y3QgbWFwbGVfbm9kZSAqbm9kZSwgKm5leHQ7DQorCXZvaWQgX19yY3UgKipzbG90cyA9IE5VTEw7
DQorDQorCW5leHQgPSBtYXNfbW4obWFzKTsNCisJZG8gew0KKwkJbWFzLT5ub2RlID0gbWFfZW5v
ZGVfcHRyKG5leHQpOw0KKwkJbm9kZSA9IG1hc19tbihtYXMpOw0KKwkJc2xvdHMgPSBtYV9zbG90
cyhub2RlLCBub2RlLT50eXBlKTsNCisJCW5leHQgPSBtYXNfc2xvdF9sb2NrZWQobWFzLCBzbG90
cywgb2Zmc2V0KTsNCisJCW9mZnNldCA9IDA7DQorCX0gd2hpbGUgKCFtYV9pc19sZWFmKG5leHQt
PnR5cGUpKTsNCisNCisJcmV0dXJuIHNsb3RzOw0KK30NCisNCitzdGF0aWMgdm9pZCBtdF9mcmVl
X3dhbGsoc3RydWN0IHJjdV9oZWFkICpoZWFkKQ0KK3sNCisJdm9pZCBfX3JjdSAqKnNsb3RzOw0K
KwlzdHJ1Y3QgbWFwbGVfbm9kZSAqbm9kZSwgKnN0YXJ0Ow0KKwlzdHJ1Y3QgbWFwbGVfdHJlZSBt
dDsNCisJdW5zaWduZWQgY2hhciBvZmZzZXQ7DQorCWVudW0gbWFwbGVfdHlwZSB0eXBlOw0KKwlN
QV9TVEFURShtYXMsICZtdCwgMCwgMCk7DQorDQorCW5vZGUgPSBjb250YWluZXJfb2YoaGVhZCwg
c3RydWN0IG1hcGxlX25vZGUsIHJjdSk7DQorDQorCWlmIChtYV9pc19sZWFmKG5vZGUtPnR5cGUp
KQ0KKwkJZ290byBmcmVlX2xlYWY7DQorDQorCW10X2luaXRfZmxhZ3MoJm10LCBub2RlLT5tYV9m
bGFncyk7DQorCW1hc19sb2NrKCZtYXMpOw0KKwlzdGFydCA9IG5vZGU7DQorCW1hcy5ub2RlID0g
bXRfbWtfbm9kZShub2RlLCBub2RlLT50eXBlKTsNCisJc2xvdHMgPSBtYXNfZGVhZF93YWxrKCZt
YXMsIDApOw0KKwlub2RlID0gbWFzX21uKCZtYXMpOw0KKwlkbyB7DQorCQltdF9mcmVlX2J1bGso
bm9kZS0+c2xvdF9sZW4sIHNsb3RzKTsNCisJCW9mZnNldCA9IG5vZGUtPnBhcmVudF9zbG90ICsg
MTsNCisJCW1hcy5ub2RlID0gbm9kZS0+cGl2X3BhcmVudDsNCisJCWlmIChtYXNfbW4oJm1hcykg
PT0gbm9kZSkNCisJCQlnb3RvIHN0YXJ0X3Nsb3RzX2ZyZWU7DQorDQorCQl0eXBlID0gbXRlX25v
ZGVfdHlwZShtYXMubm9kZSk7DQorCQlzbG90cyA9IG1hX3Nsb3RzKG10ZV90b19ub2RlKG1hcy5u
b2RlKSwgdHlwZSk7DQorCQlpZiAoKG9mZnNldCA8IG10X3Nsb3RzW3R5cGVdKSAmJiAoc2xvdHNb
b2Zmc2V0XSkpDQorCQkJc2xvdHMgPSBtYXNfZGVhZF93YWxrKCZtYXMsIG9mZnNldCk7DQorDQor
CQlub2RlID0gbWFzX21uKCZtYXMpOw0KKwl9IHdoaWxlICgobm9kZSAhPSBzdGFydCkgfHwgKG5v
ZGUtPnNsb3RfbGVuIDwgb2Zmc2V0KSk7DQorDQorCXNsb3RzID0gbWFfc2xvdHMobm9kZSwgbm9k
ZS0+dHlwZSk7DQorCW10X2ZyZWVfYnVsayhub2RlLT5zbG90X2xlbiwgc2xvdHMpOw0KKw0KK3N0
YXJ0X3Nsb3RzX2ZyZWU6DQorCW1hc191bmxvY2soJm1hcyk7DQorZnJlZV9sZWFmOg0KKwltdF9m
cmVlX3JjdSgmbm9kZS0+cmN1KTsNCit9DQorDQorc3RhdGljIGlubGluZSB2b2lkIF9fcmN1ICoq
bWFzX2Rlc3Ryb3lfZGVzY2VuZChzdHJ1Y3QgbWFfc3RhdGUgKm1hcywNCisJCQlzdHJ1Y3QgbWFw
bGVfZW5vZGUgKnByZXYsIHVuc2lnbmVkIGNoYXIgb2Zmc2V0KQ0KK3sNCisJc3RydWN0IG1hcGxl
X25vZGUgKm5vZGU7DQorCXN0cnVjdCBtYXBsZV9lbm9kZSAqbmV4dCA9IG1hcy0+bm9kZTsNCisJ
dm9pZCBfX3JjdSAqKnNsb3RzID0gTlVMTDsNCisNCisJZG8gew0KKwkJbWFzLT5ub2RlID0gbmV4
dDsNCisJCW5vZGUgPSBtYXNfbW4obWFzKTsNCisJCXNsb3RzID0gbWFfc2xvdHMobm9kZSwgbXRl
X25vZGVfdHlwZShtYXMtPm5vZGUpKTsNCisJCW5leHQgPSBtYXNfc2xvdF9sb2NrZWQobWFzLCBz
bG90cywgMCk7DQorCQlpZiAoKG10ZV9kZWFkX25vZGUobmV4dCkpKQ0KKwkJCW5leHQgPSBtYXNf
c2xvdF9sb2NrZWQobWFzLCBzbG90cywgMSk7DQorDQorCQltdGVfc2V0X25vZGVfZGVhZChtYXMt
Pm5vZGUpOw0KKwkJbm9kZS0+dHlwZSA9IG10ZV9ub2RlX3R5cGUobWFzLT5ub2RlKTsNCisJCW5v
ZGUtPnBpdl9wYXJlbnQgPSBwcmV2Ow0KKwkJbm9kZS0+cGFyZW50X3Nsb3QgPSBvZmZzZXQ7DQor
CQlvZmZzZXQgPSAwOw0KKwkJcHJldiA9IG1hcy0+bm9kZTsNCisJfSB3aGlsZSAoIW10ZV9pc19s
ZWFmKG5leHQpKTsNCisNCisJcmV0dXJuIHNsb3RzOw0KK30NCisNCitzdGF0aWMgdm9pZCBtdF9k
ZXN0cm95X3dhbGsoc3RydWN0IG1hcGxlX2Vub2RlICplbm9kZSwgdW5zaWduZWQgY2hhciBtYV9m
bGFncywNCisJCQkgICAgYm9vbCBmcmVlKQ0KK3sNCisJdm9pZCBfX3JjdSAqKnNsb3RzOw0KKwlz
dHJ1Y3QgbWFwbGVfbm9kZSAqbm9kZSA9IG10ZV90b19ub2RlKGVub2RlKTsNCisJc3RydWN0IG1h
cGxlX2Vub2RlICpzdGFydDsNCisJc3RydWN0IG1hcGxlX3RyZWUgbXQ7DQorDQorCU1BX1NUQVRF
KG1hcywgJm10LCAwLCAwKTsNCisNCisJaWYgKG10ZV9pc19sZWFmKGVub2RlKSkNCisJCWdvdG8g
ZnJlZV9sZWFmOw0KKw0KKwltdF9pbml0X2ZsYWdzKCZtdCwgbWFfZmxhZ3MpOw0KKwltYXNfbG9j
aygmbWFzKTsNCisNCisJbWFzLm5vZGUgPSBzdGFydCA9IGVub2RlOw0KKwlzbG90cyA9IG1hc19k
ZXN0cm95X2Rlc2NlbmQoJm1hcywgc3RhcnQsIDApOw0KKwlub2RlID0gbWFzX21uKCZtYXMpOw0K
KwlkbyB7DQorCQllbnVtIG1hcGxlX3R5cGUgdHlwZTsNCisJCXVuc2lnbmVkIGNoYXIgb2Zmc2V0
Ow0KKwkJc3RydWN0IG1hcGxlX2Vub2RlICpwYXJlbnQsICp0bXA7DQorDQorCQlub2RlLT5zbG90
X2xlbiA9IG1hc19kZWFkX2xlYXZlcygmbWFzLCBzbG90cyk7DQorCQlpZiAoZnJlZSkNCisJCQlt
dF9mcmVlX2J1bGsobm9kZS0+c2xvdF9sZW4sIHNsb3RzKTsNCisJCW9mZnNldCA9IG5vZGUtPnBh
cmVudF9zbG90ICsgMTsNCisJCW1hcy5ub2RlID0gbm9kZS0+cGl2X3BhcmVudDsNCisJCWlmICht
YXNfbW4oJm1hcykgPT0gbm9kZSkNCisJCQlnb3RvIHN0YXJ0X3Nsb3RzX2ZyZWU7DQorDQorCQl0
eXBlID0gbXRlX25vZGVfdHlwZShtYXMubm9kZSk7DQorCQlzbG90cyA9IG1hX3Nsb3RzKG10ZV90
b19ub2RlKG1hcy5ub2RlKSwgdHlwZSk7DQorCQlpZiAob2Zmc2V0ID49IG10X3Nsb3RzW3R5cGVd
KQ0KKwkJCWdvdG8gbmV4dDsNCisNCisJCXRtcCA9IG1hc19zbG90X2xvY2tlZCgmbWFzLCBzbG90
cywgb2Zmc2V0KTsNCisJCWlmIChtdGVfbm9kZV90eXBlKHRtcCkgJiYgbXRlX3RvX25vZGUodG1w
KSkgew0KKwkJCXBhcmVudCA9IG1hcy5ub2RlOw0KKwkJCW1hcy5ub2RlID0gdG1wOw0KKwkJCXNs
b3RzID0gbWFzX2Rlc3Ryb3lfZGVzY2VuZCgmbWFzLCBwYXJlbnQsIG9mZnNldCk7DQorCQl9DQor
bmV4dDoNCisJCW5vZGUgPSBtYXNfbW4oJm1hcyk7DQorCX0gd2hpbGUgKHN0YXJ0ICE9IG1hcy5u
b2RlKTsNCisNCisJbm9kZSA9IG1hc19tbigmbWFzKTsNCisJbm9kZS0+c2xvdF9sZW4gPSBtYXNf
ZGVhZF9sZWF2ZXMoJm1hcywgc2xvdHMpOw0KKwlpZiAoZnJlZSkNCisJCW10X2ZyZWVfYnVsayhu
b2RlLT5zbG90X2xlbiwgc2xvdHMpOw0KKw0KK3N0YXJ0X3Nsb3RzX2ZyZWU6DQorCW1hc191bmxv
Y2soJm1hcyk7DQorDQorZnJlZV9sZWFmOg0KKwlpZiAoZnJlZSkNCisJCW10X2ZyZWVfcmN1KCZu
b2RlLT5yY3UpOw0KK30NCisNCisvKg0KKyAqIG10ZV9kZXN0cm95X3dhbGsoKSAtIEZyZWUgYSB0
cmVlIG9yIHN1Yi10cmVlLg0KKyAqIEBlbm9kZSAtIHRoZSBlbmNvZGVkIG1hcGxlIG5vZGUgKG1h
cGxlX2Vub2RlKSB0byBzdGFydA0KKyAqIEBtbiAtIHRoZSB0cmVlIHRvIGZyZWUgLSBuZWVkZWQg
Zm9yIG5vZGUgdHlwZXMuDQorICoNCisgKiBNdXN0IGhvbGQgdGhlIHdyaXRlIGxvY2suDQorICov
DQorc3RhdGljIGlubGluZSB2b2lkIG10ZV9kZXN0cm95X3dhbGsoc3RydWN0IG1hcGxlX2Vub2Rl
ICplbm9kZSwNCisJCQkJICAgIHN0cnVjdCBtYXBsZV90cmVlICptdCkNCit7DQorCXN0cnVjdCBt
YXBsZV9ub2RlICpub2RlID0gbXRlX3RvX25vZGUoZW5vZGUpOw0KKw0KKwlpZiAobXRfaW5fcmN1
KG10KSkgew0KKwkJbXRfZGVzdHJveV93YWxrKGVub2RlLCBtdC0+bWFfZmxhZ3MsIGZhbHNlKTsN
CisJCWNhbGxfcmN1KCZub2RlLT5yY3UsIG10X2ZyZWVfd2Fsayk7DQorCX0gZWxzZSB7DQorCQlt
dF9kZXN0cm95X3dhbGsoZW5vZGUsIG10LT5tYV9mbGFncywgdHJ1ZSk7DQorCX0NCit9DQorDQor
c3RhdGljIHZvaWQgbWFzX3dyX3N0b3JlX3NldHVwKHN0cnVjdCBtYV93cl9zdGF0ZSAqd3JfbWFz
KQ0KK3sNCisJaWYgKCFtYXNfaXNfc3RhcnQod3JfbWFzLT5tYXMpKSB7DQorCQlpZiAobWFzX2lz
X25vbmUod3JfbWFzLT5tYXMpKSB7DQorCQkJbWFzX3Jlc2V0KHdyX21hcy0+bWFzKTsNCisJCX0g
ZWxzZSB7DQorCQkJd3JfbWFzLT5yX21heCA9IHdyX21hcy0+bWFzLT5tYXg7DQorCQkJd3JfbWFz
LT50eXBlID0gbXRlX25vZGVfdHlwZSh3cl9tYXMtPm1hcy0+bm9kZSk7DQorCQkJaWYgKG1hc19p
c19zcGFuX3dyKHdyX21hcykpDQorCQkJCW1hc19yZXNldCh3cl9tYXMtPm1hcyk7DQorCQl9DQor
CX0NCisNCit9DQorDQorLyogSW50ZXJmYWNlICovDQorDQorLyoqDQorICogbWFzX3N0b3JlKCkg
LSBTdG9yZSBhbiBAZW50cnkuDQorICogQG1hczogVGhlIG1hcGxlIHN0YXRlLg0KKyAqIEBlbnRy
eTogVGhlIGVudHJ5IHRvIHN0b3JlLg0KKyAqDQorICogVGhlIEBtYXMtPmluZGV4IGFuZCBAbWFz
LT5sYXN0IGlzIHVzZWQgdG8gc2V0IHRoZSByYW5nZSBmb3IgdGhlIEBlbnRyeS4NCisgKiBOb3Rl
OiBUaGUgQG1hcyBzaG91bGQgaGF2ZSBwcmUtYWxsb2NhdGVkIGVudHJpZXMgdG8gZW5zdXJlIHRo
ZXJlIGlzIG1lbW9yeSB0bw0KKyAqIHN0b3JlIHRoZSBlbnRyeS4gIFBsZWFzZSBzZWUgbWFzX2V4
cGVjdGVkX2VudHJpZXMoKS9tYXNfZGVzdHJveSgpIGZvciBtb3JlIGRldGFpbHMuDQorICoNCisg
KiBSZXR1cm46IHRoZSBmaXJzdCBlbnRyeSBiZXR3ZWVuIG1hcy0+aW5kZXggYW5kIG1hcy0+bGFz
dCBvciAlTlVMTC4NCisgKi8NCit2b2lkICptYXNfc3RvcmUoc3RydWN0IG1hX3N0YXRlICptYXMs
IHZvaWQgKmVudHJ5KQ0KK3sNCisJTUFfV1JfU1RBVEUod3JfbWFzLCBtYXMsIGVudHJ5KTsNCisN
CisJdHJhY2VfbWFfd3JpdGUoX19mdW5jX18sIG1hcywgMCwgZW50cnkpOw0KKyNpZmRlZiBDT05G
SUdfREVCVUdfTUFQTEVfVFJFRQ0KKwlpZiAobWFzLT5pbmRleCA+IG1hcy0+bGFzdCkNCisJCXBy
X2VycigiRXJyb3IgJWx1ID4gJWx1ICVwXG4iLCBtYXMtPmluZGV4LCBtYXMtPmxhc3QsIGVudHJ5
KTsNCisJTVRfQlVHX09OKG1hcy0+dHJlZSwgbWFzLT5pbmRleCA+IG1hcy0+bGFzdCk7DQorCWlm
IChtYXMtPmluZGV4ID4gbWFzLT5sYXN0KSB7DQorCQltYXNfc2V0X2VycihtYXMsIC1FSU5WQUwp
Ow0KKwkJcmV0dXJuIE5VTEw7DQorCX0NCisNCisjZW5kaWYNCisNCisJLyoNCisJICogU3Rvcmlu
ZyBpcyB0aGUgc2FtZSBvcGVyYXRpb24gYXMgaW5zZXJ0IHdpdGggdGhlIGFkZGVkIGNhdmVhdCB0
aGF0IGl0DQorCSAqIGNhbiBvdmVyd3JpdGUgZW50cmllcy4gIEFsdGhvdWdoIHRoaXMgc2VlbXMg
c2ltcGxlIGVub3VnaCwgb25lIG1heQ0KKwkgKiB3YW50IHRvIGV4YW1pbmUgd2hhdCBoYXBwZW5z
IGlmIGEgc2luZ2xlIHN0b3JlIG9wZXJhdGlvbiB3YXMgdG8NCisJICogb3ZlcndyaXRlIG11bHRp
cGxlIGVudHJpZXMgd2l0aGluIGEgc2VsZi1iYWxhbmNpbmcgQi1UcmVlLg0KKwkgKi8NCisJbWFz
X3dyX3N0b3JlX3NldHVwKCZ3cl9tYXMpOw0KKwltYXNfd3Jfc3RvcmVfZW50cnkoJndyX21hcyk7
DQorCXJldHVybiB3cl9tYXMuY29udGVudDsNCit9DQorDQorLyoqDQorICogbWFzX3N0b3JlX2dm
cCgpIC0gU3RvcmUgYSB2YWx1ZSBpbnRvIHRoZSB0cmVlLg0KKyAqIEBtYXM6IFRoZSBtYXBsZSBz
dGF0ZQ0KKyAqIEBlbnRyeTogVGhlIGVudHJ5IHRvIHN0b3JlDQorICogQGdmcDogVGhlIEdGUF9G
TEFHUyB0byB1c2UgZm9yIGFsbG9jYXRpb25zIGlmIG5lY2Vzc2FyeS4NCisgKg0KKyAqIFJldHVy
bjogMCBvbiBzdWNjZXNzLCAtRUlOVkFMIG9uIGludmFsaWQgcmVxdWVzdCwgLUVOT01FTSBpZiBt
ZW1vcnkgY291bGQgbm90DQorICogYmUgYWxsb2NhdGVkLg0KKyAqLw0KK2ludCBtYXNfc3RvcmVf
Z2ZwKHN0cnVjdCBtYV9zdGF0ZSAqbWFzLCB2b2lkICplbnRyeSwgZ2ZwX3QgZ2ZwKQ0KK3sNCisJ
TUFfV1JfU1RBVEUod3JfbWFzLCBtYXMsIGVudHJ5KTsNCisNCisJbWFzX3dyX3N0b3JlX3NldHVw
KCZ3cl9tYXMpOw0KKwl0cmFjZV9tYV93cml0ZShfX2Z1bmNfXywgbWFzLCAwLCBlbnRyeSk7DQor
cmV0cnk6DQorCW1hc193cl9zdG9yZV9lbnRyeSgmd3JfbWFzKTsNCisJaWYgKHVubGlrZWx5KG1h
c19ub21lbShtYXMsIGdmcCkpKQ0KKwkJZ290byByZXRyeTsNCisNCisJaWYgKHVubGlrZWx5KG1h
c19pc19lcnIobWFzKSkpDQorCQlyZXR1cm4geGFfZXJyKG1hcy0+bm9kZSk7DQorDQorCXJldHVy
biAwOw0KK30NCisNCisvKioNCisgKiBtYXNfc3RvcmVfcHJlYWxsb2MoKSAtIFN0b3JlIGEgdmFs
dWUgaW50byB0aGUgdHJlZSB1c2luZyBtZW1vcnkNCisgKiBwcmVhbGxvY2F0ZWQgaW4gdGhlIG1h
cGxlIHN0YXRlLg0KKyAqIEBtYXM6IFRoZSBtYXBsZSBzdGF0ZQ0KKyAqIEBlbnRyeTogVGhlIGVu
dHJ5IHRvIHN0b3JlLg0KKyAqLw0KK3ZvaWQgbWFzX3N0b3JlX3ByZWFsbG9jKHN0cnVjdCBtYV9z
dGF0ZSAqbWFzLCB2b2lkICplbnRyeSkNCit7DQorCU1BX1dSX1NUQVRFKHdyX21hcywgbWFzLCBl
bnRyeSk7DQorDQorCW1hc193cl9zdG9yZV9zZXR1cCgmd3JfbWFzKTsNCisJdHJhY2VfbWFfd3Jp
dGUoX19mdW5jX18sIG1hcywgMCwgZW50cnkpOw0KKwltYXNfd3Jfc3RvcmVfZW50cnkoJndyX21h
cyk7DQorCUJVR19PTihtYXNfaXNfZXJyKG1hcykpOw0KKwltYXNfZGVzdHJveShtYXMpOw0KK30N
CisNCisvKioNCisgKiBtYXNfcHJlYWxsb2NhdGUoKSAtIFByZWFsbG9jYXRlIGVub3VnaCBub2Rl
cyBmb3IgYSBzdG9yZSBvcGVyYXRpb24NCisgKiBAbWFzOiBUaGUgbWFwbGUgc3RhdGUNCisgKiBA
ZW50cnk6IFRoZSBlbnRyeSB0aGF0IHdpbGwgYmUgc3RvcmVkDQorICogQGdmcDogVGhlIEdGUF9G
TEFHUyB0byB1c2UgZm9yIGFsbG9jYXRpb25zLg0KKyAqDQorICogUmV0dXJuOiAwIG9uIHN1Y2Nl
c3MsIC1FTk9NRU0gaWYgbWVtb3J5IGNvdWxkIG5vdCBiZSBhbGxvY2F0ZWQuDQorICovDQoraW50
IG1hc19wcmVhbGxvY2F0ZShzdHJ1Y3QgbWFfc3RhdGUgKm1hcywgdm9pZCAqZW50cnksIGdmcF90
IGdmcCkNCit7DQorCWludCByZXQ7DQorDQorCW1hc19ub2RlX2NvdW50X2dmcChtYXMsIDEgKyBt
YXNfbXRfaGVpZ2h0KG1hcykgKiAzLCBnZnApOw0KKwlpZiAobGlrZWx5KCFtYXNfaXNfZXJyKG1h
cykpKQ0KKwkJcmV0dXJuIDA7DQorDQorCW1hc19zZXRfYWxsb2NfcmVxKG1hcywgMCk7DQorCXJl
dCA9IHhhX2VycihtYXMtPm5vZGUpOw0KKwltYXNfcmVzZXQobWFzKTsNCisJbWFzX2Rlc3Ryb3ko
bWFzKTsNCisJbWFzX3Jlc2V0KG1hcyk7DQorCXJldHVybiByZXQ7DQorfQ0KKw0KKy8qDQorICog
bWFzX2V4cGVjdGVkX2VudHJpZXMoKSAtIFNldCB0aGUgZXhwZWN0ZWQgbnVtYmVyIG9mIGVudHJp
ZXMgdGhhdCB3aWxsIGJlIGluc2VydGVkLg0KKyAqIEBtYXM6IFRoZSBtYXBsZSBzdGF0ZQ0KKyAq
IEBucl9lbnRyaWVzOiBUaGUgbnVtYmVyIG9mIGV4cGVjdGVkIGVudHJpZXMuDQorICoNCisgKiBU
aGlzIHdpbGwgYXR0ZW1wdCB0byBwcmUtYWxsb2NhdGUgZW5vdWdoIG5vZGVzIHRvIHN0b3JlIHRo
ZSBleHBlY3RlZCBudW1iZXINCisgKiBvZiBlbnRyaWVzLiAgVGhlIGFsbG9jYXRpb25zIHdpbGwg
b2NjdXIgdXNpbmcgdGhlIGJ1bGsgYWxsb2NhdG9yIGludGVyZmFjZQ0KKyAqIGZvciBzcGVlZC4g
IFBsZWFzZSBjYWxsIG1hc19kZXN0cm95KCkgb24gdGhlIEBtYXMgYWZ0ZXIgaW5zZXJ0aW5nIHRo
ZSBlbnRyaWVzDQorICogdG8gZW5zdXJlIGFueSB1bnVzZWQgbm9kZXMgYXJlIGZyZWVkLg0KKyAq
DQorICogUmV0dXJuOiAwIG9uIHN1Y2Nlc3MsIC1FTk9NRU0gaWYgbWVtb3J5IGNvdWxkIG5vdCBi
ZSBhbGxvY2F0ZWQuDQorICovDQoraW50IG1hc19leHBlY3RlZF9lbnRyaWVzKHN0cnVjdCBtYV9z
dGF0ZSAqbWFzLCB1bnNpZ25lZCBsb25nIG5yX2VudHJpZXMpDQorew0KKwlpbnQgbm9ubGVhZl9j
YXAgPSBNQVBMRV9BUkFOR0U2NF9TTE9UUyAtIDI7DQorCXN0cnVjdCBtYXBsZV9lbm9kZSAqZW5v
ZGUgPSBtYXMtPm5vZGU7DQorCWludCBucl9ub2RlczsNCisJaW50IHJldDsNCisNCisJLyoNCisJ
ICogU29tZXRpbWVzIGl0IGlzIG5lY2Vzc2FyeSB0byBkdXBsaWNhdGUgYSB0cmVlIHRvIGEgbmV3
IHRyZWUsIHN1Y2ggYXMNCisJICogZm9ya2luZyBhIHByb2Nlc3MgYW5kIGR1cGxpY2F0aW5nIHRo
ZSBWTUFzIGZyb20gb25lIHRyZWUgdG8gYSBuZXcNCisJICogdHJlZS4gIFdoZW4gc3VjaCBhIHNp
dHVhdGlvbiBhcmlzZXMsIGl0IGlzIGtub3duIHRoYXQgdGhlIG5ldyB0cmVlIGlzDQorCSAqIG5v
dCBnb2luZyB0byBiZSB1c2VkIHVudGlsIHRoZSBlbnRpcmUgdHJlZSBpcyBwb3B1bGF0ZWQuICBG
b3INCisJICogcGVyZm9ybWFuY2UgcmVhc29ucywgaXQgaXMgYmVzdCB0byB1c2UgYSBidWxrIGxv
YWQgd2l0aCBSQ1UgZGlzYWJsZWQuDQorCSAqIFRoaXMgYWxsb3dzIGZvciBvcHRpbWlzdGljIHNw
bGl0dGluZyB0aGF0IGZhdm91cnMgdGhlIGxlZnQgYW5kIHJldXNlDQorCSAqIG9mIG5vZGVzIGR1
cmluZyB0aGUgb3BlcmF0aW9uLg0KKwkgKi8NCisNCisJLyogT3B0aW1pemUgc3BsaXR0aW5nIGZv
ciBidWxrIGluc2VydCBpbi1vcmRlciAqLw0KKwltYXMtPm1hc19mbGFncyB8PSBNQV9TVEFURV9C
VUxLOw0KKw0KKwkvKg0KKwkgKiBBdm9pZCBvdmVyZmxvdywgYXNzdW1lIGEgZ2FwIGJldHdlZW4g
ZWFjaCBlbnRyeSBhbmQgYSB0cmFpbGluZyBudWxsLg0KKwkgKiBJZiB0aGlzIGlzIHdyb25nLCBp
dCBqdXN0IG1lYW5zIGFsbG9jYXRpb24gY2FuIGhhcHBlbiBkdXJpbmcNCisJICogaW5zZXJ0aW9u
IG9mIGVudHJpZXMuDQorCSAqLw0KKwlucl9ub2RlcyA9IG1heChucl9lbnRyaWVzLCBucl9lbnRy
aWVzICogMiArIDEpOw0KKw0KKwlpZiAoIW10X2lzX2FsbG9jKG1hcy0+dHJlZSkpDQorCQlub25s
ZWFmX2NhcCA9IE1BUExFX1JBTkdFNjRfU0xPVFMgLSAyOw0KKw0KKwkvKiBMZWF2ZXMgKi8NCisJ
bnJfbm9kZXMgPSBESVZfUk9VTkRfVVAobnJfbm9kZXMsIE1BUExFX1JBTkdFNjRfU0xPVFMgLSAx
KTsNCisJLyogSW50ZXJuYWwgbm9kZXMgKi8NCisJbnJfbm9kZXMgKz0gRElWX1JPVU5EX1VQKG5y
X25vZGVzLCBub25sZWFmX2NhcCk7DQorCW1hc19ub2RlX2NvdW50KG1hcywgbnJfbm9kZXMpOw0K
Kw0KKwlpZiAoIW1hc19pc19lcnIobWFzKSkNCisJCXJldHVybiAwOw0KKw0KKwlyZXQgPSB4YV9l
cnIobWFzLT5ub2RlKTsNCisJbWFzLT5ub2RlID0gZW5vZGU7DQorCXJldHVybiByZXQ7DQorDQor
fQ0KKw0KKy8qDQorICogbWFzX2Rlc3Ryb3koKSAtIGRlc3Ryb3kgYSBtYXBsZSBzdGF0ZS4NCisg
KiBAbWFzOiBUaGUgbWFwbGUgc3RhdGUNCisgKg0KKyAqIFVwb24gY29tcGxldGlvbiwgY2hlY2sg
dGhlIGxlZnQtbW9zdCBub2RlIGFuZCByZWJhbGFuY2UgYWdhaW5zdCB0aGUgbm9kZSB0bw0KKyAq
IHRoZSByaWdodCBpZiBuZWNlc3NhcnkuICBGcmVlcyBhbnkgYWxsb2NhdGVkIG5vZGVzIGFzc29j
aWF0ZWQgd2l0aCB0aGlzIG1hcGxlDQorICogc3RhdGUuDQorICovDQordm9pZCBtYXNfZGVzdHJv
eShzdHJ1Y3QgbWFfc3RhdGUgKm1hcykNCit7DQorCXN0cnVjdCBtYXBsZV9hbGxvYyAqbm9kZTsN
CisNCisJLyoNCisJICogV2hlbiB1c2luZyBtYXNfZm9yX2VhY2goKSB0byBpbnNlcnQgYW4gZXhw
ZWN0ZWQgbnVtYmVyIG9mIGVsZW1lbnRzLA0KKwkgKiBpdCBpcyBwb3NzaWJsZSB0aGF0IHRoZSBu
dW1iZXIgaW5zZXJ0ZWQgaXMgbGVzcyB0aGFuIHRoZSBleHBlY3RlZA0KKwkgKiBudW1iZXIuICBU
byBmaXggYW4gaW52YWxpZCBmaW5hbCBub2RlLCBhIGNoZWNrIGlzIHBlcmZvcm1lZCBoZXJlIHRv
DQorCSAqIHJlYmFsYW5jZSB0aGUgcHJldmlvdXMgbm9kZSB3aXRoIHRoZSBmaW5hbCBub2RlLg0K
KwkgKi8NCisJaWYgKG1hcy0+bWFzX2ZsYWdzICYgTUFfU1RBVEVfUkVCQUxBTkNFKSB7DQorCQl1
bnNpZ25lZCBjaGFyIGVuZDsNCisNCisJCWlmIChtYXNfaXNfc3RhcnQobWFzKSkNCisJCQltYXNf
c3RhcnQobWFzKTsNCisNCisJCW10cmVlX3JhbmdlX3dhbGsobWFzKTsNCisJCWVuZCA9IG1hc19k
YXRhX2VuZChtYXMpICsgMTsNCisJCWlmIChlbmQgPCBtdF9taW5fc2xvdF9jb3VudChtYXMtPm5v
ZGUpIC0gMSkNCisJCQltYXNfZGVzdHJveV9yZWJhbGFuY2UobWFzLCBlbmQpOw0KKw0KKwkJbWFz
LT5tYXNfZmxhZ3MgJj0gfk1BX1NUQVRFX1JFQkFMQU5DRTsNCisJfQ0KKwltYXMtPm1hc19mbGFn
cyAmPSB+TUFfU1RBVEVfQlVMSzsNCisNCisJd2hpbGUgKG1hcy0+YWxsb2MgJiYgISgodW5zaWdu
ZWQgbG9uZyltYXMtPmFsbG9jICYgMHgxKSkgew0KKwkJbm9kZSA9IG1hcy0+YWxsb2M7DQorCQlt
YXMtPmFsbG9jID0gbm9kZS0+c2xvdFswXTsNCisJCWlmIChub2RlLT5ub2RlX2NvdW50ID4gMCkN
CisJCQltdF9mcmVlX2J1bGsobm9kZS0+bm9kZV9jb3VudCwNCisJCQkJICAgICAodm9pZCBfX3Jj
dSAqKikmbm9kZS0+c2xvdFsxXSk7DQorCQlrbWVtX2NhY2hlX2ZyZWUobWFwbGVfbm9kZV9jYWNo
ZSwgbm9kZSk7DQorCX0NCisJbWFzLT5hbGxvYyA9IE5VTEw7DQorfQ0KKw0KKy8qKg0KKyAqIG1h
c19uZXh0KCkgLSBHZXQgdGhlIG5leHQgZW50cnkuDQorICogQG1hczogVGhlIG1hcGxlIHN0YXRl
DQorICogQG1heDogVGhlIG1heGltdW0gaW5kZXggdG8gY2hlY2suDQorICoNCisgKiBSZXR1cm5z
IHRoZSBuZXh0IGVudHJ5IGFmdGVyIEBtYXMtPmluZGV4Lg0KKyAqIE11c3QgaG9sZCByY3VfcmVh
ZF9sb2NrIG9yIHRoZSB3cml0ZSBsb2NrLg0KKyAqIENhbiByZXR1cm4gdGhlIHplcm8gZW50cnku
DQorICoNCisgKiBSZXR1cm46IFRoZSBuZXh0IGVudHJ5IG9yICVOVUxMDQorICovDQordm9pZCAq
bWFzX25leHQoc3RydWN0IG1hX3N0YXRlICptYXMsIHVuc2lnbmVkIGxvbmcgbWF4KQ0KK3sNCisJ
aWYgKG1hc19pc19ub25lKG1hcykgfHwgbWFzX2lzX3BhdXNlZChtYXMpKQ0KKwkJbWFzLT5ub2Rl
ID0gTUFTX1NUQVJUOw0KKw0KKwlpZiAobWFzX2lzX3N0YXJ0KG1hcykpDQorCQltYXNfd2Fsayht
YXMpOyAvKiBSZXRyaWVzIG9uIGRlYWQgbm9kZXMgaGFuZGxlZCBieSBtYXNfd2FsayAqLw0KKw0K
KwlpZiAobWFzX2lzX3B0cihtYXMpKSB7DQorCQlpZiAoIW1hcy0+aW5kZXgpIHsNCisJCQltYXMt
PmluZGV4ID0gMTsNCisJCQltYXMtPmxhc3QgPSBVTE9OR19NQVg7DQorCQl9DQorCQlyZXR1cm4g
TlVMTDsNCisJfQ0KKw0KKwlpZiAobWFzLT5sYXN0ID09IFVMT05HX01BWCkNCisJCXJldHVybiBO
VUxMOw0KKw0KKwkvKiBSZXRyaWVzIG9uIGRlYWQgbm9kZXMgaGFuZGxlZCBieSBtYXNfbmV4dF9l
bnRyeSAqLw0KKwlyZXR1cm4gbWFzX25leHRfZW50cnkobWFzLCBtYXgpOw0KK30NCitFWFBPUlRf
U1lNQk9MX0dQTChtYXNfbmV4dCk7DQorDQorLyoqDQorICogbXRfbmV4dCgpIC0gZ2V0IHRoZSBu
ZXh0IHZhbHVlIGluIHRoZSBtYXBsZSB0cmVlDQorICogQG10OiBUaGUgbWFwbGUgdHJlZQ0KKyAq
IEBpbmRleDogVGhlIHN0YXJ0IGluZGV4DQorICogQG1heDogVGhlIG1heGltdW0gaW5kZXggdG8g
Y2hlY2sNCisgKg0KKyAqIFJldHVybjogVGhlIGVudHJ5IGF0IEBpbmRleCBvciBoaWdoZXIsIG9y
ICVOVUxMIGlmIG5vdGhpbmcgaXMgZm91bmQuDQorICovDQordm9pZCAqbXRfbmV4dChzdHJ1Y3Qg
bWFwbGVfdHJlZSAqbXQsIHVuc2lnbmVkIGxvbmcgaW5kZXgsIHVuc2lnbmVkIGxvbmcgbWF4KQ0K
K3sNCisJdm9pZCAqZW50cnkgPSBOVUxMOw0KKwlNQV9TVEFURShtYXMsIG10LCBpbmRleCwgaW5k
ZXgpOw0KKw0KKwlyY3VfcmVhZF9sb2NrKCk7DQorCWVudHJ5ID0gbWFzX25leHQoJm1hcywgbWF4
KTsNCisJcmN1X3JlYWRfdW5sb2NrKCk7DQorCXJldHVybiBlbnRyeTsNCit9DQorRVhQT1JUX1NZ
TUJPTF9HUEwobXRfbmV4dCk7DQorDQorLyoqDQorICogbWFzX3ByZXYoKSAtIEdldCB0aGUgcHJl
dmlvdXMgZW50cnkNCisgKiBAbWFzOiBUaGUgbWFwbGUgc3RhdGUNCisgKiBAbWluOiBUaGUgbWlu
aW11bSB2YWx1ZSB0byBjaGVjay4NCisgKg0KKyAqIE11c3QgaG9sZCByY3VfcmVhZF9sb2NrIG9y
IHRoZSB3cml0ZSBsb2NrLg0KKyAqIFdpbGwgcmVzZXQgbWFzIHRvIE1BU19TVEFSVCBpZiB0aGUg
bm9kZSBpcyBNQVNfTk9ORS4gIFdpbGwgc3RvcCBvbiBub3QNCisgKiBzZWFyY2hhYmxlIG5vZGVz
Lg0KKyAqDQorICogUmV0dXJuOiB0aGUgcHJldmlvdXMgdmFsdWUgb3IgJU5VTEwuDQorICovDQor
dm9pZCAqbWFzX3ByZXYoc3RydWN0IG1hX3N0YXRlICptYXMsIHVuc2lnbmVkIGxvbmcgbWluKQ0K
K3sNCisJaWYgKCFtYXMtPmluZGV4KSB7DQorCQkvKiBOb3RoaW5nIGNvbWVzIGJlZm9yZSAwICov
DQorCQltYXMtPmxhc3QgPSAwOw0KKwkJcmV0dXJuIE5VTEw7DQorCX0NCisNCisJaWYgKHVubGlr
ZWx5KG1hc19pc19wdHIobWFzKSkpDQorCQlyZXR1cm4gTlVMTDsNCisNCisJaWYgKG1hc19pc19u
b25lKG1hcykgfHwgbWFzX2lzX3BhdXNlZChtYXMpKQ0KKwkJbWFzLT5ub2RlID0gTUFTX1NUQVJU
Ow0KKw0KKwlpZiAobWFzX2lzX3N0YXJ0KG1hcykpIHsNCisJCW1hc193YWxrKG1hcyk7DQorCQlp
ZiAoIW1hcy0+aW5kZXgpDQorCQkJcmV0dXJuIE5VTEw7DQorCX0NCisNCisJaWYgKG1hc19pc19w
dHIobWFzKSkgew0KKwkJaWYgKCFtYXMtPmluZGV4KSB7DQorCQkJbWFzLT5sYXN0ID0gMDsNCisJ
CQlyZXR1cm4gTlVMTDsNCisJCX0NCisNCisJCW1hcy0+aW5kZXggPSBtYXMtPmxhc3QgPSAwOw0K
KwkJcmV0dXJuIG1hc19yb290X2xvY2tlZChtYXMpOw0KKwl9DQorCXJldHVybiBtYXNfcHJldl9l
bnRyeShtYXMsIG1pbik7DQorfQ0KK0VYUE9SVF9TWU1CT0xfR1BMKG1hc19wcmV2KTsNCisNCisv
KioNCisgKiBtdF9wcmV2KCkgLSBnZXQgdGhlIHByZXZpb3VzIHZhbHVlIGluIHRoZSBtYXBsZSB0
cmVlDQorICogQG10OiBUaGUgbWFwbGUgdHJlZQ0KKyAqIEBpbmRleDogVGhlIHN0YXJ0IGluZGV4
DQorICogQG1pbjogVGhlIG1pbmltdW0gaW5kZXggdG8gY2hlY2sNCisgKg0KKyAqIFJldHVybjog
VGhlIGVudHJ5IGF0IEBpbmRleCBvciBsb3dlciwgb3IgJU5VTEwgaWYgbm90aGluZyBpcyBmb3Vu
ZC4NCisgKi8NCit2b2lkICptdF9wcmV2KHN0cnVjdCBtYXBsZV90cmVlICptdCwgdW5zaWduZWQg
bG9uZyBpbmRleCwgdW5zaWduZWQgbG9uZyBtaW4pDQorew0KKwl2b2lkICplbnRyeSA9IE5VTEw7
DQorCU1BX1NUQVRFKG1hcywgbXQsIGluZGV4LCBpbmRleCk7DQorDQorCXJjdV9yZWFkX2xvY2so
KTsNCisJZW50cnkgPSBtYXNfcHJldigmbWFzLCBtaW4pOw0KKwlyY3VfcmVhZF91bmxvY2soKTsN
CisJcmV0dXJuIGVudHJ5Ow0KK30NCitFWFBPUlRfU1lNQk9MX0dQTChtdF9wcmV2KTsNCisNCisv
KioNCisgKiBtYXNfcGF1c2UoKSAtIFBhdXNlIGEgbWFzX2ZpbmQvbWFzX2Zvcl9lYWNoIHRvIGRy
b3AgdGhlIGxvY2suDQorICogQG1hczogVGhlIG1hcGxlIHN0YXRlIHRvIHBhdXNlDQorICoNCisg
KiBTb21lIHVzZXJzIG5lZWQgdG8gcGF1c2UgYSB3YWxrIGFuZCBkcm9wIHRoZSBsb2NrIHRoZXkn
cmUgaG9sZGluZyBpbg0KKyAqIG9yZGVyIHRvIHlpZWxkIHRvIGEgaGlnaGVyIHByaW9yaXR5IHRo
cmVhZCBvciBjYXJyeSBvdXQgYW4gb3BlcmF0aW9uDQorICogb24gYW4gZW50cnkuICBUaG9zZSB1
c2VycyBzaG91bGQgY2FsbCB0aGlzIGZ1bmN0aW9uIGJlZm9yZSB0aGV5IGRyb3ANCisgKiB0aGUg
bG9jay4gIEl0IHJlc2V0cyB0aGUgQG1hcyB0byBiZSBzdWl0YWJsZSBmb3IgdGhlIG5leHQgaXRl
cmF0aW9uDQorICogb2YgdGhlIGxvb3AgYWZ0ZXIgdGhlIHVzZXIgaGFzIHJlYWNxdWlyZWQgdGhl
IGxvY2suICBJZiBtb3N0IGVudHJpZXMNCisgKiBmb3VuZCBkdXJpbmcgYSB3YWxrIHJlcXVpcmUg
eW91IHRvIGNhbGwgbWFzX3BhdXNlKCksIHRoZSBtdF9mb3JfZWFjaCgpDQorICogaXRlcmF0b3Ig
bWF5IGJlIG1vcmUgYXBwcm9wcmlhdGUuDQorICoNCisgKi8NCit2b2lkIG1hc19wYXVzZShzdHJ1
Y3QgbWFfc3RhdGUgKm1hcykNCit7DQorCW1hcy0+bm9kZSA9IE1BU19QQVVTRTsNCit9DQorRVhQ
T1JUX1NZTUJPTF9HUEwobWFzX3BhdXNlKTsNCisNCisvKioNCisgKiBtYXNfZmluZCgpIC0gT24g
dGhlIGZpcnN0IGNhbGwsIGZpbmQgdGhlIGVudHJ5IGF0IG9yIGFmdGVyIG1hcy0+aW5kZXggdXAg
dG8NCisgKiAlbWF4LiAgT3RoZXJ3aXNlLCBmaW5kIHRoZSBlbnRyeSBhZnRlciBtYXMtPmluZGV4
Lg0KKyAqIEBtYXM6IFRoZSBtYXBsZSBzdGF0ZQ0KKyAqIEBtYXg6IFRoZSBtYXhpbXVtIHZhbHVl
IHRvIGNoZWNrLg0KKyAqDQorICogTXVzdCBob2xkIHJjdV9yZWFkX2xvY2sgb3IgdGhlIHdyaXRl
IGxvY2suDQorICogSWYgYW4gZW50cnkgZXhpc3RzLCBsYXN0IGFuZCBpbmRleCBhcmUgdXBkYXRl
ZCBhY2NvcmRpbmdseS4NCisgKiBNYXkgc2V0IEBtYXMtPm5vZGUgdG8gTUFTX05PTkUuDQorICoN
CisgKiBSZXR1cm46IFRoZSBlbnRyeSBvciAlTlVMTC4NCisgKi8NCit2b2lkICptYXNfZmluZChz
dHJ1Y3QgbWFfc3RhdGUgKm1hcywgdW5zaWduZWQgbG9uZyBtYXgpDQorew0KKwlpZiAodW5saWtl
bHkobWFzX2lzX3BhdXNlZChtYXMpKSkgew0KKwkJaWYgKHVubGlrZWx5KG1hcy0+bGFzdCA9PSBV
TE9OR19NQVgpKSB7DQorCQkJbWFzLT5ub2RlID0gTUFTX05PTkU7DQorCQkJcmV0dXJuIE5VTEw7
DQorCQl9DQorCQltYXMtPm5vZGUgPSBNQVNfU1RBUlQ7DQorCQltYXMtPmluZGV4ID0gKyttYXMt
Pmxhc3Q7DQorCX0NCisNCisJaWYgKHVubGlrZWx5KG1hc19pc19zdGFydChtYXMpKSkgew0KKwkJ
LyogRmlyc3QgcnVuIG9yIGNvbnRpbnVlICovDQorCQl2b2lkICplbnRyeTsNCisNCisJCWlmICht
YXMtPmluZGV4ID4gbWF4KQ0KKwkJCXJldHVybiBOVUxMOw0KKw0KKwkJZW50cnkgPSBtYXNfd2Fs
ayhtYXMpOw0KKwkJaWYgKGVudHJ5KQ0KKwkJCXJldHVybiBlbnRyeTsNCisJfQ0KKw0KKwlpZiAo
dW5saWtlbHkoIW1hc19zZWFyY2hhYmxlKG1hcykpKQ0KKwkJcmV0dXJuIE5VTEw7DQorDQorCS8q
IFJldHJpZXMgb24gZGVhZCBub2RlcyBoYW5kbGVkIGJ5IG1hc19uZXh0X2VudHJ5ICovDQorCXJl
dHVybiBtYXNfbmV4dF9lbnRyeShtYXMsIG1heCk7DQorfQ0KKw0KKy8qKg0KKyAqIG1hc19maW5k
X3JldjogT24gdGhlIGZpcnN0IGNhbGwsIGZpbmQgdGhlIGZpcnN0IG5vbi1udWxsIGVudHJ5IGF0
IG9yIGJlbG93DQorICogbWFzLT5pbmRleCBkb3duIHRvICVtaW4uICBPdGhlcndpc2UgZmluZCB0
aGUgZmlyc3Qgbm9uLW51bGwgZW50cnkgYmVsb3cNCisgKiBtYXMtPmluZGV4IGRvd24gdG8gJW1p
bi4NCisgKiBAbWFzOiBUaGUgbWFwbGUgc3RhdGUNCisgKiBAbWluOiBUaGUgbWluaW11bSB2YWx1
ZSB0byBjaGVjay4NCisgKg0KKyAqIE11c3QgaG9sZCByY3VfcmVhZF9sb2NrIG9yIHRoZSB3cml0
ZSBsb2NrLg0KKyAqIElmIGFuIGVudHJ5IGV4aXN0cywgbGFzdCBhbmQgaW5kZXggYXJlIHVwZGF0
ZWQgYWNjb3JkaW5nbHkuDQorICogTWF5IHNldCBAbWFzLT5ub2RlIHRvIE1BU19OT05FLg0KKyAq
DQorICogUmV0dXJuOiBUaGUgZW50cnkgb3IgJU5VTEwuDQorICovDQordm9pZCAqbWFzX2ZpbmRf
cmV2KHN0cnVjdCBtYV9zdGF0ZSAqbWFzLCB1bnNpZ25lZCBsb25nIG1pbikNCit7DQorCWlmICh1
bmxpa2VseShtYXNfaXNfcGF1c2VkKG1hcykpKSB7DQorCQlpZiAodW5saWtlbHkobWFzLT5sYXN0
ID09IFVMT05HX01BWCkpIHsNCisJCQltYXMtPm5vZGUgPSBNQVNfTk9ORTsNCisJCQlyZXR1cm4g
TlVMTDsNCisJCX0NCisJCW1hcy0+bm9kZSA9IE1BU19TVEFSVDsNCisJCW1hcy0+bGFzdCA9IC0t
bWFzLT5pbmRleDsNCisJfQ0KKw0KKwlpZiAodW5saWtlbHkobWFzX2lzX3N0YXJ0KG1hcykpKSB7
DQorCQkvKiBGaXJzdCBydW4gb3IgY29udGludWUgKi8NCisJCXZvaWQgKmVudHJ5Ow0KKw0KKwkJ
aWYgKG1hcy0+aW5kZXggPCBtaW4pDQorCQkJcmV0dXJuIE5VTEw7DQorDQorCQllbnRyeSA9IG1h
c193YWxrKG1hcyk7DQorCQlpZiAoZW50cnkpDQorCQkJcmV0dXJuIGVudHJ5Ow0KKwl9DQorDQor
CWlmICh1bmxpa2VseSghbWFzX3NlYXJjaGFibGUobWFzKSkpDQorCQlyZXR1cm4gTlVMTDsNCisN
CisJaWYgKG1hcy0+aW5kZXggPCBtaW4pDQorCQlyZXR1cm4gTlVMTDsNCisNCisJLyogUmV0cmll
cyBvbiBkZWFkIG5vZGVzIGhhbmRsZWQgYnkgbWFzX25leHRfZW50cnkgKi8NCisJcmV0dXJuIG1h
c19wcmV2X2VudHJ5KG1hcywgbWluKTsNCit9DQorRVhQT1JUX1NZTUJPTF9HUEwobWFzX2ZpbmQp
Ow0KKw0KKy8qKg0KKyAqIG1hc19lcmFzZSgpIC0gRmluZCB0aGUgcmFuZ2UgaW4gd2hpY2ggaW5k
ZXggcmVzaWRlcyBhbmQgZXJhc2UgdGhlIGVudGlyZQ0KKyAqIHJhbmdlLg0KKyAqIEBtYXM6IFRo
ZSBtYXBsZSBzdGF0ZQ0KKyAqDQorICogTXVzdCBob2xkIHRoZSB3cml0ZSBsb2NrLg0KKyAqIFNl
YXJjaGVzIGZvciBAbWFzLT5pbmRleCwgc2V0cyBAbWFzLT5pbmRleCBhbmQgQG1hcy0+bGFzdCB0
byB0aGUgcmFuZ2UgYW5kDQorICogZXJhc2VzIHRoYXQgcmFuZ2UuDQorICoNCisgKiBSZXR1cm46
IHRoZSBlbnRyeSB0aGF0IHdhcyBlcmFzZWQgb3IgJU5VTEwsIEBtYXMtPmluZGV4IGFuZCBAbWFz
LT5sYXN0IGFyZSB1cGRhdGVkLg0KKyAqLw0KK3ZvaWQgKm1hc19lcmFzZShzdHJ1Y3QgbWFfc3Rh
dGUgKm1hcykNCit7DQorCXZvaWQgKmVudHJ5Ow0KKwlNQV9XUl9TVEFURSh3cl9tYXMsIG1hcywg
TlVMTCk7DQorDQorCWlmIChtYXNfaXNfbm9uZShtYXMpIHx8IG1hc19pc19wYXVzZWQobWFzKSkN
CisJCW1hcy0+bm9kZSA9IE1BU19TVEFSVDsNCisNCisJLyogUmV0cnkgdW5uZWNlc3Nhcnkgd2hl
biBob2xkaW5nIHRoZSB3cml0ZSBsb2NrLiAqLw0KKwllbnRyeSA9IG1hc19zdGF0ZV93YWxrKG1h
cyk7DQorCWlmICghZW50cnkpDQorCQlyZXR1cm4gTlVMTDsNCisNCit3cml0ZV9yZXRyeToNCisJ
LyogTXVzdCByZXNldCB0byBlbnN1cmUgc3Bhbm5pbmcgd3JpdGVzIG9mIGxhc3Qgc2xvdCBhcmUg
ZGV0ZWN0ZWQgKi8NCisJbWFzX3Jlc2V0KG1hcyk7DQorCW1hc193cl9zdG9yZV9zZXR1cCgmd3Jf
bWFzKTsNCisJbWFzX3dyX3N0b3JlX2VudHJ5KCZ3cl9tYXMpOw0KKwlpZiAobWFzX25vbWVtKG1h
cywgR0ZQX0tFUk5FTCkpDQorCQlnb3RvIHdyaXRlX3JldHJ5Ow0KKw0KKwlyZXR1cm4gZW50cnk7
DQorfQ0KK0VYUE9SVF9TWU1CT0xfR1BMKG1hc19lcmFzZSk7DQorDQorLyoqDQorICogbWFzX25v
bWVtKCkgLSBDaGVjayBpZiB0aGVyZSB3YXMgYW4gZXJyb3IgYWxsb2NhdGluZyBhbmQgZG8gdGhl
IGFsbG9jYXRpb24NCisgKiBpZiBuZWNlc3NhcnkgSWYgdGhlcmUgYXJlIGFsbG9jYXRpb25zLCB0
aGVuIGZyZWUgdGhlbS4NCisgKiBAbWFzOiBUaGUgbWFwbGUgc3RhdGUNCisgKiBAZ2ZwOiBUaGUg
R0ZQX0ZMQUdTIHRvIHVzZSBmb3IgYWxsb2NhdGlvbnMNCisgKiBSZXR1cm46IHRydWUgb24gYWxs
b2NhdGlvbiwgZmFsc2Ugb3RoZXJ3aXNlLg0KKyAqLw0KK2Jvb2wgbWFzX25vbWVtKHN0cnVjdCBt
YV9zdGF0ZSAqbWFzLCBnZnBfdCBnZnApDQorCV9fbXVzdF9ob2xkKG1hcy0+dHJlZS0+bG9jaykN
Cit7DQorCWlmIChsaWtlbHkobWFzLT5ub2RlICE9IE1BX0VSUk9SKC1FTk9NRU0pKSkgew0KKwkJ
bWFzX2Rlc3Ryb3kobWFzKTsNCisJCXJldHVybiBmYWxzZTsNCisJfQ0KKw0KKwlpZiAoZ2ZwZmxh
Z3NfYWxsb3dfYmxvY2tpbmcoZ2ZwKSAmJiAhbXRfZXh0ZXJuYWxfbG9jayhtYXMtPnRyZWUpKSB7
DQorCQltdHJlZV91bmxvY2sobWFzLT50cmVlKTsNCisJCW1hc19hbGxvY19ub2RlcyhtYXMsIGdm
cCk7DQorCQltdHJlZV9sb2NrKG1hcy0+dHJlZSk7DQorCX0gZWxzZSB7DQorCQltYXNfYWxsb2Nf
bm9kZXMobWFzLCBnZnApOw0KKwl9DQorDQorCWlmICghbWFzX2FsbG9jYXRlZChtYXMpKQ0KKwkJ
cmV0dXJuIGZhbHNlOw0KKw0KKwltYXMtPm5vZGUgPSBNQVNfU1RBUlQ7DQorCXJldHVybiB0cnVl
Ow0KK30NCisNCit2b2lkIF9faW5pdCBtYXBsZV90cmVlX2luaXQodm9pZCkNCit7DQorCW1hcGxl
X25vZGVfY2FjaGUgPSBrbWVtX2NhY2hlX2NyZWF0ZSgibWFwbGVfbm9kZSIsDQorCQkJc2l6ZW9m
KHN0cnVjdCBtYXBsZV9ub2RlKSwgc2l6ZW9mKHN0cnVjdCBtYXBsZV9ub2RlKSwNCisJCQlTTEFC
X1BBTklDLCBOVUxMKTsNCit9DQorDQorLyoqDQorICogbXRyZWVfbG9hZCgpIC0gTG9hZCBhIHZh
bHVlIHN0b3JlZCBpbiBhIG1hcGxlIHRyZWUNCisgKiBAbXQ6IFRoZSBtYXBsZSB0cmVlDQorICog
QGluZGV4OiBUaGUgaW5kZXggdG8gbG9hZA0KKyAqDQorICogUmV0dXJuOiB0aGUgZW50cnkgb3Ig
JU5VTEwNCisgKi8NCit2b2lkICptdHJlZV9sb2FkKHN0cnVjdCBtYXBsZV90cmVlICptdCwgdW5z
aWduZWQgbG9uZyBpbmRleCkNCit7DQorCU1BX1NUQVRFKG1hcywgbXQsIGluZGV4LCBpbmRleCk7
DQorCXZvaWQgKmVudHJ5Ow0KKw0KKwl0cmFjZV9tYV9yZWFkKF9fZnVuY19fLCAmbWFzKTsNCisJ
cmN1X3JlYWRfbG9jaygpOw0KK3JldHJ5Og0KKwllbnRyeSA9IG1hc19zdGFydCgmbWFzKTsNCisJ
aWYgKHVubGlrZWx5KG1hc19pc19ub25lKCZtYXMpKSkNCisJCWdvdG8gdW5sb2NrOw0KKw0KKwlp
ZiAodW5saWtlbHkobWFzX2lzX3B0cigmbWFzKSkpIHsNCisJCWlmIChpbmRleCkNCisJCQllbnRy
eSA9IE5VTEw7DQorDQorCQlnb3RvIHVubG9jazsNCisJfQ0KKw0KKwllbnRyeSA9IG10cmVlX2xv
b2t1cF93YWxrKCZtYXMpOw0KKwlpZiAoIWVudHJ5ICYmIHVubGlrZWx5KG1hc19pc19zdGFydCgm
bWFzKSkpDQorCQlnb3RvIHJldHJ5Ow0KK3VubG9jazoNCisJcmN1X3JlYWRfdW5sb2NrKCk7DQor
CWlmICh4YV9pc196ZXJvKGVudHJ5KSkNCisJCXJldHVybiBOVUxMOw0KKw0KKwlyZXR1cm4gZW50
cnk7DQorfQ0KK0VYUE9SVF9TWU1CT0wobXRyZWVfbG9hZCk7DQorDQorLyoqDQorICogbXRyZWVf
c3RvcmVfcmFuZ2UoKSAtIFN0b3JlIGFuIGVudHJ5IGF0IGEgZ2l2ZW4gcmFuZ2UuDQorICogQG10
OiBUaGUgbWFwbGUgdHJlZQ0KKyAqIEBpbmRleDogVGhlIHN0YXJ0IG9mIHRoZSByYW5nZQ0KKyAq
IEBsYXN0OiBUaGUgZW5kIG9mIHRoZSByYW5nZQ0KKyAqIEBlbnRyeTogVGhlIGVudHJ5IHRvIHN0
b3JlDQorICogQGdmcDogVGhlIEdGUF9GTEFHUyB0byB1c2UgZm9yIGFsbG9jYXRpb25zDQorICoN
CisgKiBSZXR1cm46IDAgb24gc3VjY2VzcywgLUVJTlZBTCBvbiBpbnZhbGlkIHJlcXVlc3QsIC1F
Tk9NRU0gaWYgbWVtb3J5IGNvdWxkIG5vdA0KKyAqIGJlIGFsbG9jYXRlZC4NCisgKi8NCitpbnQg
bXRyZWVfc3RvcmVfcmFuZ2Uoc3RydWN0IG1hcGxlX3RyZWUgKm10LCB1bnNpZ25lZCBsb25nIGlu
ZGV4LA0KKwkJdW5zaWduZWQgbG9uZyBsYXN0LCB2b2lkICplbnRyeSwgZ2ZwX3QgZ2ZwKQ0KK3sN
CisJTUFfU1RBVEUobWFzLCBtdCwgaW5kZXgsIGxhc3QpOw0KKwlNQV9XUl9TVEFURSh3cl9tYXMs
ICZtYXMsIGVudHJ5KTsNCisNCisJdHJhY2VfbWFfd3JpdGUoX19mdW5jX18sICZtYXMsIDAsIGVu
dHJ5KTsNCisJaWYgKFdBUk5fT05fT05DRSh4YV9pc19hZHZhbmNlZChlbnRyeSkpKQ0KKwkJcmV0
dXJuIC1FSU5WQUw7DQorDQorCWlmIChpbmRleCA+IGxhc3QpDQorCQlyZXR1cm4gLUVJTlZBTDsN
CisNCisJbXRyZWVfbG9jayhtdCk7DQorcmV0cnk6DQorCW1hc193cl9zdG9yZV9lbnRyeSgmd3Jf
bWFzKTsNCisJaWYgKG1hc19ub21lbSgmbWFzLCBnZnApKQ0KKwkJZ290byByZXRyeTsNCisNCisJ
bXRyZWVfdW5sb2NrKG10KTsNCisJaWYgKG1hc19pc19lcnIoJm1hcykpDQorCQlyZXR1cm4geGFf
ZXJyKG1hcy5ub2RlKTsNCisNCisJcmV0dXJuIDA7DQorfQ0KK0VYUE9SVF9TWU1CT0wobXRyZWVf
c3RvcmVfcmFuZ2UpOw0KKw0KKy8qKg0KKyAqIG10cmVlX3N0b3JlKCkgLSBTdG9yZSBhbiBlbnRy
eSBhdCBhIGdpdmVuIGluZGV4Lg0KKyAqIEBtdDogVGhlIG1hcGxlIHRyZWUNCisgKiBAaW5kZXg6
IFRoZSBpbmRleCB0byBzdG9yZSB0aGUgdmFsdWUNCisgKiBAZW50cnk6IFRoZSBlbnRyeSB0byBz
dG9yZQ0KKyAqIEBnZnA6IFRoZSBHRlBfRkxBR1MgdG8gdXNlIGZvciBhbGxvY2F0aW9ucw0KKyAq
DQorICogUmV0dXJuOiAwIG9uIHN1Y2Nlc3MsIC1FSU5WQUwgb24gaW52YWxpZCByZXF1ZXN0LCAt
RU5PTUVNIGlmIG1lbW9yeSBjb3VsZCBub3QNCisgKiBiZSBhbGxvY2F0ZWQuDQorICovDQoraW50
IG10cmVlX3N0b3JlKHN0cnVjdCBtYXBsZV90cmVlICptdCwgdW5zaWduZWQgbG9uZyBpbmRleCwg
dm9pZCAqZW50cnksDQorCQkgZ2ZwX3QgZ2ZwKQ0KK3sNCisJcmV0dXJuIG10cmVlX3N0b3JlX3Jh
bmdlKG10LCBpbmRleCwgaW5kZXgsIGVudHJ5LCBnZnApOw0KK30NCitFWFBPUlRfU1lNQk9MKG10
cmVlX3N0b3JlKTsNCisNCisvKioNCisgKiBtdHJlZV9pbnNlcnRfcmFuZ2UoKSAtIEluc2VydCBh
biBlbnRyeSBhdCBhIGdpdmUgcmFuZ2UgaWYgdGhlcmUgaXMgbm8gdmFsdWUuDQorICogQG10OiBU
aGUgbWFwbGUgdHJlZQ0KKyAqIEBmaXJzdDogVGhlIHN0YXJ0IG9mIHRoZSByYW5nZQ0KKyAqIEBs
YXN0OiBUaGUgZW5kIG9mIHRoZSByYW5nZQ0KKyAqIEBlbnRyeTogVGhlIGVudHJ5IHRvIHN0b3Jl
DQorICogQGdmcDogVGhlIEdGUF9GTEFHUyB0byB1c2UgZm9yIGFsbG9jYXRpb25zLg0KKyAqDQor
ICogUmV0dXJuOiAwIG9uIHN1Y2Nlc3MsIC1FRVhJU1RTIGlmIHRoZSByYW5nZSBpcyBvY2N1cGll
ZCwgLUVJTlZBTCBvbiBpbnZhbGlkDQorICogcmVxdWVzdCwgLUVOT01FTSBpZiBtZW1vcnkgY291
bGQgbm90IGJlIGFsbG9jYXRlZC4NCisgKi8NCitpbnQgbXRyZWVfaW5zZXJ0X3JhbmdlKHN0cnVj
dCBtYXBsZV90cmVlICptdCwgdW5zaWduZWQgbG9uZyBmaXJzdCwNCisJCXVuc2lnbmVkIGxvbmcg
bGFzdCwgdm9pZCAqZW50cnksIGdmcF90IGdmcCkNCit7DQorCU1BX1NUQVRFKG1zLCBtdCwgZmly
c3QsIGxhc3QpOw0KKw0KKwlpZiAoV0FSTl9PTl9PTkNFKHhhX2lzX2FkdmFuY2VkKGVudHJ5KSkp
DQorCQlyZXR1cm4gLUVJTlZBTDsNCisNCisJaWYgKGZpcnN0ID4gbGFzdCkNCisJCXJldHVybiAt
RUlOVkFMOw0KKw0KKwltdHJlZV9sb2NrKG10KTsNCityZXRyeToNCisJbWFzX2luc2VydCgmbXMs
IGVudHJ5KTsNCisJaWYgKG1hc19ub21lbSgmbXMsIGdmcCkpDQorCQlnb3RvIHJldHJ5Ow0KKw0K
KwltdHJlZV91bmxvY2sobXQpOw0KKwlpZiAobWFzX2lzX2VycigmbXMpKQ0KKwkJcmV0dXJuIHhh
X2Vycihtcy5ub2RlKTsNCisNCisJcmV0dXJuIDA7DQorfQ0KK0VYUE9SVF9TWU1CT0wobXRyZWVf
aW5zZXJ0X3JhbmdlKTsNCisNCisvKioNCisgKiBtdHJlZV9pbnNlcnQoKSAtIEluc2VydCBhbiBl
bnRyeSBhdCBhIGdpdmUgaW5kZXggaWYgdGhlcmUgaXMgbm8gdmFsdWUuDQorICogQG10OiBUaGUg
bWFwbGUgdHJlZQ0KKyAqIEBpbmRleCA6IFRoZSBpbmRleCB0byBzdG9yZSB0aGUgdmFsdWUNCisg
KiBAZW50cnk6IFRoZSBlbnRyeSB0byBzdG9yZQ0KKyAqIEBnZnA6IFRoZSBGR1BfRkxBR1MgdG8g
dXNlIGZvciBhbGxvY2F0aW9ucy4NCisgKg0KKyAqIFJldHVybjogMCBvbiBzdWNjZXNzLCAtRUVY
SVNUUyBpZiB0aGUgcmFuZ2UgaXMgb2NjdXBpZWQsIC1FSU5WQUwgb24gaW52YWxpZA0KKyAqIHJl
cXVlc3QsIC1FTk9NRU0gaWYgbWVtb3J5IGNvdWxkIG5vdCBiZSBhbGxvY2F0ZWQuDQorICovDQor
aW50IG10cmVlX2luc2VydChzdHJ1Y3QgbWFwbGVfdHJlZSAqbXQsIHVuc2lnbmVkIGxvbmcgaW5k
ZXgsIHZvaWQgKmVudHJ5LA0KKwkJIGdmcF90IGdmcCkNCit7DQorCXJldHVybiBtdHJlZV9pbnNl
cnRfcmFuZ2UobXQsIGluZGV4LCBpbmRleCwgZW50cnksIGdmcCk7DQorfQ0KK0VYUE9SVF9TWU1C
T0wobXRyZWVfaW5zZXJ0KTsNCisNCitpbnQgbXRyZWVfYWxsb2NfcmFuZ2Uoc3RydWN0IG1hcGxl
X3RyZWUgKm10LCB1bnNpZ25lZCBsb25nICpzdGFydHAsDQorCQl2b2lkICplbnRyeSwgdW5zaWdu
ZWQgbG9uZyBzaXplLCB1bnNpZ25lZCBsb25nIG1pbiwNCisJCXVuc2lnbmVkIGxvbmcgbWF4LCBn
ZnBfdCBnZnApDQorew0KKwlpbnQgcmV0ID0gMDsNCisNCisJTUFfU1RBVEUobWFzLCBtdCwgbWlu
LCBtYXggLSBzaXplKTsNCisJaWYgKCFtdF9pc19hbGxvYyhtdCkpDQorCQlyZXR1cm4gLUVJTlZB
TDsNCisNCisJaWYgKFdBUk5fT05fT05DRShtdF9pc19yZXNlcnZlZChlbnRyeSkpKQ0KKwkJcmV0
dXJuIC1FSU5WQUw7DQorDQorCWlmIChtaW4gPiBtYXgpDQorCQlyZXR1cm4gLUVJTlZBTDsNCisN
CisJaWYgKG1heCA8IHNpemUpDQorCQlyZXR1cm4gLUVJTlZBTDsNCisNCisJaWYgKCFzaXplKQ0K
KwkJcmV0dXJuIC1FSU5WQUw7DQorDQorCW10cmVlX2xvY2sobXQpOw0KK3JldHJ5Og0KKwltYXMu
b2Zmc2V0ID0gMDsNCisJbWFzLmluZGV4ID0gbWluOw0KKwltYXMubGFzdCA9IG1heCAtIHNpemU7
DQorCXJldCA9IG1hc19hbGxvYygmbWFzLCBlbnRyeSwgc2l6ZSwgc3RhcnRwKTsNCisJaWYgKG1h
c19ub21lbSgmbWFzLCBnZnApKQ0KKwkJZ290byByZXRyeTsNCisNCisJbXRyZWVfdW5sb2NrKG10
KTsNCisJcmV0dXJuIHJldDsNCit9DQorRVhQT1JUX1NZTUJPTChtdHJlZV9hbGxvY19yYW5nZSk7
DQorDQoraW50IG10cmVlX2FsbG9jX3JyYW5nZShzdHJ1Y3QgbWFwbGVfdHJlZSAqbXQsIHVuc2ln
bmVkIGxvbmcgKnN0YXJ0cCwNCisJCXZvaWQgKmVudHJ5LCB1bnNpZ25lZCBsb25nIHNpemUsIHVu
c2lnbmVkIGxvbmcgbWluLA0KKwkJdW5zaWduZWQgbG9uZyBtYXgsIGdmcF90IGdmcCkNCit7DQor
CWludCByZXQgPSAwOw0KKw0KKwlNQV9TVEFURShtYXMsIG10LCBtaW4sIG1heCAtIHNpemUpOw0K
KwlpZiAoIW10X2lzX2FsbG9jKG10KSkNCisJCXJldHVybiAtRUlOVkFMOw0KKw0KKwlpZiAoV0FS
Tl9PTl9PTkNFKG10X2lzX3Jlc2VydmVkKGVudHJ5KSkpDQorCQlyZXR1cm4gLUVJTlZBTDsNCisN
CisJaWYgKG1pbiA+PSBtYXgpDQorCQlyZXR1cm4gLUVJTlZBTDsNCisNCisJaWYgKG1heCA8IHNp
emUgLSAxKQ0KKwkJcmV0dXJuIC1FSU5WQUw7DQorDQorCWlmICghc2l6ZSkNCisJCXJldHVybiAt
RUlOVkFMOw0KKw0KKwltdHJlZV9sb2NrKG10KTsNCityZXRyeToNCisJcmV0ID0gbWFzX3Jldl9h
bGxvYygmbWFzLCBtaW4sIG1heCwgZW50cnksIHNpemUsIHN0YXJ0cCk7DQorCWlmIChtYXNfbm9t
ZW0oJm1hcywgZ2ZwKSkNCisJCWdvdG8gcmV0cnk7DQorDQorCW10cmVlX3VubG9jayhtdCk7DQor
CXJldHVybiByZXQ7DQorfQ0KK0VYUE9SVF9TWU1CT0wobXRyZWVfYWxsb2NfcnJhbmdlKTsNCisN
CisvKioNCisgKiBtdHJlZV9lcmFzZSgpIC0gRmluZCBhbiBpbmRleCBhbmQgZXJhc2UgdGhlIGVu
dGlyZSByYW5nZS4NCisgKiBAbXQ6IFRoZSBtYXBsZSB0cmVlDQorICogQGluZGV4OiBUaGUgaW5k
ZXggdG8gZXJhc2UNCisgKg0KKyAqIEVyYXNpbmcgaXMgdGhlIHNhbWUgYXMgYSB3YWxrIHRvIGFu
IGVudHJ5IHRoZW4gYSBzdG9yZSBvZiBhIE5VTEwgdG8gdGhhdA0KKyAqIEVOVElSRSByYW5nZS4g
IEluIGZhY3QsIGl0IGlzIGltcGxlbWVudGVkIGFzIHN1Y2ggdXNpbmcgdGhlIGFkdmFuY2VkIEFQ
SS4NCisgKg0KKyAqIFJldHVybjogVGhlIGVudHJ5IHN0b3JlZCBhdCB0aGUgQGluZGV4IG9yICVO
VUxMDQorICovDQordm9pZCAqbXRyZWVfZXJhc2Uoc3RydWN0IG1hcGxlX3RyZWUgKm10LCB1bnNp
Z25lZCBsb25nIGluZGV4KQ0KK3sNCisJdm9pZCAqZW50cnkgPSBOVUxMOw0KKw0KKwlNQV9TVEFU
RShtYXMsIG10LCBpbmRleCwgaW5kZXgpOw0KKwl0cmFjZV9tYV9vcChfX2Z1bmNfXywgJm1hcyk7
DQorDQorCW10cmVlX2xvY2sobXQpOw0KKwllbnRyeSA9IG1hc19lcmFzZSgmbWFzKTsNCisJbXRy
ZWVfdW5sb2NrKG10KTsNCisNCisJcmV0dXJuIGVudHJ5Ow0KK30NCitFWFBPUlRfU1lNQk9MKG10
cmVlX2VyYXNlKTsNCisNCisvKioNCisgKiBfX210X2Rlc3Ryb3koKSAtIFdhbGsgYW5kIGZyZWUg
YWxsIG5vZGVzIG9mIGEgbG9ja2VkIG1hcGxlIHRyZWUuDQorICogQG10OiBUaGUgbWFwbGUgdHJl
ZQ0KKyAqDQorICogTm90ZTogRG9lcyBub3QgaGFuZGxlIGxvY2tpbmcuDQorICovDQordm9pZCBf
X210X2Rlc3Ryb3koc3RydWN0IG1hcGxlX3RyZWUgKm10KQ0KK3sNCisJdm9pZCAqcm9vdCA9IG10
X3Jvb3RfbG9ja2VkKG10KTsNCisNCisJcmN1X2Fzc2lnbl9wb2ludGVyKG10LT5tYV9yb290LCBO
VUxMKTsNCisJaWYgKHhhX2lzX25vZGUocm9vdCkpDQorCQltdGVfZGVzdHJveV93YWxrKHJvb3Qs
IG10KTsNCisNCisJbXQtPm1hX2ZsYWdzID0gMDsNCit9DQorRVhQT1JUX1NZTUJPTF9HUEwoX19t
dF9kZXN0cm95KTsNCisNCisvKioNCisgKiBtdHJlZV9kZXN0cm95KCkgLSBEZXN0cm95IGEgbWFw
bGUgdHJlZQ0KKyAqIEBtdDogVGhlIG1hcGxlIHRyZWUNCisgKg0KKyAqIEZyZWVzIGFsbCByZXNv
dXJjZXMgdXNlZCBieSB0aGUgdHJlZS4gIEhhbmRsZXMgbG9ja2luZy4NCisgKi8NCit2b2lkIG10
cmVlX2Rlc3Ryb3koc3RydWN0IG1hcGxlX3RyZWUgKm10KQ0KK3sNCisJbXRyZWVfbG9jayhtdCk7
DQorCV9fbXRfZGVzdHJveShtdCk7DQorCW10cmVlX3VubG9jayhtdCk7DQorfQ0KK0VYUE9SVF9T
WU1CT0wobXRyZWVfZGVzdHJveSk7DQorDQorLyoqDQorICogbXRfZmluZCgpIC0gU2VhcmNoIGZy
b20gdGhlIHN0YXJ0IHVwIHVudGlsIGFuIGVudHJ5IGlzIGZvdW5kLg0KKyAqIEBtdDogVGhlIG1h
cGxlIHRyZWUNCisgKiBAaW5kZXg6IFBvaW50ZXIgd2hpY2ggY29udGFpbnMgdGhlIHN0YXJ0IGxv
Y2F0aW9uIG9mIHRoZSBzZWFyY2gNCisgKiBAbWF4OiBUaGUgbWF4aW11bSB2YWx1ZSB0byBjaGVj
aw0KKyAqDQorICogSGFuZGxlcyBsb2NraW5nLiAgQGluZGV4IHdpbGwgYmUgaW5jcmVtZW50ZWQg
dG8gb25lIGJleW9uZCB0aGUgcmFuZ2UuDQorICoNCisgKiBSZXR1cm46IFRoZSBlbnRyeSBhdCBv
ciBhZnRlciB0aGUgQGluZGV4IG9yICVOVUxMDQorICovDQordm9pZCAqbXRfZmluZChzdHJ1Y3Qg
bWFwbGVfdHJlZSAqbXQsIHVuc2lnbmVkIGxvbmcgKmluZGV4LCB1bnNpZ25lZCBsb25nIG1heCkN
Cit7DQorCU1BX1NUQVRFKG1hcywgbXQsICppbmRleCwgKmluZGV4KTsNCisJdm9pZCAqZW50cnk7
DQorI2lmZGVmIENPTkZJR19ERUJVR19NQVBMRV9UUkVFDQorCXVuc2lnbmVkIGxvbmcgY29weSA9
ICppbmRleDsNCisjZW5kaWYNCisNCisJdHJhY2VfbWFfcmVhZChfX2Z1bmNfXywgJm1hcyk7DQor
DQorCWlmICgoKmluZGV4KSA+IG1heCkNCisJCXJldHVybiBOVUxMOw0KKw0KKwlyY3VfcmVhZF9s
b2NrKCk7DQorcmV0cnk6DQorCWVudHJ5ID0gbWFzX3N0YXRlX3dhbGsoJm1hcyk7DQorCWlmICht
YXNfaXNfc3RhcnQoJm1hcykpDQorCQlnb3RvIHJldHJ5Ow0KKw0KKwlpZiAodW5saWtlbHkoeGFf
aXNfemVybyhlbnRyeSkpKQ0KKwkJZW50cnkgPSBOVUxMOw0KKw0KKwlpZiAoZW50cnkpDQorCQln
b3RvIHVubG9jazsNCisNCisJd2hpbGUgKG1hc19zZWFyY2hhYmxlKCZtYXMpICYmIChtYXMuaW5k
ZXggPCBtYXgpKSB7DQorCQllbnRyeSA9IG1hc19uZXh0X2VudHJ5KCZtYXMsIG1heCk7DQorCQlp
ZiAobGlrZWx5KGVudHJ5ICYmICF4YV9pc196ZXJvKGVudHJ5KSkpDQorCQkJYnJlYWs7DQorCX0N
CisNCisJaWYgKHVubGlrZWx5KHhhX2lzX3plcm8oZW50cnkpKSkNCisJCWVudHJ5ID0gTlVMTDsN
Cit1bmxvY2s6DQorCXJjdV9yZWFkX3VubG9jaygpOw0KKwlpZiAobGlrZWx5KGVudHJ5KSkgew0K
KwkJKmluZGV4ID0gbWFzLmxhc3QgKyAxOw0KKyNpZmRlZiBDT05GSUdfREVCVUdfTUFQTEVfVFJF
RQ0KKwkJaWYgKCgqaW5kZXgpICYmICgqaW5kZXgpIDw9IGNvcHkpDQorCQkJcHJfZXJyKCJpbmRl
eCBub3QgaW5jcmVhc2VkISAlbHggPD0gJWx4XG4iLA0KKwkJCSAgICAgICAqaW5kZXgsIGNvcHkp
Ow0KKwkJTVRfQlVHX09OKG10LCAoKmluZGV4KSAmJiAoKCppbmRleCkgPD0gY29weSkpOw0KKyNl
bmRpZg0KKwl9DQorDQorCXJldHVybiBlbnRyeTsNCit9DQorRVhQT1JUX1NZTUJPTChtdF9maW5k
KTsNCisNCisvKioNCisgKiBtdF9maW5kX2FmdGVyKCkgLSBTZWFyY2ggZnJvbSB0aGUgc3RhcnQg
dXAgdW50aWwgYW4gZW50cnkgaXMgZm91bmQuDQorICogQG10OiBUaGUgbWFwbGUgdHJlZQ0KKyAq
IEBpbmRleDogUG9pbnRlciB3aGljaCBjb250YWlucyB0aGUgc3RhcnQgbG9jYXRpb24gb2YgdGhl
IHNlYXJjaA0KKyAqIEBtYXg6IFRoZSBtYXhpbXVtIHZhbHVlIHRvIGNoZWNrDQorICoNCisgKiBI
YW5kbGVzIGxvY2tpbmcsIGRldGVjdHMgd3JhcHBpbmcgb24gaW5kZXggPT0gMA0KKyAqDQorICog
UmV0dXJuOiBUaGUgZW50cnkgYXQgb3IgYWZ0ZXIgdGhlIEBpbmRleCBvciAlTlVMTA0KKyAqLw0K
K3ZvaWQgKm10X2ZpbmRfYWZ0ZXIoc3RydWN0IG1hcGxlX3RyZWUgKm10LCB1bnNpZ25lZCBsb25n
ICppbmRleCwNCisJCSAgICB1bnNpZ25lZCBsb25nIG1heCkNCit7DQorCWlmICghKCppbmRleCkp
DQorCQlyZXR1cm4gTlVMTDsNCisNCisJcmV0dXJuIG10X2ZpbmQobXQsIGluZGV4LCBtYXgpOw0K
K30NCitFWFBPUlRfU1lNQk9MKG10X2ZpbmRfYWZ0ZXIpOw0KKw0KKyNpZmRlZiBDT05GSUdfREVC
VUdfTUFQTEVfVFJFRQ0KK2F0b21pY190IG1hcGxlX3RyZWVfdGVzdHNfcnVuOw0KK0VYUE9SVF9T
WU1CT0xfR1BMKG1hcGxlX3RyZWVfdGVzdHNfcnVuKTsNCithdG9taWNfdCBtYXBsZV90cmVlX3Rl
c3RzX3Bhc3NlZDsNCitFWFBPUlRfU1lNQk9MX0dQTChtYXBsZV90cmVlX3Rlc3RzX3Bhc3NlZCk7
DQorDQorI2lmbmRlZiBfX0tFUk5FTF9fDQorZXh0ZXJuIHZvaWQga21lbV9jYWNoZV9zZXRfbm9u
X2tlcm5lbChzdHJ1Y3Qga21lbV9jYWNoZSAqLCB1bnNpZ25lZCBpbnQpOw0KK3ZvaWQgbXRfc2V0
X25vbl9rZXJuZWwodW5zaWduZWQgaW50IHZhbCkNCit7DQorCWttZW1fY2FjaGVfc2V0X25vbl9r
ZXJuZWwobWFwbGVfbm9kZV9jYWNoZSwgdmFsKTsNCit9DQorDQorZXh0ZXJuIHVuc2lnbmVkIGxv
bmcga21lbV9jYWNoZV9nZXRfYWxsb2Moc3RydWN0IGttZW1fY2FjaGUgKik7DQordW5zaWduZWQg
bG9uZyBtdF9nZXRfYWxsb2Nfc2l6ZSh2b2lkKQ0KK3sNCisJcmV0dXJuIGttZW1fY2FjaGVfZ2V0
X2FsbG9jKG1hcGxlX25vZGVfY2FjaGUpOw0KK30NCisNCitleHRlcm4gdm9pZCBrbWVtX2NhY2hl
X3plcm9fbnJfdGFsbG9jYXRlZChzdHJ1Y3Qga21lbV9jYWNoZSAqKTsNCit2b2lkIG10X3plcm9f
bnJfdGFsbG9jYXRlZCh2b2lkKQ0KK3sNCisJa21lbV9jYWNoZV96ZXJvX25yX3RhbGxvY2F0ZWQo
bWFwbGVfbm9kZV9jYWNoZSk7DQorfQ0KKw0KK2V4dGVybiB1bnNpZ25lZCBpbnQga21lbV9jYWNo
ZV9ucl90YWxsb2NhdGVkKHN0cnVjdCBrbWVtX2NhY2hlICopOw0KK3Vuc2lnbmVkIGludCBtdF9u
cl90YWxsb2NhdGVkKHZvaWQpDQorew0KKwlyZXR1cm4ga21lbV9jYWNoZV9ucl90YWxsb2NhdGVk
KG1hcGxlX25vZGVfY2FjaGUpOw0KK30NCisNCitleHRlcm4gdW5zaWduZWQgaW50IGttZW1fY2Fj
aGVfbnJfYWxsb2NhdGVkKHN0cnVjdCBrbWVtX2NhY2hlICopOw0KK3Vuc2lnbmVkIGludCBtdF9u
cl9hbGxvY2F0ZWQodm9pZCkNCit7DQorCXJldHVybiBrbWVtX2NhY2hlX25yX2FsbG9jYXRlZCht
YXBsZV9ub2RlX2NhY2hlKTsNCit9DQorDQorLyoNCisgKiBtYXNfZGVhZF9ub2RlKCkgLSBDaGVj
ayBpZiB0aGUgbWFwbGUgc3RhdGUgaXMgcG9pbnRpbmcgdG8gYSBkZWFkIG5vZGUuDQorICogQG1h
czogVGhlIG1hcGxlIHN0YXRlDQorICogQGluZGV4OiBUaGUgaW5kZXggdG8gcmVzdG9yZSBpbiBA
bWFzLg0KKyAqDQorICogVXNlZCBpbiB0ZXN0IGNvZGUuDQorICogUmV0dXJuOiAxIGlmIEBtYXMg
aGFzIGJlZW4gcmVzZXQgdG8gTUFTX1NUQVJULCAwIG90aGVyd2lzZS4NCisgKi8NCitzdGF0aWMg
aW5saW5lIGludCBtYXNfZGVhZF9ub2RlKHN0cnVjdCBtYV9zdGF0ZSAqbWFzLCB1bnNpZ25lZCBs
b25nIGluZGV4KQ0KK3sNCisJaWYgKHVubGlrZWx5KCFtYXNfc2VhcmNoYWJsZShtYXMpIHx8IG1h
c19pc19zdGFydChtYXMpKSkNCisJCXJldHVybiAwOw0KKw0KKwlpZiAobGlrZWx5KCFtdGVfZGVh
ZF9ub2RlKG1hcy0+bm9kZSkpKQ0KKwkJcmV0dXJuIDA7DQorDQorCW1hc19yZXdhbGsobWFzLCBp
bmRleCk7DQorCXJldHVybiAxOw0KK30NCisjZW5kaWYgLyogbm90IGRlZmluZWQgX19LRVJORUxf
XyAqLw0KKw0KKy8qDQorICogbWFzX2dldF9zbG90KCkgLSBHZXQgdGhlIGVudHJ5IGluIHRoZSBt
YXBsZSBzdGF0ZSBub2RlIHN0b3JlZCBhdCBAb2Zmc2V0Lg0KKyAqIEBtYXM6IFRoZSBtYXBsZSBz
dGF0ZQ0KKyAqIEBvZmZzZXQ6IFRoZSBvZmZzZXQgaW50byB0aGUgc2xvdCBhcnJheSB0byBmZXRj
aC4NCisgKg0KKyAqIFJldHVybjogVGhlIGVudHJ5IHN0b3JlZCBhdCBAb2Zmc2V0Lg0KKyAqLw0K
K3N0YXRpYyBpbmxpbmUgc3RydWN0IG1hcGxlX2Vub2RlICptYXNfZ2V0X3Nsb3Qoc3RydWN0IG1h
X3N0YXRlICptYXMsDQorCQl1bnNpZ25lZCBjaGFyIG9mZnNldCkNCit7DQorCXJldHVybiBtYXNf
c2xvdChtYXMsIG1hX3Nsb3RzKG1hc19tbihtYXMpLCBtdGVfbm9kZV90eXBlKG1hcy0+bm9kZSkp
LA0KKwkJCW9mZnNldCk7DQorfQ0KKw0KKw0KKy8qDQorICogbWFzX2ZpcnN0X2VudHJ5KCkgLSBH
byB0aGUgZmlyc3QgbGVhZiBhbmQgZmluZCB0aGUgZmlyc3QgZW50cnkuDQorICogQG1hczogdGhl
IG1hcGxlIHN0YXRlLg0KKyAqIEBsaW1pdDogdGhlIG1heGltdW0gaW5kZXggdG8gY2hlY2suDQor
ICogQCpyX3N0YXJ0OiBQb2ludGVyIHRvIHNldCB0byB0aGUgcmFuZ2Ugc3RhcnQuDQorICoNCisg
KiBTZXRzIG1hcy0+b2Zmc2V0IHRvIHRoZSBvZmZzZXQgb2YgdGhlIGVudHJ5LCByX3N0YXJ0IHRv
IHRoZSByYW5nZSBtaW5pbXVtLg0KKyAqDQorICogUmV0dXJuOiBUaGUgZmlyc3QgZW50cnkgb3Ig
TUFTX05PTkUuDQorICovDQorc3RhdGljIGlubGluZSB2b2lkICptYXNfZmlyc3RfZW50cnkoc3Ry
dWN0IG1hX3N0YXRlICptYXMsIHN0cnVjdCBtYXBsZV9ub2RlICptbiwNCisJCXVuc2lnbmVkIGxv
bmcgbGltaXQsIGVudW0gbWFwbGVfdHlwZSBtdCkNCisNCit7DQorCXVuc2lnbmVkIGxvbmcgbWF4
Ow0KKwl1bnNpZ25lZCBsb25nICpwaXZvdHM7DQorCXZvaWQgX19yY3UgKipzbG90czsNCisJdm9p
ZCAqZW50cnkgPSBOVUxMOw0KKw0KKwltYXMtPmluZGV4ID0gbWFzLT5taW47DQorCWlmIChtYXMt
PmluZGV4ID4gbGltaXQpDQorCQlnb3RvIG5vbmU7DQorDQorCW1heCA9IG1hcy0+bWF4Ow0KKwlt
YXMtPm9mZnNldCA9IDA7DQorCXdoaWxlIChsaWtlbHkoIW1hX2lzX2xlYWYobXQpKSkgew0KKwkJ
TVRfQlVHX09OKG1hcy0+dHJlZSwgbXRlX2RlYWRfbm9kZShtYXMtPm5vZGUpKTsNCisJCXNsb3Rz
ID0gbWFfc2xvdHMobW4sIG10KTsNCisJCXBpdm90cyA9IG1hX3Bpdm90cyhtbiwgbXQpOw0KKwkJ
bWF4ID0gcGl2b3RzWzBdOw0KKwkJZW50cnkgPSBtYXNfc2xvdChtYXMsIHNsb3RzLCAwKTsNCisJ
CWlmICh1bmxpa2VseShtYV9kZWFkX25vZGUobW4pKSkNCisJCQlyZXR1cm4gTlVMTDsNCisJCW1h
cy0+bm9kZSA9IGVudHJ5Ow0KKwkJbW4gPSBtYXNfbW4obWFzKTsNCisJCW10ID0gbXRlX25vZGVf
dHlwZShtYXMtPm5vZGUpOw0KKwl9DQorCU1UX0JVR19PTihtYXMtPnRyZWUsIG10ZV9kZWFkX25v
ZGUobWFzLT5ub2RlKSk7DQorDQorCW1hcy0+bWF4ID0gbWF4Ow0KKwlzbG90cyA9IG1hX3Nsb3Rz
KG1uLCBtdCk7DQorCWVudHJ5ID0gbWFzX3Nsb3QobWFzLCBzbG90cywgMCk7DQorCWlmICh1bmxp
a2VseShtYV9kZWFkX25vZGUobW4pKSkNCisJCXJldHVybiBOVUxMOw0KKw0KKwkvKiBTbG90IDAg
b3IgMSBtdXN0IGJlIHNldCAqLw0KKwlpZiAobWFzLT5pbmRleCA+IGxpbWl0KQ0KKwkJZ290byBu
b25lOw0KKw0KKwlpZiAobGlrZWx5KGVudHJ5KSkNCisJCXJldHVybiBlbnRyeTsNCisNCisJcGl2
b3RzID0gbWFfcGl2b3RzKG1uLCBtdCk7DQorCW1hcy0+aW5kZXggPSBwaXZvdHNbMF0gKyAxOw0K
KwltYXMtPm9mZnNldCA9IDE7DQorCWVudHJ5ID0gbWFzX3Nsb3QobWFzLCBzbG90cywgMSk7DQor
CWlmICh1bmxpa2VseShtYV9kZWFkX25vZGUobW4pKSkNCisJCXJldHVybiBOVUxMOw0KKw0KKwlp
ZiAobWFzLT5pbmRleCA+IGxpbWl0KQ0KKwkJZ290byBub25lOw0KKw0KKwlpZiAobGlrZWx5KGVu
dHJ5KSkNCisJCXJldHVybiBlbnRyeTsNCisNCitub25lOg0KKwlpZiAobGlrZWx5KCFtYV9kZWFk
X25vZGUobW4pKSkNCisJCW1hcy0+bm9kZSA9IE1BU19OT05FOw0KKwlyZXR1cm4gTlVMTDsNCit9
DQorDQorLyogRGVwdGggZmlyc3Qgc2VhcmNoLCBwb3N0LW9yZGVyICovDQorc3RhdGljIHZvaWQg
bWFzX2Rmc19wb3N0b3JkZXIoc3RydWN0IG1hX3N0YXRlICptYXMsIHVuc2lnbmVkIGxvbmcgbWF4
KQ0KK3sNCisNCisJc3RydWN0IG1hcGxlX2Vub2RlICpwID0gTUFTX05PTkUsICptbiA9IG1hcy0+
bm9kZTsNCisJdW5zaWduZWQgbG9uZyBwX21pbiwgcF9tYXg7DQorDQorCW1hc19uZXh0X25vZGUo
bWFzLCBtYXNfbW4obWFzKSwgbWF4KTsNCisJaWYgKCFtYXNfaXNfbm9uZShtYXMpKQ0KKwkJcmV0
dXJuOw0KKw0KKwlpZiAobXRlX2lzX3Jvb3QobW4pKQ0KKwkJcmV0dXJuOw0KKw0KKwltYXMtPm5v
ZGUgPSBtbjsNCisJbWFzX2FzY2VuZChtYXMpOw0KKwl3aGlsZSAobWFzLT5ub2RlICE9IE1BU19O
T05FKSB7DQorCQlwID0gbWFzLT5ub2RlOw0KKwkJcF9taW4gPSBtYXMtPm1pbjsNCisJCXBfbWF4
ID0gbWFzLT5tYXg7DQorCQltYXNfcHJldl9ub2RlKG1hcywgMCk7DQorCX0NCisNCisJaWYgKHAg
PT0gTUFTX05PTkUpDQorCQlyZXR1cm47DQorDQorCW1hcy0+bm9kZSA9IHA7DQorCW1hcy0+bWF4
ID0gcF9tYXg7DQorCW1hcy0+bWluID0gcF9taW47DQorfQ0KKw0KKy8qIFRyZWUgdmFsaWRhdGlv
bnMgKi8NCitzdGF0aWMgdm9pZCBtdF9kdW1wX25vZGUoY29uc3Qgc3RydWN0IG1hcGxlX3RyZWUg
Km10LCB2b2lkICplbnRyeSwNCisJCXVuc2lnbmVkIGxvbmcgbWluLCB1bnNpZ25lZCBsb25nIG1h
eCwgdW5zaWduZWQgaW50IGRlcHRoKTsNCitzdGF0aWMgdm9pZCBtdF9kdW1wX3JhbmdlKHVuc2ln
bmVkIGxvbmcgbWluLCB1bnNpZ25lZCBsb25nIG1heCwNCisJCQkgIHVuc2lnbmVkIGludCBkZXB0
aCkNCit7DQorCXN0YXRpYyBjb25zdCBjaGFyIHNwYWNlc1tdID0gIiAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgIjsNCisNCisJaWYgKG1pbiA9PSBtYXgpDQorCQlwcl9pbmZvKCIlLipz
JWx1OiAiLCBkZXB0aCAqIDIsIHNwYWNlcywgbWluKTsNCisJZWxzZQ0KKwkJcHJfaW5mbygiJS4q
cyVsdS0lbHU6ICIsIGRlcHRoICogMiwgc3BhY2VzLCBtaW4sIG1heCk7DQorfQ0KKw0KK3N0YXRp
YyB2b2lkIG10X2R1bXBfZW50cnkodm9pZCAqZW50cnksIHVuc2lnbmVkIGxvbmcgbWluLCB1bnNp
Z25lZCBsb25nIG1heCwNCisJCQkgIHVuc2lnbmVkIGludCBkZXB0aCkNCit7DQorCW10X2R1bXBf
cmFuZ2UobWluLCBtYXgsIGRlcHRoKTsNCisNCisJaWYgKHhhX2lzX3ZhbHVlKGVudHJ5KSkNCisJ
CXByX2NvbnQoInZhbHVlICVsZCAoMHglbHgpIFslcF1cbiIsIHhhX3RvX3ZhbHVlKGVudHJ5KSwN
CisJCQkJeGFfdG9fdmFsdWUoZW50cnkpLCBlbnRyeSk7DQorCWVsc2UgaWYgKHhhX2lzX3plcm8o
ZW50cnkpKQ0KKwkJcHJfY29udCgiemVybyAoJWxkKVxuIiwgeGFfdG9faW50ZXJuYWwoZW50cnkp
KTsNCisJZWxzZSBpZiAobXRfaXNfcmVzZXJ2ZWQoZW50cnkpKQ0KKwkJcHJfY29udCgiVU5LTk9X
TiBFTlRSWSAoJXApXG4iLCBlbnRyeSk7DQorCWVsc2UNCisJCXByX2NvbnQoIiVwXG4iLCBlbnRy
eSk7DQorfQ0KKw0KK3N0YXRpYyB2b2lkIG10X2R1bXBfcmFuZ2U2NChjb25zdCBzdHJ1Y3QgbWFw
bGVfdHJlZSAqbXQsIHZvaWQgKmVudHJ5LA0KKwkJCXVuc2lnbmVkIGxvbmcgbWluLCB1bnNpZ25l
ZCBsb25nIG1heCwgdW5zaWduZWQgaW50IGRlcHRoKQ0KK3sNCisJc3RydWN0IG1hcGxlX3Jhbmdl
XzY0ICpub2RlID0gJm10ZV90b19ub2RlKGVudHJ5KS0+bXI2NDsNCisJYm9vbCBsZWFmID0gbXRl
X2lzX2xlYWYoZW50cnkpOw0KKwl1bnNpZ25lZCBsb25nIGZpcnN0ID0gbWluOw0KKwlpbnQgaTsN
CisNCisJcHJfY29udCgiIGNvbnRlbnRzOiAiKTsNCisJZm9yIChpID0gMDsgaSA8IE1BUExFX1JB
TkdFNjRfU0xPVFMgLSAxOyBpKyspDQorCQlwcl9jb250KCIlcCAlbHUgIiwgbm9kZS0+c2xvdFtp
XSwgbm9kZS0+cGl2b3RbaV0pOw0KKwlwcl9jb250KCIlcFxuIiwgbm9kZS0+c2xvdFtpXSk7DQor
CWZvciAoaSA9IDA7IGkgPCBNQVBMRV9SQU5HRTY0X1NMT1RTOyBpKyspIHsNCisJCXVuc2lnbmVk
IGxvbmcgbGFzdCA9IG1heDsNCisNCisJCWlmIChpIDwgKE1BUExFX1JBTkdFNjRfU0xPVFMgLSAx
KSkNCisJCQlsYXN0ID0gbm9kZS0+cGl2b3RbaV07DQorCQllbHNlIGlmICghbm9kZS0+c2xvdFtp
XSAmJiBtYXggIT0gbXRfbWF4W210ZV9ub2RlX3R5cGUoZW50cnkpXSkNCisJCQlicmVhazsNCisJ
CWlmIChsYXN0ID09IDAgJiYgaSA+IDApDQorCQkJYnJlYWs7DQorCQlpZiAobGVhZikNCisJCQlt
dF9kdW1wX2VudHJ5KG10X3Nsb3QobXQsIG5vZGUtPnNsb3QsIGkpLA0KKwkJCQkJZmlyc3QsIGxh
c3QsIGRlcHRoICsgMSk7DQorCQllbHNlIGlmIChub2RlLT5zbG90W2ldKQ0KKwkJCW10X2R1bXBf
bm9kZShtdCwgbXRfc2xvdChtdCwgbm9kZS0+c2xvdCwgaSksDQorCQkJCQlmaXJzdCwgbGFzdCwg
ZGVwdGggKyAxKTsNCisNCisJCWlmIChsYXN0ID09IG1heCkNCisJCQlicmVhazsNCisJCWlmIChs
YXN0ID4gbWF4KSB7DQorCQkJcHJfZXJyKCJub2RlICVwIGxhc3QgKCVsdSkgPiBtYXggKCVsdSkg
YXQgcGl2b3QgJWQhXG4iLA0KKwkJCQkJbm9kZSwgbGFzdCwgbWF4LCBpKTsNCisJCQlicmVhazsN
CisJCX0NCisJCWZpcnN0ID0gbGFzdCArIDE7DQorCX0NCit9DQorDQorc3RhdGljIHZvaWQgbXRf
ZHVtcF9hcmFuZ2U2NChjb25zdCBzdHJ1Y3QgbWFwbGVfdHJlZSAqbXQsIHZvaWQgKmVudHJ5LA0K
KwkJCXVuc2lnbmVkIGxvbmcgbWluLCB1bnNpZ25lZCBsb25nIG1heCwgdW5zaWduZWQgaW50IGRl
cHRoKQ0KK3sNCisJc3RydWN0IG1hcGxlX2FyYW5nZV82NCAqbm9kZSA9ICZtdGVfdG9fbm9kZShl
bnRyeSktPm1hNjQ7DQorCWJvb2wgbGVhZiA9IG10ZV9pc19sZWFmKGVudHJ5KTsNCisJdW5zaWdu
ZWQgbG9uZyBmaXJzdCA9IG1pbjsNCisJaW50IGk7DQorDQorCXByX2NvbnQoIiBjb250ZW50czog
Iik7DQorCWZvciAoaSA9IDA7IGkgPCBNQVBMRV9BUkFOR0U2NF9TTE9UUzsgaSsrKQ0KKwkJcHJf
Y29udCgiJWx1ICIsIG5vZGUtPmdhcFtpXSk7DQorCXByX2NvbnQoInwgJTAyWCAlMDJYfCAiLCBu
b2RlLT5tZXRhLmVuZCwgbm9kZS0+bWV0YS5nYXApOw0KKwlmb3IgKGkgPSAwOyBpIDwgTUFQTEVf
QVJBTkdFNjRfU0xPVFMgLSAxOyBpKyspDQorCQlwcl9jb250KCIlcCAlbHUgIiwgbm9kZS0+c2xv
dFtpXSwgbm9kZS0+cGl2b3RbaV0pOw0KKwlwcl9jb250KCIlcFxuIiwgbm9kZS0+c2xvdFtpXSk7
DQorCWZvciAoaSA9IDA7IGkgPCBNQVBMRV9BUkFOR0U2NF9TTE9UUzsgaSsrKSB7DQorCQl1bnNp
Z25lZCBsb25nIGxhc3QgPSBtYXg7DQorDQorCQlpZiAoaSA8IChNQVBMRV9BUkFOR0U2NF9TTE9U
UyAtIDEpKQ0KKwkJCWxhc3QgPSBub2RlLT5waXZvdFtpXTsNCisJCWVsc2UgaWYgKCFub2RlLT5z
bG90W2ldKQ0KKwkJCWJyZWFrOw0KKwkJaWYgKGxhc3QgPT0gMCAmJiBpID4gMCkNCisJCQlicmVh
azsNCisJCWlmIChsZWFmKQ0KKwkJCW10X2R1bXBfZW50cnkobXRfc2xvdChtdCwgbm9kZS0+c2xv
dCwgaSksDQorCQkJCQlmaXJzdCwgbGFzdCwgZGVwdGggKyAxKTsNCisJCWVsc2UgaWYgKG5vZGUt
PnNsb3RbaV0pDQorCQkJbXRfZHVtcF9ub2RlKG10LCBtdF9zbG90KG10LCBub2RlLT5zbG90LCBp
KSwNCisJCQkJCWZpcnN0LCBsYXN0LCBkZXB0aCArIDEpOw0KKw0KKwkJaWYgKGxhc3QgPT0gbWF4
KQ0KKwkJCWJyZWFrOw0KKwkJaWYgKGxhc3QgPiBtYXgpIHsNCisJCQlwcl9lcnIoIm5vZGUgJXAg
bGFzdCAoJWx1KSA+IG1heCAoJWx1KSBhdCBwaXZvdCAlZCFcbiIsDQorCQkJCQlub2RlLCBsYXN0
LCBtYXgsIGkpOw0KKwkJCWJyZWFrOw0KKwkJfQ0KKwkJZmlyc3QgPSBsYXN0ICsgMTsNCisJfQ0K
K30NCisNCitzdGF0aWMgdm9pZCBtdF9kdW1wX25vZGUoY29uc3Qgc3RydWN0IG1hcGxlX3RyZWUg
Km10LCB2b2lkICplbnRyeSwNCisJCXVuc2lnbmVkIGxvbmcgbWluLCB1bnNpZ25lZCBsb25nIG1h
eCwgdW5zaWduZWQgaW50IGRlcHRoKQ0KK3sNCisJc3RydWN0IG1hcGxlX25vZGUgKm5vZGUgPSBt
dGVfdG9fbm9kZShlbnRyeSk7DQorCXVuc2lnbmVkIGludCB0eXBlID0gbXRlX25vZGVfdHlwZShl
bnRyeSk7DQorCXVuc2lnbmVkIGludCBpOw0KKw0KKwltdF9kdW1wX3JhbmdlKG1pbiwgbWF4LCBk
ZXB0aCk7DQorDQorCXByX2NvbnQoIm5vZGUgJXAgZGVwdGggJWQgdHlwZSAlZCBwYXJlbnQgJXAi
LCBub2RlLCBkZXB0aCwgdHlwZSwNCisJCQlub2RlID8gbm9kZS0+cGFyZW50IDogTlVMTCk7DQor
CXN3aXRjaCAodHlwZSkgew0KKwljYXNlIG1hcGxlX2RlbnNlOg0KKwkJcHJfY29udCgiXG4iKTsN
CisJCWZvciAoaSA9IDA7IGkgPCBNQVBMRV9OT0RFX1NMT1RTOyBpKyspIHsNCisJCQlpZiAobWlu
ICsgaSA+IG1heCkNCisJCQkJcHJfY29udCgiT1VUIE9GIFJBTkdFOiAiKTsNCisJCQltdF9kdW1w
X2VudHJ5KG10X3Nsb3QobXQsIG5vZGUtPnNsb3QsIGkpLA0KKwkJCQkJbWluICsgaSwgbWluICsg
aSwgZGVwdGgpOw0KKwkJfQ0KKwkJYnJlYWs7DQorCWNhc2UgbWFwbGVfbGVhZl82NDoNCisJY2Fz
ZSBtYXBsZV9yYW5nZV82NDoNCisJCW10X2R1bXBfcmFuZ2U2NChtdCwgZW50cnksIG1pbiwgbWF4
LCBkZXB0aCk7DQorCQlicmVhazsNCisJY2FzZSBtYXBsZV9hcmFuZ2VfNjQ6DQorCQltdF9kdW1w
X2FyYW5nZTY0KG10LCBlbnRyeSwgbWluLCBtYXgsIGRlcHRoKTsNCisJCWJyZWFrOw0KKw0KKwlk
ZWZhdWx0Og0KKwkJcHJfY29udCgiIFVOS05PV04gVFlQRVxuIik7DQorCX0NCit9DQorDQordm9p
ZCBtdF9kdW1wKGNvbnN0IHN0cnVjdCBtYXBsZV90cmVlICptdCkNCit7DQorCXZvaWQgKmVudHJ5
ID0gcmN1X2RlcmVmZXJlbmNlX2NoZWNrKG10LT5tYV9yb290LCBtdF9sb2NrZWQobXQpKTsNCisN
CisJcHJfaW5mbygibWFwbGVfdHJlZSglcCkgZmxhZ3MgJVgsIGhlaWdodCAldSByb290ICVwXG4i
LA0KKwkJIG10LCBtdC0+bWFfZmxhZ3MsIG10X2hlaWdodChtdCksIGVudHJ5KTsNCisJaWYgKCF4
YV9pc19ub2RlKGVudHJ5KSkNCisJCW10X2R1bXBfZW50cnkoZW50cnksIDAsIDAsIDApOw0KKwll
bHNlIGlmIChlbnRyeSkNCisJCW10X2R1bXBfbm9kZShtdCwgZW50cnksIDAsIG10X21heFttdGVf
bm9kZV90eXBlKGVudHJ5KV0sIDApOw0KK30NCisNCisvKg0KKyAqIENhbGN1bGF0ZSB0aGUgbWF4
aW11bSBnYXAgaW4gYSBub2RlIGFuZCBjaGVjayBpZiB0aGF0J3Mgd2hhdCBpcyByZXBvcnRlZCBp
bg0KKyAqIHRoZSBwYXJlbnQgKHVubGVzcyByb290KS4NCisgKi8NCitzdGF0aWMgdm9pZCBtYXNf
dmFsaWRhdGVfZ2FwcyhzdHJ1Y3QgbWFfc3RhdGUgKm1hcykNCit7DQorCXN0cnVjdCBtYXBsZV9l
bm9kZSAqbXRlID0gbWFzLT5ub2RlOw0KKwlzdHJ1Y3QgbWFwbGVfbm9kZSAqcF9tbjsNCisJdW5z
aWduZWQgbG9uZyBnYXAgPSAwLCBtYXhfZ2FwID0gMDsNCisJdW5zaWduZWQgbG9uZyBwX2VuZCwg
cF9zdGFydCA9IG1hcy0+bWluOw0KKwl1bnNpZ25lZCBjaGFyIHBfc2xvdDsNCisJdW5zaWduZWQg
bG9uZyAqZ2FwcyA9IE5VTEw7DQorCXVuc2lnbmVkIGxvbmcgKnBpdm90cyA9IG1hX3Bpdm90cyht
dGVfdG9fbm9kZShtdGUpLCBtdGVfbm9kZV90eXBlKG10ZSkpOw0KKwlpbnQgaTsNCisNCisJaWYg
KG1hX2lzX2RlbnNlKG10ZV9ub2RlX3R5cGUobXRlKSkpIHsNCisJCWZvciAoaSA9IDA7IGkgPCBt
dF9zbG90X2NvdW50KG10ZSk7IGkrKykgew0KKwkJCWlmIChtYXNfZ2V0X3Nsb3QobWFzLCBpKSkg
ew0KKwkJCQlpZiAoZ2FwID4gbWF4X2dhcCkNCisJCQkJCW1heF9nYXAgPSBnYXA7DQorCQkJCWdh
cCA9IDA7DQorCQkJCWNvbnRpbnVlOw0KKwkJCX0NCisJCQlnYXArKzsNCisJCX0NCisJCWdvdG8g
Y291bnRlZDsNCisJfQ0KKw0KKwlnYXBzID0gbWFfZ2FwcyhtdGVfdG9fbm9kZShtdGUpLCBtdGVf
bm9kZV90eXBlKG10ZSkpOw0KKwlmb3IgKGkgPSAwOyBpIDwgbXRfc2xvdF9jb3VudChtdGUpOyBp
KyspIHsNCisJCXBfZW5kID0gbWFzX2xvZ2ljYWxfcGl2b3QobWFzLCBwaXZvdHMsIGksIG10ZV9u
b2RlX3R5cGUobXRlKSk7DQorDQorCQlpZiAoIWdhcHMpIHsNCisJCQlpZiAobWFzX2dldF9zbG90
KG1hcywgaSkpIHsNCisJCQkJZ2FwID0gMDsNCisJCQkJZ290byBub3RfZW1wdHk7DQorCQkJfQ0K
Kw0KKwkJCWdhcCArPSBwX2VuZCAtIHBfc3RhcnQgKyAxOw0KKwkJfSBlbHNlIHsNCisJCQl2b2lk
ICplbnRyeSA9IG1hc19nZXRfc2xvdChtYXMsIGkpOw0KKw0KKwkJCWdhcCA9IGdhcHNbaV07DQor
CQkJaWYgKCFlbnRyeSkgew0KKwkJCQlpZiAoZ2FwICE9IHBfZW5kIC0gcF9zdGFydCArIDEpIHsN
CisJCQkJCXByX2VycigiJXBbJXVdIC0+ICVwICVsdSAhPSAlbHUgLSAlbHUgKyAxXG4iLA0KKwkJ
CQkJCW1hc19tbihtYXMpLCBpLA0KKwkJCQkJCW1hc19nZXRfc2xvdChtYXMsIGkpLCBnYXAsDQor
CQkJCQkJcF9lbmQsIHBfc3RhcnQpOw0KKwkJCQkJbXRfZHVtcChtYXMtPnRyZWUpOw0KKw0KKwkJ
CQkJTVRfQlVHX09OKG1hcy0+dHJlZSwNCisJCQkJCQlnYXAgIT0gcF9lbmQgLSBwX3N0YXJ0ICsg
MSk7DQorCQkJCX0NCisJCQl9IGVsc2Ugew0KKwkJCQlpZiAoZ2FwID4gcF9lbmQgLSBwX3N0YXJ0
ICsgMSkgew0KKwkJCQkJcHJfZXJyKCIlcFsldV0gJWx1ID49ICVsdSAtICVsdSArIDEgKCVsdSlc
biIsDQorCQkJCQltYXNfbW4obWFzKSwgaSwgZ2FwLCBwX2VuZCwgcF9zdGFydCwNCisJCQkJCXBf
ZW5kIC0gcF9zdGFydCArIDEpOw0KKwkJCQkJTVRfQlVHX09OKG1hcy0+dHJlZSwNCisJCQkJCQln
YXAgPiBwX2VuZCAtIHBfc3RhcnQgKyAxKTsNCisJCQkJfQ0KKwkJCX0NCisJCX0NCisNCisJCWlm
IChnYXAgPiBtYXhfZ2FwKQ0KKwkJCW1heF9nYXAgPSBnYXA7DQorbm90X2VtcHR5Og0KKwkJcF9z
dGFydCA9IHBfZW5kICsgMTsNCisJCWlmIChwX2VuZCA+PSBtYXMtPm1heCkNCisJCQlicmVhazsN
CisJfQ0KKw0KK2NvdW50ZWQ6DQorCWlmIChtdGVfaXNfcm9vdChtdGUpKQ0KKwkJcmV0dXJuOw0K
Kw0KKwlwX3Nsb3QgPSBtdGVfcGFyZW50X3Nsb3QobWFzLT5ub2RlKTsNCisJcF9tbiA9IG10ZV9w
YXJlbnQobXRlKTsNCisJTVRfQlVHX09OKG1hcy0+dHJlZSwgbWF4X2dhcCA+IG1hcy0+bWF4KTsN
CisJaWYgKG1hX2dhcHMocF9tbiwgbWFzX3BhcmVudF9lbnVtKG1hcywgbXRlKSlbcF9zbG90XSAh
PSBtYXhfZ2FwKSB7DQorCQlwcl9lcnIoImdhcCAlcFsldV0gIT0gJWx1XG4iLCBwX21uLCBwX3Ns
b3QsIG1heF9nYXApOw0KKwkJbXRfZHVtcChtYXMtPnRyZWUpOw0KKwl9DQorDQorCU1UX0JVR19P
TihtYXMtPnRyZWUsDQorCQkgIG1hX2dhcHMocF9tbiwgbWFzX3BhcmVudF9lbnVtKG1hcywgbXRl
KSlbcF9zbG90XSAhPSBtYXhfZ2FwKTsNCit9DQorDQorc3RhdGljIHZvaWQgbWFzX3ZhbGlkYXRl
X3BhcmVudF9zbG90KHN0cnVjdCBtYV9zdGF0ZSAqbWFzKQ0KK3sNCisJc3RydWN0IG1hcGxlX25v
ZGUgKnBhcmVudDsNCisJc3RydWN0IG1hcGxlX2Vub2RlICpub2RlOw0KKwllbnVtIG1hcGxlX3R5
cGUgcF90eXBlID0gbWFzX3BhcmVudF9lbnVtKG1hcywgbWFzLT5ub2RlKTsNCisJdW5zaWduZWQg
Y2hhciBwX3Nsb3QgPSBtdGVfcGFyZW50X3Nsb3QobWFzLT5ub2RlKTsNCisJdm9pZCBfX3JjdSAq
KnNsb3RzOw0KKwlpbnQgaTsNCisNCisJaWYgKG10ZV9pc19yb290KG1hcy0+bm9kZSkpDQorCQly
ZXR1cm47DQorDQorCXBhcmVudCA9IG10ZV9wYXJlbnQobWFzLT5ub2RlKTsNCisJc2xvdHMgPSBt
YV9zbG90cyhwYXJlbnQsIHBfdHlwZSk7DQorCU1UX0JVR19PTihtYXMtPnRyZWUsIG1hc19tbiht
YXMpID09IHBhcmVudCk7DQorDQorCS8qIENoZWNrIHByZXYvbmV4dCBwYXJlbnQgc2xvdCBmb3Ig
ZHVwbGljYXRlIG5vZGUgZW50cnkgKi8NCisNCisJZm9yIChpID0gMDsgaSA8IG10X3Nsb3RzW3Bf
dHlwZV07IGkrKykgew0KKwkJbm9kZSA9IG1hc19zbG90KG1hcywgc2xvdHMsIGkpOw0KKwkJaWYg
KGkgPT0gcF9zbG90KSB7DQorCQkJaWYgKG5vZGUgIT0gbWFzLT5ub2RlKQ0KKwkJCQlwcl9lcnIo
InBhcmVudCAlcFsldV0gZG9lcyBub3QgaGF2ZSAlcFxuIiwNCisJCQkJCXBhcmVudCwgaSwgbWFz
X21uKG1hcykpOw0KKwkJCU1UX0JVR19PTihtYXMtPnRyZWUsIG5vZGUgIT0gbWFzLT5ub2RlKTsN
CisJCX0gZWxzZSBpZiAobm9kZSA9PSBtYXMtPm5vZGUpIHsNCisJCQlwcl9lcnIoIkludmFsaWQg
Y2hpbGQgJXAgYXQgcGFyZW50ICVwWyV1XSBwX3Nsb3QgJXVcbiIsDQorCQkJICAgICAgIG1hc19t
bihtYXMpLCBwYXJlbnQsIGksIHBfc2xvdCk7DQorCQkJTVRfQlVHX09OKG1hcy0+dHJlZSwgbm9k
ZSA9PSBtYXMtPm5vZGUpOw0KKwkJfQ0KKwl9DQorfQ0KKw0KK3N0YXRpYyB2b2lkIG1hc192YWxp
ZGF0ZV9jaGlsZF9zbG90KHN0cnVjdCBtYV9zdGF0ZSAqbWFzKQ0KK3sNCisJZW51bSBtYXBsZV90
eXBlIHR5cGUgPSBtdGVfbm9kZV90eXBlKG1hcy0+bm9kZSk7DQorCXZvaWQgX19yY3UgKipzbG90
cyA9IG1hX3Nsb3RzKG10ZV90b19ub2RlKG1hcy0+bm9kZSksIHR5cGUpOw0KKwl1bnNpZ25lZCBs
b25nICpwaXZvdHMgPSBtYV9waXZvdHMobXRlX3RvX25vZGUobWFzLT5ub2RlKSwgdHlwZSk7DQor
CXN0cnVjdCBtYXBsZV9lbm9kZSAqY2hpbGQ7DQorCXVuc2lnbmVkIGNoYXIgaTsNCisNCisJaWYg
KG10ZV9pc19sZWFmKG1hcy0+bm9kZSkpDQorCQlyZXR1cm47DQorDQorCWZvciAoaSA9IDA7IGkg
PCBtdF9zbG90c1t0eXBlXTsgaSsrKSB7DQorCQljaGlsZCA9IG1hc19zbG90KG1hcywgc2xvdHMs
IGkpOw0KKwkJaWYgKCFwaXZvdHNbaV0gfHwgcGl2b3RzW2ldID09IG1hcy0+bWF4KQ0KKwkJCWJy
ZWFrOw0KKw0KKwkJaWYgKCFjaGlsZCkNCisJCQlicmVhazsNCisNCisJCWlmIChtdGVfcGFyZW50
X3Nsb3QoY2hpbGQpICE9IGkpIHsNCisJCQlwcl9lcnIoIlNsb3QgZXJyb3IgYXQgJXBbJXVdOiBj
aGlsZCAlcCBoYXMgcHNsb3QgJXVcbiIsDQorCQkJICAgICAgIG1hc19tbihtYXMpLCBpLCBtdGVf
dG9fbm9kZShjaGlsZCksDQorCQkJICAgICAgIG10ZV9wYXJlbnRfc2xvdChjaGlsZCkpOw0KKwkJ
CU1UX0JVR19PTihtYXMtPnRyZWUsIDEpOw0KKwkJfQ0KKw0KKwkJaWYgKG10ZV9wYXJlbnQoY2hp
bGQpICE9IG10ZV90b19ub2RlKG1hcy0+bm9kZSkpIHsNCisJCQlwcl9lcnIoImNoaWxkICVwIGhh
cyBwYXJlbnQgJXAgbm90ICVwXG4iLA0KKwkJCSAgICAgICBtdGVfdG9fbm9kZShjaGlsZCksIG10
ZV9wYXJlbnQoY2hpbGQpLA0KKwkJCSAgICAgICBtdGVfdG9fbm9kZShtYXMtPm5vZGUpKTsNCisJ
CQlNVF9CVUdfT04obWFzLT50cmVlLCAxKTsNCisJCX0NCisJfQ0KK30NCisNCisvKg0KKyAqIFZh
bGlkYXRlIGFsbCBwaXZvdHMgYXJlIHdpdGhpbiBtYXMtPm1pbiBhbmQgbWFzLT5tYXguDQorICov
DQorc3RhdGljIHZvaWQgbWFzX3ZhbGlkYXRlX2xpbWl0cyhzdHJ1Y3QgbWFfc3RhdGUgKm1hcykN
Cit7DQorCWludCBpOw0KKwl1bnNpZ25lZCBsb25nIHByZXZfcGl2ID0gMDsNCisJZW51bSBtYXBs
ZV90eXBlIHR5cGUgPSBtdGVfbm9kZV90eXBlKG1hcy0+bm9kZSk7DQorCXZvaWQgX19yY3UgKipz
bG90cyA9IG1hX3Nsb3RzKG10ZV90b19ub2RlKG1hcy0+bm9kZSksIHR5cGUpOw0KKwl1bnNpZ25l
ZCBsb25nICpwaXZvdHMgPSBtYV9waXZvdHMobWFzX21uKG1hcyksIHR5cGUpOw0KKw0KKwkvKiBh
bGwgbGltaXRzIGFyZSBmaW5lIGhlcmUuICovDQorCWlmIChtdGVfaXNfcm9vdChtYXMtPm5vZGUp
KQ0KKwkJcmV0dXJuOw0KKw0KKwlmb3IgKGkgPSAwOyBpIDwgbXRfc2xvdHNbdHlwZV07IGkrKykg
ew0KKwkJdW5zaWduZWQgbG9uZyBwaXY7DQorDQorCQlwaXYgPSBtYXNfc2FmZV9waXZvdChtYXMs
IHBpdm90cywgaSwgdHlwZSk7DQorDQorCQlpZiAoIXBpdiAmJiAoaSAhPSAwKSkNCisJCQlicmVh
azsNCisNCisJCWlmICghbXRlX2lzX2xlYWYobWFzLT5ub2RlKSkgew0KKwkJCXZvaWQgKmVudHJ5
ID0gbWFzX3Nsb3QobWFzLCBzbG90cywgaSk7DQorDQorCQkJaWYgKCFlbnRyeSkNCisJCQkJcHJf
ZXJyKCIlcFsldV0gY2Fubm90IGJlIG51bGxcbiIsDQorCQkJCSAgICAgICBtYXNfbW4obWFzKSwg
aSk7DQorDQorCQkJTVRfQlVHX09OKG1hcy0+dHJlZSwgIWVudHJ5KTsNCisJCX0NCisNCisJCWlm
IChwcmV2X3BpdiA+IHBpdikgew0KKwkJCXByX2VycigiJXBbJXVdIHBpdiAlbHUgPCBwcmV2X3Bp
diAlbHVcbiIsDQorCQkJCW1hc19tbihtYXMpLCBpLCBwaXYsIHByZXZfcGl2KTsNCisJCQlNVF9C
VUdfT04obWFzLT50cmVlLCBwaXYgPCBwcmV2X3Bpdik7DQorCQl9DQorDQorCQlpZiAocGl2IDwg
bWFzLT5taW4pIHsNCisJCQlwcl9lcnIoIiVwWyV1XSAlbHUgPCAlbHVcbiIsIG1hc19tbihtYXMp
LCBpLA0KKwkJCQlwaXYsIG1hcy0+bWluKTsNCisJCQlNVF9CVUdfT04obWFzLT50cmVlLCBwaXYg
PCBtYXMtPm1pbik7DQorCQl9DQorCQlpZiAocGl2ID4gbWFzLT5tYXgpIHsNCisJCQlwcl9lcnIo
IiVwWyV1XSAlbHUgPiAlbHVcbiIsIG1hc19tbihtYXMpLCBpLA0KKwkJCQlwaXYsIG1hcy0+bWF4
KTsNCisJCQlNVF9CVUdfT04obWFzLT50cmVlLCBwaXYgPiBtYXMtPm1heCk7DQorCQl9DQorCQlw
cmV2X3BpdiA9IHBpdjsNCisJCWlmIChwaXYgPT0gbWFzLT5tYXgpDQorCQkJYnJlYWs7DQorCX0N
CisJZm9yIChpICs9IDE7IGkgPCBtdF9zbG90c1t0eXBlXTsgaSsrKSB7DQorCQl2b2lkICplbnRy
eSA9IG1hc19zbG90KG1hcywgc2xvdHMsIGkpOw0KKw0KKwkJaWYgKGVudHJ5ICYmIChpICE9IG10
X3Nsb3RzW3R5cGVdIC0gMSkpIHsNCisJCQlwcl9lcnIoIiVwWyV1XSBzaG91bGQgbm90IGhhdmUg
ZW50cnkgJXBcbiIsIG1hc19tbihtYXMpLA0KKwkJCSAgICAgICBpLCBlbnRyeSk7DQorCQkJTVRf
QlVHX09OKG1hcy0+dHJlZSwgZW50cnkgIT0gTlVMTCk7DQorCQl9DQorDQorCQlpZiAoaSA8IG10
X3Bpdm90c1t0eXBlXSkgew0KKwkJCXVuc2lnbmVkIGxvbmcgcGl2ID0gcGl2b3RzW2ldOw0KKw0K
KwkJCWlmICghcGl2KQ0KKwkJCQljb250aW51ZTsNCisNCisJCQlwcl9lcnIoIiVwWyV1XSBzaG91
bGQgbm90IGhhdmUgcGl2ICVsdVxuIiwNCisJCQkgICAgICAgbWFzX21uKG1hcyksIGksIHBpdik7
DQorCQkJTVRfQlVHX09OKG1hcy0+dHJlZSwgaSA8IG10X3Bpdm90c1t0eXBlXSAtIDEpOw0KKwkJ
fQ0KKwl9DQorfQ0KKw0KK3N0YXRpYyB2b2lkIG10X3ZhbGlkYXRlX251bGxzKHN0cnVjdCBtYXBs
ZV90cmVlICptdCkNCit7DQorCXZvaWQgKmVudHJ5LCAqbGFzdCA9ICh2b2lkICopMTsNCisJdW5z
aWduZWQgY2hhciBvZmZzZXQgPSAwOw0KKwl2b2lkIF9fcmN1ICoqc2xvdHM7DQorCU1BX1NUQVRF
KG1hcywgbXQsIDAsIDApOw0KKw0KKwltYXNfc3RhcnQoJm1hcyk7DQorCWlmIChtYXNfaXNfbm9u
ZSgmbWFzKSB8fCAobWFzLm5vZGUgPT0gTUFTX1JPT1QpKQ0KKwkJcmV0dXJuOw0KKw0KKwl3aGls
ZSAoIW10ZV9pc19sZWFmKG1hcy5ub2RlKSkNCisJCW1hc19kZXNjZW5kKCZtYXMpOw0KKw0KKwlz
bG90cyA9IG1hX3Nsb3RzKG10ZV90b19ub2RlKG1hcy5ub2RlKSwgbXRlX25vZGVfdHlwZShtYXMu
bm9kZSkpOw0KKwlkbyB7DQorCQllbnRyeSA9IG1hc19zbG90KCZtYXMsIHNsb3RzLCBvZmZzZXQp
Ow0KKwkJaWYgKCFsYXN0ICYmICFlbnRyeSkgew0KKwkJCXByX2VycigiU2VxdWVudGlhbCBudWxs
cyBlbmQgYXQgJXBbJXVdXG4iLA0KKwkJCQltYXNfbW4oJm1hcyksIG9mZnNldCk7DQorCQl9DQor
CQlNVF9CVUdfT04obXQsICFsYXN0ICYmICFlbnRyeSk7DQorCQlsYXN0ID0gZW50cnk7DQorCQlp
ZiAob2Zmc2V0ID09IG1hc19kYXRhX2VuZCgmbWFzKSkgew0KKwkJCW1hc19uZXh0X25vZGUoJm1h
cywgbWFzX21uKCZtYXMpLCBVTE9OR19NQVgpOw0KKwkJCWlmIChtYXNfaXNfbm9uZSgmbWFzKSkN
CisJCQkJcmV0dXJuOw0KKwkJCW9mZnNldCA9IDA7DQorCQkJc2xvdHMgPSBtYV9zbG90cyhtdGVf
dG9fbm9kZShtYXMubm9kZSksDQorCQkJCQkgbXRlX25vZGVfdHlwZShtYXMubm9kZSkpOw0KKwkJ
fSBlbHNlIHsNCisJCQlvZmZzZXQrKzsNCisJCX0NCisNCisJfSB3aGlsZSAoIW1hc19pc19ub25l
KCZtYXMpKTsNCit9DQorDQorLyoNCisgKiB2YWxpZGF0ZSBhIG1hcGxlIHRyZWUgYnkgY2hlY2tp
bmc6DQorICogMS4gVGhlIGxpbWl0cyAocGl2b3RzIGFyZSB3aXRoaW4gbWFzLT5taW4gdG8gbWFz
LT5tYXgpDQorICogMi4gVGhlIGdhcCBpcyBjb3JyZWN0bHkgc2V0IGluIHRoZSBwYXJlbnRzDQor
ICovDQordm9pZCBtdF92YWxpZGF0ZShzdHJ1Y3QgbWFwbGVfdHJlZSAqbXQpDQorew0KKwl1bnNp
Z25lZCBjaGFyIGVuZDsNCisNCisJTUFfU1RBVEUobWFzLCBtdCwgMCwgMCk7DQorCXJjdV9yZWFk
X2xvY2soKTsNCisJbWFzX3N0YXJ0KCZtYXMpOw0KKwlpZiAoIW1hc19zZWFyY2hhYmxlKCZtYXMp
KQ0KKwkJZ290byBkb25lOw0KKw0KKwltYXNfZmlyc3RfZW50cnkoJm1hcywgbWFzX21uKCZtYXMp
LCBVTE9OR19NQVgsIG10ZV9ub2RlX3R5cGUobWFzLm5vZGUpKTsNCisJd2hpbGUgKCFtYXNfaXNf
bm9uZSgmbWFzKSkgew0KKwkJTVRfQlVHX09OKG1hcy50cmVlLCBtdGVfZGVhZF9ub2RlKG1hcy5u
b2RlKSk7DQorCQlpZiAoIW10ZV9pc19yb290KG1hcy5ub2RlKSkgew0KKwkJCWVuZCA9IG1hc19k
YXRhX2VuZCgmbWFzKTsNCisJCQlpZiAoKGVuZCA8IG10X21pbl9zbG90X2NvdW50KG1hcy5ub2Rl
KSkgJiYNCisJCQkgICAgKG1hcy5tYXggIT0gVUxPTkdfTUFYKSkgew0KKwkJCQlwcl9lcnIoIklu
dmFsaWQgc2l6ZSAldSBvZiAlcFxuIiwgZW5kLA0KKwkJCQltYXNfbW4oJm1hcykpOw0KKwkJCQlN
VF9CVUdfT04obWFzLnRyZWUsIDEpOw0KKwkJCX0NCisNCisJCX0NCisJCW1hc192YWxpZGF0ZV9w
YXJlbnRfc2xvdCgmbWFzKTsNCisJCW1hc192YWxpZGF0ZV9jaGlsZF9zbG90KCZtYXMpOw0KKwkJ
bWFzX3ZhbGlkYXRlX2xpbWl0cygmbWFzKTsNCisJCWlmIChtdF9pc19hbGxvYyhtdCkpDQorCQkJ
bWFzX3ZhbGlkYXRlX2dhcHMoJm1hcyk7DQorCQltYXNfZGZzX3Bvc3RvcmRlcigmbWFzLCBVTE9O
R19NQVgpOw0KKwl9DQorCW10X3ZhbGlkYXRlX251bGxzKG10KTsNCitkb25lOg0KKwlyY3VfcmVh
ZF91bmxvY2soKTsNCisNCit9DQorDQorI2VuZGlmIC8qIENPTkZJR19ERUJVR19NQVBMRV9UUkVF
ICovDQpkaWZmIC0tZ2l0IGEvdG9vbHMvdGVzdGluZy9yYWRpeC10cmVlLy5naXRpZ25vcmUgYi90
b29scy90ZXN0aW5nL3JhZGl4LXRyZWUvLmdpdGlnbm9yZQ0KaW5kZXggZDk3MTUxNjQwMWU2Li5j
OTAxZDk2ZGQwMTMgMTAwNjQ0DQotLS0gYS90b29scy90ZXN0aW5nL3JhZGl4LXRyZWUvLmdpdGln
bm9yZQ0KKysrIGIvdG9vbHMvdGVzdGluZy9yYWRpeC10cmVlLy5naXRpZ25vcmUNCkBAIC02LDMg
KzYsNSBAQCBtYWluDQogbXVsdGlvcmRlcg0KIHJhZGl4LXRyZWUuYw0KIHhhcnJheQ0KK21hcGxl
DQorbWFfeGFfYmVuY2htYXJrDQpkaWZmIC0tZ2l0IGEvdG9vbHMvdGVzdGluZy9yYWRpeC10cmVl
L2dlbmVyYXRlZC9hdXRvY29uZi5oIGIvdG9vbHMvdGVzdGluZy9yYWRpeC10cmVlL2dlbmVyYXRl
ZC9hdXRvY29uZi5oDQppbmRleCAyMjE4YjNjYzE4NGUuLmU3ZGE4MDM1MDIzNiAxMDA2NDQNCi0t
LSBhL3Rvb2xzL3Rlc3RpbmcvcmFkaXgtdHJlZS9nZW5lcmF0ZWQvYXV0b2NvbmYuaA0KKysrIGIv
dG9vbHMvdGVzdGluZy9yYWRpeC10cmVlL2dlbmVyYXRlZC9hdXRvY29uZi5oDQpAQCAtMSArMSwy
IEBADQogI2RlZmluZSBDT05GSUdfWEFSUkFZX01VTFRJIDENCisjZGVmaW5lIENPTkZJR182NEJJ
VCAxDQpkaWZmIC0tZ2l0IGEvdG9vbHMvdGVzdGluZy9yYWRpeC10cmVlL2xpbnV4L21hcGxlX3Ry
ZWUuaCBiL3Rvb2xzL3Rlc3RpbmcvcmFkaXgtdHJlZS9saW51eC9tYXBsZV90cmVlLmgNCm5ldyBm
aWxlIG1vZGUgMTAwNjQ0DQppbmRleCAwMDAwMDAwMDAwMDAuLjdkOGQxZjQ0NWI4OQ0KLS0tIC9k
ZXYvbnVsbA0KKysrIGIvdG9vbHMvdGVzdGluZy9yYWRpeC10cmVlL2xpbnV4L21hcGxlX3RyZWUu
aA0KQEAgLTAsMCArMSw3IEBADQorLyogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEdQTC0yLjAr
ICovDQorI2RlZmluZSBhdG9taWNfdCBpbnQzMl90DQorI2luY2x1ZGUgIi4uLy4uLy4uLy4uL2lu
Y2x1ZGUvbGludXgvbWFwbGVfdHJlZS5oIg0KKyNkZWZpbmUgYXRvbWljX2luYyh4KSB1YXRvbWlj
X2luYyh4KQ0KKyNkZWZpbmUgYXRvbWljX3JlYWQoeCkgdWF0b21pY19yZWFkKHgpDQorI2RlZmlu
ZSBhdG9taWNfc2V0KHgsIHkpIGRvIHt9IHdoaWxlICgwKQ0KKyNkZWZpbmUgVThfTUFYIFVDSEFS
X01BWA0KZGlmZiAtLWdpdCBhL3Rvb2xzL3Rlc3RpbmcvcmFkaXgtdHJlZS9tYXBsZS5jIGIvdG9v
bHMvdGVzdGluZy9yYWRpeC10cmVlL21hcGxlLmMNCm5ldyBmaWxlIG1vZGUgMTAwNjQ0DQppbmRl
eCAwMDAwMDAwMDAwMDAuLjM1MDgyNjcxOTI4YQ0KLS0tIC9kZXYvbnVsbA0KKysrIGIvdG9vbHMv
dGVzdGluZy9yYWRpeC10cmVlL21hcGxlLmMNCkBAIC0wLDAgKzEsNTkgQEANCisvLyBTUERYLUxp
Y2Vuc2UtSWRlbnRpZmllcjogR1BMLTIuMCsNCisvKg0KKyAqIG1hcGxlX3RyZWUuYzogVXNlcnNw
YWNlIHNoaW0gZm9yIG1hcGxlIHRyZWUgdGVzdC1zdWl0ZQ0KKyAqIENvcHlyaWdodCAoYykgMjAx
OCBMaWFtIFIuIEhvd2xldHQgPExpYW0uSG93bGV0dEBPcmFjbGUuY29tPg0KKyAqLw0KKw0KKyNk
ZWZpbmUgQ09ORklHX0RFQlVHX01BUExFX1RSRUUNCisjZGVmaW5lIENPTkZJR19NQVBMRV9TRUFS
Q0gNCisjaW5jbHVkZSAidGVzdC5oIg0KKw0KKyNkZWZpbmUgbW9kdWxlX2luaXQoeCkNCisjZGVm
aW5lIG1vZHVsZV9leGl0KHgpDQorI2RlZmluZSBNT0RVTEVfQVVUSE9SKHgpDQorI2RlZmluZSBN
T0RVTEVfTElDRU5TRSh4KQ0KKyNkZWZpbmUgZHVtcF9zdGFjaygpCWFzc2VydCgwKQ0KKw0KKyNp
bmNsdWRlICIuLi8uLi8uLi9saWIvbWFwbGVfdHJlZS5jIg0KKyN1bmRlZiBDT05GSUdfREVCVUdf
TUFQTEVfVFJFRQ0KKyNpbmNsdWRlICIuLi8uLi8uLi9saWIvdGVzdF9tYXBsZV90cmVlLmMiDQor
DQordm9pZCBmYXJtZXJfdGVzdHModm9pZCkNCit7DQorCXN0cnVjdCBtYXBsZV9ub2RlICpub2Rl
Ow0KKwlERUZJTkVfTVRSRUUodHJlZSk7DQorDQorCW10X2R1bXAoJnRyZWUpOw0KKw0KKwl0cmVl
Lm1hX3Jvb3QgPSB4YV9ta192YWx1ZSgwKTsNCisJbXRfZHVtcCgmdHJlZSk7DQorDQorCW5vZGUg
PSBtdF9hbGxvY19vbmUoR0ZQX0tFUk5FTCk7DQorCW5vZGUtPnBhcmVudCA9ICh2b2lkICopKCh1
bnNpZ25lZCBsb25nKSgmdHJlZSkgfCAxKTsNCisJbm9kZS0+c2xvdFswXSA9IHhhX21rX3ZhbHVl
KDApOw0KKwlub2RlLT5zbG90WzFdID0geGFfbWtfdmFsdWUoMSk7DQorCW5vZGUtPm1yNjQucGl2
b3RbMF0gPSAwOw0KKwlub2RlLT5tcjY0LnBpdm90WzFdID0gMTsNCisJbm9kZS0+bXI2NC5waXZv
dFsyXSA9IDA7DQorCXRyZWUubWFfcm9vdCA9IG10X21rX25vZGUobm9kZSwgbWFwbGVfbGVhZl82
NCk7DQorCW10X2R1bXAoJnRyZWUpOw0KKw0KKwltYV9mcmVlX3JjdShub2RlKTsNCit9DQorDQor
dm9pZCBtYXBsZV90cmVlX3Rlc3RzKHZvaWQpDQorew0KKwlmYXJtZXJfdGVzdHMoKTsNCisJbWFw
bGVfdHJlZV9zZWVkKCk7DQorCW1hcGxlX3RyZWVfaGFydmVzdCgpOw0KK30NCisNCitpbnQgX193
ZWFrIG1haW4odm9pZCkNCit7DQorCW1hcGxlX3RyZWVfaW5pdCgpOw0KKwltYXBsZV90cmVlX3Rl
c3RzKCk7DQorCXJjdV9iYXJyaWVyKCk7DQorCWlmIChucl9hbGxvY2F0ZWQpDQorCQlwcmludGYo
Im5yX2FsbG9jYXRlZCA9ICVkXG4iLCBucl9hbGxvY2F0ZWQpOw0KKwlyZXR1cm4gMDsNCit9DQpk
aWZmIC0tZ2l0IGEvdG9vbHMvdGVzdGluZy9yYWRpeC10cmVlL3RyYWNlL2V2ZW50cy9tYXBsZV90
cmVlLmggYi90b29scy90ZXN0aW5nL3JhZGl4LXRyZWUvdHJhY2UvZXZlbnRzL21hcGxlX3RyZWUu
aA0KbmV3IGZpbGUgbW9kZSAxMDA2NDQNCmluZGV4IDAwMDAwMDAwMDAwMC4uOTdkMGUxZGRjZjA4
DQotLS0gL2Rldi9udWxsDQorKysgYi90b29scy90ZXN0aW5nL3JhZGl4LXRyZWUvdHJhY2UvZXZl
bnRzL21hcGxlX3RyZWUuaA0KQEAgLTAsMCArMSw1IEBADQorLyogU1BEWC1MaWNlbnNlLUlkZW50
aWZpZXI6IEdQTC0yLjArICovDQorDQorI2RlZmluZSB0cmFjZV9tYV9vcChhLCBiKSBkbyB7fSB3
aGlsZSAoMCkNCisjZGVmaW5lIHRyYWNlX21hX3JlYWQoYSwgYikgZG8ge30gd2hpbGUgKDApDQor
I2RlZmluZSB0cmFjZV9tYV93cml0ZShhLCBiLCBjLCBkKSBkbyB7fSB3aGlsZSAoMCkNCi0tIA0K
Mi4zNS4xDQo=
