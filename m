Return-Path: <linux-kernel-owner@vger.kernel.org>
X-Original-To: lists+linux-kernel@lfdr.de
Delivered-To: lists+linux-kernel@lfdr.de
Received: from out1.vger.email (out1.vger.email [IPv6:2620:137:e000::1:20])
	by mail.lfdr.de (Postfix) with ESMTP id 142174B6F1C
	for <lists+linux-kernel@lfdr.de>; Tue, 15 Feb 2022 15:46:14 +0100 (CET)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S239033AbiBOOoi (ORCPT <rfc822;lists+linux-kernel@lfdr.de>);
        Tue, 15 Feb 2022 09:44:38 -0500
Received: from mxb-00190b01.gslb.pphosted.com ([23.128.96.19]:52744 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S238964AbiBOOnw (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 15 Feb 2022 09:43:52 -0500
Received: from mx0b-00069f02.pphosted.com (mx0b-00069f02.pphosted.com [205.220.177.32])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 4BF941029DA
        for <linux-kernel@vger.kernel.org>; Tue, 15 Feb 2022 06:43:28 -0800 (PST)
Received: from pps.filterd (m0246631.ppops.net [127.0.0.1])
        by mx0b-00069f02.pphosted.com (8.16.1.2/8.16.1.2) with SMTP id 21FD1S50007111;
        Tue, 15 Feb 2022 14:43:13 GMT
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=oracle.com; h=from : to : subject :
 date : message-id : references : in-reply-to : content-type : content-id :
 content-transfer-encoding : mime-version; s=corp-2021-07-09;
 bh=UtfODTA5hEUB3w0g5kfV/ge938jAfM1w8dzVsnedGbI=;
 b=EoXqDiwRBGfkJkYqFKXsfOQYC5U3dPsfObjuvkCrMLiTJOETJMAVPYnKvvZvvRR7F3MB
 esNQhsjIVqBAI663F4GGFNrS+DnZTJt0LE70fIHvdkFCjhUrp2GeY1P+tuz236KBYyuh
 8oGNWdiJ6abMeAUsMPHmSnISeBdbIVYu1eqlhl5xMgftIyA2Ef1PWhqzrCsho22/l/XJ
 WK/otMb3uHm9wKfFE0ZDSJ3GuxSP3VhM3hRynLU41aWFNu5g97w1jLzX5unRqQ1xQbzO
 Sar5hsDBilU9r8ia7jsNH9VNYln7Si/gB/1w95Xi5c606WYJUjlKUbMViVP5Tn15S+Ah 2g== 
Received: from userp3020.oracle.com (userp3020.oracle.com [156.151.31.79])
        by mx0b-00069f02.pphosted.com with ESMTP id 3e884r97e3-1
        (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=OK);
        Tue, 15 Feb 2022 14:43:11 +0000
Received: from pps.filterd (userp3020.oracle.com [127.0.0.1])
        by userp3020.oracle.com (8.16.1.2/8.16.1.2) with SMTP id 21FEeVaP085748;
        Tue, 15 Feb 2022 14:43:10 GMT
Received: from nam10-dm6-obe.outbound.protection.outlook.com (mail-dm6nam10lp2107.outbound.protection.outlook.com [104.47.58.107])
        by userp3020.oracle.com with ESMTP id 3e66bnpja7-1
        (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=OK);
        Tue, 15 Feb 2022 14:43:08 +0000
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=mzPg6+/SkLcv1ukU/ac0cR1VhD1WQr6StxZcp4VzK90o7VYglVFNQJt8lod/ja8SgcI7n0Z8cGWKr4umpGcmwYFPgEUBfY5b5qB88EbmgkzPsyAXwPNp1ZrXGfD2Nq6g8IiJwJtCJAMeYbIvOWcwiy9I0Nn2KXEkjhb/EjZLJGD+M86O5Kr46oHnHmH9BGpYsvREtuLp5uVF78ZH2Dz5UFyw0UoHfwtEWGvLuFMGU6OlaORTTLmnWIXKnECnp520jQUjm/kUGZz84qTSehzoQFH/KyBCqyDFi9Ym6Zv0rbmgLkDSmJMS9GpDmvtYeIx+8uMkfdaqBycKtXJD72D60A==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=UtfODTA5hEUB3w0g5kfV/ge938jAfM1w8dzVsnedGbI=;
 b=GNNV0o2Ps6vxBePI8dlk2snTQocRpMZ+Ncy8pez/CWG/Wd/lCc4NpnjRjXRp7IFkmHrQTTKBH+dQvrBKPi4spxiPEJVknKbWXDst7cDb8gYMwGdgnu5NTpXwbE6lpSfNnaDh2zZndsoCSnurS0HkoLod0/DoGVCJTDLtGROYnlFPDPMGc9jD7A77W6xm/Pgral+uuJZNSDJKygXgIPx3YNKBSMbijeQnsOREQqx9v70AdPovzwsdsemGL0VmOS3jNmxyWdWZAE5a71VFlCujL5sust2QRsg3v0wPLTsCt238q4Af250lrgWdCmvUvDsUstTrHloNcJgWRl4YnaK+Mw==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=none; dmarc=none;
 dkim=none; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=oracle.onmicrosoft.com; s=selector2-oracle-onmicrosoft-com;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=UtfODTA5hEUB3w0g5kfV/ge938jAfM1w8dzVsnedGbI=;
 b=OqCj1rHNsWoNWtsf6SIgW/pwwEUMmXNr4rMeGyQDS1O83xsXqBbIoirOwSOXYJPKjACpP59iDi4ydJc0oME6tlOvDKzUQ5Z7plPwkfROVgxSqxzBo77ePO3SbCLfj6Z8cy6HyOG2tdDJ5fAnxl3joVWsdswjyTIhG+EwgCCCZkc=
Received: from SN6PR10MB3022.namprd10.prod.outlook.com (2603:10b6:805:d8::25)
 by CY4PR1001MB2197.namprd10.prod.outlook.com (2603:10b6:910:48::20) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4975.15; Tue, 15 Feb
 2022 14:43:00 +0000
Received: from SN6PR10MB3022.namprd10.prod.outlook.com
 ([fe80::899e:951a:8129:8ef1]) by SN6PR10MB3022.namprd10.prod.outlook.com
 ([fe80::899e:951a:8129:8ef1%4]) with mapi id 15.20.4975.019; Tue, 15 Feb 2022
 14:43:00 +0000
From:   Liam Howlett <liam.howlett@oracle.com>
To:     "maple-tree@lists.infradead.org" <maple-tree@lists.infradead.org>,
        "linux-mm@kvack.org" <linux-mm@kvack.org>,
        "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>,
        Andrew Morton <akpm@linux-foundation.org>
Subject: [PATCH v6 08/71] Maple Tree: Add new data structure
Thread-Topic: [PATCH v6 08/71] Maple Tree: Add new data structure
Thread-Index: AQHYInpU/hKtaWQ3X0yDuzeh55NMzw==
Date:   Tue, 15 Feb 2022 14:43:00 +0000
Message-ID: <20220215144241.3812052-8-Liam.Howlett@oracle.com>
References: <20220215143728.3810954-1-Liam.Howlett@oracle.com>
 <20220215144241.3812052-1-Liam.Howlett@oracle.com>
In-Reply-To: <20220215144241.3812052-1-Liam.Howlett@oracle.com>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-mailer: git-send-email 2.34.1
x-ms-publictraffictype: Email
x-ms-office365-filtering-correlation-id: 8c62e88b-5c44-44a7-4071-08d9f09176f3
x-ms-traffictypediagnostic: CY4PR1001MB2197:EE_
x-microsoft-antispam-prvs: <CY4PR1001MB219784B9C91407424C88CFADFD349@CY4PR1001MB2197.namprd10.prod.outlook.com>
x-ms-oob-tlc-oobclassifiers: OLM:8273;
x-ms-exchange-senderadcheck: 1
x-ms-exchange-antispam-relay: 0
x-microsoft-antispam: BCL:0;
x-microsoft-antispam-message-info: stkJ1FyFOyZO0Xs3Czs5nFXLXmNWQylJnlwa+m4hCSXWd1laFUTyFEU1kNFpnxy8ZnFp19O1sehceU6Yla+Z123FBmt5v0DPr/unvi4uC4xry6ubAeP4RY+FBpU0u7/MbQY1lnmrKq2S8YKS8OiImwb4uWrF43NoprxmxyoYDBSYyoPD+IDG1TAKssxGu+wxy3sW8GsHCSbTcEtg7SZNLEImOmyUYsTgkgsGz7y5SbZi3QBkTfertwn17jtXAAeUyWbcDOyp+Tw2O8Fc+pI8TDctYGyjj6yOOIRwWw/LDjU3JTjT/CrEt49l+PvdC3PxN2YF19zabGSVKf3Ya9EFyTDh5r8m1Dby/OkPNLsq8Tsz2zt1QShrsUyVhTSnm69Hhnai2HYVhNWQ9YVxCavF3WEwWZOlxkmNckI1VCIrFMS9Voimb1LmbxBfIMqUw2rSzL25LRMQge52RXf6rgmtxtYpmL6vS8/NM7S4eRIYyoDm5NFMIxft87pDq2vPazCTOS9NTrqPI5IF/0vafSt9zqymxgtBd9gDm2vUF+BWoR8/qu0LqaTGHmGOvTqaWAuxfxIJC3PpO5aR1wqn+asvVOvFzqcbid0z2CS+p2ghC8v7yC2o/kR2blr0A7IpSCniLET4yHCbqW6X3dSlL0FnHQGXrmhav/FWi2auh/4CtLfzBVssJr7BK0L0ZsSPhE5oBzHlYoiYpc2OdJe32XiRgodEmwG8PwEPT0IzQZ0/cPNMtUAEbQgl63iP6sNmypEpHQ2Q7gji08VVmGp0Dhthg2dalHynEkuz0kLH5/5Dw5aUfGK1LWf7VitChHkwb6/o
x-forefront-antispam-report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SN6PR10MB3022.namprd10.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230001)(366004)(316002)(186003)(66946007)(91956017)(6506007)(966005)(1076003)(508600001)(36756003)(64756008)(66446008)(8676002)(66476007)(2616005)(76116006)(110136005)(66556008)(6486002)(5660300002)(6512007)(2906002)(86362001)(83380400001)(26005)(38070700005)(71200400001)(38100700002)(122000001)(30864003)(8936002)(44832011)(559001)(579004)(309714004);DIR:OUT;SFP:1101;
x-ms-exchange-antispam-messagedata-chunkcount: 1
x-ms-exchange-antispam-messagedata-0: =?utf-8?B?eEt1NDgwWnZ6LzlyMUptc1c5bjBqc2dOOVgva3dNWEx5ejBqWHNVNVVIVmxF?=
 =?utf-8?B?MWVuSUNBWkt3bVhDQWRZYWtZSGx3dFBUSjNzVU40OCs3aE5zTzE3ODN4VGxj?=
 =?utf-8?B?MmRDTUlVTFZ3UHYzWTFQV0E5eFgxL3ZKVzFaTzJUd1MraXA0NXF2TWVJVGJq?=
 =?utf-8?B?UDFTL0IrM0ZwSThpYTlIYTRjMktMa3NqOCs3cTN4RUs1Q0ZpNGpIc2xMZHFG?=
 =?utf-8?B?U1YwQUNtalhxVy8vSWVUbHBxcHZ5UUhSTmZiZjZla2MrRUxCV2ZLT0ltWGJT?=
 =?utf-8?B?VUpWZHordFNtdndFdENTeE0rSkRBOGFZQ0RKVFdZUmtiNmFRQ3RZMVdITUFF?=
 =?utf-8?B?OGY1UXJ5TE52SE5IZHNNZ3ZMWjZaS3JVNkFLaHowVlpndHB6QjZrR3I5MC82?=
 =?utf-8?B?ZStUUHo0N1lrVDhZL2FITGsxRCtwWWhnUjJKcDRlZHVrVDRSaXhpYUZJWFYr?=
 =?utf-8?B?WjU2S3V0UnVBSUJjOEt4OXhrZnRCbUxObkxCYmxEZzgrdXhqWEtsSHRQMmpB?=
 =?utf-8?B?QWpGck1QNVc5dGNiOHppUzF0NThmWGxlWDdJTkQ3Y0tCVVBOZmlId09zb0Vz?=
 =?utf-8?B?NXhRNDBTaG8vNDZ0QUZCR2JTTXJ3SVlzYnpycnh5T0xlcDJhR0U3RDYwT0tm?=
 =?utf-8?B?REZvQWUxN2tJNVdkNmRzek1HMVlQZENJbzVvTDhzc0svSGxBTDRPVGEvQlk1?=
 =?utf-8?B?NU80dWVPRmFKYmtkS01rU1NoaFExRmpVMmhJRGcraVJucGM3SkVqbk9VSVlX?=
 =?utf-8?B?VHJiZExwWlJiakU3dmZFemNvM093bXFnalRzTEJ2MXpBOHRBU01wNG1KdjRi?=
 =?utf-8?B?SUczam9ETTNpS1VQZ1V5dFh1RWNRUVorRHMxZmVOUE90UjdGVEU5ZlAyUzIw?=
 =?utf-8?B?VTJrZjQ5c1d4NFVWekh6bStwdXZTOWJTL09rdWhvaDd0Um1XVE5EUkJwdVdQ?=
 =?utf-8?B?aEpWMmhXaUt4Ymtwa0tlVWtLTFN0V1pMVnVSbjdLWmFCSWRXSWlyWnVQb1hU?=
 =?utf-8?B?d0xkcjMzdVpSKzZRSUtRNjl6VU9vVTVoQlFSNkdBQjlLOVBDZVJVU2pSb2wr?=
 =?utf-8?B?dEdjdENlWUM1SFNCVUpySHl0Zmh6TE9kYVhQR3VOR2IxRy93N09HSnE2OXgr?=
 =?utf-8?B?VlNITHJwOU9vUm5LUWVRNlVRaXUwaGUxNzdkSHd1WEJKTXgzeS91NzNwdXdi?=
 =?utf-8?B?R3M1WWpzMmhUYnR4UVdFV3FXVmR0ZGdoSS9NczVwNkd5aXpONUdkVi8za2Mr?=
 =?utf-8?B?eG92eW5RUklaSzhLS2ZqL3dIamp2UFAxUmFWWHh1ZzZvRnZQRlJoeXM1bkxp?=
 =?utf-8?B?NnpRdkZWMkFOT0VkRlo5MUhQU1lKNkdxY1M4ZlNrRXpCdWNMYURHSGxBQWFT?=
 =?utf-8?B?Mi9RK2xSRFAwQW5wUzBJdjZsSW56V1IxRE1WSndObzJCUHJQRjZMOFhJYTBa?=
 =?utf-8?B?dXUrSkV3aEFTRFpjRzlraVQ5U3dtU1gwVmJ4V0ZhUUpTK29wQjJQa1ZFazcr?=
 =?utf-8?B?YlVYQUI3TXRWV1ZkMkwvVHYyYzk4QXJXYjlYT0N4Mm1NZXNjOWZXek1BUDdn?=
 =?utf-8?B?T3R3UG16RVRxN2hFeGVabGU3Yi96Z1pLSXNjdmJIY2VDRmlrZEo4enVnakxL?=
 =?utf-8?B?TUNmSHBjb09ROEEzYnZhU3ptSDliVnY2eW8wZ1o5MG44ME4xMTlLTXk3ZHg1?=
 =?utf-8?B?MFdxbFdySGQ1Qk9GS2FZMTRwZWlSY0x1UFhGV2FzOTdOM1d3Rk9WT0grNGJw?=
 =?utf-8?B?cWt6ek1iK1BRQnJyUUtqUWpFMklyT1JYZC8zOWdZVE9ublkzMldUV0xzTEpq?=
 =?utf-8?B?bUR1ZXRQRVRDUEhVSm5TMDYzMEFVNHpIMnlFb1Jmb0tnaTBrK3NFZ2VIQzUw?=
 =?utf-8?B?dzFLVW1CeEVrVS9TKzQ5YXlFL2hrOFhaWkxHQXR0ODAxN0p2RmtvNm1INk9m?=
 =?utf-8?B?cERRNWJNNUhTL04wb2Rrc1FNb2VhdUFmQXJyVWJmRGgwd0plcE5aRDdlU0h6?=
 =?utf-8?B?SEZuWlZNcEJwWFI1QXZYdFd5cnFqWWo5Vjl1R0hwZWtucUJSaStIbHl6Rldi?=
 =?utf-8?B?QlpEZjlUaW9JbG9LZ2txUXQzMldGejZvdTUrMmFVeWx6YW1hNzRHSmdoTk9I?=
 =?utf-8?B?TG83NlhxTGJHb1lPM1hOZVhvdlFxdTJSdjgyN1V5TkhpSkQyVE94WGJyY21U?=
 =?utf-8?Q?DBHfAHhdWX7jICjnulwVQl4=3D?=
Content-Type: text/plain; charset="utf-8"
Content-ID: <9CDBE016E3258645B256EF2B6F731F93@namprd10.prod.outlook.com>
Content-Transfer-Encoding: base64
MIME-Version: 1.0
X-OriginatorOrg: oracle.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-AuthSource: SN6PR10MB3022.namprd10.prod.outlook.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 8c62e88b-5c44-44a7-4071-08d9f09176f3
X-MS-Exchange-CrossTenant-originalarrivaltime: 15 Feb 2022 14:43:00.3869
 (UTC)
X-MS-Exchange-CrossTenant-fromentityheader: Hosted
X-MS-Exchange-CrossTenant-id: 4e2c6054-71cb-48f1-bd6c-3a9705aca71b
X-MS-Exchange-CrossTenant-mailboxtype: HOSTED
X-MS-Exchange-CrossTenant-userprincipalname: qOor8dfNr2tcKZb6g+DXcJiJZjyFu0WB5U2AKdR8hdRglIj42msI8rR5awsB3JHE5m4w/rCVjJbg3C/bZVTmiw==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: CY4PR1001MB2197
X-Proofpoint-Virus-Version: vendor=nai engine=6300 definitions=10258 signatures=673431
X-Proofpoint-Spam-Details: rule=notspam policy=default score=0 suspectscore=0 spamscore=0
 mlxlogscore=999 phishscore=0 bulkscore=0 malwarescore=0 adultscore=0
 mlxscore=0 classifier=spam adjust=0 reason=mlx scancount=1
 engine=8.12.0-2201110000 definitions=main-2202150085
X-Proofpoint-GUID: jwiO_ifWhEha-1hbU2Idy5DzY6Xgz8yQ
X-Proofpoint-ORIG-GUID: jwiO_ifWhEha-1hbU2Idy5DzY6Xgz8yQ
X-Spam-Status: No, score=-2.8 required=5.0 tests=BAYES_00,DKIM_SIGNED,
        DKIM_VALID,DKIM_VALID_AU,DKIM_VALID_EF,RCVD_IN_DNSWL_LOW,
        RCVD_IN_MSPIKE_H5,RCVD_IN_MSPIKE_WL,SPF_HELO_NONE,SPF_NONE,
        T_SCC_BODY_TEXT_LINE autolearn=ham autolearn_force=no version=3.4.6
X-Spam-Checker-Version: SpamAssassin 3.4.6 (2021-04-09) on
        lindbergh.monkeyblade.net
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

RnJvbTogIkxpYW0gUi4gSG93bGV0dCIgPExpYW0uSG93bGV0dEBPcmFjbGUuY29tPg0KDQpUaGUg
bWFwbGUgdHJlZSBpcyBhbiBSQ1Utc2FmZSByYW5nZSBiYXNlZCBCLXRyZWUgZGVzaWduZWQgdG8g
dXNlIG1vZGVybg0KcHJvY2Vzc29yIGNhY2hlIGVmZmljaWVudGx5LiAgVGhlcmUgYXJlIGEgbnVt
YmVyIG9mIHBsYWNlcyBpbiB0aGUga2VybmVsDQp0aGF0IGEgbm9uLW92ZXJsYXBwaW5nIHJhbmdl
LWJhc2VkIHRyZWUgd291bGQgYmUgYmVuZWZpY2lhbCwgZXNwZWNpYWxseQ0Kb25lIHdpdGggYSBz
aW1wbGUgaW50ZXJmYWNlLiAgVGhlIGZpcnN0IHVzZXIgdGhhdCBpcyBjb3ZlcmVkIGluIHRoaXMN
CnBhdGNoIHNldCBpcyB0aGUgdm1fYXJlYV9zdHJ1Y3QsIHdoZXJlIHRocmVlIGRhdGEgc3RydWN0
dXJlcyBhcmUNCnJlcGxhY2VkIGJ5IHRoZSBtYXBsZSB0cmVlOiB0aGUgYXVnbWVudGVkIHJidHJl
ZSwgdGhlIHZtYSBjYWNoZSwgYW5kIHRoZQ0KbGlua2VkIGxpc3Qgb2YgVk1BcyBpbiB0aGUgbW1f
c3RydWN0LiAgVGhlIGxvbmcgdGVybSBnb2FsIGlzIHRvIHJlZHVjZQ0Kb3IgcmVtb3ZlIHRoZSBt
bWFwX3NlbSBjb250ZW50aW9uLg0KDQpUaGUgdHJlZSBoYXMgYSBicmFuY2hpbmcgZmFjdG9yIG9m
IDEwIGZvciBub24tbGVhZiBub2RlcyBhbmQgMTYgZm9yIGxlYWYNCm5vZGVzLiAgV2l0aCB0aGUg
aW5jcmVhc2VkIGJyYW5jaGluZyBmYWN0b3IsIGl0IGlzIHNpZ25pZmljYW50bHkgc2hvcnRlciB0
aGFuDQp0aGUgcmJ0cmVlIHNvIGl0IGhhcyBmZXdlciBjYWNoZSBtaXNzZXMuICBUaGUgcmVtb3Zh
bCBvZiB0aGUgbGlua2VkIGxpc3QNCmJldHdlZW4gc3Vic2VxdWVudCBlbnRyaWVzIGFsc28gcmVk
dWNlcyB0aGUgY2FjaGUgbWlzc2VzIGFuZCB0aGUgbmVlZCB0byBwdWxsDQppbiB0aGUgcHJldmlv
dXMgYW5kIG5leHQgVk1BIGR1cmluZyBtYW55IHRyZWUgYWx0ZXJhdGlvbnMuDQoNClNpZ25lZC1v
ZmYtYnk6IE1hdHRoZXcgV2lsY294IChPcmFjbGUpIDx3aWxseUBpbmZyYWRlYWQub3JnPg0KU2ln
bmVkLW9mZi1ieTogTGlhbSBSLiBIb3dsZXR0IDxMaWFtLkhvd2xldHRAb3JhY2xlLmNvbT4NClRl
c3RlZC1ieTogRGF2aWQgSG93ZWxscyA8ZGhvd2VsbHNAcmVkaGF0LmNvbT4NCi0tLQ0KIERvY3Vt
ZW50YXRpb24vY29yZS1hcGkvaW5kZXgucnN0ICAgICAgICAgICAgICB8ICAgIDEgKw0KIERvY3Vt
ZW50YXRpb24vY29yZS1hcGkvbWFwbGVfdHJlZS5yc3QgICAgICAgICB8ICAyMTggKw0KIE1BSU5U
QUlORVJTICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAgMTIgKw0KIGluY2x1
ZGUvbGludXgvbWFwbGVfdHJlZS5oICAgICAgICAgICAgICAgICAgICB8ICA2ODMgKysNCiBpbmNs
dWRlL3RyYWNlL2V2ZW50cy9tYXBsZV90cmVlLmggICAgICAgICAgICAgfCAgMTIzICsNCiBpbml0
L21haW4uYyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgICAyICsNCiBsaWIv
S2NvbmZpZy5kZWJ1ZyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgIDE2ICsNCiBsaWIv
TWFrZWZpbGUgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgICAzICstDQogbGli
L21hcGxlX3RyZWUuYyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgNjk2NyArKysrKysr
KysrKysrKysrKw0KIHRvb2xzL3Rlc3RpbmcvcmFkaXgtdHJlZS8uZ2l0aWdub3JlICAgICAgICAg
ICB8ICAgIDIgKw0KIHRvb2xzL3Rlc3RpbmcvcmFkaXgtdHJlZS9NYWtlZmlsZSAgICAgICAgICAg
ICB8ICAgMTMgKy0NCiB0b29scy90ZXN0aW5nL3JhZGl4LXRyZWUvZ2VuZXJhdGVkL2F1dG9jb25m
LmggfCAgICAxICsNCiB0b29scy90ZXN0aW5nL3JhZGl4LXRyZWUvbGludXgvbWFwbGVfdHJlZS5o
ICAgfCAgICA3ICsNCiB0b29scy90ZXN0aW5nL3JhZGl4LXRyZWUvbWFwbGUuYyAgICAgICAgICAg
ICAgfCAgIDU5ICsNCiAuLi4vcmFkaXgtdHJlZS90cmFjZS9ldmVudHMvbWFwbGVfdHJlZS5oICAg
ICAgfCAgICAzICsNCiAxNSBmaWxlcyBjaGFuZ2VkLCA4MTA3IGluc2VydGlvbnMoKyksIDMgZGVs
ZXRpb25zKC0pDQogY3JlYXRlIG1vZGUgMTAwNjQ0IERvY3VtZW50YXRpb24vY29yZS1hcGkvbWFw
bGVfdHJlZS5yc3QNCiBjcmVhdGUgbW9kZSAxMDA2NDQgaW5jbHVkZS9saW51eC9tYXBsZV90cmVl
LmgNCiBjcmVhdGUgbW9kZSAxMDA2NDQgaW5jbHVkZS90cmFjZS9ldmVudHMvbWFwbGVfdHJlZS5o
DQogY3JlYXRlIG1vZGUgMTAwNjQ0IGxpYi9tYXBsZV90cmVlLmMNCiBjcmVhdGUgbW9kZSAxMDA2
NDQgdG9vbHMvdGVzdGluZy9yYWRpeC10cmVlL2xpbnV4L21hcGxlX3RyZWUuaA0KIGNyZWF0ZSBt
b2RlIDEwMDY0NCB0b29scy90ZXN0aW5nL3JhZGl4LXRyZWUvbWFwbGUuYw0KIGNyZWF0ZSBtb2Rl
IDEwMDY0NCB0b29scy90ZXN0aW5nL3JhZGl4LXRyZWUvdHJhY2UvZXZlbnRzL21hcGxlX3RyZWUu
aA0KDQpkaWZmIC0tZ2l0IGEvRG9jdW1lbnRhdGlvbi9jb3JlLWFwaS9pbmRleC5yc3QgYi9Eb2N1
bWVudGF0aW9uL2NvcmUtYXBpL2luZGV4LnJzdA0KaW5kZXggNWRlMmM3YTRiMWIzLi5jNjY5ZTBh
YmNmZDYgMTAwNjQ0DQotLS0gYS9Eb2N1bWVudGF0aW9uL2NvcmUtYXBpL2luZGV4LnJzdA0KKysr
IGIvRG9jdW1lbnRhdGlvbi9jb3JlLWFwaS9pbmRleC5yc3QNCkBAIC0zNCw2ICszNCw3IEBAIExp
YnJhcnkgZnVuY3Rpb25hbGl0eSB0aGF0IGlzIHVzZWQgdGhyb3VnaG91dCB0aGUga2VybmVsLg0K
ICAgIGtyZWYNCiAgICBhc3NvY19hcnJheQ0KICAgIHhhcnJheQ0KKyAgIG1hcGxlX3RyZWUNCiAg
ICBpZHINCiAgICBjaXJjdWxhci1idWZmZXJzDQogICAgcmJ0cmVlDQpkaWZmIC0tZ2l0IGEvRG9j
dW1lbnRhdGlvbi9jb3JlLWFwaS9tYXBsZV90cmVlLnJzdCBiL0RvY3VtZW50YXRpb24vY29yZS1h
cGkvbWFwbGVfdHJlZS5yc3QNCm5ldyBmaWxlIG1vZGUgMTAwNjQ0DQppbmRleCAwMDAwMDAwMDAw
MDAuLmM5NTE2YTJlMDMyNA0KLS0tIC9kZXYvbnVsbA0KKysrIGIvRG9jdW1lbnRhdGlvbi9jb3Jl
LWFwaS9tYXBsZV90cmVlLnJzdA0KQEAgLTAsMCArMSwyMTggQEANCisuLiBTUERYLUxpY2Vuc2Ut
SWRlbnRpZmllcjogR1BMLTIuMCsNCisNCisNCis9PT09PT09PT09DQorTWFwbGUgVHJlZQ0KKz09
PT09PT09PT0NCisNCis6QXV0aG9yOiBMaWFtIFIuIEhvd2xldHQNCisNCitPdmVydmlldw0KKz09
PT09PT09DQorDQorVGhlIE1hcGxlIFRyZWUgaXMgYSBCLVRyZWUgZGF0YSB0eXBlIHdoaWNoIGlz
IG9wdGltaXplZCBmb3Igc3RvcmluZw0KK25vbi1vdmVybGFwcGluZyByYW5nZXMsIGluY2x1ZGlu
ZyByYW5nZXMgb2Ygc2l6ZSAxLiAgVGhlIHRyZWUgd2FzIGRlc2lnbmVkIHRvDQorYmUgc2ltcGxl
IHRvIHVzZSBhbmQgZG9lcyBub3QgcmVxdWlyZSBhIHVzZXIgd3JpdHRlbiBzZWFyY2ggbWV0aG9k
LiAgSXQNCitzdXBwb3J0cyBpdGVyYXRpbmcgb3ZlciBhIHJhbmdlIG9mIGVudHJpZXMgYW5kIGdv
aW5nIHRvIHRoZSBwcmV2aW91cyBvciBuZXh0DQorZW50cnkgaW4gYSBjYWNoZS1lZmZpY2llbnQg
bWFubmVyLiAgVGhlIHRyZWUgY2FuIGFsc28gYmUgcHV0IGludG8gYW4gUkNVLXNhZmUNCittb2Rl
IG9mIG9wZXJhdGlvbiB3aGljaCBhbGxvd3MgcmVhZGluZyBhbmQgd3JpdGluZyBjb25jdXJyZW50
bHkuICBXcml0ZXJzIG11c3QNCitzeW5jaHJvbml6ZSBvbiBhIGxvY2ssIHdoaWNoIGNhbiBiZSB0
aGUgZGVmYXVsdCBzcGlubG9jaywgb3IgdGhlIHVzZXIgY2FuIHNldA0KK3RoZSBsb2NrIHRvIGFu
IGV4dGVybmFsIGxvY2sgb2YgYSBkaWZmZXJlbnQgdHlwZS4NCisNCitUaGUgTWFwbGUgVHJlZSBt
YWludGFpbnMgYSBzbWFsbCBtZW1vcnkgZm9vdHByaW50IGFuZCB3YXMgZGVzaWduZWQgdG8gdXNl
DQorbW9kZXJuIHByb2Nlc3NvciBjYWNoZSBlZmZpY2llbnRseS4gIFRoZSBtYWpvcml0eSBvZiB0
aGUgdXNlcnMgd2lsbCBiZSBhYmxlIHRvDQordXNlIHRoZSBub3JtYWwgQVBJLiAgQW4gOnJlZjpg
bWFwbGUtdHJlZS1hZHZhbmNlZC1hcGlgIGV4aXN0cyBmb3IgbW9yZSBjb21wbGV4DQorc2NlbmFy
aW9zLiAgVGhlIG1vc3QgaW1wb3J0YW50IHVzYWdlIG9mIHRoZSBNYXBsZSBUcmVlIGlzIHRoZSB0
cmFja2luZyBvZiB0aGUNCit2aXJ0dWFsIG1lbW9yeSBhcmVhcy4NCisNCitUaGUgTWFwbGUgVHJl
ZSBjYW4gc3RvcmUgdmFsdWVzIGJldHdlZW4gYGAwYGAgYW5kIGBgVUxPTkdfTUFYYGAuICBUaGUg
TWFwbGUNCitUcmVlIHJlc2VydmVzIHZhbHVlcyB3aXRoIHRoZSBib3R0b20gdHdvIGJpdHMgc2V0
IHRvICcxMCcgd2hpY2ggYXJlIGJlbG93IDQwOTYNCisoaWUgMiwgNiwgMTAgLi4gNDA5NCkgZm9y
IGludGVybmFsIHVzZS4gIElmIHRoZSBlbnRyaWVzIG1heSB1c2UgcmVzZXJ2ZWQNCitlbnRyaWVz
IHRoZW4gdGhlIHVzZXJzIGNhbiBjb252ZXJ0IHRoZSBlbnRyaWVzIHVzaW5nIHhhX21rX3ZhbHVl
KCkgYW5kIGNvbnZlcnQNCit0aGVtIGJhY2sgYnkgY2FsbGluZyB4YV90b192YWx1ZSgpLiAgSWYg
dGhlIHVzZXIgbmVlZHMgdG8gdXNlIGEgcmVzZXJ2ZWQNCit2YWx1ZSwgdGhlbiB0aGUgdXNlciBj
YW4gY29udmVydCB0aGUgdmFsdWUgd2hlbiB1c2luZyB0aGUNCis6cmVmOmBtYXBsZS10cmVlLWFk
dmFuY2VkLWFwaWAsIGJ1dCBhcmUgYmxvY2tlZCBieSB0aGUgbm9ybWFsIEFQSS4NCisNCitUaGUg
TWFwbGUgVHJlZSBjYW4gYWxzbyBiZSBjb25maWd1cmVkIHRvIHN1cHBvcnQgc2VhcmNoaW5nIGZv
ciBhIGdhcCBvZiBhIGdpdmVuDQorc2l6ZSAob3IgbGFyZ2VyKS4NCisNCitQcmUtYWxsb2NhdGlu
ZyBvZiBub2RlcyBpcyBhbHNvIHN1cHBvcnRlZCB1c2luZyB0aGUNCis6cmVmOmBtYXBsZS10cmVl
LWFkdmFuY2VkLWFwaWAuICBUaGlzIGlzIHVzZWZ1bCBmb3IgdXNlcnMgd2hvIG11c3QgZ3VhcmFu
dGVlIGENCitzdWNjZXNzZnVsIHN0b3JlIG9wZXJhdGlvbiB3aXRoaW4gYSBnaXZlbg0KK2NvZGUg
c2VnbWVudCB3aGVuIGFsbG9jYXRpbmcgY2Fubm90IGJlIGRvbmUuICBBbGxvY2F0aW9ucyBvZiBu
b2RlcyBhcmUNCityZWxhdGl2ZWx5IHNtYWxsIGF0IGFyb3VuZCAyNTYgYnl0ZXMuDQorDQorLi4g
X21hcGxlLXRyZWUtbm9ybWFsLWFwaToNCisNCitOb3JtYWwgQVBJDQorPT09PT09PT09PQ0KKw0K
K1N0YXJ0IGJ5IGluaXRpYWxpc2luZyBhIG1hcGxlIHRyZWUsIGVpdGhlciB3aXRoIERFRklORV9N
VFJFRSgpIGZvciBzdGF0aWNhbGx5DQorYWxsb2NhdGVkIG1hcGxlIHRyZWVzIG9yIG10X2luaXQo
KSBmb3IgZHluYW1pY2FsbHkgYWxsb2NhdGVkIG9uZXMuICBBDQorZnJlc2hseS1pbml0aWFsaXNl
ZCBtYXBsZSB0cmVlIGNvbnRhaW5zIGEgYGBOVUxMYGAgcG9pbnRlciBmb3IgdGhlIHJhbmdlIGBg
MGBgDQorLSBgYFVMT05HX01BWGBgLiAgVGhlcmUgYXJlIGN1cnJlbnRseSB0d28gdHlwZXMgb2Yg
bWFwbGUgdHJlZXMgc3VwcG9ydGVkOiB0aGUNCithbGxvY2F0aW9uIHRyZWUgYW5kIHRoZSByZWd1
bGFyIHRyZWUuICBUaGUgcmVndWxhciB0cmVlIGhhcyBhIGhpZ2hlciBicmFuY2hpbmcNCitmYWN0
b3IgZm9yIGludGVybmFsIG5vZGVzLiAgVGhlIGFsbG9jYXRpb24gdHJlZSBoYXMgYSBsb3dlciBi
cmFuY2hpbmcgZmFjdG9yDQorYnV0IGFsbG93cyB0aGUgdXNlciB0byBzZWFyY2ggZm9yIGEgZ2Fw
IG9mIGEgZ2l2ZW4gc2l6ZSBvciBsYXJnZXIgZnJvbSBlaXRoZXINCitgYDBgYCB1cHdhcmRzIG9y
IGBgVUxPTkdfTUFYYGAgZG93bi4gIEFuIGFsbG9jYXRpb24gdHJlZSBjYW4gYmUgdXNlZCBieQ0K
K3Bhc3NpbmcgaW4gdGhlIGBgTVRfRkxBR1NfQUxMT0NfUkFOR0VgYCBmbGFnIHdoZW4gaW5pdGlh
bGlzaW5nIHRoZSB0cmVlLg0KKw0KK1lvdSBjYW4gdGhlbiBzZXQgZW50cmllcyB1c2luZyBtdHJl
ZV9zdG9yZSgpIG9yIG10cmVlX3N0b3JlX3JhbmdlKCkuDQorbXRyZWVfc3RvcmUoKSB3aWxsIG92
ZXJ3cml0ZSBhbnkgZW50cnkgd2l0aCB0aGUgbmV3IGVudHJ5IGFuZCByZXR1cm4gMCBvbg0KK3N1
Y2Nlc3Mgb3IgYW4gZXJyb3IgY29kZSBvdGhlcndpc2UuICBtdHJlZV9zdG9yZV9yYW5nZSgpIHdv
cmtzIGluIHRoZSBzYW1lIHdheQ0KK2J1dCB0YWtlcyBhIHJhbmdlLiAgbXRyZWVfbG9hZCgpIGlz
IHVzZWQgdG8gcmV0cmlldmUgdGhlIGVudHJ5IHN0b3JlZCBhdCBhDQorZ2l2ZW4gaW5kZXguICBZ
b3UgY2FuIHVzZSBtdHJlZV9lcmFzZSgpIHRvIGVyYXNlIGFuIGVudGlyZSByYW5nZSBieSBvbmx5
DQora25vd2luZyBvbmUgdmFsdWUgd2l0aGluIHRoYXQgcmFuZ2UsIG9yIG10cmVlX3N0b3JlKCkg
Y2FsbCB3aXRoIGFuIGVudHJ5IG9mDQorTlVMTCBtYXkgYmUgdXNlZCB0byBwYXJ0aWFsbHkgZXJh
c2UgYSByYW5nZSBvciBtYW55IHJhbmdlcyBhdCBvbmNlLg0KKw0KK0lmIHlvdSB3YW50IHRvIG9u
bHkgc3RvcmUgYSBuZXcgZW50cnkgdG8gYSByYW5nZSAob3IgaW5kZXgpIGlmIHRoYXQgcmFuZ2Ug
aXMNCitjdXJyZW50bHkgYGBOVUxMYGAsIHlvdSBjYW4gdXNlIG10cmVlX2luc2VydF9yYW5nZSgp
IG9yIG10cmVlX2luc2VydCgpIHdoaWNoDQorcmV0dXJuIC1FRVhJU1QgaWYgdGhlIHJhbmdlIGlz
IG5vdCBlbXB0eS4NCisNCitZb3UgY2FuIHNlYXJjaCBmb3IgYW4gZW50cnkgZnJvbSBhbiBpbmRl
eCB1cHdhcmRzIGJ5IHVzaW5nIG10X2ZpbmQoKS4NCisNCitZb3UgY2FuIHdhbGsgZWFjaCBlbnRy
eSB3aXRoaW4gYSByYW5nZSBieSBjYWxsaW5nIG10X2Zvcl9lYWNoKCkuICBZb3UgbXVzdA0KK3By
b3ZpZGUgYSB0ZW1wb3JhcnkgdmFyaWFibGUgdG8gc3RvcmUgYSBjdXJzb3IuICBJZiB5b3Ugd2Fu
dCB0byB3YWxrIGVhY2gNCitlbGVtZW50IG9mIHRoZSB0cmVlIHRoZW4gYGAwYGAgYW5kIGBgVUxP
TkdfTUFYYGAgbWF5IGJlIHVzZWQgYXMgdGhlIHJhbmdlLiAgSWYNCit0aGUgY2FsbGVyIGlzIGdv
aW5nIHRvIGhvbGQgdGhlIGxvY2sgZm9yIHRoZSBkdXJhdGlvbiBvZiB0aGUgd2FsayB0aGVuIGl0
IGlzDQord29ydGggbG9va2luZyBhdCB0aGUgbWFzX2Zvcl9lYWNoKCkgQVBJIGluIHRoZSA6cmVm
OmBtYXBsZS10cmVlLWFkdmFuY2VkLWFwaWANCitzZWN0aW9uLg0KKw0KK1NvbWV0aW1lcyBpdCBp
cyBuZWNlc3NhcnkgdG8gZW5zdXJlIHRoZSBuZXh0IGNhbGwgdG8gc3RvcmUgdG8gYSBtYXBsZSB0
cmVlIGRvZXMNCitub3QgYWxsb2NhdGUgbWVtb3J5LCBwbGVhc2Ugc2VlIDpyZWY6YG1hcGxlLXRy
ZWUtYWR2YW5jZWQtYXBpYCBmb3IgdGhpcyB1c2UgY2FzZS4NCisNCitGaW5hbGx5LCB5b3UgY2Fu
IHJlbW92ZSBhbGwgZW50cmllcyBmcm9tIGEgbWFwbGUgdHJlZSBieSBjYWxsaW5nDQorbXRyZWVf
ZGVzdHJveSgpLiAgSWYgdGhlIG1hcGxlIHRyZWUgZW50cmllcyBhcmUgcG9pbnRlcnMsIHlvdSBt
YXkgd2lzaCB0byBmcmVlDQordGhlIGVudHJpZXMgZmlyc3QuDQorDQorQWxsb2NhdGluZyBOb2Rl
cw0KKy0tLS0tLS0tLS0tLS0tLS0NCisNCitUaGUgYWxsb2NhdGlvbnMgYXJlIGhhbmRsZWQgYnkg
dGhlIGludGVybmFsIHRyZWUgY29kZS4gIFNlZQ0KKzpyZWY6YG1hcGxlLXRyZWUtYWR2YW5jZWQt
YWxsb2NgIGZvciBvdGhlciBvcHRpb25zLg0KKw0KK0xvY2tpbmcNCistLS0tLS0tDQorDQorWW91
IGRvIG5vdCBoYXZlIHRvIHdvcnJ5IGFib3V0IGxvY2tpbmcuICBTZWUgOnJlZjpgbWFwbGUtdHJl
ZS1hZHZhbmNlZC1sb2Nrc2ANCitmb3Igb3RoZXIgb3B0aW9ucy4NCisNCitUaGUgTWFwbGUgVHJl
ZSB1c2VzIFJDVSBhbmQgYW4gaW50ZXJuYWwgc3BpbmxvY2sgdG8gc3luY2hyb25pc2UgYWNjZXNz
Og0KKw0KK1Rha2VzIFJDVSByZWFkIGxvY2s6DQorICogbXRyZWVfbG9hZCgpDQorICogbXRfZmlu
ZCgpDQorICogbXRfZm9yX2VhY2goKQ0KKyAqIG10X25leHQoKQ0KKyAqIG10X3ByZXYoKQ0KKw0K
K1Rha2VzIG1hX2xvY2sgaW50ZXJuYWxseToNCisgKiBtdHJlZV9zdG9yZSgpDQorICogbXRyZWVf
c3RvcmVfcmFuZ2UoKQ0KKyAqIG10cmVlX2luc2VydCgpDQorICogbXRyZWVfaW5zZXJ0X3Jhbmdl
KCkNCisgKiBtdHJlZV9lcmFzZSgpDQorICogbXRyZWVfZGVzdHJveSgpDQorICogbXRfc2V0X2lu
X3JjdSgpDQorICogbXRfY2xlYXJfaW5fcmN1KCkNCisNCitJZiB5b3Ugd2FudCB0byB0YWtlIGFk
dmFudGFnZSBvZiB0aGUgaW50ZXJuYWwgbG9jayB0byBwcm90ZWN0IHRoZSBkYXRhDQorc3RydWN0
dXJlcyB0aGF0IHlvdSBhcmUgc3RvcmluZyBpbiB0aGUgTWFwbGUgVHJlZSwgeW91IGNhbiBjYWxs
IG10cmVlX2xvY2soKQ0KK2JlZm9yZSBjYWxsaW5nIG10cmVlX2xvYWQoKSwgdGhlbiB0YWtlIGEg
cmVmZXJlbmNlIGNvdW50IG9uIHRoZSBvYmplY3QgeW91DQoraGF2ZSBmb3VuZCBiZWZvcmUgY2Fs
bGluZyBtdHJlZV91bmxvY2soKS4gIFRoaXMgd2lsbCBwcmV2ZW50IHN0b3JlcyBmcm9tDQorcmVt
b3ZpbmcgdGhlIG9iamVjdCBmcm9tIHRoZSB0cmVlIGJldHdlZW4gbG9va2luZyB1cCB0aGUgb2Jq
ZWN0IGFuZA0KK2luY3JlbWVudGluZyB0aGUgcmVmY291bnQuICBZb3UgY2FuIGFsc28gdXNlIFJD
VSB0byBhdm9pZCBkZXJlZmVyZW5jaW5nDQorZnJlZWQgbWVtb3J5LCBidXQgYW4gZXhwbGFuYXRp
b24gb2YgdGhhdCBpcyBiZXlvbmQgdGhlIHNjb3BlIG9mIHRoaXMNCitkb2N1bWVudC4NCisNCisu
LiBfbWFwbGUtdHJlZS1hZHZhbmNlZC1hcGk6DQorDQorQWR2YW5jZWQgQVBJDQorPT09PT09PT09
PT09DQorDQorVGhlIGFkdmFuY2VkIEFQSSBvZmZlcnMgbW9yZSBmbGV4aWJpbGl0eSBhbmQgYmV0
dGVyIHBlcmZvcm1hbmNlIGF0IHRoZQ0KK2Nvc3Qgb2YgYW4gaW50ZXJmYWNlIHdoaWNoIGNhbiBi
ZSBoYXJkZXIgdG8gdXNlIGFuZCBoYXMgZmV3ZXIgc2FmZWd1YXJkcy4NCitZb3UgbXVzdCB0YWtl
IGNhcmUgb2YgeW91ciBvd24gbG9ja2luZyB3aGlsZSB1c2luZyB0aGUgYWR2YW5jZWQgQVBJLg0K
K1lvdSBjYW4gdXNlIHRoZSBtYV9sb2NrLCBSQ1Ugb3IgYW4gZXh0ZXJuYWwgbG9jayBmb3IgcHJv
dGVjdGlvbi4NCitZb3UgY2FuIG1peCBhZHZhbmNlZCBhbmQgbm9ybWFsIG9wZXJhdGlvbnMgb24g
dGhlIHNhbWUgYXJyYXksIGFzIGxvbmcNCithcyB0aGUgbG9ja2luZyBpcyBjb21wYXRpYmxlLiAg
VGhlIDpyZWY6YG1hcGxlLXRyZWUtbm9ybWFsLWFwaWAgaXMgaW1wbGVtZW50ZWQNCitpbiB0ZXJt
cyBvZiB0aGUgYWR2YW5jZWQgQVBJLg0KKw0KK1RoZSBhZHZhbmNlZCBBUEkgaXMgYmFzZWQgYXJv
dW5kIHRoZSBtYV9zdGF0ZSwgdGhpcyBpcyB3aGVyZSB0aGUgJ21hcycNCitwcmVmaXggb3JpZ2lu
YXRlcy4gIFRoZSBtYV9zdGF0ZSBzdHJ1Y3Qga2VlcHMgdHJhY2sgb2YgdHJlZSBvcGVyYXRpb25z
IHRvIG1ha2UNCitsaWZlIGVhc2llciBmb3IgYm90aCBpbnRlcm5hbCBhbmQgZXh0ZXJuYWwgdHJl
ZSB1c2Vycy4NCisNCitJbml0aWFsaXNpbmcgdGhlIG1hcGxlIHRyZWUgaXMgdGhlIHNhbWUgYXMg
aW4gdGhlIDpyZWY6YG1hcGxlLXRyZWUtbm9ybWFsLWFwaWAuDQorUGxlYXNlIHNlZSBhYm92ZS4N
CisNCitUaGUgbWFwbGUgc3RhdGUga2VlcHMgdHJhY2sgb2YgdGhlIHJhbmdlIHN0YXJ0IGFuZCBl
bmQgaW4gbWFzLT5pbmRleCBhbmQNCittYXMtPmxhc3QsIHJlc3BlY3RpdmVseS4NCisNCittYXNf
d2FsaygpIHdpbGwgd2FsayB0aGUgdHJlZSB0byB0aGUgbG9jYXRpb24gb2YgbWFzLT5pbmRleCBh
bmQgc2V0IHRoZQ0KK21hcy0+aW5kZXggYW5kIG1hcy0+bGFzdCBhY2NvcmRpbmcgdG8gdGhlIHJh
bmdlIGZvciB0aGUgZW50cnkuDQorDQorWW91IGNhbiBzZXQgZW50cmllcyB1c2luZyBtYXNfc3Rv
cmUoKS4gIG1hc19zdG9yZSgpIHdpbGwgb3ZlcndyaXRlIGFueSBlbnRyeQ0KK3dpdGggdGhlIG5l
dyBlbnRyeSBhbmQgcmV0dXJuIHRoZSBmaXJzdCBleGlzdGluZyBlbnRyeSB0aGF0IGlzIG92ZXJ3
cml0dGVuLg0KK1RoZSByYW5nZSBpcyBwYXNzZWQgaW4gYXMgbWVtYmVycyBvZiB0aGUgbWFwbGUg
c3RhdGU6IGluZGV4IGFuZCBsYXN0Lg0KKw0KK1lvdSBjYW4gdXNlIG1hc19lcmFzZSgpIHRvIGVy
YXNlIGFuIGVudGlyZSByYW5nZSBieSBzZXR0aW5nIGluZGV4IGFuZA0KK2xhc3Qgb2YgdGhlIG1h
cGxlIHN0YXRlIHRvIHRoZSBkZXNpcmVkIHJhbmdlIHRvIGVyYXNlLiAgVGhpcyB3aWxsIGVyYXNl
DQordGhlIGZpcnN0IHJhbmdlIHRoYXQgaXMgZm91bmQgaW4gdGhhdCByYW5nZSwgc2V0IHRoZSBt
YXBsZSBzdGF0ZSBpbmRleA0KK2FuZCBsYXN0IGFzIHRoZSByYW5nZSB0aGF0IHdhcyBlcmFzZWQg
YW5kIHJldHVybiB0aGUgZW50cnkgdGhhdCBleGlzdGVkDQorYXQgdGhhdCBsb2NhdGlvbi4NCisN
CitZb3UgY2FuIHdhbGsgZWFjaCBlbnRyeSB3aXRoaW4gYSByYW5nZSBieSB1c2luZyBtYXNfZm9y
X2VhY2goKS4gIElmIHlvdSB3YW50DQordG8gd2FsayBlYWNoIGVsZW1lbnQgb2YgdGhlIHRyZWUg
dGhlbiBgYDBgYCBhbmQgYGBVTE9OR19NQVhgYCBtYXkgYmUgdXNlZCBhcw0KK3RoZSByYW5nZS4g
IElmIHRoZSBsb2NrIG5lZWRzIHRvIGJlIHBlcmlvZGljYWxseSBkcm9wcGVkLCBzZWUgdGhlIGxv
Y2tpbmcNCitzZWN0aW9uIG1hc19wYXVzZSgpLg0KKw0KK1VzaW5nIGEgbWFwbGUgc3RhdGUgYWxs
b3dzIG1hc19uZXh0KCkgYW5kIG1hc19wcmV2KCkgdG8gZnVuY3Rpb24gYXMgaWYgdGhlDQordHJl
ZSB3YXMgYSBsaW5rZWQgbGlzdC4gIFdpdGggc3VjaCBhIGhpZ2ggYnJhbmNoaW5nIGZhY3RvciB0
aGUgYW1vcnRpemVkDQorcGVyZm9ybWFuY2UgcGVuYWx0eSBpcyBvdXR3ZWlnaGVkIGJ5IGNhY2hl
IG9wdGltaXphdGlvbi4gIG1hc19uZXh0KCkgd2lsbA0KK3JldHVybiB0aGUgbmV4dCBlbnRyeSB3
aGljaCBvY2N1cnMgYWZ0ZXIgdGhlIGVudHJ5IGF0IGluZGV4LiAgbWFzX3ByZXYoKQ0KK3dpbGwg
cmV0dXJuIHRoZSBwcmV2aW91cyBlbnRyeSB3aGljaCBvY2N1cnMgYmVmb3JlIHRoZSBlbnRyeSBh
dCBpbmRleC4NCisNCittYXNfZmluZCgpIHdpbGwgZmluZCB0aGUgZmlyc3QgZW50cnkgd2hpY2gg
ZXhpc3RzIGF0IG9yIGFib3ZlIGluZGV4IG9uDQordGhlIGZpcnN0IGNhbGwsIGFuZCB0aGUgbmV4
dCBlbnRyeSBmcm9tIGV2ZXJ5IHN1YnNlcXVlbnQgY2FsbHMuDQorDQorbWFzX2ZpbmRfcmV2KCkg
d2lsbCBmaW5kIHRoZSBmaXN0IGVudHJ5IHdoaWNoIGV4aXN0cyBhdCBvciBiZWxvdyB0aGUgbGFz
dCBvbg0KK3RoZSBmaXJzdCBjYWxsLCBhbmQgdGhlIHByZXZpb3VzIGVudHJ5IGZyb20gZXZlcnkg
c3Vic2VxdWVudCBjYWxscy4NCisNCitJZiB0aGUgdXNlciBuZWVkcyB0byB5aWVsZCB0aGUgbG9j
ayBkdXJpbmcgYW4gb3BlcmF0aW9uLCB0aGVuIHRoZSBtYXBsZSBzdGF0ZQ0KK211c3QgYmUgcGF1
c2VkIHVzaW5nIG1hc19wYXVzZSgpLg0KKw0KK1RoZXJlIGFyZSBhIGZldyBleHRyYSBpbnRlcmZh
Y2VzIHByb3ZpZGVkIHdoZW4gdXNpbmcgYW4gYWxsb2NhdGlvbiB0cmVlLg0KK0lmIHlvdSB3aXNo
IHRvIHNlYXJjaCBmb3IgYSBnYXAgd2l0aGluIGEgcmFuZ2UsIHRoZW4gbWFzX2VtcHR5X2FyZWEo
KQ0KK29yIG1hc19lbXB0eV9hcmVhX3JldigpIGNhbiBiZSB1c2VkLiAgbWFzX2VtcHR5X2FyZWEo
KSBzZWFyY2hlcyBmb3IgYSBnYXANCitzdGFydGluZyBhdCB0aGUgbG93ZXN0IGluZGV4IGdpdmVu
IHVwIHRvIHRoZSBtYXhpbXVtIG9mIHRoZSByYW5nZS4NCittYXNfZW1wdHlfYXJlYV9yZXYoKSBz
ZWFyY2hlcyBmb3IgYSBnYXAgc3RhcnRpbmcgYXQgdGhlIGhpZ2hlc3QgaW5kZXggZ2l2ZW4NCith
bmQgY29udGludWVzIGRvd253YXJkIHRvIHRoZSBsb3dlciBib3VuZCBvZiB0aGUgcmFuZ2UuDQor
DQorLi4gX21hcGxlLXRyZWUtYWR2YW5jZWQtYWxsb2M6DQorDQorQWR2YW5jZWQgQWxsb2NhdGlu
ZyBOb2Rlcw0KKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCisNCitBbGxvY2F0aW9ucyBhcmUg
dXN1YWxseSBoYW5kbGVkIGludGVybmFsbHkgdG8gdGhlIHRyZWUsIGhvd2V2ZXIgaWYgYWxsb2Nh
dGlvbnMNCituZWVkIHRvIG9jY3VyIGJlZm9yZSBhIHdyaXRlIG9jY3VycyB0aGVuIGNhbGxpbmcg
bWFzX2V4cGVjdGVkX2VudHJpZXMoKSB3aWxsDQorYWxsb2NhdGUgdGhlIHdvcnN0LWNhc2UgbnVt
YmVyIG9mIG5lZWRlZCBub2RlcyB0byBpbnNlcnQgdGhlIHByb3ZpZGVkIG51bWJlciBvZg0KK3Jh
bmdlcy4gIFRoaXMgYWxzbyBjYXVzZXMgdGhlIHRyZWUgdG8gZW50ZXIgbWFzcyBpbnNlcnRpb24g
bW9kZS4gIE9uY2UNCitpbnNlcnRpb25zIGFyZSBjb21wbGV0ZSBjYWxsaW5nIG1hc19kZXN0cm95
KCkgb24gdGhlIG1hcGxlIHN0YXRlIHdpbGwgZnJlZSB0aGUNCit1bnVzZWQgYWxsb2NhdGlvbnMu
DQorDQorLi4gX21hcGxlLXRyZWUtYWR2YW5jZWQtbG9ja3M6DQorDQorQWR2YW5jZWQgTG9ja2lu
Zw0KKy0tLS0tLS0tLS0tLS0tLS0NCisNCitUaGUgbWFwbGUgdHJlZSB1c2VzIGEgc3BpbmxvY2sg
YnkgZGVmYXVsdCwgYnV0IGV4dGVybmFsIGxvY2tzIGNhbiBiZSB1c2VkIGZvcg0KK3RyZWUgdXBk
YXRlcyBhcyB3ZWxsLiAgVG8gdXNlIGFuIGV4dGVybmFsIGxvY2ssIHRoZSB0cmVlIG11c3QgYmUg
aW5pdGlhbGl6ZWQNCit3aXRoIHRoZSBgYE1UX0ZMQUdTX0xPQ0tfRVhURVJOIGZsYWdgYCwgdGhp
cyBpcyB1c3VhbGx5IGRvbmUgd2l0aCB0aGUNCitNVFJFRV9JTklUX0VYVCgpICNkZWZpbmUsIHdo
aWNoIHRha2VzIGFuIGV4dGVybmFsIGxvY2sgYXMgYW4gYXJndW1lbnQuDQorDQorRnVuY3Rpb25z
IGFuZCBzdHJ1Y3R1cmVzDQorPT09PT09PT09PT09PT09PT09PT09PT09DQorDQorLi4ga2VybmVs
LWRvYzo6IGluY2x1ZGUvbGludXgvbWFwbGVfdHJlZS5oDQorLi4ga2VybmVsLWRvYzo6IGxpYi9t
YXBsZV90cmVlLmMNCisNCmRpZmYgLS1naXQgYS9NQUlOVEFJTkVSUyBiL01BSU5UQUlORVJTDQpp
bmRleCBmY2E5NzBhNDZlNzcuLmIzMTUyMWFlM2RhMiAxMDA2NDQNCi0tLSBhL01BSU5UQUlORVJT
DQorKysgYi9NQUlOVEFJTkVSUw0KQEAgLTExNDMyLDYgKzExNDMyLDE4IEBAIEw6CWxpbnV4LW1h
bkB2Z2VyLmtlcm5lbC5vcmcNCiBTOglNYWludGFpbmVkDQogVzoJaHR0cDovL3d3dy5rZXJuZWwu
b3JnL2RvYy9tYW4tcGFnZXMNCiANCitNQVBMRSBUUkVFDQorTToJTGlhbSBSLiBIb3dsZXR0IDxM
aWFtLkhvd2xldHRAb3JhY2xlLmNvbT4NCitMOglsaW51eC1tbUBrdmFjay5vcmcNCitTOglTdXBw
b3J0ZWQNCitGOglEb2N1bWVudGF0aW9uL2NvcmUtYXBpL21hcGxlX3RyZWUucnN0DQorRjoJaW5j
bHVkZS9saW51eC9tYXBsZV90cmVlLmgNCitGOglpbmNsdWRlL3RyYWNlL2V2ZW50cy9tYXBsZV90
cmVlLmgNCitGOglsaWIvbWFwbGVfdHJlZS5jDQorRjoJbGliL3Rlc3RfbWFwbGVfdHJlZS5jDQor
RjoJdG9vbHMvdGVzdGluZy9fYWRpeC10cmVlL2xpbnV4L21hcGxlX3RyZWUuaA0KK0Y6CXRvb2xz
L3Rlc3RpbmcvcmFkaXgtdHJlZS9tYXBsZS5jDQorDQogTUFSRFVLIChDUkVBVE9SIENJNDApIERF
VklDRSBUUkVFIFNVUFBPUlQNCiBNOglSYWh1bCBCZWRhcmthciA8cmFodWxiZWRhcmthcjg5QGdt
YWlsLmNvbT4NCiBMOglsaW51eC1taXBzQHZnZXIua2VybmVsLm9yZw0KZGlmZiAtLWdpdCBhL2lu
Y2x1ZGUvbGludXgvbWFwbGVfdHJlZS5oIGIvaW5jbHVkZS9saW51eC9tYXBsZV90cmVlLmgNCm5l
dyBmaWxlIG1vZGUgMTAwNjQ0DQppbmRleCAwMDAwMDAwMDAwMDAuLjUzMTMyNzYyMWQxZA0KLS0t
IC9kZXYvbnVsbA0KKysrIGIvaW5jbHVkZS9saW51eC9tYXBsZV90cmVlLmgNCkBAIC0wLDAgKzEs
NjgzIEBADQorLyogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEdQTC0yLjArICovDQorI2lmbmRl
ZiBfTElOVVhfTUFQTEVfVFJFRV9IDQorI2RlZmluZSBfTElOVVhfTUFQTEVfVFJFRV9IDQorLyoN
CisgKiBNYXBsZSBUcmVlIC0gQW4gUkNVLXNhZmUgYWRhcHRpdmUgdHJlZSBmb3Igc3RvcmluZyBy
YW5nZXMNCisgKiBDb3B5cmlnaHQgKGMpIDIwMTgtMjAyMiBPcmFjbGUNCisgKiBBdXRob3JzOiAg
ICAgTGlhbSBSLiBIb3dsZXR0IDxMaWFtLkhvd2xldHRAT3JhY2xlLmNvbT4NCisgKiAgICAgICAg
ICAgICAgTWF0dGhldyBXaWxjb3ggPHdpbGx5QGluZnJhZGVhZC5vcmc+DQorICovDQorDQorI2lu
Y2x1ZGUgPGxpbnV4L2tlcm5lbC5oPg0KKyNpbmNsdWRlIDxsaW51eC9yY3VwZGF0ZS5oPg0KKyNp
bmNsdWRlIDxsaW51eC9zcGlubG9jay5oPg0KKy8qICNkZWZpbmUgQ09ORklHX01BUExFX1JDVV9E
SVNBQkxFRCAqLw0KKy8qICNkZWZpbmUgQ09ORklHX0RFQlVHX01BUExFX1RSRUVfVkVSQk9TRSAq
Lw0KKw0KKy8qDQorICogQWxsb2NhdGVkIG5vZGVzIGFyZSBtdXRhYmxlIHVudGlsIHRoZXkgaGF2
ZSBiZWVuIGluc2VydGVkIGludG8gdGhlIHRyZWUsDQorICogYXQgd2hpY2ggdGltZSB0aGV5IGNh
bm5vdCBjaGFuZ2UgdGhlaXIgdHlwZSB1bnRpbCB0aGV5IGhhdmUgYmVlbiByZW1vdmVkDQorICog
ZnJvbSB0aGUgdHJlZSBhbmQgYW4gUkNVIGdyYWNlIHBlcmlvZCBoYXMgcGFzc2VkLg0KKyAqDQor
ICogUmVtb3ZlZCBub2RlcyBoYXZlIHRoZWlyIC0+cGFyZW50IHNldCB0byBwb2ludCB0byB0aGVt
c2VsdmVzLiAgUkNVIHJlYWRlcnMNCisgKiBjaGVjayAtPnBhcmVudCBiZWZvcmUgcmVseWluZyBv
biB0aGUgdmFsdWUgdGhhdCB0aGV5IGxvYWRlZCBmcm9tIHRoZQ0KKyAqIHNsb3RzIGFycmF5LiAg
VGhpcyBsZXRzIHVzIHJldXNlIHRoZSBzbG90cyBhcnJheSBmb3IgdGhlIFJDVSBoZWFkLg0KKyAq
DQorICogTm9kZXMgaW4gdGhlIHRyZWUgcG9pbnQgdG8gdGhlaXIgcGFyZW50IHVubGVzcyBiaXQg
MCBpcyBzZXQuDQorICovDQorI2lmIGRlZmluZWQoQ09ORklHXzY0QklUKSB8fCBkZWZpbmVkKEJV
SUxEX1ZEU08zMl82NCkNCisvKiA2NGJpdCBzaXplcyAqLw0KKyNkZWZpbmUgTUFQTEVfTk9ERV9T
TE9UUwkzMQkvKiAyNTYgYnl0ZXMgaW5jbHVkaW5nIC0+cGFyZW50ICovDQorI2RlZmluZSBNQVBM
RV9SQU5HRTY0X1NMT1RTCTE2CS8qIDI1NiBieXRlcyAqLw0KKyNkZWZpbmUgTUFQTEVfQVJBTkdF
NjRfU0xPVFMJMTAJLyogMjQwIGJ5dGVzICovDQorI2RlZmluZSBNQVBMRV9BUkFOR0U2NF9NRVRB
X01BWAkxNQkvKiBPdXQgb2YgcmFuZ2UgZm9yIG1ldGFkYXRhICovDQorI2RlZmluZSBNQVBMRV9B
TExPQ19TTE9UUwkoTUFQTEVfTk9ERV9TTE9UUyAtIDEpDQorI2Vsc2UNCisvKiAzMmJpdCBzaXpl
cyAqLw0KKyNkZWZpbmUgTUFQTEVfTk9ERV9TTE9UUwk2MwkvKiAyNTYgYnl0ZXMgaW5jbHVkaW5n
IC0+cGFyZW50ICovDQorI2RlZmluZSBNQVBMRV9SQU5HRTY0X1NMT1RTCTMyCS8qIDI1NiBieXRl
cyAqLw0KKyNkZWZpbmUgTUFQTEVfQVJBTkdFNjRfU0xPVFMJMjEJLyogMjQwIGJ5dGVzICovDQor
I2RlZmluZSBNQVBMRV9BUkFOR0U2NF9NRVRBX01BWAkyMgkvKiBPdXQgb2YgcmFuZ2UgZm9yIG1l
dGFkYXRhICovDQorI2RlZmluZSBNQVBMRV9BTExPQ19TTE9UUwkoTUFQTEVfTk9ERV9TTE9UUyAt
IDIpDQorI2VuZGlmIC8qIGRlZmluZWQoQ09ORklHXzY0QklUKSB8fCBkZWZpbmVkKEJVSUxEX1ZE
U08zMl82NCkgKi8NCisNCisjZGVmaW5lIE1BUExFX05PREVfTUFTSwkJMjU1VUwNCisNCisvKg0K
KyAqIFRoZSBub2RlLT5wYXJlbnQgb2YgdGhlIHJvb3Qgbm9kZSBoYXMgYml0IDAgc2V0IGFuZCB0
aGUgcmVzdCBvZiB0aGUgcG9pbnRlcg0KKyAqIGlzIGEgcG9pbnRlciB0byB0aGUgdHJlZSBpdHNl
bGYuICBObyBtb3JlIGJpdHMgYXJlIGF2YWlsYWJsZSBpbiB0aGlzIHBvaW50ZXINCisgKiAob24g
bTY4aywgdGhlIGRhdGEgc3RydWN0dXJlIG1heSBvbmx5IGJlIDItYnl0ZSBhbGlnbmVkKS4NCisg
Kg0KKyAqIEludGVybmFsIG5vbi1yb290IG5vZGVzIGNhbiBvbmx5IGhhdmUgbWFwbGVfcmFuZ2Vf
KiBub2RlcyBhcyBwYXJlbnRzLiAgVGhlDQorICogcGFyZW50IHBvaW50ZXIgaXMgMjU2QiBhbGln
bmVkIGxpa2UgYWxsIG90aGVyIHRyZWUgbm9kZXMuICBXaGVuIHN0b3JpbmcgYSAzMg0KKyAqIG9y
IDY0IGJpdCB2YWx1ZXMsIHRoZSBvZmZzZXQgY2FuIGZpdCBpbnRvIDQgYml0cy4gIFRoZSAxNiBi
aXQgdmFsdWVzIG5lZWQgYW4NCisgKiBleHRyYSBiaXQgdG8gc3RvcmUgdGhlIG9mZnNldC4gIFRo
aXMgZXh0cmEgYml0IGNvbWVzIGZyb20gYSByZXVzZSBvZiB0aGUgbGFzdA0KKyAqIGJpdCBpbiB0
aGUgbm9kZSB0eXBlLiAgVGhpcyBpcyBwb3NzaWJsZSBieSB1c2luZyBiaXQgMSB0byBpbmRpY2F0
ZSBpZiBiaXQgMg0KKyAqIGlzIHBhcnQgb2YgdGhlIHR5cGUgb3IgdGhlIHNsb3QuDQorICoNCisg
KiBPbmNlIHRoZSB0eXBlIGlzIGRlY2lkZWQsIHRoZSBkZWNpc2lvbiBvZiBhbiBhbGxvY2F0aW9u
IHJhbmdlIHR5cGUgb3IgYSByYW5nZQ0KKyAqIHR5cGUgaXMgZG9uZSBieSBleGFtaW5pbmcgdGhl
IGltbXV0YWJsZSB0cmVlIGZsYWcgZm9yIHRoZSBNQVBMRV9BTExPQ19SQU5HRQ0KKyAqIGZsYWcu
DQorICoNCisgKiAgTm9kZSB0eXBlczoNCisgKiAgIDB4Pz8xID0gUm9vdA0KKyAqICAgMHg/MDAg
PSAxNiBiaXQgbm9kZXMNCisgKiAgIDB4MDEwID0gMzIgYml0IG5vZGVzDQorICogICAweDExMCA9
IDY0IGJpdCBub2Rlcw0KKyAqDQorICogIFNsb3Qgc2l6ZSBhbmQgbG9jYXRpb24gaW4gdGhlIHBh
cmVudCBwb2ludGVyOg0KKyAqICAgdHlwZSAgOiBzbG90IGxvY2F0aW9uDQorICogICAweD8/MSA6
IFJvb3QNCisgKiAgIDB4PzAwIDogMTYgYml0IHZhbHVlcywgdHlwZSBpbiAwLTEsIHNsb3QgaW4g
Mi02DQorICogICAweDAxMCA6IDMyIGJpdCB2YWx1ZXMsIHR5cGUgaW4gMC0yLCBzbG90IGluIDMt
Ng0KKyAqICAgMHgxMTAgOiA2NCBiaXQgdmFsdWVzLCB0eXBlIGluIDAtMiwgc2xvdCBpbiAzLTYN
CisgKi8NCit0eXBlZGVmIHN0cnVjdCBtYXBsZV9lbm9kZSAqbWFwbGVfZW5vZGU7IC8qIGVuY29k
ZWQgbm9kZSAqLw0KK3R5cGVkZWYgc3RydWN0IG1hcGxlX3Bub2RlICptYXBsZV9wbm9kZTsgLyog
cGFyZW50IG5vZGUgKi8NCisNCisNCisvKg0KKyAqIFRoZSBub2RlLT5tZXRhIGlzIGN1cnJlbnRs
eSBvbmx5IHN1cHBvcnRlZCBpbiBhbGxvY2F0aW9uIHJhbmdlIDY0IChhcmFuZ2VfNjQpDQorICog
bm9kZSB0eXBlLiAgQXMgYSByZXN1bHQgb2YgdHJhY2tpbmcgZ2FwcywgdGhlcmUgaXMgYSBzbWFs
bCBhcmVhIHRoYXQgaXMgbm90DQorICogdXNlZCBmb3IgZGF0YSBzdG9yYWdlIGluIHRoaXMgbm9k
ZSB0eXBlLiAgVGhpcyBhcmVhIGlzIHJldXNlZCB0byBzdG9yZQ0KKyAqIG1ldGFkYXRhIHJlbGF0
ZWQgdG8gdGhlIG5vZGUgaXRzZWxmIGluY2x1ZGluZyB0aGUgZGF0YSBlbmQgYW5kIHRoZSBsYXJn
ZXN0DQorICogZ2FwIGxvY2F0aW9uLiAgVGhpcyBtZXRhZGF0YSBpcyB1c2VkIHRvIG9wdGltaXpl
IHRoZSBnYXAgdXBkYXRpbmcgY29kZSBhbmQgaW4NCisgKiByZXZlcnNlIHNlYXJjaGluZyBmb3Ig
Z2FwcyBvciBhbnkgb3RoZXIgY29kZSB0aGF0IG5lZWRzIHRvIGZpbmQgdGhlIGVuZCBvZg0KKyAq
IHRoZSBkYXRhLg0KKyAqLw0KK3N0cnVjdCBtYXBsZV9tZXRhZGF0YSB7DQorCXVuc2lnbmVkIGNo
YXIgZW5kOw0KKwl1bnNpZ25lZCBjaGFyIGdhcDsNCisNCit9Ow0KKw0KKy8qDQorICogTGVhZiBu
b2RlcyBkbyBub3Qgc3RvcmUgcG9pbnRlcnMgdG8gbm9kZXMsIHRoZXkgc3RvcmUgdXNlciBkYXRh
LiAgVXNlcnMgbWF5DQorICogc3RvcmUgYWxtb3N0IGFueSBiaXQgcGF0dGVybi4gIEFzIG5vdGVk
IGFib3ZlLCB0aGUgb3B0aW1pc2F0aW9uIG9mIHN0b3JpbmcgYW4NCisgKiBlbnRyeSBhdCAwIGlu
IHRoZSByb290IHBvaW50ZXIgY2Fubm90IGJlIGRvbmUgZm9yIGRhdGEgd2hpY2ggaGF2ZSB0aGUg
Ym90dG9tDQorICogdHdvIGJpdHMgc2V0IHRvICcxMCcuICBXZSBhbHNvIHJlc2VydmUgdmFsdWVz
IHdpdGggdGhlIGJvdHRvbSB0d28gYml0cyBzZXQgdG8NCisgKiAnMTAnIHdoaWNoIGFyZSBiZWxv
dyA0MDk2IChpZSAyLCA2LCAxMCAuLiA0MDk0KSBmb3IgaW50ZXJuYWwgdXNlLiAgU29tZSBBUElz
DQorICogcmV0dXJuIGVycm5vcyBhcyBhIG5lZ2F0aXZlIGVycm5vIHNoaWZ0ZWQgcmlnaHQgYnkg
dHdvIGJpdHMgYW5kIHRoZSBib3R0b20NCisgKiB0d28gYml0cyBzZXQgdG8gJzEwJywgYW5kIHdo
aWxlIGNob29zaW5nIHRvIHN0b3JlIHRoZXNlIHZhbHVlcyBpbiB0aGUgYXJyYXkNCisgKiBpcyBu
b3QgYW4gZXJyb3IsIGl0IG1heSBsZWFkIHRvIGNvbmZ1c2lvbiBpZiB5b3UncmUgdGVzdGluZyBm
b3IgYW4gZXJyb3Igd2l0aA0KKyAqIG1hc19pc19lcnIoKS4NCisgKg0KKyAqIE5vbi1sZWFmIG5v
ZGVzIHN0b3JlIHRoZSB0eXBlIG9mIHRoZSBub2RlIHBvaW50ZWQgdG8gKGVudW0gbWFwbGVfdHlw
ZSBpbiBiaXRzDQorICogMy02KSwgYml0IDIgaXMgcmVzZXJ2ZWQuICBUaGF0IGxlYXZlcyBiaXRz
IDAtMSB1bnVzZWQgZm9yIG5vdy4NCisgKg0KKyAqIEluIHJlZ3VsYXIgQi1UcmVlIHRlcm1zLCBw
aXZvdHMgYXJlIGNhbGxlZCBrZXlzLiAgVGhlIHRlcm0gcGl2b3QgaXMgdXNlZCB0bw0KKyAqIGlu
ZGljYXRlIHRoYXQgdGhlIHRyZWUgaXMgc3BlY2lmeWluZyByYW5nZXMsICBQaXZvdHMgbWF5IGFw
cGVhciBpbiB0aGUNCisgKiBzdWJ0cmVlIHdpdGggYW4gZW50cnkgYXR0YWNoZWQgdG8gdGhlIHZh
bHVlIHdoZXJlYXMga2V5cyBhcmUgdW5pcXVlIHRvIGENCisgKiBzcGVjaWZpYyBwb3NpdGlvbiBv
ZiBhIEItdHJlZS4gIFBpdm90IHZhbHVlcyBhcmUgaW5jbHVzaXZlIG9mIHRoZSBzbG90IHdpdGgN
CisgKiB0aGUgc2FtZSBpbmRleC4NCisgKi8NCisNCitzdHJ1Y3QgbWFwbGVfcmFuZ2VfNjQgew0K
KwlzdHJ1Y3QgbWFwbGVfcG5vZGUgKnBhcmVudDsNCisJdW5zaWduZWQgbG9uZyBwaXZvdFtNQVBM
RV9SQU5HRTY0X1NMT1RTIC0gMV07DQorCXVuaW9uIHsNCisJCXZvaWQgX19yY3UgKnNsb3RbTUFQ
TEVfUkFOR0U2NF9TTE9UU107DQorCQlzdHJ1Y3Qgew0KKwkJCXZvaWQgX19yY3UgKnBhZFtNQVBM
RV9SQU5HRTY0X1NMT1RTIC0gMV07DQorCQkJc3RydWN0IG1hcGxlX21ldGFkYXRhIG1ldGE7DQor
CQl9Ow0KKwl9Ow0KK307DQorDQorLyoNCisgKiBBdCB0cmVlIGNyZWF0aW9uIHRpbWUsIHRoZSB1
c2VyIGNhbiBzcGVjaWZ5IHRoYXQgdGhleSdyZSB3aWxsaW5nIHRvIHRyYWRlIG9mZg0KKyAqIHN0
b3JpbmcgZmV3ZXIgZW50cmllcyBpbiBhIHRyZWUgaW4gcmV0dXJuIGZvciBzdG9yaW5nIG1vcmUg
aW5mb3JtYXRpb24gaW4NCisgKiBlYWNoIG5vZGUuDQorICoNCisgKiBUaGUgbWFwbGUgdHJlZSBz
dXBwb3J0cyByZWNvcmRpbmcgdGhlIGxhcmdlc3QgcmFuZ2Ugb2YgTlVMTCBlbnRyaWVzIGF2YWls
YWJsZQ0KKyAqIGluIHRoaXMgbm9kZSwgYWxzbyBjYWxsZWQgZ2Fwcy4gIFRoaXMgb3B0aW1pc2Vz
IHRoZSB0cmVlIGZvciBhbGxvY2F0aW5nIGENCisgKiByYW5nZS4NCisgKi8NCitzdHJ1Y3QgbWFw
bGVfYXJhbmdlXzY0IHsNCisJc3RydWN0IG1hcGxlX3Bub2RlICpwYXJlbnQ7DQorCXVuc2lnbmVk
IGxvbmcgcGl2b3RbTUFQTEVfQVJBTkdFNjRfU0xPVFMgLSAxXTsNCisJdm9pZCBfX3JjdSAqc2xv
dFtNQVBMRV9BUkFOR0U2NF9TTE9UU107DQorCXVuc2lnbmVkIGxvbmcgZ2FwW01BUExFX0FSQU5H
RTY0X1NMT1RTXTsNCisJc3RydWN0IG1hcGxlX21ldGFkYXRhIG1ldGE7DQorfTsNCisNCitzdHJ1
Y3QgbWFwbGVfYWxsb2Mgew0KKwl1bnNpZ25lZCBsb25nIHRvdGFsOw0KKwl1bnNpZ25lZCBjaGFy
IG5vZGVfY291bnQ7DQorCXVuc2lnbmVkIGludCByZXF1ZXN0X2NvdW50Ow0KKwlzdHJ1Y3QgbWFw
bGVfYWxsb2MgKnNsb3RbTUFQTEVfQUxMT0NfU0xPVFNdOw0KK307DQorDQorc3RydWN0IG1hcGxl
X3RvcGlhcnkgew0KKwlzdHJ1Y3QgbWFwbGVfcG5vZGUgKnBhcmVudDsNCisJc3RydWN0IG1hcGxl
X2Vub2RlICpuZXh0OyAvKiBPdmVybGFwcyB0aGUgcGl2b3QgKi8NCit9Ow0KKw0KK2VudW0gbWFw
bGVfdHlwZSB7DQorCW1hcGxlX2RlbnNlLA0KKwltYXBsZV9sZWFmXzY0LA0KKwltYXBsZV9yYW5n
ZV82NCwNCisJbWFwbGVfYXJhbmdlXzY0LA0KK307DQorDQorDQorLyoqDQorICogRE9DOiBNYXBs
ZSB0cmVlIGZsYWdzDQorICoNCisgKiAqIE1UX0ZMQUdTX0FMTE9DX1JBTkdFCS0gVHJhY2sgZ2Fw
cyBpbiB0aGlzIHRyZWUNCisgKiAqIE1UX0ZMQUdTX1VTRV9SQ1UJCS0gT3BlcmF0ZSBpbiBSQ1Ug
bW9kZQ0KKyAqICogTVRfRkxBR1NfSEVJR0hUX09GRlNFVAktIFRoZSBwb3NpdGlvbiBvZiB0aGUg
dHJlZSBoZWlnaHQgaW4gdGhlIGZsYWdzDQorICogKiBNVF9GTEFHU19IRUlHSFRfTUFTSwktIFRo
ZSBtYXNrIGZvciB0aGUgbWFwbGUgdHJlZSBoZWlnaHQgdmFsdWUNCisgKiAqIE1UX0ZMQUdTX0xP
Q0tfTUFTSwkJLSBIb3cgdGhlIG10X2xvY2sgaXMgdXNlZA0KKyAqICogTVRfRkxBR1NfTE9DS19J
UlEJCS0gQWNxdWlyZWQgaXJxLXNhZmUNCisgKiAqIE1UX0ZMQUdTX0xPQ0tfQkgJCS0gQWNxdWly
ZWQgYmgtc2FmZQ0KKyAqICogTVRfRkxBR1NfTE9DS19FWFRFUk4JLSBtdF9sb2NrIGlzIG5vdCB1
c2VkDQorICoNCisgKiBNQVBMRV9IRUlHSFRfTUFYCVRoZSBsYXJnZXN0IGhlaWdodCB0aGF0IGNh
biBiZSBzdG9yZWQNCisgKi8NCisjZGVmaW5lIE1UX0ZMQUdTX0FMTE9DX1JBTkdFCTB4MDENCisj
ZGVmaW5lIE1UX0ZMQUdTX1VTRV9SQ1UJMHgwMg0KKyNkZWZpbmUgTVRfRkxBR1NfSEVJR0hUX09G
RlNFVAkweDAyDQorI2RlZmluZSBNVF9GTEFHU19IRUlHSFRfTUFTSwkweDdDDQorI2RlZmluZSBN
VF9GTEFHU19MT0NLX01BU0sJMHgzMDANCisjZGVmaW5lIE1UX0ZMQUdTX0xPQ0tfSVJRCTB4MTAw
DQorI2RlZmluZSBNVF9GTEFHU19MT0NLX0JICTB4MjAwDQorI2RlZmluZSBNVF9GTEFHU19MT0NL
X0VYVEVSTgkweDMwMA0KKw0KKyNkZWZpbmUgTUFQTEVfSEVJR0hUX01BWAkzMQ0KKw0KKw0KKyNk
ZWZpbmUgTUFQTEVfTk9ERV9UWVBFX01BU0sJMHgwRg0KKyNkZWZpbmUgTUFQTEVfTk9ERV9UWVBF
X1NISUZUCTB4MDMNCisNCisjZGVmaW5lIE1BUExFX1JFU0VSVkVEX1JBTkdFCTQwOTYNCisNCisj
aWZkZWYgQ09ORklHX0xPQ0tERVANCit0eXBlZGVmIHN0cnVjdCBsb2NrZGVwX21hcCAqbG9ja2Rl
cF9tYXBfcDsNCisjZGVmaW5lIG10X2xvY2tfaXNfaGVsZChtdCkJbG9ja19pc19oZWxkKG10LT5t
YV9leHRlcm5hbF9sb2NrKQ0KKyNkZWZpbmUgbXRfc2V0X2V4dGVybmFsX2xvY2sobXQsIGxvY2sp
CQkJCQlcDQorCShtdCktPm1hX2V4dGVybmFsX2xvY2sgPSAmKGxvY2spLT5kZXBfbWFwOw0KKyNl
bHNlDQordHlwZWRlZiBzdHJ1Y3QgeyAvKiBub3RoaW5nICovIH0gbG9ja2RlcF9tYXBfcDsNCisj
ZGVmaW5lIG10X2xvY2tfaXNfaGVsZChtdCkJMQ0KKyNkZWZpbmUgbXRfc2V0X2V4dGVybmFsX2xv
Y2sobXQsIGxvY2spCWRvIHsgfSB3aGlsZSAoMCkNCisjZW5kaWYNCisNCisvKg0KKyAqIElmIHRo
ZSB0cmVlIGNvbnRhaW5zIGEgc2luZ2xlIGVudHJ5IGF0IGluZGV4IDAsIGl0IGlzIHVzdWFsbHkg
c3RvcmVkIGluDQorICogdHJlZS0+bWFfcm9vdC4gIFRvIG9wdGltaXNlIGZvciB0aGUgcGFnZSBj
YWNoZSwgYW4gZW50cnkgd2hpY2ggZW5kcyBpbiAnMDAnLA0KKyAqICcwMScgb3IgJzExJyBpcyBz
dG9yZWQgaW4gdGhlIHJvb3QsIGJ1dCBhbiBlbnRyeSB3aGljaCBlbmRzIGluICcxMCcgd2lsbCBi
ZQ0KKyAqIHN0b3JlZCBpbiBhIG5vZGUuICBCaXRzIDMtNiBhcmUgdXNlZCB0byBzdG9yZSBlbnVt
IG1hcGxlX3R5cGUuDQorICoNCisgKiBUaGUgZmxhZ3MgYXJlIHVzZWQgYm90aCB0byBzdG9yZSBz
b21lIGltbXV0YWJsZSBpbmZvcm1hdGlvbiBhYm91dCB0aGlzIHRyZWUNCisgKiAoc2V0IGF0IHRy
ZWUgY3JlYXRpb24gdGltZSkgYW5kIGR5bmFtaWMgaW5mb3JtYXRpb24gc2V0IHVuZGVyIHRoZSBz
cGlubG9jay4NCisgKg0KKyAqIEFub3RoZXIgdXNlIG9mIGZsYWdzIGFyZSB0byBpbmRpY2F0ZSBn
bG9iYWwgc3RhdGVzIG9mIHRoZSB0cmVlLiAgVGhpcyBpcyB0aGUNCisgKiBjYXNlIHdpdGggdGhl
IE1BUExFX1VTRV9SQ1UgZmxhZywgd2hpY2ggaW5kaWNhdGVzIHRoZSB0cmVlIGlzIGN1cnJlbnRs
eSBpbg0KKyAqIFJDVSBtb2RlLiAgVGhpcyBtb2RlIHdhcyBhZGRlZCB0byBhbGxvdyB0aGUgdHJl
ZSB0byByZXVzZSBub2RlcyBpbnN0ZWFkIG9mDQorICogcmUtYWxsb2NhdGluZyBhbmQgUkNVIGZy
ZWVpbmcgbm9kZXMgd2hlbiB0aGVyZSBpcyBhIHNpbmdsZSB1c2VyLg0KKyAqLw0KK3N0cnVjdCBt
YXBsZV90cmVlIHsNCisJdW5pb24gew0KKwkJc3BpbmxvY2tfdAltYV9sb2NrOw0KKwkJbG9ja2Rl
cF9tYXBfcAltYV9leHRlcm5hbF9sb2NrOw0KKwl9Ow0KKwl1bnNpZ25lZCBpbnQJbWFfZmxhZ3M7
DQorCXZvaWQgX19yY3UgICAgICAqbWFfcm9vdDsNCit9Ow0KKw0KKy8qKg0KKyAqIE1UUkVFX0lO
SVQoKSAtIEluaXRpYWxpemUgYSBtYXBsZSB0cmVlDQorICogQG5hbWU6IFRoZSBtYXBsZSB0cmVl
IG5hbWUNCisgKiBAZmxhZ3M6IFRoZSBtYXBsZSB0cmVlIGZsYWdzDQorICoNCisgKi8NCisjZGVm
aW5lIE1UUkVFX0lOSVQobmFtZSwgZmxhZ3MpIHsJCQkJCVwNCisJLm1hX2xvY2sgPSBfX1NQSU5f
TE9DS19VTkxPQ0tFRChuYW1lLm1hX2xvY2spLAkJCVwNCisJLm1hX2ZsYWdzID0gZmxhZ3MsCQkJ
CQkJXA0KKwkubWFfcm9vdCA9IE5VTEwsCQkJCQkJXA0KK30NCisNCisvKioNCisgKiBNVFJFRV9J
TklUX0VYVCgpIC0gSW5pdGlhbGl6ZSBhIG1hcGxlIHRyZWUgd2l0aCBhbiBleHRlcm5hbCBsb2Nr
Lg0KKyAqIEBuYW1lOiBUaGUgdHJlZSBuYW1lDQorICogQGZsYWdzOiBUaGUgbWFwbGUgdHJlZSBm
bGFncw0KKyAqIEBsb2NrOiBUaGUgZXh0ZXJuYWwgbG9jaw0KKyAqLw0KKyNpZmRlZiBDT05GSUdf
TE9DS0RFUA0KKyNkZWZpbmUgTVRSRUVfSU5JVF9FWFQobmFtZSwgZmxhZ3MsIGxvY2spIHsJCQkJ
XA0KKwkubWFfZXh0ZXJuYWxfbG9jayA9ICYobG9jaykuZGVwX21hcCwJCQkJXA0KKwkubWFfZmxh
Z3MgPSBmbGFncywJCQkJCQlcDQorCS5tYV9yb290ID0gTlVMTCwJCQkJCQlcDQorfQ0KKyNlbHNl
DQorI2RlZmluZSBNVFJFRV9JTklUX0VYVChuYW1lLCBmbGFncywgbG9jaykJTVRSRUVfSU5JVChu
YW1lLCBmbGFncykNCisjZW5kaWYNCisNCisjZGVmaW5lIERFRklORV9NVFJFRShuYW1lKQkJCQkJ
CVwNCisJc3RydWN0IG1hcGxlX3RyZWUgbmFtZSA9IE1UUkVFX0lOSVQobmFtZSwgMCkNCisNCisj
ZGVmaW5lIG10cmVlX2xvY2sobXQpCQlzcGluX2xvY2soKCYobXQpLT5tYV9sb2NrKSkNCisjZGVm
aW5lIG10cmVlX3VubG9jayhtdCkJc3Bpbl91bmxvY2soKCYobXQpLT5tYV9sb2NrKSkNCisNCisv
Kg0KKyAqIFRoZSBNYXBsZSBUcmVlIHNxdWVlemVzIHZhcmlvdXMgYml0cyBpbiBhdCB2YXJpb3Vz
IHBvaW50cyB3aGljaCBhcmVuJ3QNCisgKiBuZWNlc3NhcmlseSBvYnZpb3VzLiAgVXN1YWxseSwg
dGhpcyBpcyBkb25lIGJ5IG9ic2VydmluZyB0aGF0IHBvaW50ZXJzIGFyZQ0KKyAqIE4tYnl0ZSBh
bGlnbmVkIGFuZCB0aHVzIHRoZSBib3R0b20gbG9nXzIoTikgYml0cyBhcmUgYXZhaWxhYmxlIGZv
ciB1c2UuICBXZQ0KKyAqIGRvbid0IHVzZSB0aGUgaGlnaCBiaXRzIG9mIHBvaW50ZXJzIHRvIHN0
b3JlIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24gYmVjYXVzZQ0KKyAqIHdlIGRvbid0IGtub3cgd2hh
dCBiaXRzIGFyZSB1bnVzZWQgb24gYW55IGdpdmVuIGFyY2hpdGVjdHVyZS4NCisgKg0KKyAqIE5v
ZGVzIGFyZSAyNTYgYnl0ZXMgaW4gc2l6ZSBhbmQgYXJlIGFsc28gYWxpZ25lZCB0byAyNTYgYnl0
ZXMsIGdpdmluZyB1cyA4DQorICogbG93IGJpdHMgZm9yIG91ciBvd24gcHVycG9zZXMuICBOb2Rl
cyBhcmUgY3VycmVudGx5IG9mIDQgdHlwZXM6DQorICogMS4gU2luZ2xlIHBvaW50ZXIgKFJhbmdl
IGlzIDAtMCkNCisgKiAyLiBOb24tbGVhZiBBbGxvY2F0aW9uIFJhbmdlIG5vZGVzDQorICogMy4g
Tm9uLWxlYWYgUmFuZ2Ugbm9kZXMNCisgKiA0LiBMZWFmIFJhbmdlIG5vZGVzIEFsbCBub2RlcyBj
b25zaXN0IG9mIGEgbnVtYmVyIG9mIG5vZGUgc2xvdHMsDQorICogICAgcGl2b3RzLCBhbmQgYSBw
YXJlbnQgcG9pbnRlci4NCisgKi8NCisNCitzdHJ1Y3QgbWFwbGVfbm9kZSB7DQorCXVuaW9uIHsN
CisJCXN0cnVjdCB7DQorCQkJc3RydWN0IG1hcGxlX3Bub2RlICpwYXJlbnQ7DQorCQkJdm9pZCBf
X3JjdSAqc2xvdFtNQVBMRV9OT0RFX1NMT1RTXTsNCisJCX07DQorCQlzdHJ1Y3Qgew0KKwkJCXZv
aWQgKnBhZDsNCisJCQlzdHJ1Y3QgcmN1X2hlYWQgcmN1Ow0KKwkJCXN0cnVjdCBtYXBsZV9lbm9k
ZSAqcGl2X3BhcmVudDsNCisJCQl1bnNpZ25lZCBjaGFyIHBhcmVudF9zbG90Ow0KKwkJCWVudW0g
bWFwbGVfdHlwZSB0eXBlOw0KKwkJCXVuc2lnbmVkIGNoYXIgc2xvdF9sZW47DQorCQkJdW5zaWdu
ZWQgaW50IG1hX2ZsYWdzOw0KKwkJfTsNCisJCXN0cnVjdCBtYXBsZV9yYW5nZV82NCBtcjY0Ow0K
KwkJc3RydWN0IG1hcGxlX2FyYW5nZV82NCBtYTY0Ow0KKwkJc3RydWN0IG1hcGxlX2FsbG9jIGFs
bG9jOw0KKwl9Ow0KK307DQorDQorLyoNCisgKiBNb3JlIGNvbXBsaWNhdGVkIHN0b3JlcyBjYW4g
Y2F1c2UgdHdvIG5vZGVzIHRvIGJlY29tZSBvbmUgb3IgdGhyZWUgYW5kDQorICogcG90ZW50aWFs
bHkgYWx0ZXIgdGhlIGhlaWdodCBvZiB0aGUgdHJlZS4gIEVpdGhlciBoYWxmIG9mIHRoZSB0cmVl
IG1heSBuZWVkDQorICogdG8gYmUgcmViYWxhbmNlZCBhZ2FpbnN0IHRoZSBvdGhlci4gIFRoZSBt
YV90b3BpYXJ5IHN0cnVjdCBpcyB1c2VkIHRvIHRyYWNrDQorICogd2hpY2ggbm9kZXMgaGF2ZSBi
ZWVuICdjdXQnIGZyb20gdGhlIHRyZWUgc28gdGhhdCB0aGUgY2hhbmdlIGNhbiBiZSBkb25lDQor
ICogc2FmZWx5IGF0IGEgbGF0ZXIgZGF0ZS4gIFRoaXMgaXMgZG9uZSB0byBzdXBwb3J0IFJDVS4N
CisgKi8NCitzdHJ1Y3QgbWFfdG9waWFyeSB7DQorCXN0cnVjdCBtYXBsZV9lbm9kZSAqaGVhZDsN
CisJc3RydWN0IG1hcGxlX2Vub2RlICp0YWlsOw0KKwlzdHJ1Y3QgbWFwbGVfdHJlZSAqbXRyZWU7
DQorfTsNCisNCit2b2lkICptdHJlZV9sb2FkKHN0cnVjdCBtYXBsZV90cmVlICptdCwgdW5zaWdu
ZWQgbG9uZyBpbmRleCk7DQorDQoraW50IG10cmVlX2luc2VydChzdHJ1Y3QgbWFwbGVfdHJlZSAq
bXQsIHVuc2lnbmVkIGxvbmcgaW5kZXgsDQorCQl2b2lkICplbnRyeSwgZ2ZwX3QgZ2ZwKTsNCitp
bnQgbXRyZWVfaW5zZXJ0X3JhbmdlKHN0cnVjdCBtYXBsZV90cmVlICptdCwgdW5zaWduZWQgbG9u
ZyBmaXJzdCwNCisJCXVuc2lnbmVkIGxvbmcgbGFzdCwgdm9pZCAqZW50cnksIGdmcF90IGdmcCk7
DQorDQoraW50IG10cmVlX3N0b3JlX3JhbmdlKHN0cnVjdCBtYXBsZV90cmVlICptdCwgdW5zaWdu
ZWQgbG9uZyBmaXJzdCwNCisJCSAgICAgIHVuc2lnbmVkIGxvbmcgbGFzdCwgdm9pZCAqZW50cnks
IGdmcF90IGdmcCk7DQoraW50IG10cmVlX3N0b3JlKHN0cnVjdCBtYXBsZV90cmVlICptdCwgdW5z
aWduZWQgbG9uZyBpbmRleCwNCisJCXZvaWQgKmVudHJ5LCBnZnBfdCBnZnApOw0KK3ZvaWQgKm10
cmVlX2VyYXNlKHN0cnVjdCBtYXBsZV90cmVlICptdCwgdW5zaWduZWQgbG9uZyBpbmRleCk7DQor
DQordm9pZCBtdHJlZV9kZXN0cm95KHN0cnVjdCBtYXBsZV90cmVlICptdCk7DQordm9pZCBfX210
X2Rlc3Ryb3koc3RydWN0IG1hcGxlX3RyZWUgKm10KTsNCisNCisvKioNCisgKiBtdHJlZV9lbXB0
eSgpIC0gRGV0ZXJtaW5lIGlmIGEgdHJlZSBoYXMgYW55IHByZXNlbnQgZW50cmllcy4NCisgKiBA
bXQ6IE1hcGxlIFRyZWUuDQorICoNCisgKiBDb250ZXh0OiBBbnkgY29udGV4dC4NCisgKiBSZXR1
cm46ICV0cnVlIGlmIHRoZSB0cmVlIGNvbnRhaW5zIG9ubHkgTlVMTCBwb2ludGVycy4NCisgKi8N
CitzdGF0aWMgaW5saW5lIGJvb2wgbXRyZWVfZW1wdHkoY29uc3Qgc3RydWN0IG1hcGxlX3RyZWUg
Km10KQ0KK3sNCisJcmV0dXJuIG10LT5tYV9yb290ID09IE5VTEw7DQorfQ0KKw0KKy8qIEFkdmFu
Y2VkIEFQSSAqLw0KKw0KKy8qDQorICogVGhlIG1hcGxlIHN0YXRlIGlzIGRlZmluZWQgaW4gdGhl
IHN0cnVjdCBtYV9zdGF0ZSBhbmQgaXMgdXNlZCB0byBrZWVwIHRyYWNrDQorICogb2YgaW5mb3Jt
YXRpb24gZHVyaW5nIG9wZXJhdGlvbnMsIGFuZCBldmVuIGJldHdlZW4gb3BlcmF0aW9ucyB3aGVu
IHVzaW5nIHRoZQ0KKyAqIGFkdmFuY2VkIEFQSS4NCisgKg0KKyAqIElmIHN0YXRlLT5ub2RlIGhh
cyBiaXQgMCBzZXQgdGhlbiBpdCByZWZlcmVuY2VzIGEgdHJlZSBsb2NhdGlvbiB3aGljaCBpcyBu
b3QNCisgKiBhIG5vZGUgKGVnIHRoZSByb290KS4gIElmIGJpdCAxIGlzIHNldCwgdGhlIHJlc3Qg
b2YgdGhlIGJpdHMgYXJlIGEgbmVnYXRpdmUNCisgKiBlcnJuby4gIEJpdCAyICh0aGUgJ3VuYWxs
b2NhdGVkIHNsb3RzJyBiaXQpIGlzIGNsZWFyLiAgQml0cyAzLTYgaW5kaWNhdGUgdGhlDQorICog
bm9kZSB0eXBlLg0KKyAqDQorICogc3RhdGUtPmFsbG9jIGVpdGhlciBoYXMgYSByZXF1ZXN0IG51
bWJlciBvZiBub2RlcyBvciBhbiBhbGxvY2F0ZWQgbm9kZS4gIElmDQorICogc3RhdC0+YWxsb2Mg
aGFzIGEgcmVxdWVzdGVkIG51bWJlciBvZiBub2RlcywgdGhlIGZpcnN0IGJpdCB3aWxsIGJlIHNl
dCAoMHgxKQ0KKyAqIGFuZCB0aGUgcmVtYWluaW5nIGJpdHMgYXJlIHRoZSB2YWx1ZS4gIElmIHN0
YXRlLT5hbGxvYyBpcyBhIG5vZGUsIHRoZW4gdGhlDQorICogbm9kZSB3aWxsIGJlIG9mIHR5cGUg
bWFwbGVfYWxsb2MuICBtYXBsZV9hbGxvYyBoYXMgTUFQTEVfTk9ERV9TTE9UUyAtIDEgZm9yDQor
ICogc3RvcmluZyBtb3JlIGFsbG9jYXRlZCBub2RlcywgYSB0b3RhbCBudW1iZXIgb2Ygbm9kZXMg
YWxsb2NhdGVkLCBhbmQgdGhlDQorICogbm9kZV9jb3VudCBpbiB0aGlzIG5vZGUuICBub2RlX2Nv
dW50IGlzIHRoZSBudW1iZXIgb2YgYWxsb2NhdGVkIG5vZGVzIGluIHRoaXMNCisgKiBub2RlLiAg
VGhlIHNjYWxpbmcgYmV5b25kIE1BUExFX05PREVfU0xPVFMgLSAxIGlzIGhhbmRsZWQgYnkgc3Rv
cmluZyBmdXJ0aGVyDQorICogbm9kZXMgaW50byBzdGF0ZS0+YWxsb2MtPnNsb3RbMF0ncyBub2Rl
LiAgTm9kZXMgYXJlIHRha2VuIGZyb20gc3RhdGUtPmFsbG9jDQorICogYnkgcmVtb3ZpbmcgYSBu
b2RlIGZyb20gdGhlIHN0YXRlLT5hbGxvYyBub2RlIHVudGlsIHN0YXRlLT5hbGxvYy0+bm9kZV9j
b3VudA0KKyAqIGlzIDEsIHdoZW4gc3RhdGUtPmFsbG9jIGlzIHJldHVybmVkIGFuZCB0aGUgc3Rh
dGUtPmFsbG9jLT5zbG90WzBdIGlzIHByb21vdGVkDQorICogdG8gc3RhdGUtPmFsbG9jLiAgTm9k
ZXMgYXJlIHB1c2hlZCBvbnRvIHN0YXRlLT5hbGxvYyBieSBwdXR0aW5nIHRoZSBjdXJyZW50DQor
ICogc3RhdGUtPmFsbG9jIGludG8gdGhlIHB1c2hlZCBub2RlJ3Mgc2xvdFswXS4NCisgKg0KKyAq
IFRoZSBzdGF0ZSBhbHNvIGNvbnRhaW5zIHRoZSBpbXBsaWVkIG1pbi9tYXggb2YgdGhlIHN0YXRl
LT5ub2RlLCB0aGUgZGVwdGggb2YNCisgKiB0aGlzIHNlYXJjaCwgYW5kIHRoZSBvZmZzZXQuIFRo
ZSBpbXBsaWVkIG1pbi9tYXggYXJlIGVpdGhlciBmcm9tIHRoZSBwYXJlbnQNCisgKiBub2RlIG9y
IGFyZSAwLW9vIGZvciB0aGUgcm9vdCBub2RlLiAgVGhlIGRlcHRoIGlzIGluY3JlbWVudGVkIG9y
IGRlY3JlbWVudGVkDQorICogZXZlcnkgdGltZSBhIG5vZGUgaXMgd2Fsa2VkIGRvd24gb3IgdXAu
ICBUaGUgb2Zmc2V0IGlzIHRoZSBzbG90L3Bpdm90IG9mDQorICogaW50ZXJlc3QgaW4gdGhlIG5v
ZGUgLSBlaXRoZXIgZm9yIHJlYWRpbmcgb3Igd3JpdGluZy4NCisgKg0KKyAqIFdoZW4gcmV0dXJu
aW5nIGEgdmFsdWUgdGhlIG1hcGxlIHN0YXRlIGluZGV4IGFuZCBsYXN0IHJlc3BlY3RpdmVseSBj
b250YWluDQorICogdGhlIHN0YXJ0IGFuZCBlbmQgb2YgdGhlIHJhbmdlIGZvciB0aGUgZW50cnku
ICBSYW5nZXMgYXJlIGluY2x1c2l2ZSBpbiB0aGUNCisgKiBNYXBsZSBUcmVlLg0KKyAqLw0KK3N0
cnVjdCBtYV9zdGF0ZSB7DQorCXN0cnVjdCBtYXBsZV90cmVlICp0cmVlOwkvKiBUaGUgdHJlZSB3
ZSdyZSBvcGVyYXRpbmcgaW4gKi8NCisJdW5zaWduZWQgbG9uZyBpbmRleDsJCS8qIFRoZSBpbmRl
eCB3ZSdyZSBvcGVyYXRpbmcgb24gLSByYW5nZSBzdGFydCAqLw0KKwl1bnNpZ25lZCBsb25nIGxh
c3Q7CQkvKiBUaGUgbGFzdCBpbmRleCB3ZSdyZSBvcGVyYXRpbmcgb24gLSByYW5nZSBlbmQgKi8N
CisJc3RydWN0IG1hcGxlX2Vub2RlICpub2RlOwkvKiBUaGUgbm9kZSBjb250YWluaW5nIHRoaXMg
ZW50cnkgKi8NCisJdW5zaWduZWQgbG9uZyBtaW47CQkvKiBUaGUgbWluaW11bSBpbmRleCBvZiB0
aGlzIG5vZGUgLSBpbXBsaWVkIHBpdm90IG1pbiAqLw0KKwl1bnNpZ25lZCBsb25nIG1heDsJCS8q
IFRoZSBtYXhpbXVtIGluZGV4IG9mIHRoaXMgbm9kZSAtIGltcGxpZWQgcGl2b3QgbWF4ICovDQor
CXN0cnVjdCBtYXBsZV9hbGxvYyAqYWxsb2M7CS8qIEFsbG9jYXRlZCBub2RlcyBmb3IgdGhpcyBv
cGVyYXRpb24gKi8NCisJdW5zaWduZWQgY2hhciBkZXB0aDsJCS8qIGRlcHRoIG9mIHRyZWUgZGVz
Y2VudCBkdXJpbmcgd3JpdGUgKi8NCisJdW5zaWduZWQgY2hhciBvZmZzZXQ7DQorCXVuc2lnbmVk
IGNoYXIgbWFzX2ZsYWdzOw0KK307DQorDQorc3RydWN0IG1hX3dyX3N0YXRlIHsNCisJc3RydWN0
IG1hX3N0YXRlICptYXM7DQorCXN0cnVjdCBtYXBsZV9ub2RlICpub2RlOw0KKwllbnVtIG1hcGxl
X3R5cGUgdHlwZTsNCisJdW5zaWduZWQgbG9uZyByX21pbjsNCisJdW5zaWduZWQgbG9uZyByX21h
eDsNCisJdW5zaWduZWQgY2hhciBvZmZzZXRfZW5kOw0KKwl1bnNpZ25lZCBjaGFyIG5vZGVfZW5k
Ow0KKwl1bnNpZ25lZCBsb25nICpwaXZvdHM7DQorCXVuc2lnbmVkIGxvbmcgZW5kX3BpdjsNCisJ
dm9pZCBfX3JjdSAqKnNsb3RzOw0KKwl2b2lkICplbnRyeTsNCisJdm9pZCAqY29udGVudDsNCit9
Ow0KKw0KKyNkZWZpbmUgbWFzX2xvY2sobWFzKSAgICAgICAgICAgc3Bpbl9sb2NrKCYoKG1hcykt
PnRyZWUtPm1hX2xvY2spKQ0KKyNkZWZpbmUgbWFzX3VubG9jayhtYXMpICAgICAgICAgc3Bpbl91
bmxvY2soJigobWFzKS0+dHJlZS0+bWFfbG9jaykpDQorDQorDQorLyoNCisgKiBTcGVjaWFsIHZh
bHVlcyBmb3IgbWFfc3RhdGUubm9kZS4NCisgKiBNQVNfU1RBUlQgbWVhbnMgd2UgaGF2ZSBub3Qg
c2VhcmNoZWQgdGhlIHRyZWUuDQorICogTUFTX1JPT1QgbWVhbnMgd2UgaGF2ZSBzZWFyY2hlZCB0
aGUgdHJlZSBhbmQgdGhlIGVudHJ5IHdlIGZvdW5kIGxpdmVzIGluDQorICogdGhlIHJvb3Qgb2Yg
dGhlIHRyZWUgKGllIGl0IGhhcyBpbmRleCAwLCBsZW5ndGggMSBhbmQgaXMgdGhlIG9ubHkgZW50
cnkgaW4NCisgKiB0aGUgdHJlZSkuDQorICogTUFTX05PTkUgbWVhbnMgd2UgaGF2ZSBzZWFyY2hl
ZCB0aGUgdHJlZSBhbmQgdGhlcmUgaXMgbm8gbm9kZSBpbiB0aGUNCisgKiB0cmVlIGZvciB0aGlz
IGVudHJ5LiAgRm9yIGV4YW1wbGUsIHdlIHNlYXJjaGVkIGZvciBpbmRleCAxIGluIGFuIGVtcHR5
DQorICogdHJlZS4gIE9yIHdlIGhhdmUgYSB0cmVlIHdoaWNoIHBvaW50cyB0byBhIGZ1bGwgbGVh
ZiBub2RlIGFuZCB3ZQ0KKyAqIHNlYXJjaGVkIGZvciBhbiBlbnRyeSB3aGljaCBpcyBsYXJnZXIg
dGhhbiBjYW4gYmUgY29udGFpbmVkIGluIHRoYXQNCisgKiBsZWFmIG5vZGUuDQorICogTUFfRVJS
T1IgcmVwcmVzZW50cyBhbiBlcnJuby4gIEFmdGVyIGRyb3BwaW5nIHRoZSBsb2NrIGFuZCBhdHRl
bXB0aW5nDQorICogdG8gcmVzb2x2ZSB0aGUgZXJyb3IsIHRoZSB3YWxrIHdvdWxkIGhhdmUgdG8g
YmUgcmVzdGFydGVkIGZyb20gdGhlDQorICogdG9wIG9mIHRoZSB0cmVlIGFzIHRoZSB0cmVlIG1h
eSBoYXZlIGJlZW4gbW9kaWZpZWQuDQorICovDQorI2RlZmluZSBNQVNfU1RBUlQJKChzdHJ1Y3Qg
bWFwbGVfZW5vZGUgKikxVUwpDQorI2RlZmluZSBNQVNfUk9PVAkoKHN0cnVjdCBtYXBsZV9lbm9k
ZSAqKTVVTCkNCisjZGVmaW5lIE1BU19OT05FCSgoc3RydWN0IG1hcGxlX2Vub2RlICopOVVMKQ0K
KyNkZWZpbmUgTUFTX1BBVVNFCSgoc3RydWN0IG1hcGxlX2Vub2RlICopMTdVTCkNCisjZGVmaW5l
IE1BX0VSUk9SKGVycikgXA0KKwkJKChzdHJ1Y3QgbWFwbGVfZW5vZGUgKikoKCh1bnNpZ25lZCBs
b25nKWVyciA8PCAyKSB8IDJVTCkpDQorDQorI2RlZmluZSBNQV9TVEFURShuYW1lLCBtdCwgZmly
c3QsIGVuZCkJCQkJCVwNCisJc3RydWN0IG1hX3N0YXRlIG5hbWUgPSB7CQkJCQlcDQorCQkudHJl
ZSA9IG10LAkJCQkJCVwNCisJCS5pbmRleCA9IGZpcnN0LAkJCQkJCVwNCisJCS5sYXN0ID0gZW5k
LAkJCQkJCVwNCisJCS5ub2RlID0gTUFTX1NUQVJULAkJCQkJXA0KKwkJLm1pbiA9IDAsCQkJCQkJ
XA0KKwkJLm1heCA9IFVMT05HX01BWCwJCQkJCVwNCisJfQ0KKw0KKyNkZWZpbmUgTUFfV1JfU1RB
VEUobmFtZSwgbWFfc3RhdGUsIHdyX2VudHJ5KQkJCQlcDQorCXN0cnVjdCBtYV93cl9zdGF0ZSBu
YW1lID0gewkJCQkJXA0KKwkJLm1hcyA9IG1hX3N0YXRlLAkJCQkJXA0KKwkJLmNvbnRlbnQgPSBO
VUxMLAkJCQkJXA0KKwkJLmVudHJ5ID0gd3JfZW50cnksCQkJCQlcDQorCX0NCisNCisjZGVmaW5l
IE1BX1RPUElBUlkobmFtZSwgdHJlZSkJCQkJCQlcDQorCXN0cnVjdCBtYV90b3BpYXJ5IG5hbWUg
PSB7CQkJCQlcDQorCQkuaGVhZCA9IE5VTEwsCQkJCQkJXA0KKwkJLnRhaWwgPSBOVUxMLAkJCQkJ
CVwNCisJCS5tdHJlZSA9IHRyZWUsCQkJCQkJXA0KKwl9DQorDQordm9pZCAqbWFzX3dhbGsoc3Ry
dWN0IG1hX3N0YXRlICptYXMpOw0KK3ZvaWQgKm1hc19zdG9yZShzdHJ1Y3QgbWFfc3RhdGUgKm1h
cywgdm9pZCAqZW50cnkpOw0KK3ZvaWQgKm1hc19lcmFzZShzdHJ1Y3QgbWFfc3RhdGUgKm1hcyk7
DQoraW50IG1hc19zdG9yZV9nZnAoc3RydWN0IG1hX3N0YXRlICptYXMsIHZvaWQgKmVudHJ5LCBn
ZnBfdCBnZnApOw0KK3ZvaWQgKm1hc19maW5kKHN0cnVjdCBtYV9zdGF0ZSAqbWFzLCB1bnNpZ25l
ZCBsb25nIG1heCk7DQordm9pZCAqbWFzX2ZpbmRfcmV2KHN0cnVjdCBtYV9zdGF0ZSAqbWFzLCB1
bnNpZ25lZCBsb25nIG1pbik7DQorDQorYm9vbCBtYXNfbm9tZW0oc3RydWN0IG1hX3N0YXRlICpt
YXMsIGdmcF90IGdmcCk7DQordm9pZCBtYXNfcGF1c2Uoc3RydWN0IG1hX3N0YXRlICptYXMpOw0K
K3ZvaWQgbWFwbGVfdHJlZV9pbml0KHZvaWQpOw0KK3ZvaWQgbWFzX2Rlc3Ryb3koc3RydWN0IG1h
X3N0YXRlICptYXMpOw0KK2ludCBtYXNfZXhwZWN0ZWRfZW50cmllcyhzdHJ1Y3QgbWFfc3RhdGUg
Km1hcywgdW5zaWduZWQgbG9uZyBucl9lbnRyaWVzKTsNCisNCit2b2lkICptYXNfcHJldihzdHJ1
Y3QgbWFfc3RhdGUgKm1hcywgdW5zaWduZWQgbG9uZyBtaW4pOw0KK3ZvaWQgKm1hc19uZXh0KHN0
cnVjdCBtYV9zdGF0ZSAqbWFzLCB1bnNpZ25lZCBsb25nIG1heCk7DQorDQoraW50IG1hc19lbXB0
eV9hcmVhKHN0cnVjdCBtYV9zdGF0ZSAqbWFzLCB1bnNpZ25lZCBsb25nIG1pbiwgdW5zaWduZWQg
bG9uZyBtYXgsDQorCQkgICB1bnNpZ25lZCBsb25nIHNpemUpOw0KKw0KKy8qIENoZWNrcyBpZiBh
IG1hcyBoYXMgbm90IGZvdW5kIGFueXRoaW5nICovDQorc3RhdGljIGlubGluZSBib29sIG1hc19p
c19ub25lKHN0cnVjdCBtYV9zdGF0ZSAqbWFzKQ0KK3sNCisJcmV0dXJuIG1hcy0+bm9kZSA9PSBN
QVNfTk9ORTsNCit9DQorDQorLyogQ2hlY2tzIGlmIGEgbWFzIGhhcyBiZWVuIHBhdXNlZCAqLw0K
K3N0YXRpYyBpbmxpbmUgYm9vbCBtYXNfaXNfcGF1c2VkKHN0cnVjdCBtYV9zdGF0ZSAqbWFzKQ0K
K3sNCisJcmV0dXJuIG1hcy0+bm9kZSA9PSBNQVNfUEFVU0U7DQorfQ0KKw0KK3ZvaWQgbWFzX2R1
cF90cmVlKHN0cnVjdCBtYV9zdGF0ZSAqb2xkbWFzLCBzdHJ1Y3QgbWFfc3RhdGUgKm1hcyk7DQor
dm9pZCBtYXNfZHVwX3N0b3JlKHN0cnVjdCBtYV9zdGF0ZSAqbWFzLCB2b2lkICplbnRyeSk7DQor
DQorLyoNCisgKiBUaGlzIGZpbmRzIGFuIGVtcHR5IGFyZWEgZnJvbSB0aGUgaGlnaGVzdCBhZGRy
ZXNzIHRvIHRoZSBsb3dlc3QuDQorICogQUtBICJUb3Bkb3duIiB2ZXJzaW9uLA0KKyAqLw0KK2lu
dCBtYXNfZW1wdHlfYXJlYV9yZXYoc3RydWN0IG1hX3N0YXRlICptYXMsIHVuc2lnbmVkIGxvbmcg
bWluLA0KKwkJICAgICAgIHVuc2lnbmVkIGxvbmcgbWF4LCB1bnNpZ25lZCBsb25nIHNpemUpOw0K
Ky8qKg0KKyAqIG1hc19yZXNldCgpIC0gUmVzZXQgYSBNYXBsZSBUcmVlIG9wZXJhdGlvbiBzdGF0
ZS4NCisgKiBAbWFzOiBNYXBsZSBUcmVlIG9wZXJhdGlvbiBzdGF0ZS4NCisgKg0KKyAqIFJlc2V0
cyB0aGUgZXJyb3Igb3Igd2FsayBzdGF0ZSBvZiB0aGUgQG1hcyBzbyBmdXR1cmUgd2Fsa3Mgb2Yg
dGhlDQorICogYXJyYXkgd2lsbCBzdGFydCBmcm9tIHRoZSByb290LiAgVXNlIHRoaXMgaWYgeW91
IGhhdmUgZHJvcHBlZCB0aGUNCisgKiBsb2NrIGFuZCB3YW50IHRvIHJldXNlIHRoZSBtYV9zdGF0
ZS4NCisgKg0KKyAqIENvbnRleHQ6IEFueSBjb250ZXh0Lg0KKyAqLw0KK3N0YXRpYyBpbmxpbmUg
dm9pZCBtYXNfcmVzZXQoc3RydWN0IG1hX3N0YXRlICptYXMpDQorew0KKwltYXMtPm5vZGUgPSBN
QVNfU1RBUlQ7DQorfQ0KKw0KKy8qKg0KKyAqIG1hc19mb3JfZWFjaCgpIC0gSXRlcmF0ZSBvdmVy
IGEgcmFuZ2Ugb2YgdGhlIG1hcGxlIHRyZWUuDQorICogQG1hczogTWFwbGUgVHJlZSBvcGVyYXRp
b24gc3RhdGUgKG1hcGxlX3N0YXRlKQ0KKyAqIEBlbnRyeTogRW50cnkgcmV0cmlldmVkIGZyb20g
dGhlIHRyZWUNCisgKiBAbWF4OiBtYXhpbXVtIGluZGV4IHRvIHJldHJpZXZlIGZyb20gdGhlIHRy
ZWUNCisgKg0KKyAqIFdoZW4gcmV0dXJuZWQsIG1hcy0+aW5kZXggYW5kIG1hcy0+bGFzdCB3aWxs
IGhvbGQgdGhlIGVudGlyZSByYW5nZSBmb3IgdGhlDQorICogZW50cnkuDQorICoNCisgKiBOb3Rl
OiBtYXkgcmV0dXJuIHRoZSB6ZXJvIGVudHJ5Lg0KKyAqDQorICovDQorI2RlZmluZSBtYXNfZm9y
X2VhY2gobWFzLCBlbnRyeSwgbWF4KSBcDQorCXdoaWxlICgoKGVudHJ5KSA9IG1hc19maW5kKCht
YXMpLCAobWF4KSkpICE9IE5VTEwpDQorDQorDQorLyoqDQorICogbWFzX3NldF9yYW5nZSgpIC0g
U2V0IHVwIE1hcGxlIFRyZWUgb3BlcmF0aW9uIHN0YXRlIGZvciBhIGRpZmZlcmVudCBpbmRleC4N
CisgKiBAbWFzOiBNYXBsZSBUcmVlIG9wZXJhdGlvbiBzdGF0ZS4NCisgKiBAc3RhcnQ6IE5ldyBz
dGFydCBvZiByYW5nZSBpbiB0aGUgTWFwbGUgVHJlZS4NCisgKiBAbGFzdDogTmV3IGVuZCBvZiBy
YW5nZSBpbiB0aGUgTWFwbGUgVHJlZS4NCisgKg0KKyAqIE1vdmUgdGhlIG9wZXJhdGlvbiBzdGF0
ZSB0byByZWZlciB0byBhIGRpZmZlcmVudCByYW5nZS4gIFRoaXMgd2lsbA0KKyAqIGhhdmUgdGhl
IGVmZmVjdCBvZiBzdGFydGluZyBhIHdhbGsgZnJvbSB0aGUgdG9wOyBzZWUgbWFzX25leHQoKQ0K
KyAqIHRvIG1vdmUgdG8gYW4gYWRqYWNlbnQgaW5kZXguDQorICovDQorc3RhdGljIGlubGluZQ0K
K3ZvaWQgbWFzX3NldF9yYW5nZShzdHJ1Y3QgbWFfc3RhdGUgKm1hcywgdW5zaWduZWQgbG9uZyBz
dGFydCwgdW5zaWduZWQgbG9uZyBsYXN0KQ0KK3sNCisJICAgICAgIG1hcy0+aW5kZXggPSBzdGFy
dDsNCisJICAgICAgIG1hcy0+bGFzdCA9IGxhc3Q7DQorCSAgICAgICBtYXMtPm5vZGUgPSBNQVNf
U1RBUlQ7DQorfQ0KKw0KKy8qKg0KKyAqIG1hc19zZXQoKSAtIFNldCB1cCBNYXBsZSBUcmVlIG9w
ZXJhdGlvbiBzdGF0ZSBmb3IgYSBkaWZmZXJlbnQgaW5kZXguDQorICogQG1hczogTWFwbGUgVHJl
ZSBvcGVyYXRpb24gc3RhdGUuDQorICogQGluZGV4OiBOZXcgaW5kZXggaW50byB0aGUgTWFwbGUg
VHJlZS4NCisgKg0KKyAqIE1vdmUgdGhlIG9wZXJhdGlvbiBzdGF0ZSB0byByZWZlciB0byBhIGRp
ZmZlcmVudCBpbmRleC4gIFRoaXMgd2lsbA0KKyAqIGhhdmUgdGhlIGVmZmVjdCBvZiBzdGFydGlu
ZyBhIHdhbGsgZnJvbSB0aGUgdG9wOyBzZWUgbWFzX25leHQoKQ0KKyAqIHRvIG1vdmUgdG8gYW4g
YWRqYWNlbnQgaW5kZXguDQorICovDQorc3RhdGljIGlubGluZSB2b2lkIG1hc19zZXQoc3RydWN0
IG1hX3N0YXRlICptYXMsIHVuc2lnbmVkIGxvbmcgaW5kZXgpDQorew0KKw0KKwltYXNfc2V0X3Jh
bmdlKG1hcywgaW5kZXgsIGluZGV4KTsNCit9DQorDQorc3RhdGljIGlubGluZSBib29sIG10X2V4
dGVybmFsX2xvY2soY29uc3Qgc3RydWN0IG1hcGxlX3RyZWUgKm10KQ0KK3sNCisJcmV0dXJuICht
dC0+bWFfZmxhZ3MgJiBNVF9GTEFHU19MT0NLX01BU0spID09IE1UX0ZMQUdTX0xPQ0tfRVhURVJO
Ow0KK30NCisNCisvKioNCisgKiBtdF9pbml0X2ZsYWdzKCkgLSBJbml0aWFsaXNlIGFuIGVtcHR5
IG1hcGxlIHRyZWUgd2l0aCBmbGFncy4NCisgKiBAbXQ6IE1hcGxlIFRyZWUNCisgKiBAZmxhZ3M6
IG1hcGxlIHRyZWUgZmxhZ3MuDQorICoNCisgKiBJZiB5b3UgbmVlZCB0byBpbml0aWFsaXNlIGEg
TWFwbGUgVHJlZSB3aXRoIHNwZWNpYWwgZmxhZ3MgKGVnLCBhbg0KKyAqIGFsbG9jYXRpb24gdHJl
ZSksIHVzZSB0aGlzIGZ1bmN0aW9uLg0KKyAqDQorICogQ29udGV4dDogQW55IGNvbnRleHQuDQor
ICovDQorc3RhdGljIGlubGluZSB2b2lkIG10X2luaXRfZmxhZ3Moc3RydWN0IG1hcGxlX3RyZWUg
Km10LCB1bnNpZ25lZCBpbnQgZmxhZ3MpDQorew0KKwltdC0+bWFfZmxhZ3MgPSBmbGFnczsNCisJ
aWYgKCFtdF9leHRlcm5hbF9sb2NrKG10KSkNCisJCXNwaW5fbG9ja19pbml0KCZtdC0+bWFfbG9j
ayk7DQorCXJjdV9hc3NpZ25fcG9pbnRlcihtdC0+bWFfcm9vdCwgTlVMTCk7DQorfQ0KKw0KKy8q
Kg0KKyAqIG10X2luaXQoKSAtIEluaXRpYWxpc2UgYW4gZW1wdHkgbWFwbGUgdHJlZS4NCisgKiBA
bXQ6IE1hcGxlIFRyZWUNCisgKg0KKyAqIEFuIGVtcHR5IE1hcGxlIFRyZWUuDQorICoNCisgKiBD
b250ZXh0OiBBbnkgY29udGV4dC4NCisgKi8NCitzdGF0aWMgaW5saW5lIHZvaWQgbXRfaW5pdChz
dHJ1Y3QgbWFwbGVfdHJlZSAqbXQpDQorew0KKwltdF9pbml0X2ZsYWdzKG10LCAwKTsNCit9DQor
DQorc3RhdGljIGlubGluZSBib29sIG10X2luX3JjdShzdHJ1Y3QgbWFwbGVfdHJlZSAqbXQpDQor
ew0KKyNpZmRlZiBDT05GSUdfTUFQTEVfUkNVX0RJU0FCTEVEDQorCXJldHVybiBmYWxzZTsNCisj
ZW5kaWYNCisJcmV0dXJuIG10LT5tYV9mbGFncyAmIE1UX0ZMQUdTX1VTRV9SQ1U7DQorfQ0KKw0K
Ky8qKg0KKyAqIG10X2NsZWFyX2luX3JjdSgpIC0gU3dpdGNoIHRoZSB0cmVlIHRvIG5vbi1SQ1Ug
bW9kZS4NCisgKiBAbXQ6IFRoZSBNYXBsZSBUcmVlDQorICovDQorc3RhdGljIGlubGluZSB2b2lk
IG10X2NsZWFyX2luX3JjdShzdHJ1Y3QgbWFwbGVfdHJlZSAqbXQpDQorew0KKwlpZiAoIW10X2lu
X3JjdShtdCkpDQorCQlyZXR1cm47DQorDQorCWlmIChtdF9leHRlcm5hbF9sb2NrKG10KSkgew0K
KwkJQlVHX09OKCFtdF9sb2NrX2lzX2hlbGQobXQpKTsNCisJCW10LT5tYV9mbGFncyAmPSB+TVRf
RkxBR1NfVVNFX1JDVTsNCisJfSBlbHNlIHsNCisJCW10cmVlX2xvY2sobXQpOw0KKwkJbXQtPm1h
X2ZsYWdzICY9IH5NVF9GTEFHU19VU0VfUkNVOw0KKwkJbXRyZWVfdW5sb2NrKG10KTsNCisJfQ0K
K30NCisNCisvKioNCisgKiBtdF9zZXRfaW5fcmN1KCkgLSBTd2l0Y2ggdGhlIHRyZWUgdG8gUkNV
IHNhZmUgbW9kZS4NCisgKiBAbXQ6IFRoZSBNYXBsZSBUcmVlDQorICovDQorc3RhdGljIGlubGlu
ZSB2b2lkIG10X3NldF9pbl9yY3Uoc3RydWN0IG1hcGxlX3RyZWUgKm10KQ0KK3sNCisJaWYgKG10
X2luX3JjdShtdCkpDQorCQlyZXR1cm47DQorDQorCWlmIChtdF9leHRlcm5hbF9sb2NrKG10KSkg
ew0KKwkJQlVHX09OKCFtdF9sb2NrX2lzX2hlbGQobXQpKTsNCisJCW10LT5tYV9mbGFncyB8PSBN
VF9GTEFHU19VU0VfUkNVOw0KKwl9IGVsc2Ugew0KKwkJbXRyZWVfbG9jayhtdCk7DQorCQltdC0+
bWFfZmxhZ3MgfD0gTVRfRkxBR1NfVVNFX1JDVTsNCisJCW10cmVlX3VubG9jayhtdCk7DQorCX0N
Cit9DQorDQordm9pZCAqbXRfZmluZChzdHJ1Y3QgbWFwbGVfdHJlZSAqbXQsIHVuc2lnbmVkIGxv
bmcgKmluZGV4LCB1bnNpZ25lZCBsb25nIG1heCk7DQordm9pZCAqbXRfZmluZF9hZnRlcihzdHJ1
Y3QgbWFwbGVfdHJlZSAqbXQsIHVuc2lnbmVkIGxvbmcgKmluZGV4LA0KKwkJICAgIHVuc2lnbmVk
IGxvbmcgbWF4KTsNCit2b2lkICptdF9wcmV2KHN0cnVjdCBtYXBsZV90cmVlICptdCwgdW5zaWdu
ZWQgbG9uZyBpbmRleCwgIHVuc2lnbmVkIGxvbmcgbWluKTsNCit2b2lkICptdF9uZXh0KHN0cnVj
dCBtYXBsZV90cmVlICptdCwgdW5zaWduZWQgbG9uZyBpbmRleCwgdW5zaWduZWQgbG9uZyBtYXgp
Ow0KKw0KKy8qKg0KKyAqIG10X2Zvcl9lYWNoIC0gSXRlcmF0ZSBvdmVyIGVhY2ggZW50cnkgc3Rh
cnRpbmcgYXQgaW5kZXggdW50aWwgbWF4Lg0KKyAqIEB0cmVlOiBUaGUgTWFwbGUgVHJlZQ0KKyAq
IEBlbnRyeTogVGhlIGN1cnJlbnQgZW50cnkNCisgKiBAaW5kZXg6IFRoZSBpbmRleCB0byB1cGRh
dGUgdG8gdHJhY2sgdGhlIGxvY2F0aW9uIGluIHRoZSB0cmVlDQorICogQG1heDogVGhlIG1heGlt
dW0gbGltaXQgZm9yIEBpbmRleA0KKyAqDQorICogTm90ZTogV2lsbCBub3QgcmV0dXJuIHRoZSB6
ZXJvIGVudHJ5Lg0KKyAqLw0KKyNkZWZpbmUgbXRfZm9yX2VhY2godHJlZSwgZW50cnksIGluZGV4
LCBtYXgpIFwNCisJZm9yIChlbnRyeSA9IG10X2ZpbmQodHJlZSwgJmluZGV4LCBtYXgpOyBcDQor
CQllbnRyeTsgZW50cnkgPSBtdF9maW5kX2FmdGVyKHRyZWUsICZpbmRleCwgbWF4KSkNCisNCisN
CisjaWZkZWYgQ09ORklHX0RFQlVHX01BUExFX1RSRUUNCitleHRlcm4gYXRvbWljX3QgbWFwbGVf
dHJlZV90ZXN0c19ydW47DQorZXh0ZXJuIGF0b21pY190IG1hcGxlX3RyZWVfdGVzdHNfcGFzc2Vk
Ow0KKw0KK3ZvaWQgbXRfZHVtcChjb25zdCBzdHJ1Y3QgbWFwbGVfdHJlZSAqbXQpOw0KKyNkZWZp
bmUgTVRfQlVHX09OKHRyZWUsIHgpIGRvIHsJCQkJCQlcDQorCWF0b21pY19pbmMoJm1hcGxlX3Ry
ZWVfdGVzdHNfcnVuKTsJCQkJXA0KKwlpZiAoeCkgewkJCQkJCQlcDQorCQlwcl9pbmZvKCJCVUcg
YXQgJXM6JWQgKCV1KVxuIiwJCQkJXA0KKwkJX19mdW5jX18sIF9fTElORV9fLCB4KTsJCQkJCVwN
CisJCW10X2R1bXAodHJlZSk7CQkJCQkJXA0KKwkJcHJfaW5mbygiUGFzczogJXUgUnVuOiV1XG4i
LAkJCQlcDQorCQkJYXRvbWljX3JlYWQoJm1hcGxlX3RyZWVfdGVzdHNfcGFzc2VkKSwJCVwNCisJ
CQlhdG9taWNfcmVhZCgmbWFwbGVfdHJlZV90ZXN0c19ydW4pKTsJCVwNCisJCWR1bXBfc3RhY2so
KTsJCQkJCQlcDQorCX0gZWxzZSB7CQkJCQkJCVwNCisJCWF0b21pY19pbmMoJm1hcGxlX3RyZWVf
dGVzdHNfcGFzc2VkKTsJCQlcDQorCX0JCQkJCQkJCVwNCit9IHdoaWxlICgwKQ0KKyNlbHNlDQor
I2RlZmluZSBNVF9CVUdfT04odHJlZSwgeCkgQlVHX09OKHgpDQorI2VuZGlmIC8qIENPTkZJR19E
RUJVR19NQVBMRV9UUkVFICovDQorDQorI2VuZGlmIC8qX0xJTlVYX01BUExFX1RSRUVfSCAqLw0K
ZGlmZiAtLWdpdCBhL2luY2x1ZGUvdHJhY2UvZXZlbnRzL21hcGxlX3RyZWUuaCBiL2luY2x1ZGUv
dHJhY2UvZXZlbnRzL21hcGxlX3RyZWUuaA0KbmV3IGZpbGUgbW9kZSAxMDA2NDQNCmluZGV4IDAw
MDAwMDAwMDAwMC4uZmJkMTU4MzlmOWFhDQotLS0gL2Rldi9udWxsDQorKysgYi9pbmNsdWRlL3Ry
YWNlL2V2ZW50cy9tYXBsZV90cmVlLmgNCkBAIC0wLDAgKzEsMTIzIEBADQorLyogU1BEWC1MaWNl
bnNlLUlkZW50aWZpZXI6IEdQTC0yLjAgKi8NCisjdW5kZWYgVFJBQ0VfU1lTVEVNDQorI2RlZmlu
ZSBUUkFDRV9TWVNURU0gbWFwbGVfdHJlZQ0KKw0KKyNpZiAhZGVmaW5lZChfVFJBQ0VfTU1fSCkg
fHwgZGVmaW5lZChUUkFDRV9IRUFERVJfTVVMVElfUkVBRCkNCisjZGVmaW5lIF9UUkFDRV9NTV9I
DQorDQorDQorI2luY2x1ZGUgPGxpbnV4L3RyYWNlcG9pbnQuaD4NCisNCitzdHJ1Y3QgbWFfc3Rh
dGU7DQorDQorVFJBQ0VfRVZFTlQobWFfb3AsDQorDQorCVRQX1BST1RPKGNvbnN0IGNoYXIgKmZu
LCBzdHJ1Y3QgbWFfc3RhdGUgKm1hcyksDQorDQorCVRQX0FSR1MoZm4sIG1hcyksDQorDQorCVRQ
X1NUUlVDVF9fZW50cnkoDQorCQkJX19maWVsZChjb25zdCBjaGFyICosIGZuKQ0KKwkJCV9fZmll
bGQodW5zaWduZWQgbG9uZywgbWluKQ0KKwkJCV9fZmllbGQodW5zaWduZWQgbG9uZywgbWF4KQ0K
KwkJCV9fZmllbGQodW5zaWduZWQgbG9uZywgaW5kZXgpDQorCQkJX19maWVsZCh1bnNpZ25lZCBs
b25nLCBsYXN0KQ0KKwkJCV9fZmllbGQodm9pZCAqLCBub2RlKQ0KKwkpLA0KKw0KKwlUUF9mYXN0
X2Fzc2lnbigNCisJCQlfX2VudHJ5LT5mbgkJPSBmbjsNCisJCQlfX2VudHJ5LT5taW4JCT0gbWFz
LT5taW47DQorCQkJX19lbnRyeS0+bWF4CQk9IG1hcy0+bWF4Ow0KKwkJCV9fZW50cnktPmluZGV4
CQk9IG1hcy0+aW5kZXg7DQorCQkJX19lbnRyeS0+bGFzdAkJPSBtYXMtPmxhc3Q7DQorCQkJX19l
bnRyeS0+bm9kZQkJPSBtYXMtPm5vZGU7DQorCSksDQorDQorCVRQX3ByaW50aygiJXNcdE5vZGU6
ICVweCAoJWx1ICVsdSkgcmFuZ2U6ICVsdS0lbHUiLA0KKwkJICBfX2VudHJ5LT5mbiwNCisJCSAg
KHZvaWQgKikgX19lbnRyeS0+bm9kZSwNCisJCSAgKHVuc2lnbmVkIGxvbmcpIF9fZW50cnktPm1p
biwNCisJCSAgKHVuc2lnbmVkIGxvbmcpIF9fZW50cnktPm1heCwNCisJCSAgKHVuc2lnbmVkIGxv
bmcpIF9fZW50cnktPmluZGV4LA0KKwkJICAodW5zaWduZWQgbG9uZykgX19lbnRyeS0+bGFzdA0K
KwkpDQorKQ0KK1RSQUNFX0VWRU5UKG1hX3JlYWQsDQorDQorCVRQX1BST1RPKGNvbnN0IGNoYXIg
KmZuLCBzdHJ1Y3QgbWFfc3RhdGUgKm1hcyksDQorDQorCVRQX0FSR1MoZm4sIG1hcyksDQorDQor
CVRQX1NUUlVDVF9fZW50cnkoDQorCQkJX19maWVsZChjb25zdCBjaGFyICosIGZuKQ0KKwkJCV9f
ZmllbGQodW5zaWduZWQgbG9uZywgbWluKQ0KKwkJCV9fZmllbGQodW5zaWduZWQgbG9uZywgbWF4
KQ0KKwkJCV9fZmllbGQodW5zaWduZWQgbG9uZywgaW5kZXgpDQorCQkJX19maWVsZCh1bnNpZ25l
ZCBsb25nLCBsYXN0KQ0KKwkJCV9fZmllbGQodm9pZCAqLCBub2RlKQ0KKwkpLA0KKw0KKwlUUF9m
YXN0X2Fzc2lnbigNCisJCQlfX2VudHJ5LT5mbgkJPSBmbjsNCisJCQlfX2VudHJ5LT5taW4JCT0g
bWFzLT5taW47DQorCQkJX19lbnRyeS0+bWF4CQk9IG1hcy0+bWF4Ow0KKwkJCV9fZW50cnktPmlu
ZGV4CQk9IG1hcy0+aW5kZXg7DQorCQkJX19lbnRyeS0+bGFzdAkJPSBtYXMtPmxhc3Q7DQorCQkJ
X19lbnRyeS0+bm9kZQkJPSBtYXMtPm5vZGU7DQorCSksDQorDQorCVRQX3ByaW50aygiJXNcdE5v
ZGU6ICVweCAoJWx1ICVsdSkgcmFuZ2U6ICVsdS0lbHUiLA0KKwkJICBfX2VudHJ5LT5mbiwNCisJ
CSAgKHZvaWQgKikgX19lbnRyeS0+bm9kZSwNCisJCSAgKHVuc2lnbmVkIGxvbmcpIF9fZW50cnkt
Pm1pbiwNCisJCSAgKHVuc2lnbmVkIGxvbmcpIF9fZW50cnktPm1heCwNCisJCSAgKHVuc2lnbmVk
IGxvbmcpIF9fZW50cnktPmluZGV4LA0KKwkJICAodW5zaWduZWQgbG9uZykgX19lbnRyeS0+bGFz
dA0KKwkpDQorKQ0KKw0KK1RSQUNFX0VWRU5UKG1hX3dyaXRlLA0KKw0KKwlUUF9QUk9UTyhjb25z
dCBjaGFyICpmbiwgc3RydWN0IG1hX3N0YXRlICptYXMsIHVuc2lnbmVkIGxvbmcgcGl2LA0KKwkJ
IHZvaWQgKnZhbCksDQorDQorCVRQX0FSR1MoZm4sIG1hcywgcGl2LCB2YWwpLA0KKw0KKwlUUF9T
VFJVQ1RfX2VudHJ5KA0KKwkJCV9fZmllbGQoY29uc3QgY2hhciAqLCBmbikNCisJCQlfX2ZpZWxk
KHVuc2lnbmVkIGxvbmcsIG1pbikNCisJCQlfX2ZpZWxkKHVuc2lnbmVkIGxvbmcsIG1heCkNCisJ
CQlfX2ZpZWxkKHVuc2lnbmVkIGxvbmcsIGluZGV4KQ0KKwkJCV9fZmllbGQodW5zaWduZWQgbG9u
ZywgbGFzdCkNCisJCQlfX2ZpZWxkKHVuc2lnbmVkIGxvbmcsIHBpdikNCisJCQlfX2ZpZWxkKHZv
aWQgKiwgdmFsKQ0KKwkJCV9fZmllbGQodm9pZCAqLCBub2RlKQ0KKwkpLA0KKw0KKwlUUF9mYXN0
X2Fzc2lnbigNCisJCQlfX2VudHJ5LT5mbgkJPSBmbjsNCisJCQlfX2VudHJ5LT5taW4JCT0gbWFz
LT5taW47DQorCQkJX19lbnRyeS0+bWF4CQk9IG1hcy0+bWF4Ow0KKwkJCV9fZW50cnktPmluZGV4
CQk9IG1hcy0+aW5kZXg7DQorCQkJX19lbnRyeS0+bGFzdAkJPSBtYXMtPmxhc3Q7DQorCQkJX19l
bnRyeS0+cGl2CQk9IHBpdjsNCisJCQlfX2VudHJ5LT52YWwJCT0gdmFsOw0KKwkJCV9fZW50cnkt
Pm5vZGUJCT0gbWFzLT5ub2RlOw0KKwkpLA0KKw0KKwlUUF9wcmludGsoIiVzXHROb2RlICVweCAo
JWx1ICVsdSkgcmFuZ2U6JWx1LSVsdSBwaXYgKCVsdSkgdmFsICVweCIsDQorCQkgIF9fZW50cnkt
PmZuLA0KKwkJICAodm9pZCAqKSBfX2VudHJ5LT5ub2RlLA0KKwkJICAodW5zaWduZWQgbG9uZykg
X19lbnRyeS0+bWluLA0KKwkJICAodW5zaWduZWQgbG9uZykgX19lbnRyeS0+bWF4LA0KKwkJICAo
dW5zaWduZWQgbG9uZykgX19lbnRyeS0+aW5kZXgsDQorCQkgICh1bnNpZ25lZCBsb25nKSBfX2Vu
dHJ5LT5sYXN0LA0KKwkJICAodW5zaWduZWQgbG9uZykgX19lbnRyeS0+cGl2LA0KKwkJICAodm9p
ZCAqKSBfX2VudHJ5LT52YWwNCisJKQ0KKykNCisjZW5kaWYgLyogX1RSQUNFX01NX0ggKi8NCisN
CisvKiBUaGlzIHBhcnQgbXVzdCBiZSBvdXRzaWRlIHByb3RlY3Rpb24gKi8NCisjaW5jbHVkZSA8
dHJhY2UvZGVmaW5lX3RyYWNlLmg+DQpkaWZmIC0tZ2l0IGEvaW5pdC9tYWluLmMgYi9pbml0L21h
aW4uYw0KaW5kZXggNjVmYTJlNDFhOWMwLi42N2U5MTQzMDQ3MWEgMTAwNjQ0DQotLS0gYS9pbml0
L21haW4uYw0KKysrIGIvaW5pdC9tYWluLmMNCkBAIC0xMTUsNiArMTE1LDcgQEAgc3RhdGljIGlu
dCBrZXJuZWxfaW5pdCh2b2lkICopOw0KIA0KIGV4dGVybiB2b2lkIGluaXRfSVJRKHZvaWQpOw0K
IGV4dGVybiB2b2lkIHJhZGl4X3RyZWVfaW5pdCh2b2lkKTsNCitleHRlcm4gdm9pZCBtYXBsZV90
cmVlX2luaXQodm9pZCk7DQogDQogLyoNCiAgKiBEZWJ1ZyBoZWxwZXI6IHZpYSB0aGlzIGZsYWcg
d2Uga25vdyB0aGF0IHdlIGFyZSBpbiAnZWFybHkgYm9vdHVwIGNvZGUnDQpAQCAtMTAwMCw2ICsx
MDAxLDcgQEAgYXNtbGlua2FnZSBfX3Zpc2libGUgdm9pZCBfX2luaXQgX19ub19zYW5pdGl6ZV9h
ZGRyZXNzIHN0YXJ0X2tlcm5lbCh2b2lkKQ0KIAkJICJJbnRlcnJ1cHRzIHdlcmUgZW5hYmxlZCAq
dmVyeSogZWFybHksIGZpeGluZyBpdFxuIikpDQogCQlsb2NhbF9pcnFfZGlzYWJsZSgpOw0KIAly
YWRpeF90cmVlX2luaXQoKTsNCisJbWFwbGVfdHJlZV9pbml0KCk7DQogDQogCS8qDQogCSAqIFNl
dCB1cCBob3VzZWtlZXBpbmcgYmVmb3JlIHNldHRpbmcgdXAgd29ya3F1ZXVlcyB0byBhbGxvdyB0
aGUgdW5ib3VuZA0KZGlmZiAtLWdpdCBhL2xpYi9LY29uZmlnLmRlYnVnIGIvbGliL0tjb25maWcu
ZGVidWcNCmluZGV4IDE0Yjg5YWEzN2M1Yy4uY2ZjYjhlZjVjYjg5IDEwMDY0NA0KLS0tIGEvbGli
L0tjb25maWcuZGVidWcNCisrKyBiL2xpYi9LY29uZmlnLmRlYnVnDQpAQCAtODE3LDYgKzgxNywx
MyBAQCBjb25maWcgREVCVUdfVk1fVk1BQ0FDSEUNCiAJICBjYW4gY2F1c2Ugc2lnbmlmaWNhbnQg
b3ZlcmhlYWQsIHNvIG9ubHkgZW5hYmxlIGl0IGluIG5vbi1wcm9kdWN0aW9uDQogCSAgZW52aXJv
bm1lbnRzLg0KIA0KK2NvbmZpZyBERUJVR19WTV9NQVBMRV9UUkVFDQorCWJvb2wgIkRlYnVnIFZN
IG1hcGxlIHRyZWVzIg0KKwlkZXBlbmRzIG9uIERFQlVHX1ZNDQorCXNlbGVjdCBERUJVR19NQVBM
RV9UUkVFDQorCWhlbHANCisJICBFbmFibGUgVk0gbWFwbGUgdHJlZSBkZWJ1Z2dpbmcgaW5mb3Jt
YXRpb24gYW5kIGV4dHJhIHZhbGlkYXRpb25zLg0KKw0KIAkgIElmIHVuc3VyZSwgc2F5IE4uDQog
DQogY29uZmlnIERFQlVHX1ZNX1JCDQpAQCAtODI3LDYgKzgzNCw3IEBAIGNvbmZpZyBERUJVR19W
TV9SQg0KIA0KIAkgIElmIHVuc3VyZSwgc2F5IE4uDQogDQorDQogY29uZmlnIERFQlVHX1ZNX1BH
RkxBR1MNCiAJYm9vbCAiRGVidWcgcGFnZS1mbGFncyBvcGVyYXRpb25zIg0KIAlkZXBlbmRzIG9u
IERFQlVHX1ZNDQpAQCAtMTY1NCw2ICsxNjYyLDE0IEBAIGNvbmZpZyBCVUdfT05fREFUQV9DT1JS
VVBUSU9ODQogDQogCSAgSWYgdW5zdXJlLCBzYXkgTi4NCiANCitjb25maWcgREVCVUdfTUFQTEVf
VFJFRQ0KKwlib29sICJEZWJ1ZyBtYXBsZSB0cmVlcyINCisJZGVwZW5kcyBvbiBERUJVR19LRVJO
RUwNCisJaGVscA0KKwkgIEVuYWJsZSBtYXBsZSB0cmVlIGRlYnVnZ2luZyBpbmZvcm1hdGlvbiBh
bmQgZXh0cmEgdmFsaWRhdGlvbnMuDQorDQorCSAgSWYgdW5zdXJlLCBzYXkgTi4NCisNCiBlbmRt
ZW51DQogDQogY29uZmlnIERFQlVHX0NSRURFTlRJQUxTDQpkaWZmIC0tZ2l0IGEvbGliL01ha2Vm
aWxlIGIvbGliL01ha2VmaWxlDQppbmRleCAzMDBmNTY5YzYyNmIuLjdkMGI1OGQwYjE1YSAxMDA2
NDQNCi0tLSBhL2xpYi9NYWtlZmlsZQ0KKysrIGIvbGliL01ha2VmaWxlDQpAQCAtMjksNyArMjks
OCBAQCBlbmRpZg0KIA0KIGxpYi15IDo9IGN0eXBlLm8gc3RyaW5nLm8gdnNwcmludGYubyBjbWRs
aW5lLm8gXA0KIAkgcmJ0cmVlLm8gcmFkaXgtdHJlZS5vIHRpbWVycXVldWUubyB4YXJyYXkubyBc
DQotCSBpZHIubyBleHRhYmxlLm8gc2hhMS5vIGlycV9yZWdzLm8gYXJndl9zcGxpdC5vIFwNCisJ
IG1hcGxlX3RyZWUubyBpZHIubyBleHRhYmxlLm8gXA0KKwkgc2hhMS5vIGlycV9yZWdzLm8gYXJn
dl9zcGxpdC5vIFwNCiAJIGZsZXhfcHJvcG9ydGlvbnMubyByYXRlbGltaXQubyBzaG93X21lbS5v
IFwNCiAJIGlzX3NpbmdsZV90aHJlYWRlZC5vIHBsaXN0Lm8gZGVjb21wcmVzcy5vIGtvYmplY3Rf
dWV2ZW50Lm8gXA0KIAkgZWFybHljcGlvLm8gc2VxX2J1Zi5vIHNpcGhhc2gubyBkZWNfYW5kX2xv
Y2subyBcDQpkaWZmIC0tZ2l0IGEvbGliL21hcGxlX3RyZWUuYyBiL2xpYi9tYXBsZV90cmVlLmMN
Cm5ldyBmaWxlIG1vZGUgMTAwNjQ0DQppbmRleCAwMDAwMDAwMDAwMDAuLmExZjZlMjAyNTM5OQ0K
LS0tIC9kZXYvbnVsbA0KKysrIGIvbGliL21hcGxlX3RyZWUuYw0KQEAgLTAsMCArMSw2OTY3IEBA
DQorLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEdQTC0yLjArDQorLyoNCisgKiBNYXBsZSBU
cmVlIGltcGxlbWVudGF0aW9uDQorICogQ29weXJpZ2h0IChjKSAyMDE4LTIwMjIgT3JhY2xlIENv
cnBvcmF0aW9uDQorICogQXV0aG9yczogTGlhbSBSLiBIb3dsZXR0IDxMaWFtLkhvd2xldHRAb3Jh
Y2xlLmNvbT4NCisgKgkgICAgTWF0dGhldyBXaWxjb3ggPHdpbGx5QGluZnJhZGVhZC5vcmc+DQor
ICovDQorDQorLyoNCisgKiBET0M6IEludGVyZXN0aW5nIGltcGxlbWVudGF0aW9uIGRldGFpbHMg
b2YgdGhlIE1hcGxlIFRyZWUNCisgKg0KKyAqIEVhY2ggbm9kZSB0eXBlIGhhcyBhIG51bWJlciBv
ZiBzbG90cyBmb3IgZW50cmllcyBhbmQgYSBudW1iZXIgb2Ygc2xvdHMgZm9yDQorICogcGl2b3Rz
LiAgSW4gdGhlIGNhc2Ugb2YgZGVuc2Ugbm9kZXMsIHRoZSBwaXZvdHMgYXJlIGltcGxpZWQgYnkg
dGhlIHBvc2l0aW9uDQorICogYW5kIGFyZSBzaW1wbHkgdGhlIHNsb3QgaW5kZXggKyB0aGUgbWlu
aW11bSBvZiB0aGUgbm9kZS4NCisgKg0KKyAqIEluIHJlZ3VsYXIgQi1UcmVlIHRlcm1zLCBwaXZv
dHMgYXJlIGNhbGxlZCBrZXlzLiAgVGhlIHRlcm0gcGl2b3QgaXMgdXNlZCB0bw0KKyAqIGluZGlj
YXRlIHRoYXQgdGhlIHRyZWUgaXMgc3BlY2lmeWluZyByYW5nZXMsICBQaXZvdHMgbWF5IGFwcGVh
ciBpbiB0aGUNCisgKiBzdWJ0cmVlIHdpdGggYW4gZW50cnkgYXR0YWNoZWQgdG8gdGhlIHZhbHVl
IHdoZXJlIGFzIGtleXMgYXJlIHVuaXF1ZSB0byBhDQorICogc3BlY2lmaWMgcG9zaXRpb24gb2Yg
YSBCLXRyZWUuICBQaXZvdCB2YWx1ZXMgYXJlIGluY2x1c2l2ZSBvZiB0aGUgc2xvdCB3aXRoDQor
ICogdGhlIHNhbWUgaW5kZXguDQorICoNCisgKg0KKyAqIFRoZSBmb2xsb3dpbmcgaWxsdXN0cmF0
ZXMgdGhlIGxheW91dCBvZiBhIHJhbmdlNjQgbm9kZXMgc2xvdHMgYW5kIHBpdm90cy4NCisgKg0K
KyAqDQorICogIFNsb3RzIC0+IHwgMCB8IDEgfCAyIHwgLi4uIHwgMTIgfCAxMyB8IDE0IHwgMTUg
fA0KKyAqICAgICAgICAgICDilKwgICDilKwgICDilKwgICDilKwgICAgIOKUrCAgICDilKwgICAg
4pSsICAgIOKUrCAgICDilKwNCisgKiAgICAgICAgICAg4pSCICAg4pSCICAg4pSCICAg4pSCICAg
ICDilIIgICAg4pSCICAgIOKUgiAgICDilIIgICAg4pSU4pSAIEltcGxpZWQgbWF4aW11bQ0KKyAq
ICAgICAgICAgICDilIIgICDilIIgICDilIIgICDilIIgICAgIOKUgiAgICDilIIgICAg4pSCICAg
IOKUlOKUgCBQaXZvdCAxNA0KKyAqICAgICAgICAgICDilIIgICDilIIgICDilIIgICDilIIgICAg
IOKUgiAgICDilIIgICAg4pSU4pSAIFBpdm90IDEzDQorICogICAgICAgICAgIOKUgiAgIOKUgiAg
IOKUgiAgIOKUgiAgICAg4pSCICAgIOKUlOKUgCBQaXZvdCAxMg0KKyAqICAgICAgICAgICDilIIg
ICDilIIgICDilIIgICDilIIgICAgIOKUlOKUgCBQaXZvdCAxMQ0KKyAqICAgICAgICAgICDilIIg
ICDilIIgICDilIIgICDilJTilIAgUGl2b3QgMg0KKyAqICAgICAgICAgICDilIIgICDilIIgICDi
lJTilIAgUGl2b3QgMQ0KKyAqICAgICAgICAgICDilIIgICDilJTilIAgUGl2b3QgMA0KKyAqICAg
ICAgICAgICDilJTilIAgIEltcGxpZWQgbWluaW11bQ0KKyAqDQorICogU2xvdCBjb250ZW50czoN
CisgKiAgSW50ZXJuYWwgKG5vbi1sZWFmKSBub2RlcyBjb250YWluIHBvaW50ZXJzIHRvIG90aGVy
IG5vZGVzLg0KKyAqICBMZWFmIG5vZGVzIGNvbnRhaW4gZW50cmllcy4NCisgKg0KKyAqIFRoZSBs
b2NhdGlvbiBvZiBpbnRlcmVzdCBpcyBvZnRlbiByZWZlcnJlZCB0byBhcyBhbiBvZmZzZXQuICBB
bGwgb2Zmc2V0cyBoYXZlDQorICogYSBzbG90LCBidXQgdGhlIGxhc3Qgb2Zmc2V0IGhhcyBhbiBp
bXBsaWVkIHBpdm90IGZyb20gdGhlIG5vZGUgYWJvdmUgKG9yDQorICogVUlOVF9NQVggZm9yIHRo
ZSByb290IG5vZGUuDQorICoNCisgKiBSYW5nZXMgY29tcGxpY2F0ZSBjZXJ0YWluIHdyaXRlIGFj
dGl2aXRpZXMuICBXaGVuIG1vZGlmeWluZyBhbnkgb2YNCisgKiB0aGUgQi10cmVlIHZhcmlhbnRz
LCBpdCBpcyBrbm93biB0aGF0IG9uZSBlbnRyeSB3aWxsIGVpdGhlciBiZSBhZGRlZCBvcg0KKyAq
IGRlbGV0ZWQuICBXaGVuIG1vZGlmeWluZyB0aGUgTWFwbGUgVHJlZSwgb25lIHN0b3JlIG9wZXJh
dGlvbiBtYXkgb3ZlcndyaXRlDQorICogdGhlIGVudGlyZSBkYXRhIHNldCwgb3Igb25lIGhhbGYg
b2YgdGhlIHRyZWUsIG9yIHRoZSBtaWRkbGUgaGFsZiBvZiB0aGUgdHJlZS4NCisgKg0KKyAqLw0K
Kw0KKw0KKyNpbmNsdWRlIDxsaW51eC9tYXBsZV90cmVlLmg+DQorI2luY2x1ZGUgPGxpbnV4L3hh
cnJheS5oPg0KKyNpbmNsdWRlIDxsaW51eC90eXBlcy5oPg0KKyNpbmNsdWRlIDxsaW51eC9leHBv
cnQuaD4NCisjaW5jbHVkZSA8bGludXgvc2xhYi5oPg0KKyNpbmNsdWRlIDxsaW51eC9saW1pdHMu
aD4NCisjaW5jbHVkZSA8YXNtL2JhcnJpZXIuaD4NCisNCisjZGVmaW5lIENSRUFURV9UUkFDRV9Q
T0lOVFMNCisjaW5jbHVkZSA8dHJhY2UvZXZlbnRzL21hcGxlX3RyZWUuaD4NCisNCisjZGVmaW5l
IE1BX1JPT1RfUEFSRU5UIDENCisNCisvKiBNYXBsZSBzdGF0ZSBmbGFncyAqLw0KKyNkZWZpbmUg
TUFfU1RBVEVfQlVMSwkJMQ0KKyNkZWZpbmUgTUFfU1RBVEVfUkVCQUxBTkNFCTINCisNCisjZGVm
aW5lIG1hX3BhcmVudF9wdHIoeCkgKChzdHJ1Y3QgbWFwbGVfcG5vZGUgKikoeCkpDQorI2RlZmlu
ZSBtYV9tbm9kZV9wdHIoeCkgKChzdHJ1Y3QgbWFwbGVfbm9kZSAqKSh4KSkNCisjZGVmaW5lIG1h
X2Vub2RlX3B0cih4KSAoKHN0cnVjdCBtYXBsZV9lbm9kZSAqKSh4KSkNCitzdGF0aWMgc3RydWN0
IGttZW1fY2FjaGUgKm1hcGxlX25vZGVfY2FjaGU7DQorDQorc3RhdGljIGNvbnN0IHVuc2lnbmVk
IGxvbmcgbXRfbWF4W10gPSB7DQorCVttYXBsZV9kZW5zZV0JCT0gTUFQTEVfTk9ERV9TTE9UUywN
CisJW21hcGxlX2xlYWZfNjRdCQk9IFVMT05HX01BWCwNCisJW21hcGxlX3JhbmdlXzY0XQk9IFVM
T05HX01BWCwNCisJW21hcGxlX2FyYW5nZV82NF0JPSBVTE9OR19NQVgsDQorfTsNCisjZGVmaW5l
IG10X25vZGVfbWF4KHgpIG10X21heFttdGVfbm9kZV90eXBlKHgpXQ0KKw0KK3N0YXRpYyBjb25z
dCB1bnNpZ25lZCBjaGFyIG10X3Nsb3RzW10gPSB7DQorCVttYXBsZV9kZW5zZV0JCT0gTUFQTEVf
Tk9ERV9TTE9UUywNCisJW21hcGxlX2xlYWZfNjRdCQk9IE1BUExFX1JBTkdFNjRfU0xPVFMsDQor
CVttYXBsZV9yYW5nZV82NF0JPSBNQVBMRV9SQU5HRTY0X1NMT1RTLA0KKwlbbWFwbGVfYXJhbmdl
XzY0XQk9IE1BUExFX0FSQU5HRTY0X1NMT1RTLA0KK307DQorI2RlZmluZSBtdF9zbG90X2NvdW50
KHgpIG10X3Nsb3RzW210ZV9ub2RlX3R5cGUoeCldDQorDQorc3RhdGljIGNvbnN0IHVuc2lnbmVk
IGNoYXIgbXRfcGl2b3RzW10gPSB7DQorCVttYXBsZV9kZW5zZV0JCT0gMCwNCisJW21hcGxlX2xl
YWZfNjRdCQk9IE1BUExFX1JBTkdFNjRfU0xPVFMgLSAxLA0KKwlbbWFwbGVfcmFuZ2VfNjRdCT0g
TUFQTEVfUkFOR0U2NF9TTE9UUyAtIDEsDQorCVttYXBsZV9hcmFuZ2VfNjRdCT0gTUFQTEVfQVJB
TkdFNjRfU0xPVFMgLSAxLA0KK307DQorI2RlZmluZSBtdF9waXZvdF9jb3VudCh4KSBtdF9waXZv
dHNbbXRlX25vZGVfdHlwZSh4KV0NCisNCitzdGF0aWMgY29uc3QgdW5zaWduZWQgY2hhciBtdF9t
aW5fc2xvdHNbXSA9IHsNCisJW21hcGxlX2RlbnNlXQkJPSBNQVBMRV9OT0RFX1NMT1RTIC8gMiwN
CisJW21hcGxlX2xlYWZfNjRdCQk9IChNQVBMRV9SQU5HRTY0X1NMT1RTIC8gMikgLSAyLA0KKwlb
bWFwbGVfcmFuZ2VfNjRdCT0gKE1BUExFX1JBTkdFNjRfU0xPVFMgLyAyKSAtIDIsDQorCVttYXBs
ZV9hcmFuZ2VfNjRdCT0gKE1BUExFX0FSQU5HRTY0X1NMT1RTIC8gMikgLSAxLA0KK307DQorI2Rl
ZmluZSBtdF9taW5fc2xvdF9jb3VudCh4KSBtdF9taW5fc2xvdHNbbXRlX25vZGVfdHlwZSh4KV0N
CisNCisjZGVmaW5lIE1BUExFX0JJR19OT0RFX1NMT1RTCShNQVBMRV9SQU5HRTY0X1NMT1RTICog
MiArIDIpDQorDQorc3RydWN0IG1hcGxlX2JpZ19ub2RlIHsNCisJc3RydWN0IG1hcGxlX3Bub2Rl
ICpwYXJlbnQ7DQorCXN0cnVjdCBtYXBsZV9lbm9kZSAqc2xvdFtNQVBMRV9CSUdfTk9ERV9TTE9U
U107DQorCXVuc2lnbmVkIGxvbmcgcGl2b3RbTUFQTEVfQklHX05PREVfU0xPVFMgLSAxXTsNCisJ
dW5zaWduZWQgbG9uZyBnYXBbTUFQTEVfQklHX05PREVfU0xPVFNdOw0KKwl1bnNpZ25lZCBsb25n
IG1pbjsNCisJdW5zaWduZWQgY2hhciBiX2VuZDsNCisJZW51bSBtYXBsZV90eXBlIHR5cGU7DQor
fTsNCisNCisvKg0KKyAqIFRoZSBtYXBsZV9zdWJ0cmVlX3N0YXRlIGlzIHVzZWQgdG8gYnVpbGQg
YSB0cmVlIHRvIHJlcGxhY2UgYSBzZWdtZW50IG9mIGFuDQorICogZXhpc3RpbmcgdHJlZSBpbiBh
IG1vcmUgYXRvbWljIHdheS4gIEFueSB3YWxrZXJzIG9mIHRoZSBvbGRlciB0cmVlIHdpbGwgaGl0
IGENCisgKiBkZWFkIG5vZGUgYW5kIHJlc3RhcnQgb24gdXBkYXRlcy4NCisgKi8NCitzdHJ1Y3Qg
bWFwbGVfc3VidHJlZV9zdGF0ZSB7DQorCXN0cnVjdCBtYV9zdGF0ZSAqb3JpZ19sOwkvKiBPcmln
aW5hbCBsZWZ0IHNpZGUgb2Ygc3VidHJlZSAqLw0KKwlzdHJ1Y3QgbWFfc3RhdGUgKm9yaWdfcjsJ
LyogT3JpZ2luYWwgcmlnaHQgc2lkZSBvZiBzdWJ0cmVlICovDQorCXN0cnVjdCBtYV9zdGF0ZSAq
bDsJCS8qIE5ldyBsZWZ0IHNpZGUgb2Ygc3VidHJlZSAqLw0KKwlzdHJ1Y3QgbWFfc3RhdGUgKm07
CQkvKiBOZXcgbWlkZGxlIG9mIHN1YnRyZWUgKHJhcmUpICovDQorCXN0cnVjdCBtYV9zdGF0ZSAq
cjsJCS8qIE5ldyByaWdodCBzaWRlIG9mIHN1YnRyZWUgKi8NCisJc3RydWN0IG1hX3RvcGlhcnkg
KmZyZWU7CS8qIG5vZGVzIHRvIGJlIGZyZWVkICovDQorCXN0cnVjdCBtYV90b3BpYXJ5ICpkZXN0
cm95OwkvKiBOb2RlcyB0byBiZSBkZXN0cm95ZWQgKHdhbGtlZCBhbmQgZnJlZWQpICovDQorCXN0
cnVjdCBtYXBsZV9iaWdfbm9kZSAqYm47DQorfTsNCisNCisvKiBGdW5jdGlvbnMgKi8NCitzdGF0
aWMgaW5saW5lIHN0cnVjdCBtYXBsZV9ub2RlICptdF9hbGxvY19vbmUoZ2ZwX3QgZ2ZwKQ0KK3sN
CisJcmV0dXJuIGttZW1fY2FjaGVfYWxsb2MobWFwbGVfbm9kZV9jYWNoZSwgZ2ZwIHwgX19HRlBf
WkVSTyk7DQorfQ0KKw0KK3N0YXRpYyBpbmxpbmUgaW50IG10X2FsbG9jX2J1bGsoZ2ZwX3QgZ2Zw
LCBzaXplX3Qgc2l6ZSwgdm9pZCAqKm5vZGVzKQ0KK3sNCisJcmV0dXJuIGttZW1fY2FjaGVfYWxs
b2NfYnVsayhtYXBsZV9ub2RlX2NhY2hlLCBnZnAgfCBfX0dGUF9aRVJPLCBzaXplLA0KKwkJCQkg
ICAgIG5vZGVzKTsNCit9DQorDQorc3RhdGljIGlubGluZSB2b2lkIG10X2ZyZWVfYnVsayhzaXpl
X3Qgc2l6ZSwgdm9pZCBfX3JjdSAqKm5vZGVzKQ0KK3sNCisJa21lbV9jYWNoZV9mcmVlX2J1bGso
bWFwbGVfbm9kZV9jYWNoZSwgc2l6ZSwgKHZvaWQgKiopbm9kZXMpOw0KK30NCisNCitzdGF0aWMg
dm9pZCBtdF9mcmVlX3JjdShzdHJ1Y3QgcmN1X2hlYWQgKmhlYWQpDQorew0KKwlzdHJ1Y3QgbWFw
bGVfbm9kZSAqbm9kZSA9IGNvbnRhaW5lcl9vZihoZWFkLCBzdHJ1Y3QgbWFwbGVfbm9kZSwgcmN1
KTsNCisNCisJa21lbV9jYWNoZV9mcmVlKG1hcGxlX25vZGVfY2FjaGUsIG5vZGUpOw0KK30NCisN
CisvKg0KKyAqIG1hX2ZyZWVfcmN1KCkgLSBVc2UgcmN1IGNhbGxiYWNrIHRvIGZyZWUgYSBtYXBs
ZSBub2RlDQorICogQG5vZGU6IFRoZSBub2RlIHRvIGZyZWUNCisgKg0KKyAqIFRoZSBtYXBsZSB0
cmVlIHVzZXMgdGhlIHBhcmVudCBwb2ludGVyIHRvIGluZGljYXRlIHRoaXMgbm9kZSBpcyBubyBs
b25nZXIgaW4NCisgKiB1c2UgYW5kIHdpbGwgYmUgZnJlZWQuDQorICovDQorc3RhdGljIHZvaWQg
bWFfZnJlZV9yY3Uoc3RydWN0IG1hcGxlX25vZGUgKm5vZGUpDQorew0KKwlub2RlLT5wYXJlbnQg
PSBtYV9wYXJlbnRfcHRyKG5vZGUpOw0KKwljYWxsX3JjdSgmbm9kZS0+cmN1LCBtdF9mcmVlX3Jj
dSk7DQorfQ0KKw0KK3N0YXRpYyB1bnNpZ25lZCBpbnQgbXRfaGVpZ2h0KGNvbnN0IHN0cnVjdCBt
YXBsZV90cmVlICptdCkNCit7DQorCXJldHVybiAobXQtPm1hX2ZsYWdzICYgTVRfRkxBR1NfSEVJ
R0hUX01BU0spID4+IE1UX0ZMQUdTX0hFSUdIVF9PRkZTRVQ7DQorfQ0KKw0KK3N0YXRpYyB2b2lk
IG1hc19zZXRfaGVpZ2h0KHN0cnVjdCBtYV9zdGF0ZSAqbWFzKQ0KK3sNCisJdW5zaWduZWQgaW50
IG5ld19mbGFncyA9IG1hcy0+dHJlZS0+bWFfZmxhZ3M7DQorDQorCW5ld19mbGFncyAmPSB+TVRf
RkxBR1NfSEVJR0hUX01BU0s7DQorCUJVR19PTihtYXMtPmRlcHRoID4gTUFQTEVfSEVJR0hUX01B
WCk7DQorCW5ld19mbGFncyB8PSBtYXMtPmRlcHRoIDw8IE1UX0ZMQUdTX0hFSUdIVF9PRkZTRVQ7
DQorCW1hcy0+dHJlZS0+bWFfZmxhZ3MgPSBuZXdfZmxhZ3M7DQorfQ0KKw0KK3N0YXRpYyB1bnNp
Z25lZCBpbnQgbWFzX210X2hlaWdodChzdHJ1Y3QgbWFfc3RhdGUgKm1hcykNCit7DQorCXJldHVy
biBtdF9oZWlnaHQobWFzLT50cmVlKTsNCit9DQorDQorc3RhdGljIGlubGluZSBlbnVtIG1hcGxl
X3R5cGUgbXRlX25vZGVfdHlwZShjb25zdCBzdHJ1Y3QgbWFwbGVfZW5vZGUgKmVudHJ5KQ0KK3sN
CisJcmV0dXJuICgodW5zaWduZWQgbG9uZyllbnRyeSA+PiBNQVBMRV9OT0RFX1RZUEVfU0hJRlQp
ICYNCisJCU1BUExFX05PREVfVFlQRV9NQVNLOw0KK30NCisNCitzdGF0aWMgaW5saW5lIGJvb2wg
bWFfaXNfZGVuc2UoY29uc3QgZW51bSBtYXBsZV90eXBlIHR5cGUpDQorew0KKwlyZXR1cm4gdHlw
ZSA8IG1hcGxlX2xlYWZfNjQ7DQorfQ0KKw0KK3N0YXRpYyBpbmxpbmUgYm9vbCBtYV9pc19sZWFm
KGNvbnN0IGVudW0gbWFwbGVfdHlwZSB0eXBlKQ0KK3sNCisJcmV0dXJuIHR5cGUgPCBtYXBsZV9y
YW5nZV82NDsNCit9DQorDQorc3RhdGljIGlubGluZSBib29sIG10ZV9pc19sZWFmKGNvbnN0IHN0
cnVjdCBtYXBsZV9lbm9kZSAqZW50cnkpDQorew0KKwlyZXR1cm4gbWFfaXNfbGVhZihtdGVfbm9k
ZV90eXBlKGVudHJ5KSk7DQorfQ0KKw0KKy8qDQorICogV2UgYWxzbyByZXNlcnZlIHZhbHVlcyB3
aXRoIHRoZSBib3R0b20gdHdvIGJpdHMgc2V0IHRvICcxMCcgd2hpY2ggYXJlDQorICogYmVsb3cg
NDA5Ng0KKyAqLw0KK3N0YXRpYyBpbmxpbmUgYm9vbCBtdF9pc19yZXNlcnZlZChjb25zdCB2b2lk
ICplbnRyeSkNCit7DQorCXJldHVybiAoKHVuc2lnbmVkIGxvbmcpZW50cnkgPCBNQVBMRV9SRVNF
UlZFRF9SQU5HRSkgJiYNCisJCXhhX2lzX2ludGVybmFsKGVudHJ5KTsNCit9DQorDQorc3RhdGlj
IGlubGluZSB2b2lkIG1hc19zZXRfZXJyKHN0cnVjdCBtYV9zdGF0ZSAqbWFzLCBsb25nIGVycikN
Cit7DQorCW1hcy0+bm9kZSA9IE1BX0VSUk9SKGVycik7DQorfQ0KKw0KK3N0YXRpYyBpbmxpbmUg
Ym9vbCBtYXNfaXNfcHRyKHN0cnVjdCBtYV9zdGF0ZSAqbWFzKQ0KK3sNCisJcmV0dXJuIG1hcy0+
bm9kZSA9PSBNQVNfUk9PVDsNCit9DQorDQorc3RhdGljIGlubGluZSBib29sIG1hc19pc19zdGFy
dChzdHJ1Y3QgbWFfc3RhdGUgKm1hcykNCit7DQorCXJldHVybiBtYXMtPm5vZGUgPT0gTUFTX1NU
QVJUOw0KK30NCisNCitzdGF0aWMgaW5saW5lIGJvb2wgbWFzX2lzX2VycihzdHJ1Y3QgbWFfc3Rh
dGUgKm1hcykNCit7DQorCXJldHVybiB4YV9pc19lcnIobWFzLT5ub2RlKTsNCit9DQorDQorc3Rh
dGljIGlubGluZSBib29sIG1hc19zZWFyY2hhYmxlKHN0cnVjdCBtYV9zdGF0ZSAqbWFzKQ0KK3sN
CisJaWYgKG1hc19pc19ub25lKG1hcykpDQorCQlyZXR1cm4gZmFsc2U7DQorDQorCWlmIChtYXNf
aXNfcHRyKG1hcykpDQorCQlyZXR1cm4gZmFsc2U7DQorDQorCXJldHVybiB0cnVlOw0KK30NCisN
CitzdGF0aWMgaW5saW5lIHN0cnVjdCBtYXBsZV9ub2RlICptdGVfdG9fbm9kZShjb25zdCBzdHJ1
Y3QgbWFwbGVfZW5vZGUgKmVudHJ5KQ0KK3sNCisJcmV0dXJuIChzdHJ1Y3QgbWFwbGVfbm9kZSAq
KSgodW5zaWduZWQgbG9uZyllbnRyeSAmIH5NQVBMRV9OT0RFX01BU0spOw0KK30NCisNCisvKg0K
KyAqIG10ZV90b19tYXQoKSAtIENvbnZlcnQgYSBtYXBsZSBlbmNvZGVkIG5vZGUgdG8gYSBtYXBs
ZSB0b3BpYXJ5IG5vZGUuDQorICogQGVudHJ5OiBUaGUgbWFwbGUgZW5jb2RlZCBub2RlDQorICoN
CisgKiBSZXR1cm46IGEgbWFwbGUgdG9waWFyeSBwb2ludGVyDQorICovDQorc3RhdGljIGlubGlu
ZSBzdHJ1Y3QgbWFwbGVfdG9waWFyeSAqbXRlX3RvX21hdChjb25zdCBzdHJ1Y3QgbWFwbGVfZW5v
ZGUgKmVudHJ5KQ0KK3sNCisJcmV0dXJuIChzdHJ1Y3QgbWFwbGVfdG9waWFyeSAqKQ0KKwkJKCh1
bnNpZ25lZCBsb25nKWVudHJ5ICYgfk1BUExFX05PREVfTUFTSyk7DQorfQ0KKw0KKy8qDQorICog
bWFzX21uKCkgLSBHZXQgdGhlIG1hcGxlIHN0YXRlIG5vZGUuDQorICogQG1hczogVGhlIG1hcGxl
IHN0YXRlDQorICoNCisgKiBSZXR1cm46IHRoZSBtYXBsZSBub2RlIChub3QgZW5jb2RlZCAtIGJh
cmUgcG9pbnRlcikuDQorICovDQorc3RhdGljIGlubGluZSBzdHJ1Y3QgbWFwbGVfbm9kZSAqbWFz
X21uKGNvbnN0IHN0cnVjdCBtYV9zdGF0ZSAqbWFzKQ0KK3sNCisJcmV0dXJuIG10ZV90b19ub2Rl
KG1hcy0+bm9kZSk7DQorfQ0KKw0KKy8qDQorICogbXRlX3NldF9ub2RlX2RlYWQoKSAtIFNldCBh
IG1hcGxlIGVuY29kZWQgbm9kZSBhcyBkZWFkLg0KKyAqIEBtbjogVGhlIG1hcGxlIGVuY29kZWQg
bm9kZS4NCisgKi8NCitzdGF0aWMgaW5saW5lIHZvaWQgbXRlX3NldF9ub2RlX2RlYWQoc3RydWN0
IG1hcGxlX2Vub2RlICptbikNCit7DQorCW10ZV90b19ub2RlKG1uKS0+cGFyZW50ID0gbWFfcGFy
ZW50X3B0cihtdGVfdG9fbm9kZShtbikpOw0KKwlzbXBfd21iKCk7DQorfQ0KKw0KKy8qIEJpdCAx
IGluZGljYXRlcyB0aGUgcm9vdCBpcyBhIG5vZGUgKi8NCisjZGVmaW5lIE1BUExFX1JPT1RfTk9E
RQkJCTB4MDINCisvKiBtYXBsZV90eXBlIHN0b3JlZCBiaXQgMy02ICovDQorI2RlZmluZSBNQVBM
RV9FTk9ERV9UWVBFX1NISUZUCQkweDAzDQorLyogQml0IDIgbWVhbnMgYSBOVUxMIHNvbWV3aGVy
ZSBiZWxvdyAqLw0KKyNkZWZpbmUgTUFQTEVfRU5PREVfTlVMTAkJMHgwNA0KKw0KK3N0YXRpYyBp
bmxpbmUgc3RydWN0IG1hcGxlX2Vub2RlICptdF9ta19ub2RlKGNvbnN0IHN0cnVjdCBtYXBsZV9u
b2RlICpub2RlLA0KKwkJCQkJICAgICBlbnVtIG1hcGxlX3R5cGUgdHlwZSkNCit7DQorCXJldHVy
biAodm9pZCAqKSgodW5zaWduZWQgbG9uZylub2RlIHwNCisJCQkodHlwZSA8PCBNQVBMRV9FTk9E
RV9UWVBFX1NISUZUKSB8IE1BUExFX0VOT0RFX05VTEwpOw0KK30NCisNCitzdGF0aWMgaW5saW5l
IHZvaWQgKm10ZV9ta19yb290KGNvbnN0IHN0cnVjdCBtYXBsZV9lbm9kZSAqbm9kZSkNCit7DQor
CXJldHVybiAodm9pZCAqKSgodW5zaWduZWQgbG9uZylub2RlIHwgTUFQTEVfUk9PVF9OT0RFKTsN
Cit9DQorDQorc3RhdGljIGlubGluZSB2b2lkICptdGVfc2FmZV9yb290KGNvbnN0IHN0cnVjdCBt
YXBsZV9lbm9kZSAqbm9kZSkNCit7DQorCXJldHVybiAodm9pZCAqKSgodW5zaWduZWQgbG9uZylu
b2RlICYgfk1BUExFX1JPT1RfTk9ERSk7DQorfQ0KKw0KK3N0YXRpYyBpbmxpbmUgdm9pZCBtdGVf
c2V0X2Z1bGwoY29uc3Qgc3RydWN0IG1hcGxlX2Vub2RlICpub2RlKQ0KK3sNCisJbm9kZSA9ICh2
b2lkICopKCh1bnNpZ25lZCBsb25nKW5vZGUgJiB+TUFQTEVfRU5PREVfTlVMTCk7DQorfQ0KKw0K
K3N0YXRpYyBpbmxpbmUgdm9pZCBtdGVfY2xlYXJfZnVsbChjb25zdCBzdHJ1Y3QgbWFwbGVfZW5v
ZGUgKm5vZGUpDQorew0KKwlub2RlID0gKHZvaWQgKikoKHVuc2lnbmVkIGxvbmcpbm9kZSB8IE1B
UExFX0VOT0RFX05VTEwpOw0KK30NCisNCitzdGF0aWMgaW5saW5lIGJvb2wgbWFfaXNfcm9vdChz
dHJ1Y3QgbWFwbGVfbm9kZSAqbm9kZSkNCit7DQorCXJldHVybiAoKHVuc2lnbmVkIGxvbmcpbm9k
ZS0+cGFyZW50ICYgTUFfUk9PVF9QQVJFTlQpOw0KK30NCisNCitzdGF0aWMgaW5saW5lIGJvb2wg
bXRlX2lzX3Jvb3QoY29uc3Qgc3RydWN0IG1hcGxlX2Vub2RlICpub2RlKQ0KK3sNCisJcmV0dXJu
IG1hX2lzX3Jvb3QobXRlX3RvX25vZGUobm9kZSkpOw0KK30NCisNCitzdGF0aWMgaW5saW5lIGJv
b2wgbWFzX2lzX3Jvb3RfbGltaXRzKGNvbnN0IHN0cnVjdCBtYV9zdGF0ZSAqbWFzKQ0KK3sNCisJ
cmV0dXJuICFtYXMtPm1pbiAmJiBtYXMtPm1heCA9PSBVTE9OR19NQVg7DQorfQ0KKw0KK3N0YXRp
YyBpbmxpbmUgYm9vbCBtdF9pc19hbGxvYyhzdHJ1Y3QgbWFwbGVfdHJlZSAqbXQpDQorew0KKwly
ZXR1cm4gKG10LT5tYV9mbGFncyAmIE1UX0ZMQUdTX0FMTE9DX1JBTkdFKTsNCit9DQorDQorLyoN
CisgKiBUaGUgUGFyZW50IFBvaW50ZXINCisgKiBFeGNsdWRpbmcgcm9vdCwgdGhlIHBhcmVudCBw
b2ludGVyIGlzIDI1NkIgYWxpZ25lZCBsaWtlIGFsbCBvdGhlciB0cmVlIG5vZGVzLg0KKyAqIFdo
ZW4gc3RvcmluZyBhIDMyIG9yIDY0IGJpdCB2YWx1ZXMsIHRoZSBvZmZzZXQgY2FuIGZpdCBpbnRv
IDQgYml0cy4gIFRoZSAxNg0KKyAqIGJpdCB2YWx1ZXMgbmVlZCBhbiBleHRyYSBiaXQgdG8gc3Rv
cmUgdGhlIG9mZnNldC4gIFRoaXMgZXh0cmEgYml0IGNvbWVzIGZyb20NCisgKiBhIHJldXNlIG9m
IHRoZSBsYXN0IGJpdCBpbiB0aGUgbm9kZSB0eXBlLiAgVGhpcyBpcyBwb3NzaWJsZSBieSB1c2lu
ZyBiaXQgMSB0bw0KKyAqIGluZGljYXRlIGlmIGJpdCAyIGlzIHBhcnQgb2YgdGhlIHR5cGUgb3Ig
dGhlIHNsb3QuDQorICoNCisgKiBOb3RlIHR5cGVzOg0KKyAqICAweD8/MSA9IFJvb3QNCisgKiAg
MHg/MDAgPSAxNiBiaXQgbm9kZXMNCisgKiAgMHgwMTAgPSAzMiBiaXQgbm9kZXMNCisgKiAgMHgx
MTAgPSA2NCBiaXQgbm9kZXMNCisgKg0KKyAqIFNsb3Qgc2l6ZSBhbmQgYWxpZ25tZW50DQorICog
IDB4Pz8xIDogUm9vdA0KKyAqICAweD8wMCA6IDE2IGJpdCB2YWx1ZXMsIHR5cGUgaW4gMC0xLCBz
bG90IGluIDItNg0KKyAqICAweDAxMCA6IDMyIGJpdCB2YWx1ZXMsIHR5cGUgaW4gMC0yLCBzbG90
IGluIDMtNg0KKyAqICAweDExMCA6IDY0IGJpdCB2YWx1ZXMsIHR5cGUgaW4gMC0yLCBzbGl0IGlu
IDMtNg0KKyAqLw0KKw0KKyNkZWZpbmUgTUFQTEVfUEFSRU5UX1JPT1QJCTB4MDENCisNCisjZGVm
aW5lIE1BUExFX1BBUkVOVF9TTE9UX1NISUZUCQkweDAzDQorI2RlZmluZSBNQVBMRV9QQVJFTlRf
U0xPVF9NQVNLCQkweDc4DQorDQorI2RlZmluZSBNQVBMRV9QQVJFTlRfMTZCX1NMT1RfU0hJRlQJ
MHgwMg0KKyNkZWZpbmUgTUFQTEVfUEFSRU5UXzE2Ql9TTE9UX01BU0sJMHg3Qw0KKw0KKyNkZWZp
bmUgTUFQTEVfUEFSRU5UX1JBTkdFNjQJCTB4MDYNCisjZGVmaW5lIE1BUExFX1BBUkVOVF9SQU5H
RTMyCQkweDA0DQorI2RlZmluZSBNQVBMRV9QQVJFTlRfTk9UX1JBTkdFMTYJMHgwMg0KKw0KKy8q
DQorICogbXRlX3BhcmVudF9zaGlmdCgpIC0gR2V0IHRoZSBwYXJlbnQgc2hpZnQgZm9yIHRoZSBz
bG90IHN0b3JhZ2UuDQorICogQHBhcmVudDogVGhlIHBhcmVudCBwb2ludGVyIGNhc3QgYXMgYW4g
dW5zaWduZWQgbG9uZw0KKyAqIFJldHVybjogVGhlIHNoaWZ0IGludG8gdGhhdCBwb2ludGVyIHRv
IHRoZSBzdGFyIHRvIG9mIHRoZSBzbG90DQorICovDQorc3RhdGljIGlubGluZSB1bnNpZ25lZCBs
b25nIG10ZV9wYXJlbnRfc2hpZnQodW5zaWduZWQgbG9uZyBwYXJlbnQpDQorew0KKwkvKiBOb3Rl
IGJpdCAxID09IDAgbWVhbnMgMTZCICovDQorCWlmIChsaWtlbHkocGFyZW50ICYgTUFQTEVfUEFS
RU5UX05PVF9SQU5HRTE2KSkNCisJCXJldHVybiBNQVBMRV9QQVJFTlRfU0xPVF9TSElGVDsNCisN
CisJcmV0dXJuIE1BUExFX1BBUkVOVF8xNkJfU0xPVF9TSElGVDsNCit9DQorDQorLyoNCisgKiBt
dGVfcGFyZW50X3Nsb3RfbWFzaygpIC0gR2V0IHRoZSBzbG90IG1hc2sgZm9yIHRoZSBwYXJlbnQu
DQorICogQHBhcmVudDogVGhlIHBhcmVudCBwb2ludGVyIGNhc3QgYXMgYW4gdW5zaWduZWQgbG9u
Zy4NCisgKiBSZXR1cm46IFRoZSBzbG90IG1hc2sgZm9yIHRoYXQgcGFyZW50Lg0KKyAqLw0KK3N0
YXRpYyBpbmxpbmUgdW5zaWduZWQgbG9uZyBtdGVfcGFyZW50X3Nsb3RfbWFzayh1bnNpZ25lZCBs
b25nIHBhcmVudCkNCit7DQorCS8qIE5vdGUgYml0IDEgPT0gMCBtZWFucyAxNkIgKi8NCisJaWYg
KGxpa2VseShwYXJlbnQgJiBNQVBMRV9QQVJFTlRfTk9UX1JBTkdFMTYpKQ0KKwkJcmV0dXJuIE1B
UExFX1BBUkVOVF9TTE9UX01BU0s7DQorDQorCXJldHVybiBNQVBMRV9QQVJFTlRfMTZCX1NMT1Rf
TUFTSzsNCit9DQorDQorLyoNCisgKiBtYXNfcGFyZW50X2VudW0oKSAtIFJldHVybiB0aGUgbWFw
bGVfdHlwZSBvZiB0aGUgcGFyZW50IGZyb20gdGhlIHN0b3JlZA0KKyAqIHBhcmVudCB0eXBlLg0K
KyAqIEBtYXM6IFRoZSBtYXBsZSBzdGF0ZQ0KKyAqIEBub2RlOiBUaGUgbWFwbGVfZW5vZGUgdG8g
ZXh0cmFjdCB0aGUgcGFyZW50J3MgZW51bQ0KKyAqIFJldHVybjogVGhlIG5vZGUtPnBhcmVudCBt
YXBsZV90eXBlDQorICovDQorc3RhdGljIGlubGluZQ0KK2VudW0gbWFwbGVfdHlwZSBtdGVfcGFy
ZW50X2VudW0oc3RydWN0IG1hcGxlX2Vub2RlICpwX2Vub2RlLA0KKwkJCQlzdHJ1Y3QgbWFwbGVf
dHJlZSAqbXQpDQorew0KKwl1bnNpZ25lZCBsb25nIHBfdHlwZTsNCisNCisJcF90eXBlID0gKHVu
c2lnbmVkIGxvbmcpcF9lbm9kZTsNCisJaWYgKHBfdHlwZSAmIE1BUExFX1BBUkVOVF9ST09UKQ0K
KwkJcmV0dXJuIDA7IC8qIFZhbGlkYXRlZCBpbiB0aGUgY2FsbGVyLiAqLw0KKw0KKwlwX3R5cGUg
Jj0gTUFQTEVfTk9ERV9NQVNLOw0KKwlwX3R5cGUgPSBwX3R5cGUgJiB+KE1BUExFX1BBUkVOVF9S
T09UIHwgbXRlX3BhcmVudF9zbG90X21hc2socF90eXBlKSk7DQorDQorCXN3aXRjaCAocF90eXBl
KSB7DQorCWNhc2UgTUFQTEVfUEFSRU5UX1JBTkdFNjQ6IC8qIG9yIE1BUExFX1BBUkVOVF9BUkFO
R0U2NCAqLw0KKwkJaWYgKG10X2lzX2FsbG9jKG10KSkNCisJCQlyZXR1cm4gbWFwbGVfYXJhbmdl
XzY0Ow0KKwkJcmV0dXJuIG1hcGxlX3JhbmdlXzY0Ow0KKwl9DQorDQorCXJldHVybiAwOw0KK30N
CisNCitzdGF0aWMgaW5saW5lDQorZW51bSBtYXBsZV90eXBlIG1hc19wYXJlbnRfZW51bShzdHJ1
Y3QgbWFfc3RhdGUgKm1hcywgc3RydWN0IG1hcGxlX2Vub2RlICplbm9kZSkNCit7DQorCXJldHVy
biBtdGVfcGFyZW50X2VudW0obWFfZW5vZGVfcHRyKG10ZV90b19ub2RlKGVub2RlKS0+cGFyZW50
KSwgbWFzLT50cmVlKTsNCit9DQorDQorLyoNCisgKiBtdGVfc2V0X3BhcmVudCgpIC0gU2V0IHRo
ZSBwYXJlbnQgbm9kZSBhbmQgZW5jb2RlIHRoZSBzbG90DQorICogQGVub2RlOiBUaGUgZW5jb2Rl
ZCBtYXBsZSBub2RlLg0KKyAqIEBwYXJlbnQ6IFRoZSBlbmNvZGVkIG1hcGxlIG5vZGUgdGhhdCBp
cyB0aGUgcGFyZW50IG9mIEBlbm9kZS4NCisgKiBAc2xvdDogVGhlIHNsb3QgdGhhdCBAZW5vZGUg
cmVzaWRlcyBpbiBAcGFyZW50Lg0KKyAqDQorICogU2xvdCBudW1iZXIgaXMgZW5jb2RlZCBpbiB0
aGUgZW5vZGUtPnBhcmVudCBiaXQgMy02IG9yIDItNiwgZGVwZW5kaW5nIG9uIHRoZQ0KKyAqIHBh
cmVudCB0eXBlLg0KKyAqLw0KK3N0YXRpYyBpbmxpbmUNCit2b2lkIG10ZV9zZXRfcGFyZW50KHN0
cnVjdCBtYXBsZV9lbm9kZSAqZW5vZGUsIGNvbnN0IHN0cnVjdCBtYXBsZV9lbm9kZSAqcGFyZW50
LA0KKwkJICAgIHVuc2lnbmVkIGNoYXIgc2xvdCkNCit7DQorCXVuc2lnbmVkIGxvbmcgdmFsID0g
KHVuc2lnbmVkIGxvbmcpIHBhcmVudDsNCisJdW5zaWduZWQgbG9uZyBzaGlmdDsNCisJdW5zaWdu
ZWQgbG9uZyB0eXBlOw0KKwllbnVtIG1hcGxlX3R5cGUgcF90eXBlID0gbXRlX25vZGVfdHlwZShw
YXJlbnQpOw0KKw0KKwlzd2l0Y2gocF90eXBlKSB7DQorCWNhc2UgbWFwbGVfcmFuZ2VfNjQ6DQor
CWNhc2UgbWFwbGVfYXJhbmdlXzY0Og0KKwkJc2hpZnQgPSBNQVBMRV9QQVJFTlRfU0xPVF9TSElG
VDsNCisJCXR5cGUgPSBNQVBMRV9QQVJFTlRfUkFOR0U2NDsNCisJCWJyZWFrOw0KKwljYXNlIG1h
cGxlX2RlbnNlOg0KKwljYXNlIG1hcGxlX2xlYWZfNjQ6DQorCQlzaGlmdCA9IHR5cGUgPSAwOw0K
KwkJQlVHX09OKDEpOw0KKwkJYnJlYWs7DQorCX0NCisNCisJdmFsICY9IH5NQVBMRV9OT0RFX01B
U0s7IC8qIENsZWFyIGFsbCBub2RlIG1ldGFkYXRhIGluIHBhcmVudCAqLw0KKwl2YWwgfD0gKHNs
b3QgPDwgc2hpZnQpIHwgdHlwZTsNCisJbXRlX3RvX25vZGUoZW5vZGUpLT5wYXJlbnQgPSBtYV9w
YXJlbnRfcHRyKHZhbCk7DQorfQ0KKw0KKy8qDQorICogbXRlX3BhcmVudF9zbG90KCkgLSBnZXQg
dGhlIHBhcmVudCBzbG90IG9mIEBlbm9kZS4NCisgKiBAZW5vZGU6IFRoZSBlbmNvZGVkIG1hcGxl
IG5vZGUuDQorICoNCisgKiBSZXR1cm46IFRoZSBzbG90IGluIHRoZSBwYXJlbnQgbm9kZSB3aGVy
ZSBAZW5vZGUgcmVzaWRlcy4NCisgKi8NCitzdGF0aWMgaW5saW5lIHVuc2lnbmVkIGludCBtdGVf
cGFyZW50X3Nsb3QoY29uc3Qgc3RydWN0IG1hcGxlX2Vub2RlICplbm9kZSkNCit7DQorCXVuc2ln
bmVkIGxvbmcgdmFsID0gKHVuc2lnbmVkIGxvbmcpIG10ZV90b19ub2RlKGVub2RlKS0+cGFyZW50
Ow0KKw0KKwkvKiBSb290LiAqLw0KKwlpZiAodmFsICYgMSkNCisJCXJldHVybiAwOw0KKw0KKwkv
Kg0KKwkgKiBPa2F5IHRvIHVzZSBNQVBMRV9QQVJFTlRfMTZCX1NMT1RfTUFTSyBhcyB0aGUgbGFz
dCBiaXQgd2lsbCBiZSBsb3N0DQorCSAqIGJ5IHNoaWZ0IGlmIHRoZSBwYXJlbnQgc2hpZnQgaXMg
TUFQTEVfUEFSRU5UX1NMT1RfU0hJRlQNCisJICovDQorCXJldHVybiAodmFsICYgTUFQTEVfUEFS
RU5UXzE2Ql9TTE9UX01BU0spID4+IG10ZV9wYXJlbnRfc2hpZnQodmFsKTsNCit9DQorDQorLyoN
CisgKiBtdGVfcGFyZW50KCkgLSBHZXQgdGhlIHBhcmVudCBvZiBAbm9kZS4NCisgKiBAbm9kZTog
VGhlIGVuY29kZWQgbWFwbGUgbm9kZS4NCisgKg0KKyAqIFJldHVybjogVGhlIHBhcmVudCBtYXBs
ZSBub2RlLg0KKyAqLw0KK3N0YXRpYyBpbmxpbmUgc3RydWN0IG1hcGxlX25vZGUgKm10ZV9wYXJl
bnQoY29uc3Qgc3RydWN0IG1hcGxlX2Vub2RlICplbm9kZSkNCit7DQorCXJldHVybiAodm9pZCAq
KSgodW5zaWduZWQgbG9uZykNCisJCQkobXRlX3RvX25vZGUoZW5vZGUpLT5wYXJlbnQpICYgfk1B
UExFX05PREVfTUFTSyk7DQorfQ0KKw0KKy8qDQorICogbWFfZGVhZF9ub2RlKCkgLSBjaGVjayBp
ZiB0aGUgQGVub2RlIGlzIGRlYWQuDQorICogQGVub2RlOiBUaGUgZW5jb2RlZCBtYXBsZSBub2Rl
DQorICoNCisgKiBSZXR1cm46IHRydWUgaWYgZGVhZCwgZmFsc2Ugb3RoZXJ3aXNlLg0KKyAqLw0K
K3N0YXRpYyBpbmxpbmUgYm9vbCBtYV9kZWFkX25vZGUoY29uc3Qgc3RydWN0IG1hcGxlX25vZGUg
Km5vZGUpDQorew0KKwlzdHJ1Y3QgbWFwbGVfbm9kZSAqcGFyZW50ID0gKHZvaWQgKikoKHVuc2ln
bmVkIGxvbmcpDQorCQkJCQkgICAgIG5vZGUtPnBhcmVudCAmIH5NQVBMRV9OT0RFX01BU0spOw0K
Kw0KKwlyZXR1cm4gKHBhcmVudCA9PSBub2RlKTsNCit9DQorLyoNCisgKiBtdGVfZGVhZF9ub2Rl
KCkgLSBjaGVjayBpZiB0aGUgQGVub2RlIGlzIGRlYWQuDQorICogQGVub2RlOiBUaGUgZW5jb2Rl
ZCBtYXBsZSBub2RlDQorICoNCisgKiBSZXR1cm46IHRydWUgaWYgZGVhZCwgZmFsc2Ugb3RoZXJ3
aXNlLg0KKyAqLw0KK3N0YXRpYyBpbmxpbmUgYm9vbCBtdGVfZGVhZF9ub2RlKGNvbnN0IHN0cnVj
dCBtYXBsZV9lbm9kZSAqZW5vZGUpDQorew0KKwlzdHJ1Y3QgbWFwbGVfbm9kZSAqcGFyZW50LCAq
bm9kZTsNCisNCisJbm9kZSA9IG10ZV90b19ub2RlKGVub2RlKTsNCisJcGFyZW50ID0gbXRlX3Bh
cmVudChlbm9kZSk7DQorCXJldHVybiAocGFyZW50ID09IG5vZGUpOw0KK30NCisNCisvKg0KKyAq
IG1hc19hbGxvY2F0ZWQoKSAtIEdldCB0aGUgbnVtYmVyIG9mIG5vZGVzIGFsbG9jYXRlZCBpbiBh
IG1hcGxlIHN0YXRlLg0KKyAqIEBtYXM6IFRoZSBtYXBsZSBzdGF0ZQ0KKyAqDQorICogVGhlIG1h
X3N0YXRlIGFsbG9jIG1lbWJlciBpcyBvdmVybG9hZGVkIHRvIGhvbGQgYSBwb2ludGVyIHRvIHRo
ZSBmaXJzdA0KKyAqIGFsbG9jYXRlZCBub2RlIG9yIHRvIHRoZSBudW1iZXIgb2YgcmVxdWVzdGVk
IG5vZGVzIHRvIGFsbG9jYXRlLiAgSWYgYml0IDAgaXMNCisgKiBzZXQsIHRoZW4gdGhlIGFsbG9j
IGNvbnRhaW5zIHRoZSBudW1iZXIgb2YgcmVxdWVzdGVkIG5vZGVzLiAgSWYgdGhlcmUgaXMgYW4N
CisgKiBhbGxvY2F0ZWQgbm9kZSwgdGhlbiB0aGUgdG90YWwgYWxsb2NhdGVkIG5vZGVzIGlzIGlu
IHRoYXQgbm9kZS4NCisgKg0KKyAqIFJldHVybjogVGhlIHRvdGFsIG51bWJlciBvZiBub2RlcyBh
bGxvY2F0ZWQNCisgKi8NCitzdGF0aWMgaW5saW5lIHVuc2lnbmVkIGxvbmcgbWFzX2FsbG9jYXRl
ZChjb25zdCBzdHJ1Y3QgbWFfc3RhdGUgKm1hcykNCit7DQorCWlmICghbWFzLT5hbGxvYyB8fCAo
KHVuc2lnbmVkIGxvbmcpbWFzLT5hbGxvYyAmIDB4MSkpDQorCQlyZXR1cm4gMDsNCisNCisJcmV0
dXJuIG1hcy0+YWxsb2MtPnRvdGFsOw0KK30NCisNCisvKg0KKyAqIG1hc19zZXRfYWxsb2NfcmVx
KCkgLSBTZXQgdGhlIHJlcXVlc3RlZCBudW1iZXIgb2YgYWxsb2NhdGlvbnMuDQorICogQG1hczog
dGhlIG1hcGxlIHN0YXRlDQorICogQGNvdW50OiB0aGUgbnVtYmVyIG9mIGFsbG9jYXRpb25zLg0K
KyAqDQorICogVGhlIHJlcXVlc3RlZCBudW1iZXIgb2YgYWxsb2NhdGlvbnMgaXMgZWl0aGVyIGlu
IHRoZSBmaXJzdCBhbGxvY2F0ZWQgbm9kZSwNCisgKiBsb2NhdGVkIGluIEBtYXMtPmFsbG9jLT5y
ZXF1ZXN0X2NvdW50LCBvciBkaXJlY3RseSBpbiBAbWFzLT5hbGxvYyBpZiB0aGVyZSBpcw0KKyAq
IG5vIGFsbG9jYXRlZCBub2RlLiAgU2V0IHRoZSByZXF1ZXN0IGVpdGhlciBpbiB0aGUgbm9kZSBv
ciBkbyB0aGUgbmVjZXNzYXJ5DQorICogZW5jb2RpbmcgdG8gc3RvcmUgaW4gQG1hcy0+YWxsb2Mg
ZGlyZWN0bHkuDQorICovDQorc3RhdGljIGlubGluZSB2b2lkIG1hc19zZXRfYWxsb2NfcmVxKHN0
cnVjdCBtYV9zdGF0ZSAqbWFzLCB1bnNpZ25lZCBsb25nIGNvdW50KQ0KK3sNCisJaWYgKCFtYXMt
PmFsbG9jIHx8ICgodW5zaWduZWQgbG9uZyltYXMtPmFsbG9jICYgMHgxKSkgew0KKwkJaWYgKCFj
b3VudCkNCisJCQltYXMtPmFsbG9jID0gTlVMTDsNCisJCWVsc2UNCisJCQltYXMtPmFsbG9jID0g
KHN0cnVjdCBtYXBsZV9hbGxvYyAqKSgoKGNvdW50KSA8PCAxVSkgfCAxVSk7DQorCQlyZXR1cm47
DQorCX0NCisNCisJbWFzLT5hbGxvYy0+cmVxdWVzdF9jb3VudCA9IGNvdW50Ow0KK30NCisNCisv
Kg0KKyAqIG1hc19hbGxvY19yZXEoKSAtIGdldCB0aGUgcmVxdWVzdGVkIG51bWJlciBvZiBhbGxv
Y2F0aW9ucy4NCisgKiBAbWFzOiBUaGUgbWFwbGUgc3RhdGUNCisgKg0KKyAqIFRoZSBhbGxvYyBj
b3VudCBpcyBlaXRoZXIgc3RvcmVkIGRpcmVjdGx5IGluIEBtYXMsIG9yIGluDQorICogQG1hcy0+
YWxsb2MtPnJlcXVlc3RfY291bnQgaWYgdGhlcmUgaXMgYXQgbGVhc3Qgb25lIG5vZGUgYWxsb2Nh
dGVkLiAgRGVjb2RlDQorICogdGhlIHJlcXVlc3QgY291bnQgaWYgaXQncyBzdG9yZWQgZGlyZWN0
bHkgaW4gQG1hcy0+YWxsb2MuDQorICoNCisgKiBSZXR1cm46IFRoZSBhbGxvY2F0aW9uIHJlcXVl
c3QgY291bnQuDQorICovDQorc3RhdGljIGlubGluZSB1bnNpZ25lZCBpbnQgbWFzX2FsbG9jX3Jl
cShjb25zdCBzdHJ1Y3QgbWFfc3RhdGUgKm1hcykNCit7DQorCWlmICgodW5zaWduZWQgbG9uZylt
YXMtPmFsbG9jICYgMHgxKQ0KKwkJcmV0dXJuICh1bnNpZ25lZCBsb25nKShtYXMtPmFsbG9jKSA+
PiAxOw0KKwllbHNlIGlmIChtYXMtPmFsbG9jKQ0KKwkJcmV0dXJuIG1hcy0+YWxsb2MtPnJlcXVl
c3RfY291bnQ7DQorCXJldHVybiAwOw0KK30NCisNCisvKg0KKyAqIG1hX3Bpdm90cygpIC0gR2V0
IGEgcG9pbnRlciB0byB0aGUgbWFwbGUgbm9kZSBwaXZvdHMuDQorICogQG5vZGUgLSB0aGUgbWFw
bGUgbm9kZQ0KKyAqIEB0eXBlIC0gdGhlIG5vZGUgdHlwZQ0KKyAqDQorICogUmV0dXJuOiBBIHBv
aW50ZXIgdG8gdGhlIG1hcGxlIG5vZGUgcGl2b3RzDQorICovDQorc3RhdGljIGlubGluZSB1bnNp
Z25lZCBsb25nICptYV9waXZvdHMoc3RydWN0IG1hcGxlX25vZGUgKm5vZGUsDQorCQkJCQkgICBl
bnVtIG1hcGxlX3R5cGUgdHlwZSkNCit7DQorCXN3aXRjaCAodHlwZSkgew0KKwljYXNlIG1hcGxl
X2FyYW5nZV82NDoNCisJCXJldHVybiBub2RlLT5tYTY0LnBpdm90Ow0KKwljYXNlIG1hcGxlX3Jh
bmdlXzY0Og0KKwljYXNlIG1hcGxlX2xlYWZfNjQ6DQorCQlyZXR1cm4gbm9kZS0+bXI2NC5waXZv
dDsNCisJY2FzZSBtYXBsZV9kZW5zZToNCisJCXJldHVybiBOVUxMOw0KKwl9DQorCXJldHVybiBO
VUxMOw0KK30NCisNCisvKg0KKyAqIG1hX2dhcHMoKSAtIEdldCBhIHBvaW50ZXIgdG8gdGhlIG1h
cGxlIG5vZGUgZ2Fwcy4NCisgKiBAbm9kZSAtIHRoZSBtYXBsZSBub2RlDQorICogQHR5cGUgLSB0
aGUgbm9kZSB0eXBlDQorICoNCisgKiBSZXR1cm46IEEgcG9pbnRlciB0byB0aGUgbWFwbGUgbm9k
ZSBnYXBzDQorICovDQorc3RhdGljIGlubGluZSB1bnNpZ25lZCBsb25nICptYV9nYXBzKHN0cnVj
dCBtYXBsZV9ub2RlICpub2RlLA0KKwkJCQkgICAgIGVudW0gbWFwbGVfdHlwZSB0eXBlKQ0KK3sN
CisJc3dpdGNoICh0eXBlKSB7DQorCWNhc2UgbWFwbGVfYXJhbmdlXzY0Og0KKwkJcmV0dXJuIG5v
ZGUtPm1hNjQuZ2FwOw0KKwljYXNlIG1hcGxlX3JhbmdlXzY0Og0KKwljYXNlIG1hcGxlX2xlYWZf
NjQ6DQorCWNhc2UgbWFwbGVfZGVuc2U6DQorCQlyZXR1cm4gTlVMTDsNCisJfQ0KKwlyZXR1cm4g
TlVMTDsNCit9DQorDQorLyoNCisgKiBtdGVfcGl2b3QoKSAtIEdldCB0aGUgcGl2b3QgYXQgQHBp
diBvZiB0aGUgbWFwbGUgZW5jb2RlZCBub2RlLg0KKyAqIEBtbjogVGhlIG1hcGxlIGVuY29kZWQg
bm9kZS4NCisgKiBAcGl2OiBUaGUgcGl2b3QuDQorICoNCisgKiBSZXR1cm46IHRoZSBwaXZvdCBh
dCBAcGl2IG9mIEBtbi4NCisgKi8NCitzdGF0aWMgaW5saW5lIHVuc2lnbmVkIGxvbmcgbXRlX3Bp
dm90KGNvbnN0IHN0cnVjdCBtYXBsZV9lbm9kZSAqbW4sDQorCQkJCSB1bnNpZ25lZCBjaGFyIHBp
dikNCit7DQorCXN0cnVjdCBtYXBsZV9ub2RlICpub2RlID0gbXRlX3RvX25vZGUobW4pOw0KKw0K
KwlpZihwaXYgPj0gbXRfcGl2b3RzW3Bpdl0pIHsNCisJCVdBUk5fT04oMSk7DQorCQlyZXR1cm4g
MDsNCisJfQ0KKwlzd2l0Y2ggKG10ZV9ub2RlX3R5cGUobW4pKSB7DQorCWNhc2UgbWFwbGVfYXJh
bmdlXzY0Og0KKwkJcmV0dXJuIG5vZGUtPm1hNjQucGl2b3RbcGl2XTsNCisJY2FzZSBtYXBsZV9y
YW5nZV82NDoNCisJY2FzZSBtYXBsZV9sZWFmXzY0Og0KKwkJcmV0dXJuIG5vZGUtPm1yNjQucGl2
b3RbcGl2XTsNCisJY2FzZSBtYXBsZV9kZW5zZToNCisJCXJldHVybiAwOw0KKwl9DQorCXJldHVy
biAwOw0KK30NCisNCisvKg0KKyAqIG1hc19zYWZlX3Bpdm90KCkgLSBnZXQgdGhlIHBpdm90IGF0
IEBwaXYgb3IgbWFzLT5tYXguDQorICogQG1hczogVGhlIG1hcGxlIHN0YXRlDQorICogQHBpdm90
czogVGhlIHBvaW50ZXIgdG8gdGhlIG1hcGxlIG5vZGUgcGl2b3RzDQorICogQHBpdjogVGhlIHBp
dm90IHRvIGZldGNoDQorICogQHR5cGU6IFRoZSBtYXBsZSBub2RlIHR5cGUNCisgKg0KKyAqIFJl
dHVybjogVGhlIHBpdm90IGF0IEBwaXYgd2l0aGluIHRoZSBsaW1pdCBvZiB0aGUgQHBpdm90cyBh
cnJheSwgQG1hcy0+bWF4DQorICogb3RoZXJ3aXNlLg0KKyAqLw0KK3N0YXRpYyBpbmxpbmUgdW5z
aWduZWQgbG9uZw0KK21hc19zYWZlX3Bpdm90KGNvbnN0IHN0cnVjdCBtYV9zdGF0ZSAqbWFzLCB1
bnNpZ25lZCBsb25nICpwaXZvdHMsDQorCSAgICAgICB1bnNpZ25lZCBjaGFyIHBpdiwgZW51bSBt
YXBsZV90eXBlIHR5cGUpDQorew0KKwlpZiAocGl2ID49IG10X3Bpdm90c1t0eXBlXSkNCisJCXJl
dHVybiBtYXMtPm1heDsNCisNCisJcmV0dXJuIHBpdm90c1twaXZdOw0KK30NCisNCisvKg0KKyAq
IG1hc19zYWZlX21pbigpIC0gUmV0dXJuIHRoZSBtaW5pbXVtIGZvciBhIGdpdmVuIG9mZnNldC4N
CisgKiBAbWFzOiBUaGUgbWFwbGUgc3RhdGUNCisgKiBAcGl2b3RzOiBUaGUgcG9pbnRlciB0byB0
aGUgbWFwbGUgbm9kZSBwaXZvdHMNCisgKiBAb2Zmc2V0OiBUaGUgb2Zmc2V0IGludG8gdGhlIHBp
dm90IGFycmF5DQorICoNCisgKiBSZXR1cm46IFRoZSBtaW5pbXVtIHJhbmdlIHZhbHVlIHRoYXQg
aXMgY29udGFpbmVkIGluIEBvZmZzZXQuDQorICovDQorc3RhdGljIGlubGluZSB1bnNpZ25lZCBs
b25nDQorbWFzX3NhZmVfbWluKHN0cnVjdCBtYV9zdGF0ZSAqbWFzLCB1bnNpZ25lZCBsb25nICpw
aXZvdHMsIHVuc2lnbmVkIGNoYXIgb2Zmc2V0KQ0KK3sNCisJaWYgKGxpa2VseShvZmZzZXQpKQ0K
KwkJcmV0dXJuIHBpdm90c1tvZmZzZXQgLSAxXSArIDE7DQorDQorCXJldHVybiBtYXMtPm1pbjsN
Cit9DQorDQorLyoNCisgKiBtYXNfbG9naWNhbF9waXZvdCgpIC0gR2V0IHRoZSBsb2dpY2FsIHBp
dm90IG9mIGEgZ2l2ZW4gb2Zmc2V0Lg0KKyAqIEBtYXM6IFRoZSBtYXBsZSBzdGF0ZQ0KKyAqIEBw
aXZvdHM6IFRoZSBwb2ludGVyIHRvIHRoZSBtYXBsZSBub2RlIHBpdm90cw0KKyAqIEBvZmZzZXQ6
IFRoZSBvZmZzZXQgaW50byB0aGUgcGl2b3QgYXJyYXkNCisgKiBAdHlwZTogVGhlIG1hcGxlIG5v
ZGUgdHlwZQ0KKyAqDQorICogV2hlbiB0aGVyZSBpcyBubyB2YWx1ZSBhdCBhIHBpdm90IChiZXlv
bmQgdGhlIGVuZCBvZiB0aGUgZGF0YSksIHRoZW4gdGhlDQorICogcGl2b3QgaXMgYWN0dWFsbHkg
QG1hcy0+bWF4Lg0KKyAqDQorICogUmV0dXJuOiB0aGUgbG9naWNhbCBwaXZvdCBvZiBhIGdpdmVu
IEBvZmZzZXQuDQorICovDQorc3RhdGljIGlubGluZSB1bnNpZ25lZCBsb25nDQorbWFzX2xvZ2lj
YWxfcGl2b3Qoc3RydWN0IG1hX3N0YXRlICptYXMsIHVuc2lnbmVkIGxvbmcgKnBpdm90cywNCisJ
CSAgdW5zaWduZWQgY2hhciBvZmZzZXQsIGVudW0gbWFwbGVfdHlwZSB0eXBlKQ0KK3sNCisJdW5z
aWduZWQgbG9uZyBscGl2ID0gbWFzX3NhZmVfcGl2b3QobWFzLCBwaXZvdHMsIG9mZnNldCwgdHlw
ZSk7DQorDQorCWlmIChsaWtlbHkobHBpdikpDQorCQlyZXR1cm4gbHBpdjsNCisNCisJaWYgKGxp
a2VseShvZmZzZXQpKQ0KKwkJcmV0dXJuIG1hcy0+bWF4Ow0KKw0KKwlyZXR1cm4gbHBpdjsNCit9
DQorDQorLyoNCisgKiBtdGVfc2V0X3Bpdm90KCkgLSBTZXQgYSBwaXZvdCB0byBhIHZhbHVlIGlu
IGFuIGVuY29kZWQgbWFwbGUgbm9kZS4NCisgKiBAbW46IFRoZSBlbmNvZGVkIG1hcGxlIG5vZGUN
CisgKiBAcGl2OiBUaGUgcGl2b3Qgb2Zmc2V0DQorICogQHZhbDogVGhlIHZhbHVlIG9mIHRoZSBw
aXZvdA0KKyAqLw0KK3N0YXRpYyBpbmxpbmUgdm9pZCBtdGVfc2V0X3Bpdm90KHN0cnVjdCBtYXBs
ZV9lbm9kZSAqbW4sIHVuc2lnbmVkIGNoYXIgcGl2LA0KKwkJCQl1bnNpZ25lZCBsb25nIHZhbCkN
Cit7DQorCXN0cnVjdCBtYXBsZV9ub2RlICpub2RlID0gbXRlX3RvX25vZGUobW4pOw0KKwllbnVt
IG1hcGxlX3R5cGUgdHlwZSA9IG10ZV9ub2RlX3R5cGUobW4pOw0KKw0KKwlCVUdfT04ocGl2ID49
IG10X3Bpdm90c1t0eXBlXSk7DQorCXN3aXRjaCAodHlwZSkgew0KKwlkZWZhdWx0Og0KKwljYXNl
IG1hcGxlX3JhbmdlXzY0Og0KKwljYXNlIG1hcGxlX2xlYWZfNjQ6DQorCQkoJm5vZGUtPm1yNjQp
LT5waXZvdFtwaXZdID0gdmFsOw0KKwkJYnJlYWs7DQorCWNhc2UgbWFwbGVfYXJhbmdlXzY0Og0K
KwkJKCZub2RlLT5tYTY0KS0+cGl2b3RbcGl2XSA9IHZhbDsNCisJY2FzZSBtYXBsZV9kZW5zZToN
CisJCWJyZWFrOw0KKwl9DQorDQorfQ0KKw0KKy8qDQorICogbWFfc2xvdHMoKSAtIEdldCBhIHBv
aW50ZXIgdG8gdGhlIG1hcGxlIG5vZGUgc2xvdHMuDQorICogQG1uOiBUaGUgbWFwbGUgbm9kZQ0K
KyAqIEBtdDogVGhlIG1hcGxlIG5vZGUgdHlwZQ0KKyAqDQorICogUmV0dXJuOiBBIHBvaW50ZXIg
dG8gdGhlIG1hcGxlIG5vZGUgc2xvdHMNCisgKi8NCitzdGF0aWMgaW5saW5lIHZvaWQgX19yY3Ug
KiptYV9zbG90cyhzdHJ1Y3QgbWFwbGVfbm9kZSAqbW4sIGVudW0gbWFwbGVfdHlwZSBtdCkNCit7
DQorCXN3aXRjaCAobXQpIHsNCisJZGVmYXVsdDoNCisJY2FzZSBtYXBsZV9hcmFuZ2VfNjQ6DQor
CQlyZXR1cm4gbW4tPm1hNjQuc2xvdDsNCisJY2FzZSBtYXBsZV9yYW5nZV82NDoNCisJY2FzZSBt
YXBsZV9sZWFmXzY0Og0KKwkJcmV0dXJuIG1uLT5tcjY0LnNsb3Q7DQorCWNhc2UgbWFwbGVfZGVu
c2U6DQorCQlyZXR1cm4gbW4tPnNsb3Q7DQorCX0NCit9DQorDQorc3RhdGljIGlubGluZSBib29s
IG10X2xvY2tlZChjb25zdCBzdHJ1Y3QgbWFwbGVfdHJlZSAqbXQpDQorew0KKwlyZXR1cm4gbXRf
ZXh0ZXJuYWxfbG9jayhtdCkgPyBtdF9sb2NrX2lzX2hlbGQobXQpIDoNCisJCWxvY2tkZXBfaXNf
aGVsZCgmbXQtPm1hX2xvY2spOw0KK30NCisNCitzdGF0aWMgaW5saW5lIHZvaWQgKm10X3Nsb3Qo
Y29uc3Qgc3RydWN0IG1hcGxlX3RyZWUgKm10LA0KKwkJdm9pZCBfX3JjdSAqKnNsb3RzLCB1bnNp
Z25lZCBjaGFyIG9mZnNldCkNCit7DQorCXJldHVybiByY3VfZGVyZWZlcmVuY2VfY2hlY2soc2xv
dHNbb2Zmc2V0XSwgbXRfbG9ja2VkKG10KSk7DQorfQ0KKw0KKy8qDQorICogbWFzX3Nsb3RfbG9j
a2VkKCkgLSBHZXQgdGhlIHNsb3QgdmFsdWUgd2hlbiBob2xkaW5nIHRoZSBtYXBsZSB0cmVlIGxv
Y2suDQorICogQG1hczogVGhlIG1hcGxlIHN0YXRlDQorICogQHNsb3RzOiBUaGUgcG9pbnRlciB0
byB0aGUgc2xvdHMNCisgKiBAb2Zmc2V0OiBUaGUgb2Zmc2V0IGludG8gdGhlIHNsb3RzIGFycmF5
IHRvIGZldGNoDQorICoNCisgKiBSZXR1cm46IFRoZSBlbnRyeSBzdG9yZWQgaW4gQHNsb3RzIGF0
IHRoZSBAb2Zmc2V0Lg0KKyAqLw0KK3N0YXRpYyBpbmxpbmUgdm9pZCAqbWFzX3Nsb3RfbG9ja2Vk
KHN0cnVjdCBtYV9zdGF0ZSAqbWFzLCB2b2lkIF9fcmN1ICoqc2xvdHMsDQorCQkJCSAgICAgICB1
bnNpZ25lZCBjaGFyIG9mZnNldCkNCit7DQorCXJldHVybiByY3VfZGVyZWZlcmVuY2VfcHJvdGVj
dGVkKHNsb3RzW29mZnNldF0sIG10X2xvY2tlZChtYXMtPnRyZWUpKTsNCit9DQorDQorLyoNCisg
KiBtYXNfc2xvdCgpIC0gR2V0IHRoZSBzbG90IHZhbHVlIHdoZW4gbm90IGhvbGRpbmcgdGhlIG1h
cGxlIHRyZWUgbG9jay4NCisgKiBAbWFzOiBUaGUgbWFwbGUgc3RhdGUNCisgKiBAc2xvdHM6IFRo
ZSBwb2ludGVyIHRvIHRoZSBzbG90cw0KKyAqIEBvZmZzZXQ6IFRoZSBvZmZzZXQgaW50byB0aGUg
c2xvdHMgYXJyYXkgdG8gZmV0Y2gNCisgKg0KKyAqIFJldHVybjogVGhlIGVudHJ5IHN0b3JlZCBp
biBAc2xvdHMgYXQgdGhlIEBvZmZzZXQNCisgKi8NCitzdGF0aWMgaW5saW5lIHZvaWQgKm1hc19z
bG90KHN0cnVjdCBtYV9zdGF0ZSAqbWFzLCB2b2lkIF9fcmN1ICoqc2xvdHMsDQorCQkJICAgICB1
bnNpZ25lZCBjaGFyIG9mZnNldCkNCit7DQorCXJldHVybiBtdF9zbG90KG1hcy0+dHJlZSwgc2xv
dHMsIG9mZnNldCk7DQorfQ0KKw0KKy8qDQorICogbWFzX2dldF9zbG90KCkgLSBHZXQgdGhlIGVu
dHJ5IGluIHRoZSBtYXBsZSBzdGF0ZSBub2RlIHN0b3JlZCBhdCBAb2Zmc2V0Lg0KKyAqIEBtYXM6
IFRoZSBtYXBsZSBzdGF0ZQ0KKyAqIEBvZmZzZXQ6IFRoZSBvZmZzZXQgaW50byB0aGUgc2xvdCBh
cnJheSB0byBmZXRjaC4NCisgKg0KKyAqIFJldHVybjogVGhlIGVudHJ5IHN0b3JlZCBhdCBAb2Zm
c2V0Lg0KKyAqLw0KK3N0YXRpYyBpbmxpbmUgc3RydWN0IG1hcGxlX2Vub2RlICptYXNfZ2V0X3Ns
b3Qoc3RydWN0IG1hX3N0YXRlICptYXMsDQorCQl1bnNpZ25lZCBjaGFyIG9mZnNldCkNCit7DQor
CXJldHVybiBtYXNfc2xvdChtYXMsIG1hX3Nsb3RzKG1hc19tbihtYXMpLCBtdGVfbm9kZV90eXBl
KG1hcy0+bm9kZSkpLA0KKwkJICAgICAgIG9mZnNldCk7DQorfQ0KKw0KKy8qDQorICogbWFzX3Jv
b3QoKSAtIEdldCB0aGUgbWFwbGUgdHJlZSByb290Lg0KKyAqIEBtYXM6IFRoZSBtYXBsZSBzdGF0
ZS4NCisgKg0KKyAqIFJldHVybjogVGhlIHBvaW50ZXIgdG8gdGhlIHJvb3Qgb2YgdGhlIHRyZWUN
CisgKi8NCitzdGF0aWMgaW5saW5lIHZvaWQgKm1hc19yb290KHN0cnVjdCBtYV9zdGF0ZSAqbWFz
KQ0KK3sNCisJcmV0dXJuIHJjdV9kZXJlZmVyZW5jZV9jaGVjayhtYXMtPnRyZWUtPm1hX3Jvb3Qs
IG10X2xvY2tlZChtYXMtPnRyZWUpKTsNCit9DQorDQorc3RhdGljIGlubGluZSB2b2lkICptdF9y
b290X2xvY2tlZChjb25zdCBzdHJ1Y3QgbWFwbGVfdHJlZSAqbXQpDQorew0KKwlyZXR1cm4gcmN1
X2RlcmVmZXJlbmNlX3Byb3RlY3RlZChtdC0+bWFfcm9vdCwgbXRfbG9ja2VkKG10KSk7DQorfQ0K
Kw0KKy8qDQorICogbWFzX3Jvb3RfbG9ja2VkKCkgLSBHZXQgdGhlIG1hcGxlIHRyZWUgcm9vdCB3
aGVuIGhvbGRpbmcgdGhlIG1hcGxlIHRyZWUgbG9jay4NCisgKiBAbWFzOiBUaGUgbWFwbGUgc3Rh
dGUuDQorICoNCisgKiBSZXR1cm46IFRoZSBwb2ludGVyIHRvIHRoZSByb290IG9mIHRoZSB0cmVl
DQorICovDQorc3RhdGljIGlubGluZSB2b2lkICptYXNfcm9vdF9sb2NrZWQoc3RydWN0IG1hX3N0
YXRlICptYXMpDQorew0KKwlyZXR1cm4gbXRfcm9vdF9sb2NrZWQobWFzLT50cmVlKTsNCit9DQor
DQorc3RhdGljIGlubGluZSBzdHJ1Y3QgbWFwbGVfbWV0YWRhdGEgKm1hX21ldGEoc3RydWN0IG1h
cGxlX25vZGUgKm1uLA0KKwkJCQkJICAgICBlbnVtIG1hcGxlX3R5cGUgbXQpDQorew0KKwlzd2l0
Y2ggKG10KSB7DQorCWNhc2UgbWFwbGVfYXJhbmdlXzY0Og0KKwkJcmV0dXJuICZtbi0+bWE2NC5t
ZXRhOw0KKwlkZWZhdWx0Og0KKwkJcmV0dXJuICZtbi0+bXI2NC5tZXRhOw0KKwl9DQorfQ0KKw0K
Ky8qDQorICogbWFfc2V0X21ldGEoKSAtIFNldCB0aGUgbWV0YWRhdGEgaW5mb3JtYXRpb24gb2Yg
YSBub2RlLg0KKyAqIEBtbjogVGhlIG1hcGxlIG5vZGUNCisgKiBAbXQ6IFRoZSBtYXBsZSBub2Rl
IHR5cGUNCisgKiBAb2Zmc2V0OiBUaGUgb2Zmc2V0IG9mIHRoZSBoaWdoZXN0IHN1Yi1nYXAgaW4g
dGhpcyBub2RlLg0KKyAqIEBlbmQ6IFRoZSBlbmQgb2YgdGhlIGRhdGEgaW4gdGhpcyBub2RlLg0K
KyAqLw0KK3N0YXRpYyBpbmxpbmUgdm9pZCBtYV9zZXRfbWV0YShzdHJ1Y3QgbWFwbGVfbm9kZSAq
bW4sIGVudW0gbWFwbGVfdHlwZSBtdCwNCisJCQkgICAgICAgdW5zaWduZWQgY2hhciBvZmZzZXQs
IHVuc2lnbmVkIGNoYXIgZW5kKQ0KK3sNCisJc3RydWN0IG1hcGxlX21ldGFkYXRhICptZXRhID0g
bWFfbWV0YShtbiwgbXQpOw0KKw0KKwltZXRhLT5nYXAgPSBvZmZzZXQ7DQorCW1ldGEtPmVuZCA9
IGVuZDsNCit9DQorDQorLyoNCisgKiBtYV9tZXRhX2VuZCgpIC0gR2V0IHRoZSBkYXRhIGVuZCBv
ZiBhIG5vZGUgZnJvbSB0aGUgbWV0YWRhdGENCisgKiBAbW46IFRoZSBtYXBsZSBub2RlDQorICog
QG10OiBUaGUgbWFwbGUgbm9kZSB0eXBlDQorICovDQorc3RhdGljIGlubGluZSB1bnNpZ25lZCBj
aGFyIG1hX21ldGFfZW5kKHN0cnVjdCBtYXBsZV9ub2RlICptbiwNCisJCQkJCWVudW0gbWFwbGVf
dHlwZSBtdCkNCit7DQorCXN0cnVjdCBtYXBsZV9tZXRhZGF0YSAqbWV0YSA9IG1hX21ldGEobW4s
IG10KTsNCisNCisJcmV0dXJuIG1ldGEtPmVuZDsNCit9DQorDQorLyoNCisgKiBtYV9tZXRhX2dh
cCgpIC0gR2V0IHRoZSBsYXJnZXN0IGdhcCBsb2NhdGlvbiBvZiBhIG5vZGUgZnJvbSB0aGUgbWV0
YWRhdA0KKyAqIEBtbjogVGhlIG1hcGxlIG5vZGUNCisgKiBAbXQ6IFRoZSBtYXBsZSBub2RlIHR5
cGUNCisgKi8NCitzdGF0aWMgaW5saW5lIHVuc2lnbmVkIGNoYXIgbWFfbWV0YV9nYXAoc3RydWN0
IG1hcGxlX25vZGUgKm1uLA0KKwkJCQkJZW51bSBtYXBsZV90eXBlIG10KQ0KK3sNCisNCisJcmV0
dXJuIG1uLT5tYTY0Lm1ldGEuZ2FwOw0KK30NCisNCisvKg0KKyAqIG1hX3NldF9tZXRhX2dhcCgp
IC0gU2V0IHRoZSBsYXJnZXN0IGdhcCBsb2NhdGlvbiBpbiBhIG5vZGVzIG1ldGFkYXRhDQorICog
QG1uOiBUaGUgbWFwbGUgbm9kZQ0KKyAqIEBtbjogVGhlIG1hcGxlIG5vZGUgdHlwZQ0KKyAqIEBv
ZmZzZXQ6IFRoZSBsb2NhdGlvbiBvZiB0aGUgbGFyZ2VzdCBnYXAuDQorICovDQorc3RhdGljIGlu
bGluZSB2b2lkIG1hX3NldF9tZXRhX2dhcChzdHJ1Y3QgbWFwbGVfbm9kZSAqbW4sIGVudW0gbWFw
bGVfdHlwZSBtdCwNCisJCQkJICAgdW5zaWduZWQgY2hhciBvZmZzZXQpDQorew0KKw0KKwlzdHJ1
Y3QgbWFwbGVfbWV0YWRhdGEgKm1ldGEgPSBtYV9tZXRhKG1uLCBtdCk7DQorDQorCW1ldGEtPmdh
cCA9IG9mZnNldDsNCit9DQorDQorLyoNCisgKiBtYXRfYWRkKCkgLSBBZGQgYSBAZGVhZF9lbm9k
ZSB0byB0aGUgbWFfdG9waWFyeSBvZiBhIGxpc3Qgb2YgZGVhZCBub2Rlcy4NCisgKiBAbWF0IC0g
dGhlIG1hX3RvcGlhcnksIGEgbGlua2VkIGxpc3Qgb2YgZGVhZCBub2Rlcy4NCisgKiBAZGVhZF9l
bm9kZSAtIHRoZSBub2RlIHRvIGJlIG1hcmtlZCBhcyBkZWFkIGFuZCBhZGRlZCB0byB0aGUgdGFp
bCBvZiB0aGUgbGlzdA0KKyAqDQorICogQWRkIHRoZSBAZGVhZF9lbm9kZSB0byB0aGUgbGlua2Vk
IGxpc3QgaW4gQG1hdC4NCisgKi8NCitzdGF0aWMgaW5saW5lIHZvaWQgbWF0X2FkZChzdHJ1Y3Qg
bWFfdG9waWFyeSAqbWF0LA0KKwkJCSAgIHN0cnVjdCBtYXBsZV9lbm9kZSAqZGVhZF9lbm9kZSkN
Cit7DQorCW10ZV9zZXRfbm9kZV9kZWFkKGRlYWRfZW5vZGUpOw0KKwltdGVfdG9fbWF0KGRlYWRf
ZW5vZGUpLT5uZXh0ID0gTlVMTDsNCisJaWYgKCFtYXQtPnRhaWwpIHsNCisJCW1hdC0+dGFpbCA9
IG1hdC0+aGVhZCA9IGRlYWRfZW5vZGU7DQorCQlyZXR1cm47DQorCX0NCisNCisJbXRlX3RvX21h
dChtYXQtPnRhaWwpLT5uZXh0ID0gZGVhZF9lbm9kZTsNCisJbWF0LT50YWlsID0gZGVhZF9lbm9k
ZTsNCit9DQorDQorc3RhdGljIHZvaWQgbXRlX2Rlc3Ryb3lfd2FsayhzdHJ1Y3QgbWFwbGVfZW5v
ZGUgKiwgc3RydWN0IG1hcGxlX3RyZWUgKik7DQorc3RhdGljIGlubGluZSB2b2lkIG1hc19mcmVl
KHN0cnVjdCBtYV9zdGF0ZSAqbWFzLCBzdHJ1Y3QgbWFwbGVfZW5vZGUgKnVzZWQpOw0KKw0KKy8q
DQorICogbWFzX21hdF9mcmVlKCkgLSBGcmVlIGFsbCBub2RlcyBpbiBhIGRlYWQgbGlzdC4NCisg
KiBAbWFzIC0gdGhlIG1hcGxlIHN0YXRlDQorICogQG1hdCAtIHRoZSBtYV90b3BpYXJ5IGxpbmtl
ZCBsaXN0IG9mIGRlYWQgbm9kZXMgdG8gZnJlZS4NCisgKg0KKyAqIEZyZWUgd2FsayBhIGRlYWQg
bGlzdC4NCisgKi8NCitzdGF0aWMgdm9pZCBtYXNfbWF0X2ZyZWUoc3RydWN0IG1hX3N0YXRlICpt
YXMsIHN0cnVjdCBtYV90b3BpYXJ5ICptYXQpDQorew0KKwlzdHJ1Y3QgbWFwbGVfZW5vZGUgKm5l
eHQ7DQorDQorCXdoaWxlIChtYXQtPmhlYWQpIHsNCisJCW5leHQgPSBtdGVfdG9fbWF0KG1hdC0+
aGVhZCktPm5leHQ7DQorCQltYXNfZnJlZShtYXMsIG1hdC0+aGVhZCk7DQorCQltYXQtPmhlYWQg
PSBuZXh0Ow0KKwl9DQorfQ0KKw0KKy8qDQorICogbWFzX21hdF9kZXN0cm95KCkgLSBGcmVlIGFs
bCBub2RlcyBhbmQgc3VidHJlZXMgaW4gYSBkZWFkIGxpc3QuDQorICogQG1hcyAtIHRoZSBtYXBs
ZSBzdGF0ZQ0KKyAqIEBtYXQgLSB0aGUgbWFfdG9waWFyeSBsaW5rZWQgbGlzdCBvZiBkZWFkIG5v
ZGVzIHRvIGZyZWUuDQorICoNCisgKiBEZXN0cm95IHdhbGsgYSBkZWFkIGxpc3QuDQorICovDQor
c3RhdGljIHZvaWQgbWFzX21hdF9kZXN0cm95KHN0cnVjdCBtYV9zdGF0ZSAqbWFzLCBzdHJ1Y3Qg
bWFfdG9waWFyeSAqbWF0KQ0KK3sNCisJc3RydWN0IG1hcGxlX2Vub2RlICpuZXh0Ow0KKw0KKwl3
aGlsZSAobWF0LT5oZWFkKSB7DQorCQluZXh0ID0gbXRlX3RvX21hdChtYXQtPmhlYWQpLT5uZXh0
Ow0KKwkJbXRlX2Rlc3Ryb3lfd2FsayhtYXQtPmhlYWQsIG1hdC0+bXRyZWUpOw0KKwkJbWF0LT5o
ZWFkID0gbmV4dDsNCisJfQ0KK30NCisvKg0KKyAqIG1hc19kZXNjZW5kKCkgLSBEZXNjZW5kIGlu
dG8gdGhlIHNsb3Qgc3RvcmVkIGluIHRoZSBtYV9zdGF0ZS4NCisgKiBAbWFzIC0gdGhlIG1hcGxl
IHN0YXRlLg0KKyAqDQorICogTm90ZTogTm90IFJDVSBzYWZlLCBvbmx5IHVzZSBpbiB3cml0ZSBz
aWRlIG9yIGRlYnVnIGNvZGUuDQorICovDQorc3RhdGljIGlubGluZSB2b2lkIG1hc19kZXNjZW5k
KHN0cnVjdCBtYV9zdGF0ZSAqbWFzKQ0KK3sNCisJZW51bSBtYXBsZV90eXBlIHR5cGU7DQorCXVu
c2lnbmVkIGxvbmcgKnBpdm90czsNCisJc3RydWN0IG1hcGxlX25vZGUgKm5vZGU7DQorCXZvaWQg
X19yY3UgKipzbG90czsNCisNCisJbm9kZSA9IG1hc19tbihtYXMpOw0KKwl0eXBlID0gbXRlX25v
ZGVfdHlwZShtYXMtPm5vZGUpOw0KKwlwaXZvdHMgPSBtYV9waXZvdHMobm9kZSwgdHlwZSk7DQor
CXNsb3RzID0gbWFfc2xvdHMobm9kZSwgdHlwZSk7DQorDQorCWlmIChtYXMtPm9mZnNldCkNCisJ
CW1hcy0+bWluID0gcGl2b3RzW21hcy0+b2Zmc2V0IC0gMV0gKyAxOw0KKwltYXMtPm1heCA9IG1h
c19zYWZlX3Bpdm90KG1hcywgcGl2b3RzLCBtYXMtPm9mZnNldCwgdHlwZSk7DQorCW1hcy0+bm9k
ZSA9IG1hc19zbG90KG1hcywgc2xvdHMsIG1hcy0+b2Zmc2V0KTsNCit9DQorDQorLyoNCisgKiBt
dGVfc2V0X2dhcCgpIC0gU2V0IGEgbWFwbGUgbm9kZSBnYXAuDQorICogQG1uOiBUaGUgZW5jb2Rl
ZCBtYXBsZSBub2RlDQorICogQGdhcDogVGhlIG9mZnNldCBvZiB0aGUgZ2FwIHRvIHNldA0KKyAq
IEB2YWw6IFRoZSBnYXAgdmFsdWUNCisgKi8NCitzdGF0aWMgaW5saW5lIHZvaWQgbXRlX3NldF9n
YXAoY29uc3Qgc3RydWN0IG1hcGxlX2Vub2RlICptbiwNCisJCQkJIHVuc2lnbmVkIGNoYXIgZ2Fw
LCB1bnNpZ25lZCBsb25nIHZhbCkNCit7DQorCXN3aXRjaCAobXRlX25vZGVfdHlwZShtbikpIHsN
CisJZGVmYXVsdDoNCisJCWJyZWFrOw0KKwljYXNlIG1hcGxlX2FyYW5nZV82NDoNCisJCW10ZV90
b19ub2RlKG1uKS0+bWE2NC5nYXBbZ2FwXSA9IHZhbDsNCisJCWJyZWFrOw0KKwl9DQorfQ0KKw0K
Ky8qDQorICogbWFzX2FzY2VuZCgpIC0gV2FsayB1cCBhIGxldmVsIG9mIHRoZSB0cmVlLg0KKyAq
IEBtYXM6IFRoZSBtYXBsZSBzdGF0ZQ0KKyAqDQorICogU2V0cyB0aGUgQG1hcy0+bWF4IGFuZCBA
bWFzLT5taW4gdG8gdGhlIGNvcnJlY3QgdmFsdWVzIHdoZW4gd2Fsa2luZyB1cC4gIFRoaXMNCisg
KiBtYXkgY2F1c2Ugc2V2ZXJhbCBsZXZlbHMgb2Ygd2Fsa2luZyB1cCB0byBmaW5kIHRoZSBjb3Jy
ZWN0IG1pbiBhbmQgbWF4Lg0KKyAqIE1heSBmaW5kIGEgZGVhZCBub2RlIHdoaWNoIHdpbGwgY2F1
c2UgYSBwcmVtYXR1cmUgcmV0dXJuLg0KKyAqIFJldHVybjogMSBvbiBkZWFkIG5vZGUsIDAgb3Ro
ZXJ3aXNlDQorICovDQorc3RhdGljIGludCBtYXNfYXNjZW5kKHN0cnVjdCBtYV9zdGF0ZSAqbWFz
KQ0KK3sNCisJc3RydWN0IG1hcGxlX2Vub2RlICpwX2Vub2RlOyAvKiBwYXJlbnQgZW5vZGUuICov
DQorCXN0cnVjdCBtYXBsZV9lbm9kZSAqYV9lbm9kZTsgLyogYW5jZXN0b3IgZW5vZGUuICovDQor
CXN0cnVjdCBtYXBsZV9ub2RlICphX25vZGU7IC8qIGFuY2VzdG9yIG5vZGUuICovDQorCXN0cnVj
dCBtYXBsZV9ub2RlICpwX25vZGU7IC8qIHBhcmVudCBub2RlLiAqLw0KKwl1bnNpZ25lZCBjaGFy
IGFfc2xvdDsNCisJZW51bSBtYXBsZV90eXBlIGFfdHlwZTsNCisJdW5zaWduZWQgbG9uZyBtaW4s
IG1heDsNCisJdW5zaWduZWQgbG9uZyAqcGl2b3RzOw0KKwl1bnNpZ25lZCBjaGFyIG9mZnNldDsN
CisJYm9vbCBzZXRfbWF4ID0gZmFsc2UsIHNldF9taW4gPSBmYWxzZTsNCisNCisJYV9ub2RlID0g
bWFzX21uKG1hcyk7DQorCWlmIChtYV9pc19yb290KGFfbm9kZSkpIHsNCisJCW1hcy0+b2Zmc2V0
ID0gMDsNCisJCXJldHVybiAwOw0KKwl9DQorDQorCXBfbm9kZSA9IG10ZV9wYXJlbnQobWFzLT5u
b2RlKTsNCisJaWYgKHVubGlrZWx5KGFfbm9kZSA9PSBwX25vZGUpKQ0KKwkJcmV0dXJuIDE7DQor
CWFfdHlwZSA9IG1hc19wYXJlbnRfZW51bShtYXMsIG1hcy0+bm9kZSk7DQorCW9mZnNldCA9IG10
ZV9wYXJlbnRfc2xvdChtYXMtPm5vZGUpOw0KKwlhX2Vub2RlID0gbXRfbWtfbm9kZShwX25vZGUs
IGFfdHlwZSk7DQorDQorCS8qIENoZWNrIHRvIG1ha2Ugc3VyZSBhbGwgcGFyZW50IGluZm9ybWF0
aW9uIGlzIHN0aWxsIGFjY3VyYXRlICovDQorCWlmIChwX25vZGUgIT0gbXRlX3BhcmVudChtYXMt
Pm5vZGUpKQ0KKwkJcmV0dXJuIDE7DQorDQorCW1hcy0+bm9kZSA9IGFfZW5vZGU7DQorCW1hcy0+
b2Zmc2V0ID0gb2Zmc2V0Ow0KKw0KKwlpZiAobXRlX2lzX3Jvb3QoYV9lbm9kZSkpIHsNCisJCW1h
cy0+bWF4ID0gVUxPTkdfTUFYOw0KKwkJbWFzLT5taW4gPSAwOw0KKwkJcmV0dXJuIDA7DQorCX0N
CisNCisJbWluID0gMDsNCisJbWF4ID0gVUxPTkdfTUFYOw0KKwlkbyB7DQorCQlwX2Vub2RlID0g
YV9lbm9kZTsNCisJCWFfdHlwZSA9IG1hc19wYXJlbnRfZW51bShtYXMsIHBfZW5vZGUpOw0KKwkJ
YV9ub2RlID0gbXRlX3BhcmVudChwX2Vub2RlKTsNCisJCWFfc2xvdCA9IG10ZV9wYXJlbnRfc2xv
dChwX2Vub2RlKTsNCisJCXBpdm90cyA9IG1hX3Bpdm90cyhhX25vZGUsIGFfdHlwZSk7DQorCQlh
X2Vub2RlID0gbXRfbWtfbm9kZShhX25vZGUsIGFfdHlwZSk7DQorDQorCQlpZiAoIXNldF9taW4g
JiYgYV9zbG90KSB7DQorCQkJc2V0X21pbiA9IHRydWU7DQorCQkJbWluID0gcGl2b3RzW2Ffc2xv
dCAtIDFdICsgMTsNCisJCX0NCisNCisJCWlmICghc2V0X21heCAmJiBhX3Nsb3QgPCBtdF9waXZv
dHNbYV90eXBlXSkgew0KKwkJCXNldF9tYXggPSB0cnVlOw0KKwkJCW1heCA9IHBpdm90c1thX3Ns
b3RdOw0KKwkJfQ0KKw0KKwkJaWYgKHVubGlrZWx5KG1hX2RlYWRfbm9kZShhX25vZGUpKSkNCisJ
CQlyZXR1cm4gMTsNCisNCisJCWlmICh1bmxpa2VseShtYV9pc19yb290KGFfbm9kZSkpKQ0KKwkJ
CWJyZWFrOw0KKw0KKwl9IHdoaWxlICghc2V0X21pbiB8fCAhc2V0X21heCk7DQorDQorCW1hcy0+
bWF4ID0gbWF4Ow0KKwltYXMtPm1pbiA9IG1pbjsNCisJcmV0dXJuIDA7DQorfQ0KKw0KKy8qDQor
ICogbWFzX3BvcF9ub2RlKCkgLSBHZXQgYSBwcmV2aW91c2x5IGFsbG9jYXRlZCBtYXBsZSBub2Rl
IGZyb20gdGhlIG1hcGxlIHN0YXRlLg0KKyAqIEBtYXM6IFRoZSBtYXBsZSBzdGF0ZQ0KKyAqDQor
ICogUmV0dXJuOiBBIHBvaW50ZXIgdG8gYSBtYXBsZSBub2RlLg0KKyAqLw0KK3N0YXRpYyBpbmxp
bmUgc3RydWN0IG1hcGxlX25vZGUgKm1hc19wb3Bfbm9kZShzdHJ1Y3QgbWFfc3RhdGUgKm1hcykN
Cit7DQorCXN0cnVjdCBtYXBsZV9hbGxvYyAqcmV0LCAqbm9kZSA9IG1hcy0+YWxsb2M7DQorCXVu
c2lnbmVkIGxvbmcgdG90YWwgPSBtYXNfYWxsb2NhdGVkKG1hcyk7DQorDQorCS8qIG5vdGhpbmcg
b3IgYSByZXF1ZXN0IHBlbmRpbmcuICovDQorCWlmICh1bmxpa2VseSghdG90YWwpKQ0KKwkJcmV0
dXJuIE5VTEw7DQorDQorCWlmICh0b3RhbCA9PSAxKSB7DQorCQkvKiBzaW5nbGUgYWxsb2NhdGlv
biBpbiB0aGlzIG1hX3N0YXRlICovDQorCQltYXMtPmFsbG9jID0gTlVMTDsNCisJCXJldCA9IG5v
ZGU7DQorCQlnb3RvIHNpbmdsZV9ub2RlOw0KKwl9DQorDQorCWlmICghbm9kZS0+bm9kZV9jb3Vu
dCkgew0KKwkJLyogU2luZ2xlIGFsbG9jYXRpb24gaW4gdGhpcyBub2RlLiAqLw0KKwkJbWFzLT5h
bGxvYyA9IG5vZGUtPnNsb3RbMF07DQorCQlub2RlLT5zbG90WzBdID0gTlVMTDsNCisJCW1hcy0+
YWxsb2MtPnRvdGFsID0gbm9kZS0+dG90YWwgLSAxOw0KKwkJcmV0ID0gbm9kZTsNCisJCWdvdG8g
bmV3X2hlYWQ7DQorCX0NCisNCisJbm9kZS0+dG90YWwtLTsNCisJcmV0ID0gbm9kZS0+c2xvdFtu
b2RlLT5ub2RlX2NvdW50XTsNCisJbm9kZS0+c2xvdFtub2RlLT5ub2RlX2NvdW50LS1dID0gTlVM
TDsNCisNCitzaW5nbGVfbm9kZToNCituZXdfaGVhZDoNCisJcmV0LT50b3RhbCA9IDA7DQorCXJl
dC0+bm9kZV9jb3VudCA9IDA7DQorCWlmIChyZXQtPnJlcXVlc3RfY291bnQpIHsNCisJCW1hc19z
ZXRfYWxsb2NfcmVxKG1hcywgcmV0LT5yZXF1ZXN0X2NvdW50ICsgMSk7DQorCQlyZXQtPnJlcXVl
c3RfY291bnQgPSAwOw0KKwl9DQorCXJldHVybiAoc3RydWN0IG1hcGxlX25vZGUgKilyZXQ7DQor
fQ0KKw0KKy8qDQorICogbWFzX3B1c2hfbm9kZSgpIC0gUHVzaCBhIG5vZGUgYmFjayBvbiB0aGUg
bWFwbGUgc3RhdGUgYWxsb2NhdGlvbi4NCisgKiBAbWFzOiBUaGUgbWFwbGUgc3RhdGUNCisgKiBA
dXNlZDogVGhlIHVzZWQgZW5jb2RlZCBtYXBsZSBub2RlDQorICoNCisgKiBTdG9yZXMgdGhlIG1h
cGxlIG5vZGUgYmFjayBpbnRvIEBtYXMtPmFsbG9jIGZvciByZXVzZS4gIFVwZGF0ZXMgYWxsb2Nh
dGVkIGFuZA0KKyAqIHJlcXVlc3RlZCBub2RlIGNvdW50IGFzIG5lY2Vzc2FyeS4NCisgKi8NCitz
dGF0aWMgaW5saW5lIHZvaWQgbWFzX3B1c2hfbm9kZShzdHJ1Y3QgbWFfc3RhdGUgKm1hcywgc3Ry
dWN0IG1hcGxlX2Vub2RlICp1c2VkKQ0KK3sNCisJc3RydWN0IG1hcGxlX2FsbG9jICpyZXVzZSA9
IChzdHJ1Y3QgbWFwbGVfYWxsb2MgKiltdGVfdG9fbm9kZSh1c2VkKTsNCisJc3RydWN0IG1hcGxl
X2FsbG9jICpoZWFkID0gbWFzLT5hbGxvYzsNCisJdW5zaWduZWQgbG9uZyBjb3VudDsNCisJdW5z
aWduZWQgaW50IHJlcXVlc3RlZCA9IG1hc19hbGxvY19yZXEobWFzKTsNCisNCisJbWVtc2V0KHJl
dXNlLCAwLCBzaXplb2YoKnJldXNlKSk7DQorCWNvdW50ID0gbWFzX2FsbG9jYXRlZChtYXMpOw0K
Kw0KKwlpZiAoY291bnQgJiYgKGhlYWQtPm5vZGVfY291bnQgPCBNQVBMRV9BTExPQ19TTE9UUyAt
IDEpKSB7DQorCQlpZiAoaGVhZC0+c2xvdFswXSkNCisJCQloZWFkLT5ub2RlX2NvdW50Kys7DQor
CQloZWFkLT5zbG90W2hlYWQtPm5vZGVfY291bnRdID0gcmV1c2U7DQorCQloZWFkLT50b3RhbCsr
Ow0KKwkJZ290byBkb25lOw0KKwl9DQorDQorCXJldXNlLT50b3RhbCA9IDE7DQorCWlmICgoaGVh
ZCkgJiYgISgodW5zaWduZWQgbG9uZyloZWFkICYgMHgxKSkgew0KKwkJaGVhZC0+cmVxdWVzdF9j
b3VudCA9IDA7DQorCQlyZXVzZS0+c2xvdFswXSA9IGhlYWQ7DQorCQlyZXVzZS0+dG90YWwgKz0g
aGVhZC0+dG90YWw7DQorCX0NCisNCisJbWFzLT5hbGxvYyA9IHJldXNlOw0KK2RvbmU6DQorCWlm
IChyZXF1ZXN0ZWQgPiAxKQ0KKwkJbWFzX3NldF9hbGxvY19yZXEobWFzLCByZXF1ZXN0ZWQgLSAx
KTsNCit9DQorDQorLyoNCisgKiBtYXNfYWxsb2Nfbm9kZXMoKSAtIEFsbG9jYXRlIG5vZGVzIGlu
dG8gYSBtYXBsZSBzdGF0ZQ0KKyAqIEBtYXM6IFRoZSBtYXBsZSBzdGF0ZQ0KKyAqIEBnZnA6IFRo
ZSBHRlAgRmxhZ3MNCisgKi8NCitzdGF0aWMgaW5saW5lIHZvaWQgbWFzX2FsbG9jX25vZGVzKHN0
cnVjdCBtYV9zdGF0ZSAqbWFzLCBnZnBfdCBnZnApDQorew0KKwlzdHJ1Y3QgbWFwbGVfYWxsb2Mg
Km5vZGU7DQorCXN0cnVjdCBtYXBsZV9hbGxvYyAqKm5vZGVwID0gJm1hcy0+YWxsb2M7DQorCXVu
c2lnbmVkIGxvbmcgYWxsb2NhdGVkID0gbWFzX2FsbG9jYXRlZChtYXMpOw0KKwl1bnNpZ25lZCBs
b25nIHN1Y2Nlc3MgPSBhbGxvY2F0ZWQ7DQorCXVuc2lnbmVkIGludCByZXF1ZXN0ZWQgPSBtYXNf
YWxsb2NfcmVxKG1hcyk7DQorCXVuc2lnbmVkIGludCBjb3VudDsNCisNCisJaWYgKCFyZXF1ZXN0
ZWQpDQorCQlyZXR1cm47DQorDQorCW1hc19zZXRfYWxsb2NfcmVxKG1hcywgMCk7DQorCWlmICgh
YWxsb2NhdGVkIHx8IG1hcy0+YWxsb2MtPm5vZGVfY291bnQgPT0gTUFQTEVfQUxMT0NfU0xPVFMg
LSAxKSB7DQorCQlub2RlID0gKHN0cnVjdCBtYXBsZV9hbGxvYyAqKW10X2FsbG9jX29uZShnZnAp
Ow0KKwkJaWYgKCFub2RlKQ0KKwkJCWdvdG8gbm9tZW07DQorDQorCQlpZiAoYWxsb2NhdGVkKQ0K
KwkJCW5vZGUtPnNsb3RbMF0gPSBtYXMtPmFsbG9jOw0KKw0KKwkJc3VjY2VzcysrOw0KKwkJbWFz
LT5hbGxvYyA9IG5vZGU7DQorCQlyZXF1ZXN0ZWQtLTsNCisJfQ0KKw0KKwlub2RlID0gbWFzLT5h
bGxvYzsNCisJd2hpbGUgKHJlcXVlc3RlZCkgew0KKwkJdm9pZCAqKnNsb3RzID0gKHZvaWQgKiop
Jm5vZGUtPnNsb3Q7DQorCQl1bnNpZ25lZCBpbnQgbWF4X3JlcSA9IE1BUExFX05PREVfU0xPVFMg
LSAxOw0KKw0KKwkJaWYgKG5vZGUtPnNsb3RbMF0pIHsNCisJCQl1bnNpZ25lZCBpbnQgb2Zmc2V0
ID0gbm9kZS0+bm9kZV9jb3VudCArIDE7DQorDQorCQkJc2xvdHMgPSAodm9pZCAqKikmbm9kZS0+
c2xvdFtvZmZzZXRdOw0KKwkJCW1heF9yZXEgLT0gb2Zmc2V0Ow0KKwkJfQ0KKw0KKwkJY291bnQg
PSBtdF9hbGxvY19idWxrKGdmcCwgbWluKHJlcXVlc3RlZCwgbWF4X3JlcSksDQorCQkJCSAgICAg
IHNsb3RzKTsNCisJCWlmICghY291bnQpDQorCQkJZ290byBub21lbTsNCisNCisJCW5vZGUtPm5v
ZGVfY291bnQgKz0gY291bnQ7DQorCQkvKiB6ZXJvIGluZGV4ZWQuICovDQorCQlpZiAoc2xvdHMg
PT0gKHZvaWQgKiopJm5vZGUtPnNsb3QpDQorCQkJbm9kZS0+bm9kZV9jb3VudC0tOw0KKw0KKwkJ
c3VjY2VzcyArPSBjb3VudDsNCisJCW5vZGVwID0gJm5vZGUtPnNsb3RbMF07DQorCQlub2RlID0g
Km5vZGVwOw0KKwkJcmVxdWVzdGVkIC09IGNvdW50Ow0KKwl9DQorCW1hcy0+YWxsb2MtPnRvdGFs
ID0gc3VjY2VzczsNCisJcmV0dXJuOw0KK25vbWVtOg0KKwltYXNfc2V0X2FsbG9jX3JlcShtYXMs
IHJlcXVlc3RlZCk7DQorCWlmIChtYXMtPmFsbG9jICYmICEoKCh1bnNpZ25lZCBsb25nKW1hcy0+
YWxsb2MgJiAweDEpKSkNCisJCW1hcy0+YWxsb2MtPnRvdGFsID0gc3VjY2VzczsNCisJbWFzX3Nl
dF9lcnIobWFzLCAtRU5PTUVNKTsNCisJcmV0dXJuOw0KKw0KK30NCisNCisvKg0KKyAqIG1hc19m
cmVlKCkgLSBGcmVlIGFuIGVuY29kZWQgbWFwbGUgbm9kZQ0KKyAqIEBtYXM6IFRoZSBtYXBsZSBz
dGF0ZQ0KKyAqIEB1c2VkOiBUaGUgZW5jb2RlZCBtYXBsZSBub2RlIHRvIGZyZWUuDQorICoNCisg
KiBVc2VzIHJjdSBmcmVlIGlmIG5lY2Vzc2FyeSwgcHVzaGVzIEB1c2VkIGJhY2sgb24gdGhlIG1h
cGxlIHN0YXRlIGFsbG9jYXRpb25zDQorICogb3RoZXJ3aXNlLg0KKyAqLw0KK3N0YXRpYyBpbmxp
bmUgdm9pZCBtYXNfZnJlZShzdHJ1Y3QgbWFfc3RhdGUgKm1hcywgc3RydWN0IG1hcGxlX2Vub2Rl
ICp1c2VkKQ0KK3sNCisJaWYgKG10X2luX3JjdShtYXMtPnRyZWUpKQ0KKwkJbWFfZnJlZV9yY3Uo
bXRlX3RvX25vZGUodXNlZCkpOw0KKwllbHNlDQorCQltYXNfcHVzaF9ub2RlKG1hcywgdXNlZCk7
DQorfQ0KKw0KKy8qDQorICogbWFzX25vZGVfY291bnQoKSAtIENoZWNrIGlmIGVub3VnaCBub2Rl
cyBhcmUgYWxsb2NhdGVkIGFuZCByZXF1ZXN0IG1vcmUgaWYNCisgKiB0aGVyZSBpcyBub3QgZW5v
dWdoIG5vZGVzLg0KKyAqIEBtYXM6IFRoZSBtYXBsZSBzdGF0ZQ0KKyAqIEBjb3VudDogVGhlIG51
bWJlciBvZiBub2RlcyBuZWVkZWQNCisgKi8NCitzdGF0aWMgdm9pZCBtYXNfbm9kZV9jb3VudChz
dHJ1Y3QgbWFfc3RhdGUgKm1hcywgaW50IGNvdW50KQ0KK3sNCisJdW5zaWduZWQgbG9uZyBhbGxv
Y2F0ZWQgPSBtYXNfYWxsb2NhdGVkKG1hcyk7DQorDQorCWlmIChhbGxvY2F0ZWQgPCBjb3VudCkg
ew0KKwkJbWFzX3NldF9hbGxvY19yZXEobWFzLCBjb3VudCAtIGFsbG9jYXRlZCk7DQorCQltYXNf
YWxsb2Nfbm9kZXMobWFzLCBHRlBfTk9XQUlUIHwgX19HRlBfTk9XQVJOKTsNCisJfQ0KK30NCisN
CisvKg0KKyAqIG1hc19zdGFydCgpIC0gU2V0cyB1cCBtYXBsZSBzdGF0ZSBmb3Igb3BlcmF0aW9u
cy4NCisgKiBAbWFzOiBUaGUgbWFwbGUgc3RhdGUuDQorICoNCisgKiBJZiBtYXMtPm5vZGUgPT0g
TUFTX1NUQVJULCB0aGVuIHNldCB0aGUgbWluLCBtYXgsIGRlcHRoLCBhbmQgb2Zmc2V0IHRvDQor
ICogZGVmYXVsdHMuDQorICoNCisgKiBSZXR1cm46DQorICogLSBJZiBtYXMtPm5vZGUgaXMgYW4g
ZXJyb3Igb3Igbm90IE1BU19TVEFSVCwgcmV0dXJuIE5VTEwuDQorICogLSBJZiBpdCdzIGFuIGVt
cHR5IHRyZWU6ICAgICBOVUxMICYgbWFzLT5ub2RlID09IE1BU19OT05FDQorICogLSBJZiBpdCdz
IGEgc2luZ2xlIGVudHJ5OiAgICBUaGUgZW50cnkgJiBtYXMtPm5vZGUgPT0gTUFTX1JPT1QNCisg
KiAtIElmIGl0J3MgYSB0cmVlOiAgICAgICAgICAgIE5VTEwgJiBtYXMtPm5vZGUgPT0gc2FmZSBy
b290IG5vZGUuDQorICovDQorc3RhdGljIGlubGluZSBzdHJ1Y3QgbWFwbGVfZW5vZGUgKm1hc19z
dGFydChzdHJ1Y3QgbWFfc3RhdGUgKm1hcykNCit7DQorCWlmIChsaWtlbHkobWFzX2lzX3N0YXJ0
KG1hcykpKSB7DQorCQlzdHJ1Y3QgbWFwbGVfZW5vZGUgKnJvb3Q7DQorDQorCQltYXMtPm5vZGUg
PSBNQVNfTk9ORTsNCisJCW1hcy0+bWluID0gMDsNCisJCW1hcy0+bWF4ID0gVUxPTkdfTUFYOw0K
KwkJbWFzLT5kZXB0aCA9IDA7DQorCQltYXMtPm9mZnNldCA9IDA7DQorDQorCQlyb290ID0gbWFz
X3Jvb3QobWFzKTsNCisJCS8qIFRyZWUgd2l0aCBub2RlcyAqLw0KKwkJaWYgKGxpa2VseSh4YV9p
c19ub2RlKHJvb3QpKSkgew0KKwkJCW1hcy0+bm9kZSA9IG10ZV9zYWZlX3Jvb3Qocm9vdCk7DQor
CQkJcmV0dXJuIE5VTEw7DQorCQl9DQorDQorCQkvKiBlbXB0eSB0cmVlICovDQorCQlpZiAodW5s
aWtlbHkoIXJvb3QpKSB7DQorCQkJbWFzLT5vZmZzZXQgPSBNQVBMRV9OT0RFX1NMT1RTOw0KKwkJ
CXJldHVybiBOVUxMOw0KKwkJfQ0KKw0KKwkJLyogU2luZ2xlIGVudHJ5IHRyZWUgKi8NCisJCW1h
cy0+bm9kZSA9IE1BU19ST09UOw0KKwkJbWFzLT5vZmZzZXQgPSBNQVBMRV9OT0RFX1NMT1RTOw0K
Kw0KKwkJLyogU2luZ2xlIGVudHJ5IHRyZWUuICovDQorCQlpZiAobWFzLT5pbmRleCA+IDApDQor
CQkJcmV0dXJuIE5VTEw7DQorDQorCQlyZXR1cm4gcm9vdDsNCisJfQ0KKw0KKwlyZXR1cm4gTlVM
TDsNCit9DQorDQorLyoNCisgKiBtYV9kYXRhX2VuZCgpIC0gRmluZCB0aGUgZW5kIG9mIHRoZSBk
YXRhIGluIGEgbm9kZS4NCisgKiBAbm9kZTogVGhlIG1hcGxlIG5vZGUNCisgKiBAdHlwZTogVGhl
IG1hcGxlIG5vZGUgdHlwZQ0KKyAqIEBwaXZvdHM6IFRoZSBhcnJheSBvZiBwaXZvdHMgaW4gdGhl
IG5vZGUNCisgKiBAbWF4OiBUaGUgbWF4aW11bSB2YWx1ZSBpbiB0aGUgbm9kZQ0KKyAqDQorICog
VXNlcyBtZXRhZGF0YSB0byBmaW5kIHRoZSBlbmQgb2YgdGhlIGRhdGEgd2hlbiBwb3NzaWJsZS4N
CisgKiBSZXR1cm46IFRoZSB6ZXJvIGluZGV4ZWQgbGFzdCBzbG90IHdpdGggZGF0YSAobWF5IGJl
IG51bGwpLg0KKyAqLw0KK3N0YXRpYyBpbmxpbmUgdW5zaWduZWQgY2hhciBtYV9kYXRhX2VuZChz
dHJ1Y3QgbWFwbGVfbm9kZSAqbm9kZSwNCisJCQkJCWVudW0gbWFwbGVfdHlwZSB0eXBlLA0KKwkJ
CQkJdW5zaWduZWQgbG9uZyAqcGl2b3RzLA0KKwkJCQkJdW5zaWduZWQgbG9uZyBtYXgpDQorew0K
Kwl1bnNpZ25lZCBjaGFyIG9mZnNldDsNCisNCisJaWYgKHR5cGUgPT0gbWFwbGVfYXJhbmdlXzY0
KQ0KKwkJcmV0dXJuIG1hX21ldGFfZW5kKG5vZGUsIHR5cGUpOw0KKw0KKwlvZmZzZXQgPSBtdF9w
aXZvdHNbdHlwZV0gLSAxOw0KKwlpZiAobGlrZWx5KCFwaXZvdHNbb2Zmc2V0XSkpDQorCQlyZXR1
cm4gbWFfbWV0YV9lbmQobm9kZSwgdHlwZSk7DQorDQorCWlmIChsaWtlbHkocGl2b3RzW29mZnNl
dF0gPT0gbWF4KSkNCisJCXJldHVybiBvZmZzZXQ7DQorDQorCXJldHVybiBtdF9waXZvdHNbdHlw
ZV07DQorfQ0KKw0KKy8qDQorICogbWFzX2RhdGFfZW5kKCkgLSBGaW5kIHRoZSBlbmQgb2YgdGhl
IGRhdGEgKHNsb3QpLg0KKyAqIEBtYXM6IHRoZSBtYXBsZSBzdGF0ZQ0KKyAqIEB0eXBlOiB0aGUg
dHlwZSBvZiBtYXBsZSBub2RlDQorICoNCisgKiBUaGlzIG1ldGhvZCBpcyBvcHRpbWl6ZWQgdG8g
Y2hlY2sgdGhlIG1ldGFkYXRhIG9mIGEgbm9kZSBpZiB0aGUgbm9kZSB0eXBlDQorICogc3VwcG9y
dHMgZGF0YSBlbmQgbWV0YWRhdGEuDQorICoNCisgKiBSZXR1cm46IFRoZSB6ZXJvIGluZGV4ZWQg
bGFzdCBzbG90IHdpdGggZGF0YSAobWF5IGJlIG51bGwpLg0KKyAqLw0KK3N0YXRpYyBpbmxpbmUg
dW5zaWduZWQgY2hhciBtYXNfZGF0YV9lbmQoc3RydWN0IG1hX3N0YXRlICptYXMpDQorew0KKwll
bnVtIG1hcGxlX3R5cGUgdHlwZTsNCisJc3RydWN0IG1hcGxlX25vZGUgKm5vZGU7DQorCXVuc2ln
bmVkIGNoYXIgb2Zmc2V0Ow0KKwl1bnNpZ25lZCBsb25nICpwaXZvdHM7DQorDQorCXR5cGUgPSBt
dGVfbm9kZV90eXBlKG1hcy0+bm9kZSk7DQorCW5vZGUgPSBtYXNfbW4obWFzKTsNCisJaWYgKHR5
cGUgPT0gbWFwbGVfYXJhbmdlXzY0KQ0KKwkJcmV0dXJuIG1hX21ldGFfZW5kKG5vZGUsIHR5cGUp
Ow0KKw0KKwlwaXZvdHMgPSBtYV9waXZvdHMobm9kZSwgdHlwZSk7DQorCW9mZnNldCA9IG10X3Bp
dm90c1t0eXBlXSAtIDE7DQorCWlmIChsaWtlbHkoIXBpdm90c1tvZmZzZXRdKSkNCisJCXJldHVy
biBtYV9tZXRhX2VuZChub2RlLCB0eXBlKTsNCisNCisJaWYgKGxpa2VseShwaXZvdHNbb2Zmc2V0
XSA9PSBtYXMtPm1heCkpDQorCQlyZXR1cm4gb2Zmc2V0Ow0KKw0KKwlyZXR1cm4gbXRfcGl2b3Rz
W3R5cGVdOw0KK30NCisNCisvKg0KKyAqIG1hc19sZWFmX21heF9nYXAoKSAtIFJldHVybnMgdGhl
IGxhcmdlc3QgZ2FwIGluIGEgbGVhZiBub2RlDQorICogQG1hcyAtIHRoZSBtYXBsZSBzdGF0ZQ0K
KyAqDQorICogUmV0dXJuOiBUaGUgbWF4aW11bSBnYXAgaW4gdGhlIGxlYWYuDQorICovDQorc3Rh
dGljIHVuc2lnbmVkIGxvbmcgbWFzX2xlYWZfbWF4X2dhcChzdHJ1Y3QgbWFfc3RhdGUgKm1hcykN
Cit7DQorCWVudW0gbWFwbGVfdHlwZSBtdDsNCisJdW5zaWduZWQgbG9uZyBwc3RhcnQsIGdhcCwg
bWF4X2dhcDsNCisJc3RydWN0IG1hcGxlX25vZGUgKm1uOw0KKwl1bnNpZ25lZCBsb25nICpwaXZv
dHM7DQorCXZvaWQgX19yY3UgKipzbG90czsNCisJdW5zaWduZWQgY2hhciBpOw0KKwl1bnNpZ25l
ZCBjaGFyIG1heF9waXY7DQorDQorCW10ID0gbXRlX25vZGVfdHlwZShtYXMtPm5vZGUpOw0KKwlt
biA9IG1hc19tbihtYXMpOw0KKwlzbG90cyA9IG1hX3Nsb3RzKG1uLCBtdCk7DQorCW1heF9nYXAg
PSAwOw0KKwlpZiAodW5saWtlbHkobWFfaXNfZGVuc2UobXQpKSkgew0KKwkJZ2FwID0gMDsNCisJ
CWZvciAoaSA9IDA7IGkgPCBtdF9zbG90c1ttdF07IGkrKykgew0KKwkJCWlmIChzbG90c1tpXSkg
ew0KKwkJCQlpZiAoZ2FwID4gbWF4X2dhcCkNCisJCQkJCW1heF9nYXAgPSBnYXA7DQorCQkJCWdh
cCA9IDA7DQorCQkJfSBlbHNlIHsNCisJCQkJZ2FwKys7DQorCQkJfQ0KKwkJfQ0KKwkJaWYgKGdh
cCA+IG1heF9nYXApDQorCQkJbWF4X2dhcCA9IGdhcDsNCisJCXJldHVybiBtYXhfZ2FwOw0KKwl9
DQorDQorCS8qDQorCSAqIENoZWNrIHRoZSBmaXJzdCBpbXBsaWVkIHBpdm90IG9wdGltaXplcyB0
aGUgbG9vcCBiZWxvdyBhbmQgc2xvdCAxIG1heQ0KKwkgKiBiZSBza2lwcGVkIGlmIHRoZXJlIGlz
IGEgZ2FwIGluIHNsb3QgMC4NCisJICovDQorCXBpdm90cyA9IG1hX3Bpdm90cyhtbiwgbXQpOw0K
KwlpZiAobGlrZWx5KCFzbG90c1swXSkpIHsNCisJCW1heF9nYXAgPSBwaXZvdHNbMF0gLSBtYXMt
Pm1pbiArIDE7DQorCQlpID0gMjsNCisJfSBlbHNlIHsNCisJCWkgPSAxOw0KKwl9DQorDQorCS8q
IHJlZHVjZSBtYXhfcGl2IGFzIHRoZSBzcGVjaWFsIGNhc2UgaXMgY2hlY2tlZCBiZWZvcmUgdGhl
IGxvb3AgKi8NCisJbWF4X3BpdiA9IG1hX2RhdGFfZW5kKG1uLCBtdCwgcGl2b3RzLCBtYXMtPm1h
eCkgLSAxOw0KKwkvKg0KKwkgKiBDaGVjayBlbmQgaW1wbGllZCBwaXZvdCB3aGljaCBjYW4gb25s
eSBiZSBhIGdhcCBvbiB0aGUgcmlnaHQgbW9zdA0KKwkgKiBub2RlLg0KKwkgKi8NCisJaWYgKHVu
bGlrZWx5KG1hcy0+bWF4ID09IFVMT05HX01BWCkgJiYgIXNsb3RzW21heF9waXYgKyAxXSkgew0K
KwkJZ2FwID0gVUxPTkdfTUFYIC0gcGl2b3RzW21heF9waXZdOw0KKwkJaWYgKGdhcCA+IG1heF9n
YXApDQorCQkJbWF4X2dhcCA9IGdhcDsNCisJfQ0KKw0KKwlmb3IgKDsgaSA8PSBtYXhfcGl2OyBp
KyspIHsNCisJCS8qIGRhdGEgPT0gbm8gZ2FwLiAqLw0KKwkJaWYgKGxpa2VseShzbG90c1tpXSkp
DQorCQkJY29udGludWU7DQorDQorCQlwc3RhcnQgPSBwaXZvdHNbaSAtIDFdOw0KKwkJZ2FwID0g
cGl2b3RzW2ldIC0gcHN0YXJ0Ow0KKwkJaWYgKGdhcCA+IG1heF9nYXApDQorCQkJbWF4X2dhcCA9
IGdhcDsNCisNCisJCS8qIFRoZXJlIGNhbm5vdCBiZSB0d28gZ2FwcyBpbiBhIHJvdy4gKi8NCisJ
CWkrKzsNCisJfQ0KKwlyZXR1cm4gbWF4X2dhcDsNCit9DQorDQorLyoNCisgKiBtYV9tYXhfZ2Fw
KCkgLSBHZXQgdGhlIG1heGltdW0gZ2FwIGluIGEgbWFwbGUgbm9kZSAobm9uLWxlYWYpDQorICog
QG5vZGU6IFRoZSBtYXBsZSBub2RlDQorICogQGdhcHM6IFRoZSBwb2ludGVyIHRvIHRoZSBnYXBz
DQorICogQG10OiBUaGUgbWFwbGUgbm9kZSB0eXBlDQorICogQCpvZmY6IFBvaW50ZXIgdG8gc3Rv
cmUgdGhlIG9mZnNldCBsb2NhdGlvbiBvZiB0aGUgZ2FwLg0KKyAqDQorICogVXNlcyB0aGUgbWV0
YWRhdGEgZGF0YSBlbmQgdG8gc2NhbiBiYWNrd2FyZHMgYWNyb3NzIHNldCBnYXBzLg0KKyAqDQor
ICogUmV0dXJuOiBUaGUgbWF4aW11bSBnYXAgdmFsdWUNCisgKi8NCitzdGF0aWMgaW5saW5lIHVu
c2lnbmVkIGxvbmcNCittYV9tYXhfZ2FwKHN0cnVjdCBtYXBsZV9ub2RlICpub2RlLCB1bnNpZ25l
ZCBsb25nICpnYXBzLCBlbnVtIG1hcGxlX3R5cGUgbXQsDQorCSAgICB1bnNpZ25lZCBjaGFyICpv
ZmYpDQorew0KKwl1bnNpZ25lZCBjaGFyIG9mZnNldCwgaTsNCisJdW5zaWduZWQgbG9uZyBtYXhf
Z2FwID0gMDsNCisNCisJaSA9IG9mZnNldCA9IG1hX21ldGFfZW5kKG5vZGUsIG10KTsNCisJZG8g
ew0KKwkJaWYgKGdhcHNbaV0gPiBtYXhfZ2FwKSB7DQorCQkJbWF4X2dhcCA9IGdhcHNbaV07DQor
CQkJb2Zmc2V0ID0gaTsNCisJCX0NCisJfSB3aGlsZSAoaS0tKTsNCisNCisJKm9mZiA9IG9mZnNl
dDsNCisJcmV0dXJuIG1heF9nYXA7DQorfQ0KKw0KKy8qDQorICogbWFzX21heF9nYXAoKSAtIGZp
bmQgdGhlIGxhcmdlc3QgZ2FwIGluIGEgbm9uLWxlYWYgbm9kZSBhbmQgc2V0IHRoZSBzbG90Lg0K
KyAqIEBtYXM6IFRoZSBtYXBsZSBzdGF0ZS4NCisgKg0KKyAqIElmIHRoZSBtZXRhZGF0YSBnYXAg
aXMgc2V0IHRvIE1BUExFX0FSQU5HRTY0X01FVEFfTUFYLCB0aGVyZSBpcyBubyBnYXAuDQorICoN
CisgKiBSZXR1cm46IFRoZSBnYXAgdmFsdWUuDQorICovDQorc3RhdGljIGlubGluZSB1bnNpZ25l
ZCBsb25nIG1hc19tYXhfZ2FwKHN0cnVjdCBtYV9zdGF0ZSAqbWFzKQ0KK3sNCisJdW5zaWduZWQg
bG9uZyAqZ2FwczsNCisJdW5zaWduZWQgY2hhciBvZmZzZXQ7DQorCWVudW0gbWFwbGVfdHlwZSBt
dDsNCisJc3RydWN0IG1hcGxlX25vZGUgKm5vZGU7DQorDQorCW10ID0gbXRlX25vZGVfdHlwZSht
YXMtPm5vZGUpOw0KKwlpZiAobWFfaXNfbGVhZihtdCkpDQorCQlyZXR1cm4gbWFzX2xlYWZfbWF4
X2dhcChtYXMpOw0KKw0KKwlub2RlID0gbWFzX21uKG1hcyk7DQorCW9mZnNldCA9IG1hX21ldGFf
Z2FwKG5vZGUsIG10KTsNCisJaWYgKG9mZnNldCA9PSBNQVBMRV9BUkFOR0U2NF9NRVRBX01BWCkN
CisJCXJldHVybiAwOw0KKw0KKwlnYXBzID0gbWFfZ2Fwcyhub2RlLCBtdCk7DQorCXJldHVybiBn
YXBzW29mZnNldF07DQorfQ0KKw0KKy8qDQorICogbWFzX3BhcmVudF9nYXAoKSAtIFNldCB0aGUg
cGFyZW50IGdhcCBhbmQgYW55IGdhcHMgYWJvdmUsIGFzIG5lZWRlZA0KKyAqIEBtYXM6IFRoZSBt
YXBsZSBzdGF0ZQ0KKyAqIEBvZmZzZXQ6IFRoZSBnYXAgb2Zmc2V0IGluIHRoZSBwYXJlbnQgdG8g
c2V0DQorICogQG5ldzogVGhlIG5ldyBnYXAgdmFsdWUuDQorICoNCisgKiBTZXQgdGhlIHBhcmVu
dCBnYXAgdGhlbiBjb250aW51ZSB0byBzZXQgdGhlIGdhcCB1cHdhcmRzLCB1c2luZyB0aGUgbWV0
YWRhdGENCisgKiBvZiB0aGUgcGFyZW50IHRvIHNlZSBpZiBpdCBpcyBuZWNlc3NhcnkgdG8gY2hl
Y2sgdGhlIG5vZGUgYWJvdmUuDQorICovDQorc3RhdGljIGlubGluZSB2b2lkIG1hc19wYXJlbnRf
Z2FwKHN0cnVjdCBtYV9zdGF0ZSAqbWFzLCB1bnNpZ25lZCBjaGFyIG9mZnNldCwNCisJCXVuc2ln
bmVkIGxvbmcgbmV3KQ0KK3sNCisJdW5zaWduZWQgbG9uZyBtZXRhX2dhcCA9IDA7DQorCXN0cnVj
dCBtYXBsZV9ub2RlICpwbm9kZTsNCisJc3RydWN0IG1hcGxlX2Vub2RlICpwZW5vZGU7DQorCXVu
c2lnbmVkIGxvbmcgKnBnYXBzOw0KKwl1bnNpZ25lZCBjaGFyIG1ldGFfb2Zmc2V0Ow0KKwllbnVt
IG1hcGxlX3R5cGUgcG10Ow0KKw0KKwlwbm9kZSA9IG10ZV9wYXJlbnQobWFzLT5ub2RlKTsNCisJ
cG10ID0gbWFzX3BhcmVudF9lbnVtKG1hcywgbWFzLT5ub2RlKTsNCisJcGVub2RlID0gbXRfbWtf
bm9kZShwbm9kZSwgcG10KTsNCisJcGdhcHMgPSBtYV9nYXBzKHBub2RlLCBwbXQpOw0KKw0KK2Fz
Y2VuZDoNCisJbWV0YV9vZmZzZXQgPSBtYV9tZXRhX2dhcChwbm9kZSwgcG10KTsNCisJaWYgKG1l
dGFfb2Zmc2V0ID09IE1BUExFX0FSQU5HRTY0X01FVEFfTUFYKQ0KKwkJbWV0YV9nYXAgPSAwOw0K
KwllbHNlDQorCQltZXRhX2dhcCA9IHBnYXBzW21ldGFfb2Zmc2V0XTsNCisNCisJcGdhcHNbb2Zm
c2V0XSA9IG5ldzsNCisNCisJaWYgKG1ldGFfZ2FwID09IG5ldykNCisJCXJldHVybjsNCisNCisJ
aWYgKG9mZnNldCAhPSBtZXRhX29mZnNldCkgew0KKwkJaWYgKG1ldGFfZ2FwID4gbmV3KQ0KKwkJ
CXJldHVybjsNCisNCisJCW1hX3NldF9tZXRhX2dhcChwbm9kZSwgcG10LCBvZmZzZXQpOw0KKwl9
IGVsc2UgaWYgKG5ldyA8IG1ldGFfZ2FwKSB7DQorCQltZXRhX29mZnNldCA9IDE1Ow0KKwkJbmV3
ID0gbWFfbWF4X2dhcChwbm9kZSwgcGdhcHMsIHBtdCwgJm1ldGFfb2Zmc2V0KTsNCisJCW1hX3Nl
dF9tZXRhX2dhcChwbm9kZSwgcG10LCBtZXRhX29mZnNldCk7DQorCX0NCisNCisJaWYgKG1hX2lz
X3Jvb3QocG5vZGUpKQ0KKwkJcmV0dXJuOw0KKw0KKwkvKiBHbyB0byB0aGUgcGFyZW50IG5vZGUu
ICovDQorCXBub2RlID0gbXRlX3BhcmVudChwZW5vZGUpOw0KKwlwbXQgPSBtYXNfcGFyZW50X2Vu
dW0obWFzLCBwZW5vZGUpOw0KKwlwZ2FwcyA9IG1hX2dhcHMocG5vZGUsIHBtdCk7DQorCW9mZnNl
dCA9IG10ZV9wYXJlbnRfc2xvdChwZW5vZGUpOw0KKwlwZW5vZGUgPSBtdF9ta19ub2RlKHBub2Rl
LCBwbXQpOw0KKwlnb3RvIGFzY2VuZDsNCit9DQorDQorLyoNCisgKiBtYXNfdXBkYXRlX2dhcCgp
IC0gVXBkYXRlIGEgbm9kZXMgZ2FwcyBhbmQgcHJvcGFnYXRlIHVwIGlmIG5lY2Vzc2FyeS4NCisg
KiBAbWFzIC0gdGhlIG1hcGxlIHN0YXRlLg0KKyAqLw0KK3N0YXRpYyBpbmxpbmUgdm9pZCBtYXNf
dXBkYXRlX2dhcChzdHJ1Y3QgbWFfc3RhdGUgKm1hcykNCit7DQorCXVuc2lnbmVkIGNoYXIgcHNs
b3Q7DQorCXVuc2lnbmVkIGxvbmcgcF9nYXA7DQorCXVuc2lnbmVkIGxvbmcgbWF4X2dhcDsNCisN
CisJaWYgKCFtdF9pc19hbGxvYyhtYXMtPnRyZWUpKQ0KKwkJcmV0dXJuOw0KKw0KKwlpZiAobXRl
X2lzX3Jvb3QobWFzLT5ub2RlKSkNCisJCXJldHVybjsNCisNCisJbWF4X2dhcCA9IG1hc19tYXhf
Z2FwKG1hcyk7DQorDQorCXBzbG90ID0gbXRlX3BhcmVudF9zbG90KG1hcy0+bm9kZSk7DQorCXBf
Z2FwID0gbWFfZ2FwcyhtdGVfcGFyZW50KG1hcy0+bm9kZSksDQorCQkJbWFzX3BhcmVudF9lbnVt
KG1hcywgbWFzLT5ub2RlKSlbcHNsb3RdOw0KKw0KKwlpZiAocF9nYXAgIT0gbWF4X2dhcCkNCisJ
CW1hc19wYXJlbnRfZ2FwKG1hcywgcHNsb3QsIG1heF9nYXApOw0KK30NCisNCisvKg0KKyAqIG1h
c19hZG9wdF9jaGlsZHJlbigpIC0gU2V0IHRoZSBwYXJlbnQgcG9pbnRlciBvZiBhbGwgbm9kZXMg
aW4gQHBhcmVudCB0bw0KKyAqIEBwYXJlbnQgd2l0aCB0aGUgc2xvdCBlbmNvZGVkLg0KKyAqIEBt
YXMgLSB0aGUgbWFwbGUgc3RhdGUgKGZvciB0aGUgdHJlZSkNCisgKiBAcGFyZW50IC0gdGhlIG1h
cGxlIGVuY29kZWQgbm9kZSBjb250YWluaW5nIHRoZSBjaGlsZHJlbi4NCisgKi8NCitzdGF0aWMg
aW5saW5lIHZvaWQgbWFzX2Fkb3B0X2NoaWxkcmVuKHN0cnVjdCBtYV9zdGF0ZSAqbWFzLA0KKwkJ
c3RydWN0IG1hcGxlX2Vub2RlICpwYXJlbnQpDQorew0KKwllbnVtIG1hcGxlX3R5cGUgdHlwZSA9
IG10ZV9ub2RlX3R5cGUocGFyZW50KTsNCisJc3RydWN0IG1hcGxlX25vZGUgKm5vZGUgPSBtYXNf
bW4obWFzKTsNCisJdm9pZCBfX3JjdSAqKnNsb3RzID0gbWFfc2xvdHMobm9kZSwgdHlwZSk7DQor
CXVuc2lnbmVkIGxvbmcgKnBpdm90cyA9IG1hX3Bpdm90cyhub2RlLCB0eXBlKTsNCisJc3RydWN0
IG1hcGxlX2Vub2RlICpjaGlsZDsNCisJdW5zaWduZWQgY2hhciBvZmZzZXQ7DQorDQorCW9mZnNl
dCA9IG1hX2RhdGFfZW5kKG5vZGUsIHR5cGUsIHBpdm90cywgbWFzLT5tYXgpOw0KKwlkbyB7DQor
CQljaGlsZCA9IG1hc19zbG90X2xvY2tlZChtYXMsIHNsb3RzLCBvZmZzZXQpOw0KKwkJbXRlX3Nl
dF9wYXJlbnQoY2hpbGQsIHBhcmVudCwgb2Zmc2V0KTsNCisJfSB3aGlsZShvZmZzZXQtLSk7DQor
fQ0KKw0KKy8qDQorICogbWFzX3JlcGxhY2UoKSAtIFJlcGxhY2UgYSBtYXBsZSBub2RlIGluIHRo
ZSB0cmVlIHdpdGggbWFzLT5ub2RlLiAgVXNlcyB0aGUNCisgKiBwYXJlbnQgZW5jb2RpbmcgdG8g
bG9jYXRlIHRoZSBtYXBsZSBub2RlIGluIHRoZSB0cmVlLg0KKyAqIEBtYXMgLSB0aGUgbWFfc3Rh
dGUgdG8gdXNlIGZvciBvcGVyYXRpb25zLg0KKyAqIEBhZHZhbmNlZCAtIGJvb2xlYW4gdG8gYWRv
cHQgdGhlIGNoaWxkIG5vZGVzIGFuZCBmcmVlIHRoZSBvbGQgbm9kZSAoZmFsc2UpIG9yDQorICog
bGVhdmUgdGhlIG5vZGUgKHRydWUpIGFuZCBoYW5kbGUgdGhlIGFkb3B0aW9uIGFuZCBmcmVlIGVs
c2V3aGVyZS4NCisgKi8NCitzdGF0aWMgaW5saW5lIHZvaWQgbWFzX3JlcGxhY2Uoc3RydWN0IG1h
X3N0YXRlICptYXMsIGJvb2wgYWR2YW5jZWQpDQorCV9fbXVzdF9ob2xkKG1hcy0+dHJlZS0+bG9j
aykNCit7DQorCXN0cnVjdCBtYXBsZV9ub2RlICptbiA9IG1hc19tbihtYXMpOw0KKwlzdHJ1Y3Qg
bWFwbGVfZW5vZGUgKm9sZF9lbm9kZTsNCisJdW5zaWduZWQgY2hhciBvZmZzZXQgPSAwOw0KKwl2
b2lkIF9fcmN1ICoqc2xvdHMgPSBOVUxMOw0KKw0KKwlpZiAobWFfaXNfcm9vdChtbikpIHsNCisJ
CW9sZF9lbm9kZSA9IG1hc19yb290X2xvY2tlZChtYXMpOw0KKwl9IGVsc2Ugew0KKwkJb2Zmc2V0
ID0gbXRlX3BhcmVudF9zbG90KG1hcy0+bm9kZSk7DQorCQlzbG90cyA9IG1hX3Nsb3RzKG10ZV9w
YXJlbnQobWFzLT5ub2RlKSwNCisJCQkJIG1hc19wYXJlbnRfZW51bShtYXMsIG1hcy0+bm9kZSkp
Ow0KKwkJb2xkX2Vub2RlID0gbWFzX3Nsb3RfbG9ja2VkKG1hcywgc2xvdHMsIG9mZnNldCk7DQor
CX0NCisNCisJaWYgKCFhZHZhbmNlZCAmJiAhbXRlX2lzX2xlYWYobWFzLT5ub2RlKSkNCisJCW1h
c19hZG9wdF9jaGlsZHJlbihtYXMsIG1hcy0+bm9kZSk7DQorDQorCWlmIChtdGVfaXNfcm9vdCht
YXMtPm5vZGUpKSB7DQorCQltbi0+cGFyZW50ID0gbWFfcGFyZW50X3B0cigNCisJCQkgICAgICAo
KHVuc2lnbmVkIGxvbmcpbWFzLT50cmVlIHwgTUFfUk9PVF9QQVJFTlQpKTsNCisJCXJjdV9hc3Np
Z25fcG9pbnRlcihtYXMtPnRyZWUtPm1hX3Jvb3QsIG10ZV9ta19yb290KG1hcy0+bm9kZSkpOw0K
KwkJbWFzX3NldF9oZWlnaHQobWFzKTsNCisJfSBlbHNlIHsNCisJCXJjdV9hc3NpZ25fcG9pbnRl
cihzbG90c1tvZmZzZXRdLCBtYXMtPm5vZGUpOw0KKwl9DQorDQorCWlmICghYWR2YW5jZWQpDQor
CQltYXNfZnJlZShtYXMsIG9sZF9lbm9kZSk7DQorfQ0KKw0KKy8qDQorICogbWFzX25ld19jaGls
ZCgpIC0gRmluZCB0aGUgbmV3IGNoaWxkIG9mIGEgbm9kZS4NCisgKiBAbWFzOiB0aGUgbWFwbGUg
c3RhdGUNCisgKiBAY2hpbGQ6IHRoZSBtYXBsZSBzdGF0ZSB0byBzdG9yZSB0aGUgY2hpbGQuDQor
ICovDQorc3RhdGljIGlubGluZSBib29sIG1hc19uZXdfY2hpbGQoc3RydWN0IG1hX3N0YXRlICpt
YXMsIHN0cnVjdCBtYV9zdGF0ZSAqY2hpbGQpDQorCV9fbXVzdF9ob2xkKG1hcy0+dHJlZS0+bG9j
aykNCit7DQorCWVudW0gbWFwbGVfdHlwZSBtdDsNCisJdW5zaWduZWQgY2hhciBvZmZzZXQ7DQor
CXVuc2lnbmVkIGNoYXIgZW5kOw0KKwl1bnNpZ25lZCBsb25nICpwaXZvdHM7DQorCXN0cnVjdCBt
YXBsZV9lbm9kZSAqZW50cnk7DQorCXN0cnVjdCBtYXBsZV9ub2RlICpub2RlOw0KKwl2b2lkIF9f
cmN1ICoqc2xvdHM7DQorDQorCW10ID0gbXRlX25vZGVfdHlwZShtYXMtPm5vZGUpOw0KKwlub2Rl
ID0gbWFzX21uKG1hcyk7DQorCXNsb3RzID0gbWFfc2xvdHMobm9kZSwgbXQpOw0KKwlwaXZvdHMg
PSBtYV9waXZvdHMobm9kZSwgbXQpOw0KKwllbmQgPSBtYV9kYXRhX2VuZChub2RlLCBtdCwgcGl2
b3RzLCBtYXMtPm1heCk7DQorCWZvciAob2Zmc2V0ID0gbWFzLT5vZmZzZXQ7IG9mZnNldCA8PSBl
bmQ7IG9mZnNldCsrKSB7DQorCQllbnRyeSA9IG1hc19zbG90X2xvY2tlZChtYXMsIHNsb3RzLCBv
ZmZzZXQpOw0KKwkJaWYgKG10ZV9wYXJlbnQoZW50cnkpID09IG5vZGUpIHsNCisJCQkqY2hpbGQg
PSAqbWFzOw0KKwkJCW1hcy0+b2Zmc2V0ID0gb2Zmc2V0ICsgMTsNCisJCQljaGlsZC0+b2Zmc2V0
ID0gb2Zmc2V0Ow0KKwkJCW1hc19kZXNjZW5kKGNoaWxkKTsNCisJCQljaGlsZC0+b2Zmc2V0ID0g
MDsNCisJCQlyZXR1cm4gdHJ1ZTsNCisJCX0NCisJfQ0KKwlyZXR1cm4gZmFsc2U7DQorfQ0KKw0K
Ky8qDQorICogbWFiX3NoaWZ0X3JpZ2h0KCkgLSBTaGlmdCB0aGUgZGF0YSBpbiBtYWIgcmlnaHQu
IE5vdGUsIGRvZXMgbm90IGNsZWFuIG91dCB0aGUNCisgKiBvbGQgZGF0YSBvciBzZXQgYl9ub2Rl
LT5iX2VuZC4NCisgKiBAYl9ub2RlOiB0aGUgbWFwbGVfYmlnX25vZGUNCisgKiBAc2hpZnQ6IHRo
ZSBzaGlmdCBjb3VudA0KKyAqLw0KK3N0YXRpYyBpbmxpbmUgdm9pZCBtYWJfc2hpZnRfcmlnaHQo
c3RydWN0IG1hcGxlX2JpZ19ub2RlICpiX25vZGUsDQorCQkJCSB1bnNpZ25lZCBjaGFyIHNoaWZ0
KQ0KK3sNCisJdW5zaWduZWQgbG9uZyBzaXplID0gYl9ub2RlLT5iX2VuZCAqIHNpemVvZih1bnNp
Z25lZCBsb25nKTsNCisNCisJbWVtbW92ZShiX25vZGUtPnBpdm90ICsgc2hpZnQsIGJfbm9kZS0+
cGl2b3QsIHNpemUpOw0KKwltZW1tb3ZlKGJfbm9kZS0+c2xvdCArIHNoaWZ0LCBiX25vZGUtPnNs
b3QsIHNpemUpOw0KKwltZW1tb3ZlKGJfbm9kZS0+Z2FwICsgc2hpZnQsIGJfbm9kZS0+Z2FwLCBz
aXplKTsNCit9DQorDQorLyoNCisgKiBtYWJfbWlkZGxlX25vZGUoKSAtIENoZWNrIGlmIGEgbWlk
ZGxlIG5vZGUgaXMgbmVlZGVkICh1bmxpa2VseSkNCisgKiBAYl9ub2RlOiB0aGUgbWFwbGVfYmln
X25vZGUgdGhhdCBjb250YWlucyB0aGUgZGF0YS4NCisgKiBAc2l6ZTogdGhlIGFtb3VudCBvZiBk
YXRhIGluIHRoZSBiX25vZGUNCisgKiBAc3BsaXQ6IHRoZSBwb3RlbnRpYWwgc3BsaXQgbG9jYXRp
b24NCisgKiBAc2xvdF9jb3VudDogdGhlIHNpemUgdGhhdCBjYW4gYmUgc3RvcmVkIGluIGEgc2lu
Z2xlIG5vZGUgYmVpbmcgY29uc2lkZXJlZC4NCisgKg0KKyAqIFJldHVybjogdHJ1ZSBpZiBhIG1p
ZGRsZSBub2RlIGlzIHJlcXVpcmVkLg0KKyAqLw0KK3N0YXRpYyBpbmxpbmUgYm9vbCBtYWJfbWlk
ZGxlX25vZGUoc3RydWN0IG1hcGxlX2JpZ19ub2RlICpiX25vZGUsIGludCBzcGxpdCwNCisJCQkJ
ICAgdW5zaWduZWQgY2hhciBzbG90X2NvdW50KQ0KK3sNCisJdW5zaWduZWQgY2hhciBzaXplID0g
Yl9ub2RlLT5iX2VuZDsNCisNCisJaWYgKHNpemUgPj0gMiAqIHNsb3RfY291bnQpDQorCQlyZXR1
cm4gdHJ1ZTsNCisNCisJaWYgKCFiX25vZGUtPnNsb3Rbc3BsaXRdICYmIChzaXplID49IDIgKiBz
bG90X2NvdW50IC0gMSkpDQorCQlyZXR1cm4gdHJ1ZTsNCisNCisJcmV0dXJuIGZhbHNlOw0KK30N
CisNCisvKg0KKyAqIG1hYl9ub19udWxsX3NwbGl0KCkgLSBlbnN1cmUgdGhlIHNwbGl0IGRvZXNu
J3QgZmFsbCBvbiBhIE5VTEwNCisgKiBAYl9ub2RlOiB0aGUgbWFwbGVfYmlnX25vZGUgd2l0aCB0
aGUgZGF0YQ0KKyAqIEBzcGxpdDogdGhlIHN1Z2dlc3RlZCBzcGxpdCBsb2NhdGlvbg0KKyAqIEBz
bG90X2NvdW50OiB0aGUgbnVtYmVyIG9mIHNsb3RzIGluIHRoZSBub2RlIGJlaW5nIGNvbnNpZGVy
ZWQuDQorICoNCisgKiBSZXR1cm46IHRoZSBzcGxpdCBsb2NhdGlvbi4NCisgKi8NCitzdGF0aWMg
aW5saW5lIGludCBtYWJfbm9fbnVsbF9zcGxpdChzdHJ1Y3QgbWFwbGVfYmlnX25vZGUgKmJfbm9k
ZSwNCisJCQkJICAgIHVuc2lnbmVkIGNoYXIgc3BsaXQsIHVuc2lnbmVkIGNoYXIgc2xvdF9jb3Vu
dCkNCit7DQorCWlmICghYl9ub2RlLT5zbG90W3NwbGl0XSkgew0KKwkJLyoNCisJCSAqIElmIHRo
ZSBzcGxpdCBpcyBsZXNzIHRoYW4gdGhlIG1heCBzbG90ICYmIHRoZSByaWdodCBzaWRlIHdpbGwN
CisJCSAqIHN0aWxsIGJlIHN1ZmZpY2llbnQsIHRoZW4gaW5jcmVtZW50IHRoZSBzcGxpdCBvbiBO
VUxMLg0KKwkJICovDQorCQlpZiAoKHNwbGl0IDwgc2xvdF9jb3VudCAtIDEpICYmDQorCQkgICAg
KGJfbm9kZS0+Yl9lbmQgLSBzcGxpdCkgPiAobXRfbWluX3Nsb3RzW2Jfbm9kZS0+dHlwZV0pKQ0K
KwkJCXNwbGl0Kys7DQorCQllbHNlDQorCQkJc3BsaXQtLTsNCisJfQ0KKwlyZXR1cm4gc3BsaXQ7
DQorfQ0KKw0KKy8qDQorICogbWFiX2NhbGNfc3BsaXQoKSAtIENhbGN1bGF0ZSB0aGUgc3BsaXQg
bG9jYXRpb24gYW5kIGlmIHRoZXJlIG5lZWRzIHRvIGJlIHR3bw0KKyAqIHNwbGl0cy4NCisgKiBA
Ym46IFRoZSBtYXBsZV9iaWdfbm9kZSB3aXRoIHRoZSBkYXRhDQorICogQG1pZF9zcGxpdDogVGhl
IHNlY29uZCBzcGxpdCwgaWYgcmVxdWlyZWQuICAwIG90aGVyd2lzZS4NCisgKg0KKyAqIFJldHVy
bjogVGhlIGZpcnN0IHNwbGl0IGxvY2F0aW9uLiAgVGhlIG1pZGRsZSBzcGxpdCBpcyBzZXQgaW4g
QG1pZF9zcGxpdC4NCisgKi8NCitzdGF0aWMgaW5saW5lIGludCBtYWJfY2FsY19zcGxpdChzdHJ1
Y3QgbWFfc3RhdGUgKm1hcywNCisJCQkJIHN0cnVjdCBtYXBsZV9iaWdfbm9kZSAqYm4sDQorCQkJ
CSB1bnNpZ25lZCBjaGFyICptaWRfc3BsaXQpDQorew0KKwl1bnNpZ25lZCBjaGFyIGJfZW5kID0g
Ym4tPmJfZW5kOw0KKwlpbnQgc3BsaXQgPSBiX2VuZCAvIDI7IC8qIEFzc3VtZSBlcXVhbCBzcGxp
dC4gKi8NCisJdW5zaWduZWQgY2hhciBtaW4sIHNsb3RfY291bnQgPSBtdF9zbG90c1tibi0+dHlw
ZV07DQorDQorCS8qDQorCSAqIFRvIHN1cHBvcnQgZ2FwIHRyYWNraW5nLCBhbGwgTlVMTCBlbnRy
aWVzIGFyZSBrZXB0IHRvZ2V0aGVyIGFuZCBhIG5vZGUgY2Fubm90DQorCSAqIGVuZCBvbiBhIE5V
TEwgZW50cnksIHdpdGggdGhlIGV4Y2VwdGlvbiBvZiB0aGUgbGVmdC1tb3N0IGxlYWYuICBUaGUN
CisJICogbGltaXRhdGlvbiBtZWFucyB0aGF0IHRoZSBzcGxpdCBvZiBhIG5vZGUgbXVzdCBiZSBj
aGVja2VkIGZvciB0aGlzIGNvbmRpdGlvbg0KKwkgKiBhbmQgYmUgYWJsZSB0byBwdXQgbW9yZSBk
YXRhIGluIG9uZSBkaXJlY3Rpb24gb3IgdGhlIG90aGVyLg0KKwkgKi8NCisJaWYgKHVubGlrZWx5
KChtYXMtPm1hc19mbGFncyAmIE1BX1NUQVRFX0JVTEspKSkgew0KKwkJKm1pZF9zcGxpdCA9IDA7
DQorCQlpZiAobWFfaXNfbGVhZihibi0+dHlwZSkpDQorCQkJbWluID0gMjsNCisJCWVsc2UNCisJ
CQlyZXR1cm4gYl9lbmQgLSBtdF9taW5fc2xvdHNbYm4tPnR5cGVdOw0KKw0KKwkJc3BsaXQgPSBi
X2VuZCAtIG1pbjsNCisJCW1hcy0+bWFzX2ZsYWdzIHw9IE1BX1NUQVRFX1JFQkFMQU5DRTsNCisJ
CWlmICghYm4tPnNsb3Rbc3BsaXRdKQ0KKwkJCXNwbGl0LS07DQorCQlyZXR1cm4gc3BsaXQ7DQor
CX0NCisNCisJLyoNCisJICogQWx0aG91Z2ggZXh0cmVtZWx5IHJhcmUsIGl0IGlzIHBvc3NpYmxl
IHRvIGVudGVyIHdoYXQgaXMga25vd24gYXMgdGhlIDMtd2F5DQorCSAqIHNwbGl0IHNjZW5hcmlv
LiAgVGhlIDMtd2F5IHNwbGl0IGNvbWVzIGFib3V0IGJ5IG1lYW5zIG9mIGEgc3RvcmUgb2YgYSBy
YW5nZQ0KKwkgKiB0aGF0IG92ZXJ3cml0ZXMgdGhlIGVuZCBhbmQgYmVnaW5uaW5nIG9mIHR3byBm
dWxsIG5vZGVzLiAgVGhlIHJlc3VsdCBpcyBhIHNldA0KKwkgKiBvZiBlbnRyaWVzIHRoYXQgY2Fu
bm90IGJlIHN0b3JlZCBpbiAyIG5vZGVzLiAgU29tZXRpbWVzLCB0aGVzZSB0d28gbm9kZXMgY2Fu
DQorCSAqIGFsc28gYmUgbG9jYXRlZCBpbiBkaWZmZXJlbnQgcGFyZW50IG5vZGVzIHdoaWNoIGFy
ZSBhbHNvIGZ1bGwuICBUaGlzIGNhbg0KKwkgKiBjYXJyeSB1cHdhcmRzIGFsbCB0aGUgd2F5IHRv
IHRoZSByb290IGluIHRoZSB3b3JzdCBjYXNlLg0KKwkgKi8NCisJaWYgKHVubGlrZWx5KG1hYl9t
aWRkbGVfbm9kZShibiwgc3BsaXQsIHNsb3RfY291bnQpKSkgew0KKwkJc3BsaXQgPSBiX2VuZCAv
IDM7DQorCQkqbWlkX3NwbGl0ID0gc3BsaXQgKiAyOw0KKwl9IGVsc2Ugew0KKwkJbWluID0gbXRf
bWluX3Nsb3RzW2JuLT50eXBlXTsNCisNCisJCSptaWRfc3BsaXQgPSAwOw0KKwkJLyoNCisJCSAq
IEF2b2lkIGhhdmluZyBhIHJhbmdlIGxlc3MgdGhhbiB0aGUgc2xvdCBjb3VudCB1bmxlc3MgaXQN
CisJCSAqIGNhdXNlcyBvbmUgbm9kZSB0byBiZSBkZWZpY2llbnQuDQorCQkgKiBOT1RFOiBtdF9t
aW5fc2xvdHMgaXMgMSBiYXNlZCwgYl9lbmQgYW5kIHNwbGl0IGFyZSB6ZXJvLg0KKwkJICovDQor
CQl3aGlsZSAoKChibi0+cGl2b3Rbc3BsaXRdIC0gYm4tPm1pbikgPCBzbG90X2NvdW50IC0gMSkg
JiYNCisJCSAgICAgICAoc3BsaXQgPCBzbG90X2NvdW50IC0gMSkgJiYgKGJfZW5kIC0gc3BsaXQg
PiBtaW4pKQ0KKwkJCXNwbGl0Kys7DQorCX0NCisNCisJLyogQXZvaWQgZW5kaW5nIGEgbm9kZSBv
biBhIE5VTEwgZW50cnkgKi8NCisJc3BsaXQgPSBtYWJfbm9fbnVsbF9zcGxpdChibiwgc3BsaXQs
IHNsb3RfY291bnQpOw0KKwlpZiAoISgqbWlkX3NwbGl0KSkNCisJCXJldHVybiBzcGxpdDsNCisN
CisJKm1pZF9zcGxpdCA9IG1hYl9ub19udWxsX3NwbGl0KGJuLCAqbWlkX3NwbGl0LCBzbG90X2Nv
dW50KTsNCisNCisJcmV0dXJuIHNwbGl0Ow0KK30NCisNCisvKg0KKyAqIG1hc19tYWJfY3AoKSAt
IENvcHkgZGF0YSBmcm9tIGEgbWFwbGUgc3RhdGUgaW5jbHVzaXZlbHkgdG8gYSBtYXBsZV9iaWdf
bm9kZQ0KKyAqIGFuZCBzZXQgQGJfbm9kZS0+Yl9lbmQgdG8gdGhlIG5leHQgZnJlZSBzbG90Lg0K
KyAqIEBtYXM6IFRoZSBtYXBsZSBzdGF0ZQ0KKyAqIEBtYXNfc3RhcnQ6IFRoZSBzdGFydGluZyBz
bG90IHRvIGNvcHkNCisgKiBAbWFzX2VuZDogVGhlIGVuZCBzbG90IHRvIGNvcHkgKGluY2x1c2l2
ZWx5KQ0KKyAqIEBiX25vZGU6IFRoZSBtYXBsZV9iaWdfbm9kZSB0byBwbGFjZSB0aGUgZGF0YQ0K
KyAqIEBtYWJfc3RhcnQ6IFRoZSBzdGFydGluZyBsb2NhdGlvbiBpbiBtYXBsZV9iaWdfbm9kZSB0
byBzdG9yZSB0aGUgZGF0YS4NCisgKi8NCitzdGF0aWMgaW5saW5lIHZvaWQgbWFzX21hYl9jcChz
dHJ1Y3QgbWFfc3RhdGUgKm1hcywgdW5zaWduZWQgY2hhciBtYXNfc3RhcnQsDQorCQkJdW5zaWdu
ZWQgY2hhciBtYXNfZW5kLCBzdHJ1Y3QgbWFwbGVfYmlnX25vZGUgKmJfbm9kZSwNCisJCQl1bnNp
Z25lZCBjaGFyIG1hYl9zdGFydCkNCit7DQorCWVudW0gbWFwbGVfdHlwZSBtdDsNCisJc3RydWN0
IG1hcGxlX25vZGUgKm5vZGU7DQorCXZvaWQgX19yY3UgKipzbG90czsNCisJdW5zaWduZWQgbG9u
ZyAqcGl2b3RzLCAqZ2FwczsNCisJaW50IGkgPSBtYXNfc3RhcnQsIGogPSBtYWJfc3RhcnQ7DQor
CXVuc2lnbmVkIGNoYXIgcGl2X2VuZDsNCisNCisJbm9kZSA9IG1hc19tbihtYXMpOw0KKwltdCA9
IG10ZV9ub2RlX3R5cGUobWFzLT5ub2RlKTsNCisJcGl2b3RzID0gbWFfcGl2b3RzKG5vZGUsIG10
KTsNCisJaWYgKCFpKSB7DQorCQliX25vZGUtPnBpdm90W2pdID0gcGl2b3RzW2krK107DQorCQlp
ZiAodW5saWtlbHkoaSA+IG1hc19lbmQpKQ0KKwkJCWdvdG8gY29tcGxldGU7DQorCQlqKys7DQor
CX0NCisNCisJcGl2X2VuZCA9IG1pbihtYXNfZW5kLCBtdF9waXZvdHNbbXRdKTsNCisJZm9yICg7
IGkgPCBwaXZfZW5kOyBpKyssIGorKykgew0KKwkJYl9ub2RlLT5waXZvdFtqXSA9IHBpdm90c1tp
XTsNCisJCWlmICh1bmxpa2VseSghYl9ub2RlLT5waXZvdFtqXSkpDQorCQkJYnJlYWs7DQorDQor
CQlpZiAodW5saWtlbHkobWFzLT5tYXggPT0gYl9ub2RlLT5waXZvdFtqXSkpDQorCQkJZ290byBj
b21wbGV0ZTsNCisJfQ0KKw0KKwlpZiAobGlrZWx5KGkgPD0gbWFzX2VuZCkpDQorCQliX25vZGUt
PnBpdm90W2pdID0gbWFzX3NhZmVfcGl2b3QobWFzLCBwaXZvdHMsIGksIG10KTsNCisNCitjb21w
bGV0ZToNCisJYl9ub2RlLT5iX2VuZCA9ICsrajsNCisJaiAtPSBtYWJfc3RhcnQ7DQorCXNsb3Rz
ID0gbWFfc2xvdHMobm9kZSwgbXQpOw0KKwltZW1jcHkoYl9ub2RlLT5zbG90ICsgbWFiX3N0YXJ0
LCBzbG90cyArIG1hc19zdGFydCwgc2l6ZW9mKHZvaWQgKikgKiBqKTsNCisJaWYgKCFtYV9pc19s
ZWFmKG10KSAmJiBtdF9pc19hbGxvYyhtYXMtPnRyZWUpKSB7DQorCQlnYXBzID0gbWFfZ2Fwcyhu
b2RlLCBtdCk7DQorCQltZW1jcHkoYl9ub2RlLT5nYXAgKyBtYWJfc3RhcnQsIGdhcHMgKyBtYXNf
c3RhcnQsDQorCQkgICAgICAgc2l6ZW9mKHVuc2lnbmVkIGxvbmcpICogaik7DQorCX0NCit9DQor
DQorLyoNCisgKiBtYWJfbWFzX2NwKCkgLSBDb3B5IGRhdGEgZnJvbSBtYXBsZV9iaWdfbm9kZSB0
byBhIG1hcGxlIGVuY29kZWQgbm9kZS4NCisgKiBAYl9ub2RlOiB0aGUgbWFwbGVfYmlnX25vZGUg
dGhhdCBoYXMgdGhlIGRhdGENCisgKiBAbWFiX3N0YXJ0OiB0aGUgc3RhcnQgbG9jYXRpb24gaW4g
QGJfbm9kZS4NCisgKiBAbWFiX2VuZDogVGhlIGVuZCBsb2NhdGlvbiBpbiBAYl9ub2RlIChpbmNs
dXNpdmVseSkNCisgKiBAbWFzOiBUaGUgbWFwbGUgc3RhdGUgd2l0aCB0aGUgbWFwbGUgZW5jb2Rl
ZCBub2RlLg0KKyAqLw0KK3N0YXRpYyBpbmxpbmUgdm9pZCBtYWJfbWFzX2NwKHN0cnVjdCBtYXBs
ZV9iaWdfbm9kZSAqYl9ub2RlLA0KKwkJCSAgICAgIHVuc2lnbmVkIGNoYXIgbWFiX3N0YXJ0LCB1
bnNpZ25lZCBjaGFyIG1hYl9lbmQsDQorCQkJICAgICAgc3RydWN0IG1hX3N0YXRlICptYXMsIGJv
b2wgbmV3X21heCkNCit7DQorCWludCBpLCBqID0gMDsNCisJZW51bSBtYXBsZV90eXBlIG10ID0g
bXRlX25vZGVfdHlwZShtYXMtPm5vZGUpOw0KKwlzdHJ1Y3QgbWFwbGVfbm9kZSAqbm9kZSA9IG10
ZV90b19ub2RlKG1hcy0+bm9kZSk7DQorCXZvaWQgX19yY3UgKipzbG90cyA9IG1hX3Nsb3RzKG5v
ZGUsIG10KTsNCisJdW5zaWduZWQgbG9uZyAqcGl2b3RzID0gbWFfcGl2b3RzKG5vZGUsIG10KTsN
CisJdW5zaWduZWQgbG9uZyAqZ2FwcyA9IE5VTEw7DQorCXVuc2lnbmVkIGNoYXIgZW5kOw0KKw0K
KwlpZiAobWFiX2VuZCAtIG1hYl9zdGFydCA+IG10X3Bpdm90c1ttdF0pDQorCQltYWJfZW5kLS07
DQorDQorCWlmICghcGl2b3RzW210X3Bpdm90c1ttdF0gLSAxXSkNCisJCXNsb3RzW210X3Bpdm90
c1ttdF1dID0gTlVMTDsNCisNCisJaSA9IG1hYl9zdGFydDsNCisJcGl2b3RzW2orK10gPSBiX25v
ZGUtPnBpdm90W2krK107DQorCWRvIHsNCisJCXBpdm90c1tqKytdID0gYl9ub2RlLT5waXZvdFtp
KytdOw0KKwl9IHdoaWxlIChpIDw9IG1hYl9lbmQgJiYgbGlrZWx5KGJfbm9kZS0+cGl2b3RbaV0p
KTsNCisNCisJbWVtY3B5KHNsb3RzLCBiX25vZGUtPnNsb3QgKyBtYWJfc3RhcnQsDQorCSAgICAg
ICBzaXplb2Yodm9pZCAqKSAqIChpIC0gbWFiX3N0YXJ0KSk7DQorDQorCWlmIChuZXdfbWF4KQ0K
KwkJbWFzLT5tYXggPSBiX25vZGUtPnBpdm90W2kgLSAxXTsNCisNCisJZW5kID0gaiAtIDE7DQor
CWlmIChsaWtlbHkoIW1hX2lzX2xlYWYobXQpICYmIG10X2lzX2FsbG9jKG1hcy0+dHJlZSkpKSB7
DQorCQl1bnNpZ25lZCBsb25nIG1heF9nYXAgPSAwOw0KKwkJdW5zaWduZWQgY2hhciBvZmZzZXQg
PSAxNTsNCisNCisJCWdhcHMgPSBtYV9nYXBzKG5vZGUsIG10KTsNCisJCWRvIHsNCisJCQlnYXBz
Wy0tal0gPSBiX25vZGUtPmdhcFstLWldOw0KKwkJCWlmIChnYXBzW2pdID4gbWF4X2dhcCkgew0K
KwkJCQlvZmZzZXQgPSBqOw0KKwkJCQltYXhfZ2FwID0gZ2Fwc1tqXTsNCisJCQl9DQorCQl9IHdo
aWxlIChqKTsNCisNCisJCW1hX3NldF9tZXRhKG5vZGUsIG10LCBvZmZzZXQsIGVuZCk7DQorCX0g
ZWxzZSBpZiAoZW5kIDw9IG10X3Bpdm90c1ttdF0gLSAxKSB7DQorCQlpZiAocGl2b3RzW2VuZF0g
IT0gbWFzLT5tYXgpDQorCQkJZW5kKys7DQorDQorCQltYV9zZXRfbWV0YShub2RlLCBtdCwgMCwg
ZW5kKTsNCisJfQ0KK30NCisNCisvKg0KKyAqIG1hc19kZXNjZW5kX2Fkb3B0KCkgLSBEZXNjZW5k
IHRocm91Z2ggYSBzdWItdHJlZSBhbmQgYWRvcHQgY2hpbGRyZW4uDQorICogQG1hczogdGhlIG1h
cGxlIHN0YXRlIHdpdGggdGhlIG1hcGxlIGVuY29kZWQgbm9kZSBvZiB0aGUgc3ViLXRyZWUuDQor
ICoNCisgKiBEZXNjZW5kIHRocm91Z2ggYSBzdWItdHJlZSBhbmQgYWRvcHQgY2hpbGRyZW4gd2hv
IGRvIG5vdCBoYXZlIHRoZSBjb3JyZWN0DQorICogcGFyZW50cyBzZXQuICBGb2xsb3cgdGhlIHBh
cmVudHMgd2hpY2ggaGF2ZSB0aGUgY29ycmVjdCBwYXJlbnRzIGFzIHRoZXkgYXJlDQorICogdGhl
IG5ldyBlbnRyaWVzIHdoaWNoIG5lZWQgdG8gYmUgZm9sbG93ZWQgdG8gZmluZCBvdGhlciBpbmNv
cnJlY3RseSBzZXQNCisgKiBwYXJlbnRzLg0KKyAqLw0KK3N0YXRpYyBpbmxpbmUgdm9pZCBtYXNf
ZGVzY2VuZF9hZG9wdChzdHJ1Y3QgbWFfc3RhdGUgKm1hcykNCit7DQorCXN0cnVjdCBtYV9zdGF0
ZSBsaXN0WzNdLCBuZXh0WzNdOw0KKwlpbnQgaSwgbjsNCisNCisJLyoNCisJICogQXQgZWFjaCBs
ZXZlbCB0aGVyZSBtYXkgYmUgdXAgdG8gMyBjb3JyZWN0IHBhcmVudCBwb2ludGVycyB3aGljaCBp
bmRpY2F0ZXMNCisJICogdGhlIG5ldyBub2RlcyB3aGljaCBuZWVkIHRvIGJlIHdhbGtlZCB0byBm
aW5kIGFueSBuZXcgbm9kZXMgYXQgYSBsb3dlciBsZXZlbC4NCisJICovDQorDQorCWZvciAoaSA9
IDA7IGkgPCAzOyBpKyspIHsNCisJCWxpc3RbaV0gPSAqbWFzOw0KKwkJbGlzdFtpXS5vZmZzZXQg
PSAwOw0KKwkJbmV4dFtpXS5vZmZzZXQgPSAwOw0KKwl9DQorCW5leHRbMF0gPSAqbWFzOw0KKw0K
Kwl3aGlsZSAoIW10ZV9pc19sZWFmKGxpc3RbMF0ubm9kZSkpIHsNCisJCW4gPSAwOw0KKwkJZm9y
IChpID0gMDsgaSA8IDM7IGkrKykgew0KKwkJCWlmIChtYXNfaXNfbm9uZSgmbGlzdFtpXSkpDQor
CQkJCWNvbnRpbnVlOw0KKw0KKwkJCWlmIChpICYmIGxpc3RbaS0xXS5ub2RlID09IGxpc3RbaV0u
bm9kZSkNCisJCQkJY29udGludWU7DQorDQorCQkJd2hpbGUgKChuIDwgMykgJiYgKG1hc19uZXdf
Y2hpbGQoJmxpc3RbaV0sICZuZXh0W25dKSkpDQorCQkJCW4rKzsNCisNCisJCQltYXNfYWRvcHRf
Y2hpbGRyZW4oJmxpc3RbaV0sIGxpc3RbaV0ubm9kZSk7DQorCQl9DQorDQorCQl3aGlsZSAobiA8
IDMpDQorCQkJbmV4dFtuKytdLm5vZGUgPSBNQVNfTk9ORTsNCisNCisJCS8qIGRlc2NlbmQgYnkg
c2V0dGluZyB0aGUgbGlzdCB0byB0aGUgY2hpbGRyZW4gKi8NCisJCWZvciAoaSA9IDA7IGkgPCAz
OyBpKyspDQorCQkJbGlzdFtpXSA9IG5leHRbaV07DQorCX0NCit9DQorDQorLyoNCisgKiBtYXNf
YnVsa19yZWJhbGFuY2UoKSAtIFJlYmFsYW5jZSB0aGUgZW5kIG9mIGEgdHJlZSBhZnRlciBhIGJ1
bGsgaW5zZXJ0Lg0KKyAqIEBtYXM6IFRoZSBtYXBsZSBzdGF0ZQ0KKyAqIEBlbmQ6IFRoZSBtYXBs
ZSBub2RlIGVuZA0KKyAqIEBtdDogVGhlIG1hcGxlIG5vZGUgdHlwZQ0KKyAqLw0KK3N0YXRpYyBp
bmxpbmUgdm9pZCBtYXNfYnVsa19yZWJhbGFuY2Uoc3RydWN0IG1hX3N0YXRlICptYXMsIHVuc2ln
bmVkIGNoYXIgZW5kLA0KKwkJCQkgICAgICBlbnVtIG1hcGxlX3R5cGUgbXQpDQorew0KKwlpZiAo
IShtYXMtPm1hc19mbGFncyAmIE1BX1NUQVRFX0JVTEspKQ0KKwkJcmV0dXJuOw0KKw0KKwlpZiAo
bXRlX2lzX3Jvb3QobWFzLT5ub2RlKSkNCisJCXJldHVybjsNCisNCisJaWYgKGVuZCA+IG10X21p
bl9zbG90c1ttdF0pIHsNCisJCW1hcy0+bWFzX2ZsYWdzICY9IH5NQV9TVEFURV9SRUJBTEFOQ0U7
DQorCQlyZXR1cm47DQorCX0NCit9DQorDQorLyoNCisgKiBtYXNfc3RvcmVfYl9ub2RlKCkgLSBT
dG9yZSBhbiBAZW50cnkgaW50byB0aGUgYl9ub2RlIHdoaWxlIGFsc28gY29weWluZyB0aGUNCisg
KiBkYXRhIGZyb20gYSBtYXBsZSBlbmNvZGVkIG5vZGUuDQorICogQG1hczogdGhlIG1hcGxlIHN0
YXRlDQorICogQGJfbm9kZTogdGhlIG1hcGxlX2JpZ19ub2RlIHRvIGZpbGwgd2l0aCBkYXRhDQor
ICogQGVudHJ5OiB0aGUgZGF0YSB0byBzdG9yZS4NCisgKg0KKyAqIFJldHVybjogVGhlIGFjdHVh
bCBlbmQgb2YgdGhlIGRhdGEgc3RvcmVkIGluIEBiX25vZGUNCisgKi8NCitzdGF0aWMgaW5saW5l
IHVuc2lnbmVkIGNoYXIgbWFzX3N0b3JlX2Jfbm9kZShzdHJ1Y3QgbWFfd3Jfc3RhdGUgKndyX21h
cywNCisJCQkJICAgIHN0cnVjdCBtYXBsZV9iaWdfbm9kZSAqYl9ub2RlLA0KKwkJCQkgICAgdW5z
aWduZWQgY2hhciBvZmZzZXRfZW5kKQ0KK3sNCisJdW5zaWduZWQgY2hhciBzbG90Ow0KKwl1bnNp
Z25lZCBjaGFyIGJfZW5kOw0KKwkvKiBQb3NzaWJsZSB1bmRlcmZsb3cgb2YgcGl2IHdpbGwgd3Jh
cCBiYWNrIHRvIDAgYmVmb3JlIHVzZS4gKi8NCisJdW5zaWduZWQgbG9uZyBwaXY7DQorCXN0cnVj
dCBtYV9zdGF0ZSAqbWFzID0gd3JfbWFzLT5tYXM7DQorDQorCWJfbm9kZS0+dHlwZSA9IHdyX21h
cy0+dHlwZTsNCisJYl9lbmQgPSAwOw0KKwlzbG90ID0gbWFzLT5vZmZzZXQ7DQorCWlmIChzbG90
KSB7DQorCQkvKiBDb3B5IHN0YXJ0IGRhdGEgdXAgdG8gaW5zZXJ0LiAqLw0KKwkJbWFzX21hYl9j
cChtYXMsIDAsIHNsb3QgLSAxLCBiX25vZGUsIDApOw0KKwkJYl9lbmQgPSBiX25vZGUtPmJfZW5k
Ow0KKwkJcGl2ID0gYl9ub2RlLT5waXZvdFtiX2VuZCAtIDFdOw0KKwl9IGVsc2UNCisJCXBpdiA9
IG1hcy0+bWluIC0gMTsNCisNCisJaWYgKHBpdiArIDEgPCBtYXMtPmluZGV4KSB7DQorCQkvKiBI
YW5kbGUgcmFuZ2Ugc3RhcnRpbmcgYWZ0ZXIgb2xkIHJhbmdlICovDQorCQliX25vZGUtPnNsb3Rb
Yl9lbmRdID0gd3JfbWFzLT5jb250ZW50Ow0KKwkJaWYgKCF3cl9tYXMtPmNvbnRlbnQpDQorCQkJ
Yl9ub2RlLT5nYXBbYl9lbmRdID0gbWFzLT5pbmRleCAtIDEgLSBwaXY7DQorCQliX25vZGUtPnBp
dm90W2JfZW5kKytdID0gbWFzLT5pbmRleCAtIDE7DQorCX0NCisNCisJLyogU3RvcmUgdGhlIG5l
dyBlbnRyeS4gKi8NCisJbWFzLT5vZmZzZXQgPSBiX2VuZDsNCisJYl9ub2RlLT5zbG90W2JfZW5k
XSA9IHdyX21hcy0+ZW50cnk7DQorCWJfbm9kZS0+cGl2b3RbYl9lbmRdID0gbWFzLT5sYXN0Ow0K
Kw0KKwkvKiBBcHBlbmRlZC4gKi8NCisJaWYgKG1hcy0+bGFzdCA+PSBtYXMtPm1heCkNCisJCXJl
dHVybiBiX2VuZDsNCisNCisJLyogSGFuZGxlIG5ldyByYW5nZSBlbmRpbmcgYmVmb3JlIG9sZCBy
YW5nZSBlbmRzICovDQorCXBpdiA9IG1hc19sb2dpY2FsX3Bpdm90KG1hcywgd3JfbWFzLT5waXZv
dHMsIG9mZnNldF9lbmQsIHdyX21hcy0+dHlwZSk7DQorCWlmIChwaXYgPiBtYXMtPmxhc3QpIHsN
CisJCWlmIChwaXYgPT0gVUxPTkdfTUFYKQ0KKwkJCW1hc19idWxrX3JlYmFsYW5jZShtYXMsIGJf
bm9kZS0+Yl9lbmQsIHdyX21hcy0+dHlwZSk7DQorDQorCQlpZiAob2Zmc2V0X2VuZCAhPSBzbG90
KQ0KKwkJCXdyX21hcy0+Y29udGVudCA9IG1hc19zbG90X2xvY2tlZChtYXMsIHdyX21hcy0+c2xv
dHMsDQorCQkJCQkJCSAgb2Zmc2V0X2VuZCk7DQorDQorCQliX25vZGUtPnNsb3RbKytiX2VuZF0g
PSB3cl9tYXMtPmNvbnRlbnQ7DQorCQlpZiAoIXdyX21hcy0+Y29udGVudCkNCisJCQliX25vZGUt
PmdhcFtiX2VuZF0gPSBwaXYgLSBtYXMtPmxhc3QgKyAxOw0KKwkJYl9ub2RlLT5waXZvdFtiX2Vu
ZF0gPSBwaXY7DQorCX0NCisNCisJc2xvdCA9IG9mZnNldF9lbmQgKyAxOw0KKwlpZiAoc2xvdCA+
IHdyX21hcy0+bm9kZV9lbmQpDQorCQlyZXR1cm4gYl9lbmQ7DQorDQorCS8qIENvcHkgZW5kIGRh
dGEgdG8gdGhlIGVuZCBvZiB0aGUgbm9kZS4gKi8NCisJbWFzX21hYl9jcChtYXMsIHNsb3QsIHdy
X21hcy0+bm9kZV9lbmQgKyAxLCBiX25vZGUsICsrYl9lbmQpOw0KKwliX2VuZCA9IGJfbm9kZS0+
Yl9lbmQgLSAxOw0KKwlyZXR1cm4gYl9lbmQ7DQorfQ0KKw0KKy8qDQorICogbWFzX3ByZXZfc2li
bGluZygpIC0gRmluZCB0aGUgcHJldmlvdXMgbm9kZSB3aXRoIHRoZSBzYW1lIHBhcmVudC4NCisg
KiBAbWFzOiB0aGUgbWFwbGUgc3RhdGUNCisgKg0KKyAqIFJldHVybjogVHJ1ZSBpZiB0aGVyZSBp
cyBhIHByZXZpb3VzIHNpYmxpbmcsIGZhbHNlIG90aGVyd2lzZS4NCisgKi8NCitzdGF0aWMgaW5s
aW5lIGJvb2wgbWFzX3ByZXZfc2libGluZyhzdHJ1Y3QgbWFfc3RhdGUgKm1hcykNCit7DQorCXVu
c2lnbmVkIGludCBwX3Nsb3QgPSBtdGVfcGFyZW50X3Nsb3QobWFzLT5ub2RlKTsNCisNCisJaWYg
KG10ZV9pc19yb290KG1hcy0+bm9kZSkpDQorCQlyZXR1cm4gZmFsc2U7DQorDQorCWlmICghcF9z
bG90KQ0KKwkJcmV0dXJuIGZhbHNlOw0KKw0KKwltYXNfYXNjZW5kKG1hcyk7DQorCW1hcy0+b2Zm
c2V0ID0gcF9zbG90IC0gMTsNCisJbWFzX2Rlc2NlbmQobWFzKTsNCisJcmV0dXJuIHRydWU7DQor
fQ0KKw0KKy8qDQorICogbWFzX25leHRfc2libGluZygpIC0gRmluZCB0aGUgbmV4dCBub2RlIHdp
dGggdGhlIHNhbWUgcGFyZW50Lg0KKyAqIEBtYXM6IHRoZSBtYXBsZSBzdGF0ZQ0KKyAqDQorICog
UmV0dXJuOiB0cnVlIGlmIHRoZXJlIGlzIGEgbmV4dCBzaWJsaW5nLCBmYWxzZSBvdGhlcndpc2Uu
DQorICovDQorc3RhdGljIGlubGluZSBib29sIG1hc19uZXh0X3NpYmxpbmcoc3RydWN0IG1hX3N0
YXRlICptYXMpDQorew0KKwlNQV9TVEFURShwYXJlbnQsIG1hcy0+dHJlZSwgbWFzLT5pbmRleCwg
bWFzLT5sYXN0KTsNCisNCisJaWYgKG10ZV9pc19yb290KG1hcy0+bm9kZSkpDQorCQlyZXR1cm4g
ZmFsc2U7DQorDQorCXBhcmVudCA9ICptYXM7DQorCW1hc19hc2NlbmQoJnBhcmVudCk7DQorCXBh
cmVudC5vZmZzZXQgPSBtdGVfcGFyZW50X3Nsb3QobWFzLT5ub2RlKSArIDE7DQorCWlmIChwYXJl
bnQub2Zmc2V0ID4gbWFzX2RhdGFfZW5kKCZwYXJlbnQpKQ0KKwkJcmV0dXJuIGZhbHNlOw0KKw0K
KwkqbWFzID0gcGFyZW50Ow0KKwltYXNfZGVzY2VuZChtYXMpOw0KKwlyZXR1cm4gdHJ1ZTsNCit9
DQorDQorLyoNCisgKiBtdGVfbm9kZV9vcl9ub2RlKCkgLSBSZXR1cm4gdGhlIGVuY29kZWQgbm9k
ZSBvciBNQVNfTk9ORS4NCisgKiBAZW5vZGU6IFRoZSBlbmNvZGVkIG1hcGxlIG5vZGUuDQorICoN
CisgKiBTaG9ydGhhbmQgdG8gYXZvaWQgc2V0dGluZyAlTlVMTHMgaW4gdGhlIHRyZWUgb3IgbWFw
bGVfc3VidHJlZV9zdGF0ZS4NCisgKg0KKyAqIFJldHVybjogQGVub2RlIG9yIE1BU19OT05FDQor
ICovDQorc3RhdGljIGlubGluZSBzdHJ1Y3QgbWFwbGVfZW5vZGUgKm10ZV9ub2RlX29yX25vbmUo
c3RydWN0IG1hcGxlX2Vub2RlICplbm9kZSkNCit7DQorCWlmIChlbm9kZSkNCisJCXJldHVybiBl
bm9kZTsNCisNCisJcmV0dXJuIG1hX2Vub2RlX3B0cihNQVNfTk9ORSk7DQorfQ0KKw0KKy8qDQor
ICogbWFzX3dyX25vZGVfd2FsaygpIC0gRmluZCB0aGUgY29ycmVjdCBvZmZzZXQgZm9yIHRoZSBp
bmRleCBpbiB0aGUgQG1hcy4NCisgKiBAd3JfbWFzOiBUaGUgbWFwbGUgd3JpdGUgc3RhdGUNCisg
Kg0KKyAqIFVzZXMgbWFzX3Nsb3RfbG9ja2VkKCkgYW5kIGRvZXMgbm90IG5lZWQgdG8gd29ycnkg
YWJvdXQgZGVhZCBub2Rlcy4NCisgKi8NCitzdGF0aWMgaW5saW5lIHZvaWQgbWFzX3dyX25vZGVf
d2FsayhzdHJ1Y3QgbWFfd3Jfc3RhdGUgKndyX21hcykNCit7DQorCXN0cnVjdCBtYV9zdGF0ZSAq
bWFzID0gd3JfbWFzLT5tYXM7DQorCXVuc2lnbmVkIGNoYXIgY291bnQ7DQorCXVuc2lnbmVkIGNo
YXIgb2Zmc2V0Ow0KKwl1bnNpZ25lZCBsb25nIGluZGV4LCBtaW4sIG1heDsNCisNCisJaWYgKHVu
bGlrZWx5KG1hX2lzX2RlbnNlKHdyX21hcy0+dHlwZSkpKSB7DQorCQl3cl9tYXMtPnJfbWF4ID0g
d3JfbWFzLT5yX21pbiA9IG1hcy0+aW5kZXg7DQorCQltYXMtPm9mZnNldCA9IG1hcy0+aW5kZXgg
PSBtYXMtPm1pbjsNCisJCXJldHVybjsNCisJfQ0KKw0KKwl3cl9tYXMtPm5vZGUgPSBtYXNfbW4o
d3JfbWFzLT5tYXMpOw0KKwl3cl9tYXMtPnBpdm90cyA9IG1hX3Bpdm90cyh3cl9tYXMtPm5vZGUs
IHdyX21hcy0+dHlwZSk7DQorCWNvdW50ID0gd3JfbWFzLT5ub2RlX2VuZCA9IG1hX2RhdGFfZW5k
KHdyX21hcy0+bm9kZSwgd3JfbWFzLT50eXBlLA0KKwkJCQkJICAgICAgIHdyX21hcy0+cGl2b3Rz
LCBtYXMtPm1heCk7DQorCW9mZnNldCA9IG1hcy0+b2Zmc2V0Ow0KKwltaW4gPSBtYXNfc2FmZV9t
aW4obWFzLCB3cl9tYXMtPnBpdm90cywgb2Zmc2V0KTsNCisJbWF4ID0gd3JfbWFzLT5waXZvdHNb
b2Zmc2V0XTsNCisJaWYgKHVubGlrZWx5KG9mZnNldCA9PSBjb3VudCkpDQorCQlnb3RvIG1heDsg
LyogbWF5IGhhdmUgYmVlbiBzZXQgdG8gemVybyAqLw0KKw0KKwlpbmRleCA9IG1hcy0+aW5kZXg7
DQorCWlmICh1bmxpa2VseShpbmRleCA8PSBtYXgpKQ0KKwkJZ290byBkb25lOw0KKw0KKwlpZiAo
dW5saWtlbHkoIW1heCAmJiBvZmZzZXQpKQ0KKwkJZ290byBtYXg7DQorDQorCW1pbiA9IG1heCAr
IDE7DQorCXdoaWxlICgrK29mZnNldCA8IGNvdW50KSB7DQorCQltYXggPSB3cl9tYXMtPnBpdm90
c1tvZmZzZXRdOw0KKwkJaWYgKGluZGV4IDw9IG1heCkNCisJCQlnb3RvIGRvbmU7DQorCQllbHNl
IGlmICh1bmxpa2VseSghbWF4KSkNCisJCQlicmVhazsNCisNCisJCW1pbiA9IG1heCArIDE7DQor
CX0NCisNCittYXg6DQorCW1heCA9IG1hcy0+bWF4Ow0KK2RvbmU6DQorCXdyX21hcy0+cl9tYXgg
PSBtYXg7DQorCXdyX21hcy0+cl9taW4gPSBtaW47DQorCXdyX21hcy0+b2Zmc2V0X2VuZCA9IG1h
cy0+b2Zmc2V0ID0gb2Zmc2V0Ow0KK30NCisNCisvKg0KKyAqIG1hc3RfdG9waWFyeSgpIC0gQWRk
IHRoZSBwb3J0aW9ucyBvZiB0aGUgdHJlZSB0byB0aGUgcmVtb3ZhbCBsaXN0OyBlaXRoZXIgdG8N
CisgKiBiZSBmcmVlZCBvciBkaXNjYXJkZWQgKGRlc3Ryb3kgd2FsaykuDQorICogQG1hc3Q6IFRo
ZSBtYXBsZV9zdWJ0cmVlX3N0YXRlLg0KKyAqLw0KK3N0YXRpYyBpbmxpbmUgdm9pZCBtYXN0X3Rv
cGlhcnkoc3RydWN0IG1hcGxlX3N1YnRyZWVfc3RhdGUgKm1hc3QpDQorew0KKwlNQV9XUl9TVEFU
RSh3cl9tYXMsIG1hc3QtPm9yaWdfbCwgTlVMTCk7DQorCXVuc2lnbmVkIGNoYXIgbF9vZmYsIHJf
b2ZmLCBvZmZzZXQ7DQorCXVuc2lnbmVkIGxvbmcgbF9pbmRleDsNCisJc3RydWN0IG1hcGxlX2Vu
b2RlICpjaGlsZDsNCisJdm9pZCBfX3JjdSAqKnNsb3RzOw0KKw0KKwl3cl9tYXMudHlwZSA9IG10
ZV9ub2RlX3R5cGUobWFzdC0+b3JpZ19sLT5ub2RlKTsNCisJLyogVGhlIGxlZnQgbm9kZSBpcyBj
b25zdW1lZCwgc28gYWRkIHRvIHRoZSBmcmVlIGxpc3QuICovDQorCWxfaW5kZXggPSBtYXN0LT5v
cmlnX2wtPmluZGV4Ow0KKwltYXN0LT5vcmlnX2wtPmluZGV4ID0gbWFzdC0+b3JpZ19sLT5sYXN0
Ow0KKwltYXNfd3Jfbm9kZV93YWxrKCZ3cl9tYXMpOw0KKwltYXN0LT5vcmlnX2wtPmluZGV4ID0g
bF9pbmRleDsNCisJbF9vZmYgPSBtYXN0LT5vcmlnX2wtPm9mZnNldDsNCisJcl9vZmYgPSBtYXN0
LT5vcmlnX3ItPm9mZnNldDsNCisJaWYgKG1hc3QtPm9yaWdfbC0+bm9kZSA9PSBtYXN0LT5vcmln
X3ItPm5vZGUpIHsNCisJCXNsb3RzID0gbWFfc2xvdHMobXRlX3RvX25vZGUobWFzdC0+b3JpZ19s
LT5ub2RlKSwgd3JfbWFzLnR5cGUpOw0KKwkJZm9yIChvZmZzZXQgPSBsX29mZiArIDE7IG9mZnNl
dCA8IHJfb2ZmOyBvZmZzZXQrKykNCisJCQltYXRfYWRkKG1hc3QtPmRlc3Ryb3ksIG1hc19zbG90
X2xvY2tlZChtYXN0LT5vcmlnX2wsDQorCQkJCQkJCXNsb3RzLCBvZmZzZXQpKTsNCisNCisJCXJl
dHVybjsNCisJfQ0KKw0KKwkvKiBtYXN0LT5vcmlnX3IgaXMgZGlmZmVyZW50IGFuZCBjb25zdW1l
ZC4gKi8NCisJaWYgKG10ZV9pc19sZWFmKG1hc3QtPm9yaWdfci0+bm9kZSkpDQorCQlyZXR1cm47
DQorDQorCS8qIE5vdyBkZXN0cm95IGxfb2ZmICsgMSAtPiBlbmQgYW5kIDAgLT4gcl9vZmYgLSAx
ICovDQorCW9mZnNldCA9IGxfb2ZmICsgMTsNCisJc2xvdHMgPSBtYV9zbG90cyhtdGVfdG9fbm9k
ZShtYXN0LT5vcmlnX2wtPm5vZGUpLCB3cl9tYXMudHlwZSk7DQorCXdoaWxlIChvZmZzZXQgPCBt
dF9zbG90c1t3cl9tYXMudHlwZV0pIHsNCisJCWNoaWxkID0gbWFzX3Nsb3RfbG9ja2VkKG1hc3Qt
Pm9yaWdfbCwgc2xvdHMsIG9mZnNldCsrKTsNCisJCWlmICghY2hpbGQpDQorCQkJYnJlYWs7DQor
DQorCQltYXRfYWRkKG1hc3QtPmRlc3Ryb3ksIGNoaWxkKTsNCisJfQ0KKw0KKwlzbG90cyA9IG1h
X3Nsb3RzKG10ZV90b19ub2RlKG1hc3QtPm9yaWdfci0+bm9kZSksDQorCQkJICAgICBtdGVfbm9k
ZV90eXBlKG1hc3QtPm9yaWdfci0+bm9kZSkpOw0KKwlmb3IgKG9mZnNldCA9IDA7IG9mZnNldCA8
IHJfb2ZmOyBvZmZzZXQrKykNCisJCW1hdF9hZGQobWFzdC0+ZGVzdHJveSwNCisJCQkJbWFzX3Ns
b3RfbG9ja2VkKG1hc3QtPm9yaWdfbCwgc2xvdHMsIG9mZnNldCkpOw0KK30NCisNCisvKg0KKyAq
IG1hc3RfcmViYWxhbmNlX25leHQoKSAtIFJlYmFsYW5jZSBhZ2FpbnN0IHRoZSBuZXh0IG5vZGUN
CisgKiBAbWFzdDogVGhlIG1hcGxlIHN1YnRyZWUgc3RhdGUNCisgKiBAb2xkX3I6IFRoZSBlbmNv
ZGVkIG1hcGxlIG5vZGUgdG8gdGhlIHJpZ2h0IChuZXh0IG5vZGUpLg0KKyAqLw0KK3N0YXRpYyBp
bmxpbmUgdm9pZCBtYXN0X3JlYmFsYW5jZV9uZXh0KHN0cnVjdCBtYXBsZV9zdWJ0cmVlX3N0YXRl
ICptYXN0LA0KKwkJCQkgICAgICAgc3RydWN0IG1hcGxlX2Vub2RlICpvbGRfciwgYm9vbCBmcmVl
KQ0KK3sNCisJdW5zaWduZWQgY2hhciBiX2VuZCA9IG1hc3QtPmJuLT5iX2VuZDsNCisNCisJbWFz
X21hYl9jcChtYXN0LT5vcmlnX3IsIDAsIG10X3Nsb3RfY291bnQobWFzdC0+b3JpZ19yLT5ub2Rl
KSwNCisJCSAgIG1hc3QtPmJuLCBiX2VuZCk7DQorCWlmIChmcmVlKQ0KKwkJbWF0X2FkZChtYXN0
LT5mcmVlLCBvbGRfcik7DQorDQorCW1hc3QtPm9yaWdfci0+bGFzdCA9IG1hc3QtPm9yaWdfci0+
bWF4Ow0KKwlpZiAob2xkX3IgPT0gbWFzdC0+b3JpZ19sLT5ub2RlKQ0KKwkJbWFzdC0+b3JpZ19s
LT5ub2RlID0gbWFzdC0+b3JpZ19yLT5ub2RlOw0KK30NCisNCisvKg0KKyAqIG1hc3RfcmViYWxh
Y2VfcHJldigpIC0gUmViYWxhbmNlIGFnYWluc3QgdGhlIHByZXZpb3VzIG5vZGUNCisgKiBAbWFz
dDogVGhlIG1hcGxlIHN1YnRyZWUgc3RhdGUNCisgKiBAb2xkX2w6IFRoZSBlbmNvZGVkIG1hcGxl
IG5vZGUgdG8gdGhlIGxlZnQgKHByZXZpb3VzIG5vZGUpDQorICovDQorc3RhdGljIGlubGluZSB2
b2lkIG1hc3RfcmViYWxhbmNlX3ByZXYoc3RydWN0IG1hcGxlX3N1YnRyZWVfc3RhdGUgKm1hc3Qs
DQorCQkJCSAgICAgICBzdHJ1Y3QgbWFwbGVfZW5vZGUgKm9sZF9sKQ0KK3sNCisJdW5zaWduZWQg
Y2hhciBlbmQgPSBtYXNfZGF0YV9lbmQobWFzdC0+b3JpZ19sKSArIDE7DQorCXVuc2lnbmVkIGNo
YXIgYl9lbmQgPSBtYXN0LT5ibi0+Yl9lbmQ7DQorDQorCW1hYl9zaGlmdF9yaWdodChtYXN0LT5i
biwgZW5kKTsNCisJbWFzX21hYl9jcChtYXN0LT5vcmlnX2wsIDAsIGVuZCAtIDEsIG1hc3QtPmJu
LCAwKTsNCisJbWF0X2FkZChtYXN0LT5mcmVlLCBvbGRfbCk7DQorCWlmIChtYXN0LT5vcmlnX3It
Pm5vZGUgPT0gb2xkX2wpDQorCQltYXN0LT5vcmlnX3ItPm5vZGUgPSBtYXN0LT5vcmlnX2wtPm5v
ZGU7DQorCW1hc3QtPmwtPm1pbiA9IG1hc3QtPm9yaWdfbC0+bWluOw0KKwltYXN0LT5vcmlnX2wt
PmluZGV4ID0gbWFzdC0+b3JpZ19sLT5taW47DQorCW1hc3QtPmJuLT5iX2VuZCA9IGVuZCArIGJf
ZW5kOw0KKwltYXN0LT5sLT5vZmZzZXQgKz0gZW5kOw0KK30NCisNCisvKg0KKyAqIG1hc3Rfc2li
bGluZ19yZWJhbGFuY2VfcmlnaHQoKSAtIFJlYmFsYW5jZSBmcm9tIG5vZGVzIHdpdGggdGhlIHNh
bWUgcGFyZW50cy4NCisgKiBDaGVjayB0aGUgcmlnaHQgc2lkZSwgdGhlbiB0aGUgbGVmdC4gIERh
dGEgaXMgY29waWVkIGludG8gdGhlIEBtYXN0LT5ibi4NCisgKiBAbWFzdDogVGhlIG1hcGxlX3N1
YnRyZWVfc3RhdGUuDQorICovDQorc3RhdGljIGlubGluZQ0KK2Jvb2wgbWFzdF9zaWJsaW5nX3Jl
YmFsYW5jZV9yaWdodChzdHJ1Y3QgbWFwbGVfc3VidHJlZV9zdGF0ZSAqbWFzdCwgYm9vbCBmcmVl
KQ0KK3sNCisJc3RydWN0IG1hcGxlX2Vub2RlICpvbGRfcjsNCisJc3RydWN0IG1hcGxlX2Vub2Rl
ICpvbGRfbDsNCisNCisJb2xkX3IgPSBtYXN0LT5vcmlnX3ItPm5vZGU7DQorCWlmIChtYXNfbmV4
dF9zaWJsaW5nKG1hc3QtPm9yaWdfcikpIHsNCisJCW1hc3RfcmViYWxhbmNlX25leHQobWFzdCwg
b2xkX3IsIGZyZWUpOw0KKwkJcmV0dXJuIHRydWU7DQorCX0NCisNCisJb2xkX2wgPSBtYXN0LT5v
cmlnX2wtPm5vZGU7DQorCWlmIChtYXNfcHJldl9zaWJsaW5nKG1hc3QtPm9yaWdfbCkpIHsNCisJ
CW1hc3RfcmViYWxhbmNlX3ByZXYobWFzdCwgb2xkX2wpOw0KKwkJcmV0dXJuIHRydWU7DQorCX0N
CisNCisJcmV0dXJuIGZhbHNlOw0KK30NCisNCitzdGF0aWMgaW5saW5lIGludCBtYXNfcHJldl9u
b2RlKHN0cnVjdCBtYV9zdGF0ZSAqbWFzLCB1bnNpZ25lZCBsb25nIG1pbik7DQorc3RhdGljIGlu
bGluZSBpbnQgbWFzX25leHRfbm9kZShzdHJ1Y3QgbWFfc3RhdGUgKm1hcywgc3RydWN0IG1hcGxl
X25vZGUgKm5vZGUsDQorCQkJCXVuc2lnbmVkIGxvbmcgbWF4KTsNCisvKg0KKyAqIG1hc3RfY291
c2luX3JlYmFsYW5jZV9yaWdodCgpIC0gUmViYWxhbmNlIGZyb20gbm9kZXMgd2l0aCBkaWZmZXJl
bnQgcGFyZW50cy4NCisgKiBDaGVjayB0aGUgcmlnaHQgc2lkZSwgdGhlbiB0aGUgbGVmdC4gIERh
dGEgaXMgY29waWVkIGludG8gdGhlIEBtYXN0LT5ibi4NCisgKiBAbWFzdDogVGhlIG1hcGxlX3N1
YnRyZWVfc3RhdGUuDQorICovDQorc3RhdGljIGlubGluZQ0KK2Jvb2wgbWFzdF9jb3VzaW5fcmVi
YWxhbmNlX3JpZ2h0KHN0cnVjdCBtYXBsZV9zdWJ0cmVlX3N0YXRlICptYXN0LCBib29sIGZyZWUp
DQorew0KKwlzdHJ1Y3QgbWFwbGVfZW5vZGUgKm9sZF9sID0gbWFzdC0+b3JpZ19sLT5ub2RlOw0K
KwlzdHJ1Y3QgbWFwbGVfZW5vZGUgKm9sZF9yID0gbWFzdC0+b3JpZ19yLT5ub2RlOw0KKw0KKwlN
QV9TVEFURSh0bXAsIG1hc3QtPm9yaWdfci0+dHJlZSwgbWFzdC0+b3JpZ19yLT5pbmRleCwgbWFz
dC0+b3JpZ19yLT5sYXN0KTsNCisNCisJdG1wID0gKm1hc3QtPm9yaWdfcjsNCisJbWFzX25leHRf
bm9kZShtYXN0LT5vcmlnX3IsIG1hc19tbihtYXN0LT5vcmlnX3IpLCBVTE9OR19NQVgpOw0KKwlp
ZiAoIW1hc19pc19ub25lKG1hc3QtPm9yaWdfcikpIHsNCisJCW1hc3RfcmViYWxhbmNlX25leHQo
bWFzdCwgb2xkX3IsIGZyZWUpOw0KKwkJcmV0dXJuIHRydWU7DQorCX0NCisNCisJKm1hc3QtPm9y
aWdfciA9ICptYXN0LT5vcmlnX2w7DQorCSptYXN0LT5yID0gKm1hc3QtPmw7DQorCW1hc19wcmV2
X25vZGUobWFzdC0+b3JpZ19sLCAwKTsNCisJaWYgKG1hc19pc19ub25lKG1hc3QtPm9yaWdfbCkp
IHsNCisJCS8qIE1ha2luZyBhIG5ldyByb290IHdpdGggdGhlIGNvbnRlbnRzIG9mIG1hc3QtPmJu
ICovDQorCQkqbWFzdC0+b3JpZ19sID0gKm1hc3QtPm9yaWdfcjsNCisJCSptYXN0LT5vcmlnX3Ig
PSB0bXA7DQorCQlyZXR1cm4gZmFsc2U7DQorCX0NCisNCisJbWFzdC0+b3JpZ19sLT5vZmZzZXQg
PSAwOw0KKwltYXN0X3JlYmFsYW5jZV9wcmV2KG1hc3QsIG9sZF9sKTsNCisJcmV0dXJuIHRydWU7
DQorfQ0KKw0KKy8qDQorICogbWFzdF9hc2NlbmRfZnJlZSgpIC0gQWRkIGN1cnJlbnQgb3JpZ2lu
YWwgbWFwbGUgc3RhdGUgbm9kZXMgdG8gdGhlIGZyZWUgbGlzdA0KKyAqIGFuZCBhc2NlbmQuDQor
ICogQG1hc3Q6IHRoZSBtYXBsZSBzdWJ0cmVlIHN0YXRlLg0KKyAqDQorICogQXNjZW5kIHRoZSBv
cmlnaW5hbCBsZWZ0IGFuZCByaWdodCBzaWRlcyBhbmQgYWRkIHRoZSBwcmV2aW91cyBub2RlcyB0
byB0aGUNCisgKiBmcmVlIGxpc3QuICBTZXQgdGhlIHNsb3RzIHRvIHBvaW50IHRvIHRoZSBjb3Jy
ZWN0IGxvY2F0aW9uIGluIHRoZSBuZXcgbm9kZXMuDQorICovDQorc3RhdGljIGlubGluZSB2b2lk
DQorbWFzdF9hc2NlbmRfZnJlZShzdHJ1Y3QgbWFwbGVfc3VidHJlZV9zdGF0ZSAqbWFzdCkNCit7
DQorCU1BX1dSX1NUQVRFKHdyX21hcywgbWFzdC0+b3JpZ19yLCAgTlVMTCk7DQorCXN0cnVjdCBt
YXBsZV9lbm9kZSAqbGVmdCA9IG1hc3QtPm9yaWdfbC0+bm9kZTsNCisJc3RydWN0IG1hcGxlX2Vu
b2RlICpyaWdodCA9IG1hc3QtPm9yaWdfci0+bm9kZTsNCisNCisJbWFzX2FzY2VuZChtYXN0LT5v
cmlnX2wpOw0KKwltYXNfYXNjZW5kKG1hc3QtPm9yaWdfcik7DQorCW1hdF9hZGQobWFzdC0+ZnJl
ZSwgbGVmdCk7DQorDQorCWlmIChsZWZ0ICE9IHJpZ2h0KQ0KKwkJbWF0X2FkZChtYXN0LT5mcmVl
LCByaWdodCk7DQorDQorCW1hc3QtPm9yaWdfci0+b2Zmc2V0ID0gMDsNCisJbWFzdC0+b3JpZ19y
LT5pbmRleCA9IG1hc3QtPnItPm1heDsNCisJLyogbGFzdCBzaG91bGQgYmUgbGFyZ2VyIHRoYW4g
b3IgZXF1YWwgdG8gaW5kZXggKi8NCisJaWYgKG1hc3QtPm9yaWdfci0+bGFzdCA8IG1hc3QtPm9y
aWdfci0+aW5kZXgpDQorCQltYXN0LT5vcmlnX3ItPmxhc3QgPSBtYXN0LT5vcmlnX3ItPmluZGV4
Ow0KKwkvKg0KKwkgKiBUaGUgbm9kZSBtYXkgbm90IGNvbnRhaW4gdGhlIHZhbHVlIHNvIHNldCBz
bG90IHRvIGVuc3VyZSBhbGwNCisJICogb2YgdGhlIG5vZGVzIGNvbnRlbnRzIGFyZSBmcmVlZCBv
ciBkZXN0cm95ZWQuDQorCSAqLw0KKwlpZiAobWFzdC0+b3JpZ19yLT5tYXggPCBtYXN0LT5vcmln
X3ItPmxhc3QpDQorCQltYXN0LT5vcmlnX3ItPm9mZnNldCA9IG1hc19kYXRhX2VuZChtYXN0LT5v
cmlnX3IpICsgMTsNCisJZWxzZSB7DQorCQl3cl9tYXMudHlwZSA9IG10ZV9ub2RlX3R5cGUobWFz
dC0+b3JpZ19yLT5ub2RlKTsNCisJCW1hc193cl9ub2RlX3dhbGsoJndyX21hcyk7DQorCX0NCisJ
LyogU2V0IHVwIHRoZSBsZWZ0IHNpZGUgb2YgdGhpbmdzICovDQorCW1hc3QtPm9yaWdfbC0+b2Zm
c2V0ID0gMDsNCisJbWFzdC0+b3JpZ19sLT5pbmRleCA9IG1hc3QtPmwtPm1pbjsNCisJd3JfbWFz
Lm1hcyA9IG1hc3QtPm9yaWdfbDsNCisJd3JfbWFzLnR5cGUgPSBtdGVfbm9kZV90eXBlKG1hc3Qt
Pm9yaWdfbC0+bm9kZSk7DQorCW1hc193cl9ub2RlX3dhbGsoJndyX21hcyk7DQorfQ0KKw0KKy8q
DQorICogbWFzX25ld19tYV9ub2RlKCkgLSBDcmVhdGUgYW5kIHJldHVybiBhIG5ldyBtYXBsZSBu
b2RlLiAgSGVscGVyIGZ1bmN0aW9uLg0KKyAqIEBtYXM6IHRoZSBtYXBsZSBzdGF0ZSB3aXRoIHRo
ZSBhbGxvY2F0aW9ucy4NCisgKiBAYl9ub2RlOiB0aGUgbWFwbGVfYmlnX25vZGUgd2l0aCB0aGUg
dHlwZSBlbmNvZGluZy4NCisgKg0KKyAqIFVzZSB0aGUgbm9kZSB0eXBlIGZyb20gdGhlIG1hcGxl
X2JpZ19ub2RlIHRvIGFsbG9jYXRlIGEgbmV3IG5vZGUgZnJvbSB0aGUNCisgKiBtYV9zdGF0ZS4g
IFRoaXMgZnVuY3Rpb24gZXhpc3RzIG1haW5seSBmb3IgY29kZSByZWFkYWJpbGl0eS4NCisgKg0K
KyAqIFJldHVybjogQSBuZXcgbWFwbGUgZW5jb2RlZCBub2RlDQorICovDQorc3RhdGljIGlubGlu
ZSBzdHJ1Y3QgbWFwbGVfZW5vZGUNCisqbWFzX25ld19tYV9ub2RlKHN0cnVjdCBtYV9zdGF0ZSAq
bWFzLCBzdHJ1Y3QgbWFwbGVfYmlnX25vZGUgKmJfbm9kZSkNCit7DQorCXJldHVybiBtdF9ta19u
b2RlKG1hX21ub2RlX3B0cihtYXNfcG9wX25vZGUobWFzKSksIGJfbm9kZS0+dHlwZSk7DQorfQ0K
Kw0KKy8qDQorICogbWFzX21hYl90b19ub2RlKCkgLSBTZXQgdXAgcmlnaHQgYW5kIG1pZGRsZSBu
b2Rlcw0KKyAqDQorICogQG1hczogdGhlIG1hcGxlIHN0YXRlIHRoYXQgY29udGFpbnMgdGhlIGFs
bG9jYXRpb25zLg0KKyAqIEBiX25vZGU6IHRoZSBub2RlIHdoaWNoIGNvbnRhaW5zIHRoZSBkYXRh
Lg0KKyAqIEBsZWZ0OiBUaGUgcG9pbnRlciB3aGljaCB3aWxsIGhhdmUgdGhlIGxlZnQgbm9kZQ0K
KyAqIEByaWdodDogVGhlIHBvaW50ZXIgd2hpY2ggbWF5IGhhdmUgdGhlIHJpZ2h0IG5vZGUNCisg
KiBAbWlkZGxlOiB0aGUgcG9pbnRlciB3aGljaCBtYXkgaGF2ZSB0aGUgbWlkZGxlIG5vZGUgKHJh
cmUpDQorICogQG1pZF9zcGxpdDogdGhlIHNwbGl0IGxvY2F0aW9uIGZvciB0aGUgbWlkZGxlIG5v
ZGUNCisgKg0KKyAqIFJldHVybjogdGhlIHNwbGl0IG9mIGxlZnQuDQorICovDQorc3RhdGljIGlu
bGluZSB1bnNpZ25lZCBjaGFyIG1hc19tYWJfdG9fbm9kZShzdHJ1Y3QgbWFfc3RhdGUgKm1hcywN
CisJCQkJCSAgICBzdHJ1Y3QgbWFwbGVfYmlnX25vZGUgKmJfbm9kZSwNCisJCQkJCSAgICBzdHJ1
Y3QgbWFwbGVfZW5vZGUgKipsZWZ0LA0KKwkJCQkJICAgIHN0cnVjdCBtYXBsZV9lbm9kZSAqKnJp
Z2h0LA0KKwkJCQkJICAgIHN0cnVjdCBtYXBsZV9lbm9kZSAqKm1pZGRsZSwNCisJCQkJCSAgICB1
bnNpZ25lZCBjaGFyICptaWRfc3BsaXQpDQorew0KKwl1bnNpZ25lZCBjaGFyIHNwbGl0ID0gMDsN
CisJdW5zaWduZWQgY2hhciBzbG90X2NvdW50ID0gbXRfc2xvdHNbYl9ub2RlLT50eXBlXTsNCisN
CisJKmxlZnQgPSBtYXNfbmV3X21hX25vZGUobWFzLCBiX25vZGUpOw0KKwkqcmlnaHQgPSBOVUxM
Ow0KKwkqbWlkZGxlID0gTlVMTDsNCisJKm1pZF9zcGxpdCA9IDA7DQorDQorCWlmIChiX25vZGUt
PmJfZW5kIDwgc2xvdF9jb3VudCkgew0KKwkJc3BsaXQgPSBiX25vZGUtPmJfZW5kOw0KKwl9IGVs
c2Ugew0KKwkJc3BsaXQgPSBtYWJfY2FsY19zcGxpdChtYXMsIGJfbm9kZSwgbWlkX3NwbGl0KTsN
CisJCSpyaWdodCA9IG1hc19uZXdfbWFfbm9kZShtYXMsIGJfbm9kZSk7DQorCX0NCisNCisJaWYg
KCptaWRfc3BsaXQpDQorCQkqbWlkZGxlID0gbWFzX25ld19tYV9ub2RlKG1hcywgYl9ub2RlKTsN
CisNCisJcmV0dXJuIHNwbGl0Ow0KKw0KK30NCisNCisvKg0KKyAqIG1hYl9zZXRfYl9lbmQoKSAt
IEFkZCBlbnRyeSB0byBiX25vZGUgYXQgYl9ub2RlLT5iX2VuZCBhbmQgaW5jcmVtZW50IHRoZSBl
bmQNCisgKiBwb2ludGVyLg0KKyAqIEBiX25vZGUgLSB0aGUgYmlnIG5vZGUgdG8gYWRkIHRoZSBl
bnRyeQ0KKyAqIEBtYXMgLSB0aGUgbWFwbGUgc3RhdGUgdG8gZ2V0IHRoZSBwaXZvdCAobWFzLT5t
YXgpDQorICogQGVudHJ5IC0gdGhlIGVudHJ5IHRvIGFkZCwgaWYgTlVMTCBub3RoaW5nIGhhcHBl
bnMuDQorICovDQorc3RhdGljIGlubGluZSB2b2lkIG1hYl9zZXRfYl9lbmQoc3RydWN0IG1hcGxl
X2JpZ19ub2RlICpiX25vZGUsDQorCQkJCSBzdHJ1Y3QgbWFfc3RhdGUgKm1hcywNCisJCQkJIHZv
aWQgKmVudHJ5KQ0KK3sNCisJaWYgKCFlbnRyeSkNCisJCXJldHVybjsNCisNCisJYl9ub2RlLT5z
bG90W2Jfbm9kZS0+Yl9lbmRdID0gZW50cnk7DQorCWlmIChtdF9pc19hbGxvYyhtYXMtPnRyZWUp
KQ0KKwkJYl9ub2RlLT5nYXBbYl9ub2RlLT5iX2VuZF0gPSBtYXNfbWF4X2dhcChtYXMpOw0KKwli
X25vZGUtPnBpdm90W2Jfbm9kZS0+Yl9lbmQrK10gPSBtYXMtPm1heDsNCit9DQorDQorLyoNCisg
KiBtYXNfc2V0X3NwbGl0X3BhcmVudCgpIC0gY29tYmluZV90aGVuX3NlcGFyYXRlIGhlbHBlciBm
dW5jdGlvbi4gIFNldHMgdGhlIHBhcmVudA0KKyAqIG9mIEBtYXMtPm5vZGUgdG8gZWl0aGVyIEBs
ZWZ0IG9yIEByaWdodCwgZGVwZW5kaW5nIG9uIEBzbG90IGFuZCBAc3BsaXQNCisgKg0KKyAqIEBt
YXMgLSB0aGUgbWFwbGUgc3RhdGUgd2l0aCB0aGUgbm9kZSB0aGF0IG5lZWRzIGEgcGFyZW50DQor
ICogQGxlZnQgLSBwb3NzaWJsZSBwYXJlbnQgMQ0KKyAqIEByaWdodCAtIHBvc3NpYmxlIHBhcmVu
dCAyDQorICogQHNsb3QgLSB0aGUgc2xvdCB0aGUgbWFzLT5ub2RlIHdhcyBwbGFjZWQNCisgKiBA
c3BsaXQgLSB0aGUgc3BsaXQgbG9jYXRpb24gYmV0d2VlbiBAbGVmdCBhbmQgQHJpZ2h0DQorICov
DQorc3RhdGljIGlubGluZSB2b2lkIG1hc19zZXRfc3BsaXRfcGFyZW50KHN0cnVjdCBtYV9zdGF0
ZSAqbWFzLA0KKwkJCQkJc3RydWN0IG1hcGxlX2Vub2RlICpsZWZ0LA0KKwkJCQkJc3RydWN0IG1h
cGxlX2Vub2RlICpyaWdodCwNCisJCQkJCXVuc2lnbmVkIGNoYXIgKnNsb3QsIHVuc2lnbmVkIGNo
YXIgc3BsaXQpDQorew0KKwlpZiAobWFzX2lzX25vbmUobWFzKSkNCisJCXJldHVybjsNCisNCisJ
aWYgKCgqc2xvdCkgPD0gc3BsaXQpDQorCQltdGVfc2V0X3BhcmVudChtYXMtPm5vZGUsIGxlZnQs
ICpzbG90KTsNCisJZWxzZSBpZiAocmlnaHQpDQorCQltdGVfc2V0X3BhcmVudChtYXMtPm5vZGUs
IHJpZ2h0LCAoKnNsb3QpIC0gc3BsaXQgLSAxKTsNCisNCisJKCpzbG90KSsrOw0KK30NCisNCisv
Kg0KKyAqIG10ZV9taWRfc3BsaXRfY2hlY2soKSAtIENoZWNrIGlmIHRoZSBuZXh0IG5vZGUgcGFz
c2VzIHRoZSBtaWQtc3BsaXQNCisgKiBAKipsOiBQb2ludGVyIHRvIGxlZnQgZW5jb2RlZCBtYXBs
ZSBub2RlLg0KKyAqIEAqKm06IFBvaW50ZXIgdG8gbWlkZGxlIGVuY29kZWQgbWFwbGUgbm9kZS4N
CisgKiBAKipyOiBQb2ludGVyIHRvIHJpZ2h0IGVuY29kZWQgbWFwbGUgbm9kZS4NCisgKiBAc2xv
dDogVGhlIG9mZnNldA0KKyAqIEAqc3BsaXQ6IFRoZSBzcGxpdCBsb2NhdGlvbi4NCisgKiBAbWlk
X3NwbGl0OiBUaGUgbWlkZGxlIHNwbGl0Lg0KKyAqLw0KK3N0YXRpYyBpbmxpbmUgdm9pZCBtdGVf
bWlkX3NwbGl0X2NoZWNrKHN0cnVjdCBtYXBsZV9lbm9kZSAqKmwsDQorCQkJCSAgICAgICBzdHJ1
Y3QgbWFwbGVfZW5vZGUgKipyLA0KKwkJCQkgICAgICAgc3RydWN0IG1hcGxlX2Vub2RlICpyaWdo
dCwNCisJCQkJICAgICAgIHVuc2lnbmVkIGNoYXIgc2xvdCwNCisJCQkJICAgICAgIHVuc2lnbmVk
IGNoYXIgKnNwbGl0LA0KKwkJCQkgICAgICAgdW5zaWduZWQgY2hhciBtaWRfc3BsaXQpDQorew0K
KwlpZiAoKnIgPT0gcmlnaHQpDQorCQlyZXR1cm47DQorDQorCWlmIChzbG90IDwgbWlkX3NwbGl0
KQ0KKwkJcmV0dXJuOw0KKw0KKwkqbCA9ICpyOw0KKwkqciA9IHJpZ2h0Ow0KKwkqc3BsaXQgPSBt
aWRfc3BsaXQ7DQorfQ0KKw0KKy8qDQorICogbWFzdF9zZXRfc3BsaXRfcGFyZW50cygpIC0gSGVs
cGVyIGZ1bmN0aW9uIHRvIHNldCB0aHJlZSBub2RlcyBwYXJlbnRzLiAgU2xvdA0KKyAqIGlzIHRh
a2VuIGZyb20gQG1hc3QtPmwuDQorICogQG1hc3QgLSB0aGUgbWFwbGUgc3VidHJlZSBzdGF0ZQ0K
KyAqIEBsZWZ0IC0gdGhlIGxlZnQgbm9kZQ0KKyAqIEByaWdodCAtIHRoZSByaWdodCBub2RlDQor
ICogQHNwbGl0IC0gdGhlIHNwbGl0IGxvY2F0aW9uLg0KKyAqLw0KK3N0YXRpYyBpbmxpbmUgdm9p
ZCBtYXN0X3NldF9zcGxpdF9wYXJlbnRzKHN0cnVjdCBtYXBsZV9zdWJ0cmVlX3N0YXRlICptYXN0
LA0KKwkJCQkJICBzdHJ1Y3QgbWFwbGVfZW5vZGUgKmxlZnQsDQorCQkJCQkgIHN0cnVjdCBtYXBs
ZV9lbm9kZSAqbWlkZGxlLA0KKwkJCQkJICBzdHJ1Y3QgbWFwbGVfZW5vZGUgKnJpZ2h0LA0KKwkJ
CQkJICB1bnNpZ25lZCBjaGFyIHNwbGl0LA0KKwkJCQkJICB1bnNpZ25lZCBjaGFyIG1pZF9zcGxp
dCkNCit7DQorCXVuc2lnbmVkIGNoYXIgc2xvdDsNCisJc3RydWN0IG1hcGxlX2Vub2RlICpsID0g
bGVmdDsNCisJc3RydWN0IG1hcGxlX2Vub2RlICpyID0gcmlnaHQ7DQorDQorCWlmIChtYXNfaXNf
bm9uZShtYXN0LT5sKSkNCisJCXJldHVybjsNCisNCisJaWYgKG1pZGRsZSkNCisJCXIgPSBtaWRk
bGU7DQorDQorCXNsb3QgPSBtYXN0LT5sLT5vZmZzZXQ7DQorDQorCW10ZV9taWRfc3BsaXRfY2hl
Y2soJmwsICZyLCByaWdodCwgc2xvdCwgJnNwbGl0LCBtaWRfc3BsaXQpOw0KKwltYXNfc2V0X3Nw
bGl0X3BhcmVudChtYXN0LT5sLCBsLCByLCAmc2xvdCwgc3BsaXQpOw0KKw0KKwltdGVfbWlkX3Nw
bGl0X2NoZWNrKCZsLCAmciwgcmlnaHQsIHNsb3QsICZzcGxpdCwgbWlkX3NwbGl0KTsNCisJbWFz
X3NldF9zcGxpdF9wYXJlbnQobWFzdC0+bSwgbCwgciwgJnNsb3QsIHNwbGl0KTsNCisNCisJbXRl
X21pZF9zcGxpdF9jaGVjaygmbCwgJnIsIHJpZ2h0LCBzbG90LCAmc3BsaXQsIG1pZF9zcGxpdCk7
DQorCW1hc19zZXRfc3BsaXRfcGFyZW50KG1hc3QtPnIsIGwsIHIsICZzbG90LCBzcGxpdCk7DQor
fQ0KKw0KKy8qDQorICogbWFzX3dtYl9yZXBsYWNlKCkgLSBXcml0ZSBtZW1vcnkgYmFycmllciBh
bmQgcmVwbGFjZQ0KKyAqIEBtYXM6IFRoZSBtYXBsZSBzdGF0ZQ0KKyAqIEBmcmVlOiB0aGUgbWFw
bGUgdG9waWFyeSBsaXN0IG9mIG5vZGVzIHRvIGZyZWUNCisgKiBAZGVzdHJveTogVGhlIG1hcGxl
IHRvcGlhcnkgbGlzdCBvZiBub2RlcyB0byBkZXN0cm95ICh3YWxrIGFuZCBmcmVlKQ0KKyAqDQor
ICogVXBkYXRlcyBnYXAgYXMgbmVjZXNzYXJ5Lg0KKyAqLw0KK3N0YXRpYyBpbmxpbmUgdm9pZCBt
YXNfd21iX3JlcGxhY2Uoc3RydWN0IG1hX3N0YXRlICptYXMsDQorCQkJCSAgIHN0cnVjdCBtYV90
b3BpYXJ5ICpmcmVlLA0KKwkJCQkgICBzdHJ1Y3QgbWFfdG9waWFyeSAqZGVzdHJveSkNCit7DQor
CS8qIEFsbCBub2RlcyBtdXN0IHNlZSBvbGQgZGF0YSBhcyBkZWFkIHByaW9yIHRvIHJlcGxhY2lu
ZyB0aGF0IGRhdGEgKi8NCisJc21wX3dtYigpOw0KKw0KKwkvKiBJbnNlcnQgdGhlIG5ldyBkYXRh
IGluIHRoZSB0cmVlICovDQorCW1hc19yZXBsYWNlKG1hcywgdHJ1ZSk7DQorDQorCWlmICghbXRl
X2lzX2xlYWYobWFzLT5ub2RlKSkNCisJCW1hc19kZXNjZW5kX2Fkb3B0KG1hcyk7DQorDQorCW1h
c19tYXRfZnJlZShtYXMsIGZyZWUpOw0KKw0KKwlpZiAoZGVzdHJveSkNCisJCW1hc19tYXRfZGVz
dHJveShtYXMsIGRlc3Ryb3kpOw0KKw0KKwlpZiAobXRlX2lzX2xlYWYobWFzLT5ub2RlKSkNCisJ
CXJldHVybjsNCisNCisJbWFzX3VwZGF0ZV9nYXAobWFzKTsNCit9DQorDQorLyoNCisgKiBtYXN0
X25ld19yb290KCkgLSBTZXQgYSBuZXcgdHJlZSByb290IGR1cmluZyBzdWJ0cmVlIGNyZWF0aW9u
DQorICogQG1hc3Q6IFRoZSBtYXBsZSBzdWJ0cmVlIHN0YXRlDQorICogQG1hczogVGhlIG1hcGxl
IHN0YXRlDQorICogKi8NCitzdGF0aWMgaW5saW5lIHZvaWQgbWFzdF9uZXdfcm9vdChzdHJ1Y3Qg
bWFwbGVfc3VidHJlZV9zdGF0ZSAqbWFzdCwNCisJCQkJIHN0cnVjdCBtYV9zdGF0ZSAqbWFzKQ0K
K3sNCisJbWFzX21uKG1hc3QtPmwpLT5wYXJlbnQgPQ0KKwkJbWFfcGFyZW50X3B0cigoKHVuc2ln
bmVkIGxvbmcpbWFzLT50cmVlIHwgTUFfUk9PVF9QQVJFTlQpKTsNCisJaWYgKCFtdGVfZGVhZF9u
b2RlKG1hc3QtPm9yaWdfbC0+bm9kZSkgJiYNCisJICAgICFtdGVfaXNfcm9vdChtYXN0LT5vcmln
X2wtPm5vZGUpKSB7DQorCQlkbyB7DQorCQkJbWFzdF9hc2NlbmRfZnJlZShtYXN0KTsNCisJCQlt
YXN0X3RvcGlhcnkobWFzdCk7DQorCQl9IHdoaWxlICghbXRlX2lzX3Jvb3QobWFzdC0+b3JpZ19s
LT5ub2RlKSk7DQorCX0NCisJaWYgKChtYXN0LT5vcmlnX2wtPm5vZGUgIT0gbWFzLT5ub2RlKSAm
Jg0KKwkJICAgKG1hc3QtPmwtPmRlcHRoID4gbWFzX210X2hlaWdodChtYXMpKSkgew0KKwkJbWF0
X2FkZChtYXN0LT5mcmVlLCBtYXMtPm5vZGUpOw0KKwl9DQorfQ0KKw0KKy8qDQorICogbWFzdF9j
cF90b19ub2RlcygpIC0gQ29weSBkYXRhIG91dCB0byBub2Rlcy4NCisgKiBAbWFzdDogVGhlIG1h
cGxlIHN1YnRyZWUgc3RhdGUNCisgKiBAbGVmdDogVGhlIGxlZnQgZW5jb2RlZCBtYXBsZSBub2Rl
DQorICogQG1pZGRsZTogVGhlIG1pZGRsZSBlbmNvZGVkIG1hcGxlIG5vZGUNCisgKiBAcmlnaHQ6
IFRoZSByaWdodCBlbmNvZGVkIG1hcGxlIG5vZGUNCisgKiBAc3BsaXQ6IFRoZSBsb2NhdGlvbiB0
byBzcGxpdCBiZXR3ZWVuIGxlZnQgYW5kIChtaWRkbGUgPyBtaWRkbGUgOiByaWdodCkNCisgKiBA
bWlkX3NwbGl0OiBUaGUgbG9jYXRpb24gdG8gc3BsaXQgYmV0d2VlbiBtaWRkbGUgYW5kIHJpZ2h0
Lg0KKyAqLw0KK3N0YXRpYyBpbmxpbmUgdm9pZCBtYXN0X2NwX3RvX25vZGVzKHN0cnVjdCBtYXBs
ZV9zdWJ0cmVlX3N0YXRlICptYXN0LA0KKwlzdHJ1Y3QgbWFwbGVfZW5vZGUgKmxlZnQsIHN0cnVj
dCBtYXBsZV9lbm9kZSAqbWlkZGxlLA0KKwlzdHJ1Y3QgbWFwbGVfZW5vZGUgKnJpZ2h0LCB1bnNp
Z25lZCBjaGFyIHNwbGl0LCB1bnNpZ25lZCBjaGFyIG1pZF9zcGxpdCkNCit7DQorCW1hc3QtPmwt
Pm5vZGUgPSBtdGVfbm9kZV9vcl9ub25lKGxlZnQpOw0KKwltYXN0LT5tLT5ub2RlID0gbXRlX25v
ZGVfb3Jfbm9uZShtaWRkbGUpOw0KKwltYXN0LT5yLT5ub2RlID0gbXRlX25vZGVfb3Jfbm9uZShy
aWdodCk7DQorDQorCW1hc3QtPmwtPm1pbiA9IG1hc3QtPm9yaWdfbC0+bWluOw0KKwltYXN0LT5s
LT5tYXggPSBtYXN0LT5ibi0+cGl2b3Rbc3BsaXRdOw0KKwltYWJfbWFzX2NwKG1hc3QtPmJuLCAw
LCBzcGxpdCwgbWFzdC0+bCwgdHJ1ZSk7DQorCW1hc3QtPnItPm1heCA9IG1hc3QtPmwtPm1heDsN
CisNCisJaWYgKG1pZGRsZSkgew0KKwkJbWFiX21hc19jcChtYXN0LT5ibiwgMSArIHNwbGl0LCBt
aWRfc3BsaXQsIG1hc3QtPm0sIHRydWUpOw0KKwkJbWFzdC0+bS0+bWluID0gbWFzdC0+Ym4tPnBp
dm90W3NwbGl0XSArIDE7DQorCQltYXN0LT5tLT5tYXggPSBtYXN0LT5ibi0+cGl2b3RbbWlkX3Nw
bGl0XTsNCisJCXNwbGl0ID0gbWlkX3NwbGl0Ow0KKwl9DQorDQorCWlmIChyaWdodCkgew0KKwkJ
bWFiX21hc19jcChtYXN0LT5ibiwgMSArIHNwbGl0LCBtYXN0LT5ibi0+Yl9lbmQsIG1hc3QtPnIs
IHRydWUpOw0KKwkJbWFzdC0+ci0+bWluID0gbWFzdC0+Ym4tPnBpdm90W3NwbGl0XSArIDE7DQor
CQltYXN0LT5yLT5tYXggPSBtYXN0LT5ibi0+cGl2b3RbbWFzdC0+Ym4tPmJfZW5kXTsNCisJfQ0K
K30NCisNCisvKg0KKyAqIG1hc3RfY29tYmluZV9jcF9sZWZ0IC0gQ29weSBpbiB0aGUgb3JpZ2lu
YWwgbGVmdCBzaWRlIG9mIHRoZSB0cmVlIGludG8gdGhlDQorICogY29tYmluZWQgZGF0YSBzZXQg
aW4gdGhlIG1hcGxlIHN1YnRyZWUgc3RhdGUgYmlnIG5vZGUuDQorICogQG1hc3Q6IFRoZSBtYXBs
ZSBzdWJ0cmVlIHN0YXRlDQorICovDQorc3RhdGljIGlubGluZSB2b2lkIG1hc3RfY29tYmluZV9j
cF9sZWZ0KHN0cnVjdCBtYXBsZV9zdWJ0cmVlX3N0YXRlICptYXN0KQ0KK3sNCisJdW5zaWduZWQg
Y2hhciBsX3Nsb3QgPSBtYXN0LT5vcmlnX2wtPm9mZnNldDsNCisNCisJaWYgKCFsX3Nsb3QpDQor
CQlyZXR1cm47DQorDQorCW1hc19tYWJfY3AobWFzdC0+b3JpZ19sLCAwLCBsX3Nsb3QgLSAxLCBt
YXN0LT5ibiwgMCk7DQorfQ0KKw0KKy8qDQorICogbWFzdF9jb21iaW5lX2NwX3JpZ2h0OiBDb3B5
IGluIHRoZSBvcmlnaW5hbCByaWdodCBzaWRlIG9mIHRoZSB0cmVlIGludG8gdGhlDQorICogY29t
YmluZWQgZGF0YSBzZXQgaW4gdGhlIG1hcGxlIHN1YnRyZWUgc3RhdGUgYmlnIG5vZGUuDQorICog
QG1hc3Q6IFRoZSBtYXBsZSBzdWJ0cmVlIHN0YXRlDQorICovDQorc3RhdGljIGlubGluZSB2b2lk
IG1hc3RfY29tYmluZV9jcF9yaWdodChzdHJ1Y3QgbWFwbGVfc3VidHJlZV9zdGF0ZSAqbWFzdCkN
Cit7DQorCWlmIChtYXN0LT5ibi0+cGl2b3RbbWFzdC0+Ym4tPmJfZW5kIC0gMV0gPj0gbWFzdC0+
b3JpZ19yLT5tYXgpDQorCQlyZXR1cm47DQorDQorCW1hc19tYWJfY3AobWFzdC0+b3JpZ19yLCBt
YXN0LT5vcmlnX3ItPm9mZnNldCArIDEsDQorCQkgICBtdF9zbG90X2NvdW50KG1hc3QtPm9yaWdf
ci0+bm9kZSksIG1hc3QtPmJuLA0KKwkJICAgbWFzdC0+Ym4tPmJfZW5kKTsNCisJbWFzdC0+b3Jp
Z19yLT5sYXN0ID0gbWFzdC0+b3JpZ19yLT5tYXg7DQorfQ0KKw0KKy8qDQorICogbWFzdF9zdWZm
aWNpZW50OiBDaGVjayBpZiB0aGUgbWFwbGUgc3VidHJlZSBzdGF0ZSBoYXMgZW5vdWdoIGRhdGEg
aW4gdGhlIGJpZw0KKyAqIG5vZGUgdG8gY3JlYXRlIGF0IGxlYXN0IG9uZSBzdWZmaWNpZW50IG5v
ZGUNCisgKiBAbWFzdDogdGhlIG1hcGxlIHN1YnRyZWUgc3RhdGUNCisgKi8NCitzdGF0aWMgaW5s
aW5lIGJvb2wgbWFzdF9zdWZmaWNpZW50KHN0cnVjdCBtYXBsZV9zdWJ0cmVlX3N0YXRlICptYXN0
KQ0KK3sNCisJaWYgKG1hc3QtPmJuLT5iX2VuZCA+IG10X21pbl9zbG90X2NvdW50KG1hc3QtPm9y
aWdfbC0+bm9kZSkpDQorCQlyZXR1cm4gdHJ1ZTsNCisNCisJcmV0dXJuIGZhbHNlOw0KK30NCisN
CisvKg0KKyAqIG1hc3Rfb3ZlcmZsb3c6IENoZWNrIGlmIHRoZXJlIGlzIHRvbyBtdWNoIGRhdGEg
aW4gdGhlIHN1YnRyZWUgc3RhdGUgZm9yIGENCisgKiBzaW5nbGUgbm9kZS4NCisgKiBAbWFzdDog
VGhlIG1hcGxlIHN1YnRyZWUgc3RhdGUNCisgKi8NCitzdGF0aWMgaW5saW5lIGJvb2wgbWFzdF9v
dmVyZmxvdyhzdHJ1Y3QgbWFwbGVfc3VidHJlZV9zdGF0ZSAqbWFzdCkNCit7DQorCWlmIChtYXN0
LT5ibi0+Yl9lbmQgPj0gbXRfc2xvdF9jb3VudChtYXN0LT5vcmlnX2wtPm5vZGUpKQ0KKwkJcmV0
dXJuIHRydWU7DQorDQorCXJldHVybiBmYWxzZTsNCit9DQorDQorLyoNCisgKiBtYXN0X3NldHVw
X2Jub2RlX2Zvcl9zcGxpdCgpIC0gUHJlcGFyZSB0aGUgc3VidHJlZSBzdGF0ZSBiaWcgbm9kZSBm
b3INCisgKiBzcGxpdHRpbmcNCisgKiBAbWFzdDogVGhlIG1hcGxlIHN1YnRyZWUgc3RhdGUNCisg
Ki8NCitzdGF0aWMgaW5saW5lIHZvaWQgbWFzdF9zZXR1cF9ibm9kZV9mb3Jfc3BsaXQoc3RydWN0
IG1hcGxlX3N1YnRyZWVfc3RhdGUgKm1hc3QpDQorew0KKwltYXN0LT5ibi0+Yl9lbmQtLTsNCisJ
bWFzdC0+Ym4tPm1pbiA9IG1hc3QtPm9yaWdfbC0+bWluOw0KKwltYXN0LT5ibi0+dHlwZSA9IG10
ZV9ub2RlX3R5cGUobWFzdC0+b3JpZ19sLT5ub2RlKTsNCit9DQorDQorc3RhdGljIGlubGluZSB2
b2lkICptdHJlZV9yYW5nZV93YWxrKHN0cnVjdCBtYV9zdGF0ZSAqbWFzKQ0KK3sNCisJdW5zaWdu
ZWQgbG9uZyAqcGl2b3RzOw0KKwl1bnNpZ25lZCBjaGFyIG9mZnNldDsNCisJc3RydWN0IG1hcGxl
X25vZGUgKm5vZGU7DQorCXN0cnVjdCBtYXBsZV9lbm9kZSAqbmV4dCwgKmxhc3Q7DQorCWVudW0g
bWFwbGVfdHlwZSB0eXBlOw0KKwl2b2lkIF9fcmN1ICoqc2xvdHM7DQorCXVuc2lnbmVkIGNoYXIg
ZW5kOw0KKwl1bnNpZ25lZCBsb25nIG1heCwgbWluOw0KKwl1bnNpZ25lZCBsb25nIHByZXZfbWF4
LCBwcmV2X21pbjsNCisNCisJbGFzdCA9IG5leHQgPSBtYXMtPm5vZGU7DQorCXByZXZfbWluID0g
bWluID0gbWFzLT5taW47DQorCW1heCA9IG1hcy0+bWF4Ow0KKwlkbyB7DQorCQlvZmZzZXQgPSAw
Ow0KKwkJbGFzdCA9IG5leHQ7DQorCQlub2RlID0gbXRlX3RvX25vZGUobmV4dCk7DQorCQl0eXBl
ID0gbXRlX25vZGVfdHlwZShuZXh0KTsNCisJCXBpdm90cyA9IG1hX3Bpdm90cyhub2RlLCB0eXBl
KTsNCisJCWVuZCA9IG1hX2RhdGFfZW5kKG5vZGUsIHR5cGUsIHBpdm90cywgbWF4KTsNCisJCWlm
ICh1bmxpa2VseShtYV9kZWFkX25vZGUobm9kZSkpKQ0KKwkJCWdvdG8gZGVhZF9ub2RlOw0KKw0K
KwkJaWYgKHBpdm90c1tvZmZzZXRdID49IG1hcy0+aW5kZXgpIHsNCisJCQlwcmV2X21heCA9IG1h
eDsNCisJCQlwcmV2X21pbiA9IG1pbjsNCisJCQltYXggPSBwaXZvdHNbb2Zmc2V0XTsNCisJCQln
b3RvIG5leHQ7DQorCQl9DQorDQorCQlkbyB7DQorCQkJb2Zmc2V0Kys7DQorCQl9IHdoaWxlKChv
ZmZzZXQgPCBlbmQpICYmIChwaXZvdHNbb2Zmc2V0XSA8IG1hcy0+aW5kZXgpKTsNCisNCisJCXBy
ZXZfbWluID0gbWluOw0KKwkJcHJldl9tYXggPSBtYXg7DQorCQlpZiAob2Zmc2V0IDwgbXRfcGl2
b3RzW3R5cGVdICYmIHBpdm90c1tvZmZzZXRdKQ0KKwkJCW1heCA9IHBpdm90c1tvZmZzZXRdOw0K
Kw0KKwkJaWYgKG9mZnNldCkNCisJCQltaW4gPSBwaXZvdHNbb2Zmc2V0IC0gMV0gKyAxOw0KKw0K
KwkJaWYgKGxpa2VseShvZmZzZXQgPiBlbmQpICYmIHBpdm90c1tvZmZzZXRdKQ0KKwkJCW1heCA9
IHBpdm90c1tvZmZzZXRdOw0KKw0KK25leHQ6DQorCQlzbG90cyA9IG1hX3Nsb3RzKG5vZGUsIHR5
cGUpOw0KKwkJbmV4dCA9IG10X3Nsb3QobWFzLT50cmVlLCBzbG90cywgb2Zmc2V0KTsNCisJCWlm
ICh1bmxpa2VseShtYV9kZWFkX25vZGUobm9kZSkpKQ0KKwkJCWdvdG8gZGVhZF9ub2RlOw0KKwl9
IHdoaWxlICghbWFfaXNfbGVhZih0eXBlKSk7DQorDQorCW1hcy0+b2Zmc2V0ID0gb2Zmc2V0Ow0K
KwltYXMtPmluZGV4ID0gbWluOw0KKwltYXMtPmxhc3QgPSBtYXg7DQorCW1hcy0+bWluID0gcHJl
dl9taW47DQorCW1hcy0+bWF4ID0gcHJldl9tYXg7DQorCW1hcy0+bm9kZSA9IGxhc3Q7DQorCXJl
dHVybiAodm9pZCAqKSBuZXh0Ow0KKw0KK2RlYWRfbm9kZToNCisJbWFzX3Jlc2V0KG1hcyk7DQor
CXJldHVybiBOVUxMOw0KK30NCisNCisvKg0KKyAqIG1hc19zcGFubmluZ19yZWJhbGFuY2UoKSAt
IFJlYmFsYW5jZSBhY3Jvc3MgdHdvIG5vZGVzIHdoaWNoIG1heSBub3QgYmUgcGVlcnMuDQorICog
QG1hczogVGhlIHN0YXJ0aW5nIG1hcGxlIHN0YXRlDQorICogQG1hc3Q6IFRoZSBtYXBsZV9zdWJ0
cmVlX3N0YXRlLCBrZWVwcyB0cmFjayBvZiA0IG1hcGxlIHN0YXRlcy4NCisgKiBAY291bnQ6IFRo
ZSBlc3RpbWF0ZWQgY291bnQgb2YgaXRlcmF0aW9ucyBuZWVkZWQuDQorICoNCisgKiBGb2xsb3cg
dGhlIHRyZWUgdXB3YXJkcyBmcm9tIEBsX21hcyBhbmQgQHJfbWFzIGZvciBAY291bnQsIG9yIHVu
dGlsIHRoZSByb290DQorICogaXMgaGl0LiAgRmlyc3QgQGJfbm9kZSBpcyBzcGxpdCBpbnRvIHR3
byBlbnRyaWVzIHdoaWNoIGFyZSBpbnNlcnRlZCBpbnRvIHRoZQ0KKyAqIG5leHQgaXRlcmF0aW9u
IG9mIHRoZSBsb29wLiAgQGJfbm9kZSBpcyByZXR1cm5lZCBwb3B1bGF0ZWQgd2l0aCB0aGUgZmlu
YWwNCisgKiBpdGVyYXRpb24uIEBtYXMgaXMgdXNlZCB0byBvYnRhaW4gYWxsb2NhdGlvbnMuICBv
cmlnX2xfbWFzIGtlZXBzIHRyYWNrIG9mIHRoZQ0KKyAqIG5vZGVzIHRoYXQgd2lsbCByZW1haW4g
YWN0aXZlIGJ5IHVzaW5nIG9yaWdfbF9tYXMtPmluZGV4IGFuZCBvcmlnX2xfbWFzLT5sYXN0DQor
ICogdG8gYWNjb3VudCBvZiB3aGF0IGhhcyBiZWVuIGNvcGllZCBpbnRvIHRoZSBuZXcgc3ViLXRy
ZWUuICBUaGUgdXBkYXRlIG9mDQorICogb3JpZ19sX21hcy0+bGFzdCBpcyB1c2VkIGluIG1hc19j
b25zdW1lIHRvIGZpbmQgdGhlIHNsb3RzIHRoYXQgd2lsbCBuZWVkIHRvDQorICogYmUgZWl0aGVy
IGZyZWVkIG9yIGRlc3Ryb3llZC4gIG9yaWdfbF9tYXMtPmRlcHRoIGtlZXBzIHRyYWNrIG9mIHRo
ZSBoZWlnaHQgb2YNCisgKiB0aGUgbmV3IHN1Yi10cmVlIGluIGNhc2UgdGhlIHN1Yi10cmVlIGJl
Y29tZXMgdGhlIGZ1bGwgdHJlZS4NCisgKg0KKyAqIFJldHVybjogdGhlIG51bWJlciBvZiBlbGVt
ZW50cyBpbiBiX25vZGUgZHVyaW5nIHRoZSBsYXN0IGxvb3AuDQorICovDQorc3RhdGljIGludCBt
YXNfc3Bhbm5pbmdfcmViYWxhbmNlKHN0cnVjdCBtYV9zdGF0ZSAqbWFzLA0KKwkJc3RydWN0IG1h
cGxlX3N1YnRyZWVfc3RhdGUgKm1hc3QsIHVuc2lnbmVkIGNoYXIgY291bnQpDQorew0KKwl1bnNp
Z25lZCBjaGFyIHNwbGl0LCBtaWRfc3BsaXQ7DQorCXVuc2lnbmVkIGNoYXIgc2xvdCA9IDA7DQor
CXN0cnVjdCBtYXBsZV9lbm9kZSAqbGVmdCA9IE5VTEwsICptaWRkbGUgPSBOVUxMLCAqcmlnaHQg
PSBOVUxMOw0KKw0KKwlNQV9TVEFURShsX21hcywgbWFzLT50cmVlLCBtYXMtPmluZGV4LCBtYXMt
PmluZGV4KTsNCisJTUFfU1RBVEUocl9tYXMsIG1hcy0+dHJlZSwgbWFzLT5pbmRleCwgbWFzLT5p
bmRleCk7DQorCU1BX1NUQVRFKG1fbWFzLCBtYXMtPnRyZWUsIG1hcy0+aW5kZXgsIG1hcy0+aW5k
ZXgpOw0KKwlNQV9UT1BJQVJZKGZyZWUsIG1hcy0+dHJlZSk7DQorCU1BX1RPUElBUlkoZGVzdHJv
eSwgbWFzLT50cmVlKTsNCisNCisJLyoNCisJICogVGhlIHRyZWUgbmVlZHMgdG8gYmUgcmViYWxh
bmNlZCBhbmQgbGVhdmVzIG5lZWQgdG8gYmUga2VwdCBhdCB0aGUgc2FtZSBsZXZlbC4NCisJICog
UmViYWxhbmNpbmcgaXMgZG9uZSBieSB1c2Ugb2YgdGhlIGBgc3RydWN0IG1hcGxlX3RvcGlhcnlg
YC4NCisJICovDQorCW1hc3QtPmwgPSAmbF9tYXM7DQorCW1hc3QtPm0gPSAmbV9tYXM7DQorCW1h
c3QtPnIgPSAmcl9tYXM7DQorCW1hc3QtPmZyZWUgPSAmZnJlZTsNCisJbWFzdC0+ZGVzdHJveSA9
ICZkZXN0cm95Ow0KKwlsX21hcy5ub2RlID0gcl9tYXMubm9kZSA9IG1fbWFzLm5vZGUgPSBNQVNf
Tk9ORTsNCisJaWYgKCFtYXNfaXNfcm9vdF9saW1pdHMobWFzKSAmJg0KKwkgICAgdW5saWtlbHko
bWFzdC0+Ym4tPmJfZW5kIDw9IG10X21pbl9zbG90c1ttYXN0LT5ibi0+dHlwZV0pKSB7DQorCQkv
Kg0KKwkJICogRG8gbm90IGZyZWUgdGhlIGN1cnJlbnQgbm9kZSBhcyBpdCBtYXkgYmUgZnJlZWQg
aW4gYSBidWxrDQorCQkgKiBmcmVlLg0KKwkJICovDQorCQlpZiAoIW1hc3Rfc2libGluZ19yZWJh
bGFuY2VfcmlnaHQobWFzdCwgZmFsc2UpKQ0KKwkJCW1hc3RfY291c2luX3JlYmFsYW5jZV9yaWdo
dChtYXN0LCBmYWxzZSk7DQorCX0NCisJbWFzdC0+b3JpZ19sLT5kZXB0aCA9IDA7DQorDQorCS8q
DQorCSAqIEVhY2ggbGV2ZWwgb2YgdGhlIHRyZWUgaXMgZXhhbWluZWQgYW5kIGJhbGFuY2VkLCBw
dXNoaW5nIGRhdGEgdG8gdGhlIGxlZnQgb3INCisJICogcmlnaHQsIG9yIHJlYmFsYW5jaW5nIGFn
YWluc3QgbGVmdCBvciByaWdodCBub2RlcyBpcyBlbXBsb3llZCB0byBhdm9pZA0KKwkgKiByaXBw
bGluZyB1cCB0aGUgdHJlZSB0byBsaW1pdCB0aGUgYW1vdW50IG9mIGNodXJuLiAgT25jZSBhIG5l
dyBzdWItc2VjdGlvbiBvZg0KKwkgKiB0aGUgdHJlZSBpcyBjcmVhdGVkLCB0aGVyZSBtYXkgYmUg
YSBtaXggb2YgbmV3IGFuZCBvbGQgbm9kZXMuICBUaGUgb2xkIG5vZGVzDQorCSAqIHdpbGwgaGF2
ZSB0aGUgaW5jb3JyZWN0IHBhcmVudCBwb2ludGVycyBhbmQgY3VycmVudGx5IGJlIGluIHR3byB0
cmVlczogdGhlDQorCSAqIG9yaWdpbmFsIHRyZWUgYW5kIHRoZSBwYXJ0aWFsbHkgbmV3IHRyZWUu
ICBUbyByZW1lZHkgdGhlIHBhcmVudCBwb2ludGVycyBpbg0KKwkgKiB0aGUgb2xkIHRyZWUsIHRo
ZSBuZXcgZGF0YSBpcyBzd2FwcGVkIGludG8gdGhlIGFjdGl2ZSB0cmVlIGFuZCBhIHdhbGsgZG93
bg0KKwkgKiB0aGUgdHJlZSBpcyBwZXJmb3JtZWQgYW5kIHRoZSBwYXJlbnQgcG9pbnRlcnMgYXJl
IHVwZGF0ZWQuDQorCSAqIFNlZSBtYXNfZGVzY2VuZF9hZG9wdCgpIGZvciBtb3JlIGluZm9ybWF0
aW9uLi4NCisJICovDQorCXdoaWxlIChjb3VudC0tKSB7DQorCQltYXN0X3NldHVwX2Jub2RlX2Zv
cl9zcGxpdChtYXN0KTsNCisJCXNwbGl0ID0gbWFzX21hYl90b19ub2RlKG1hcywgbWFzdC0+Ym4s
ICZsZWZ0LCAmcmlnaHQsICZtaWRkbGUsDQorCQkJCQkmbWlkX3NwbGl0KTsNCisJCW1hc3Rfc2V0
X3NwbGl0X3BhcmVudHMobWFzdCwgbGVmdCwgbWlkZGxlLCByaWdodCwgc3BsaXQsDQorCQkJCSAg
ICAgICBtaWRfc3BsaXQpOw0KKwkJbWFzdF9jcF90b19ub2RlcyhtYXN0LCBsZWZ0LCBtaWRkbGUs
IHJpZ2h0LCBzcGxpdCwgbWlkX3NwbGl0KTsNCisNCisJCS8qDQorCQkgKiBDb3B5IGRhdGEgZnJv
bSBuZXh0IGxldmVsIGluIHRoZSB0cmVlIHRvIG1hc3QtPmJuIGZyb20gbmV4dA0KKwkJICogaXRl
cmF0aW9uDQorCQkgKi8NCisJCW1lbXNldChtYXN0LT5ibiwgMCwgc2l6ZW9mKHN0cnVjdCBtYXBs
ZV9iaWdfbm9kZSkpOw0KKwkJbWFzdC0+Ym4tPnR5cGUgPSBtdGVfbm9kZV90eXBlKGxlZnQpOw0K
KwkJbWFzdC0+b3JpZ19sLT5kZXB0aCsrOw0KKw0KKwkJLyogUm9vdCBhbHJlYWR5IHN0b3JlZCBp
biBsLT5ub2RlLiAqLw0KKwkJaWYgKG1hc19pc19yb290X2xpbWl0cyhtYXN0LT5sKSkNCisJCQln
b3RvIG5ld19yb290Ow0KKw0KKwkJbWFzdF9hc2NlbmRfZnJlZShtYXN0KTsNCisJCW1hc3RfY29t
YmluZV9jcF9sZWZ0KG1hc3QpOw0KKwkJbF9tYXMub2Zmc2V0ID0gbWFzdC0+Ym4tPmJfZW5kOw0K
KwkJbWFiX3NldF9iX2VuZChtYXN0LT5ibiwgJmxfbWFzLCBsZWZ0KTsNCisJCW1hYl9zZXRfYl9l
bmQobWFzdC0+Ym4sICZtX21hcywgbWlkZGxlKTsNCisJCW1hYl9zZXRfYl9lbmQobWFzdC0+Ym4s
ICZyX21hcywgcmlnaHQpOw0KKw0KKwkJLyogQ29weSBhbnl0aGluZyBuZWNlc3Nhcnkgb3V0IG9m
IHRoZSByaWdodCBub2RlLiAqLw0KKwkJbWFzdF9jb21iaW5lX2NwX3JpZ2h0KG1hc3QpOw0KKwkJ
bWFzdF90b3BpYXJ5KG1hc3QpOw0KKwkJbWFzdC0+b3JpZ19sLT5sYXN0ID0gbWFzdC0+b3JpZ19s
LT5tYXg7DQorDQorCQlpZiAobWFzdF9zdWZmaWNpZW50KG1hc3QpKQ0KKwkJCWNvbnRpbnVlOw0K
Kw0KKwkJaWYgKG1hc3Rfb3ZlcmZsb3cobWFzdCkpDQorCQkJY29udGludWU7DQorDQorCQkvKiBN
YXkgYmUgYSBuZXcgcm9vdCBzdG9yZWQgaW4gbWFzdC0+Ym4gKi8NCisJCWlmIChtYXNfaXNfcm9v
dF9saW1pdHMobWFzdC0+b3JpZ19sKSkNCisJCQlicmVhazsNCisNCisJCS8qIFRyeSB0byBnZXQg
ZW5vdWdoIGRhdGEgZm9yIHRoZSBuZXh0IGl0ZXJhdGlvbi4gKi8NCisJCWlmICghbWFzdF9zaWJs
aW5nX3JlYmFsYW5jZV9yaWdodChtYXN0LCB0cnVlKSkNCisJCQlpZiAoIW1hc3RfY291c2luX3Jl
YmFsYW5jZV9yaWdodChtYXN0LCB0cnVlKSkNCisJCQkJYnJlYWs7DQorDQorCQkvKiByZWJhbGFu
Y2luZyBmcm9tIG90aGVyIG5vZGVzIG1heSByZXF1aXJlIGFub3RoZXIgbG9vcC4gKi8NCisJCWlm
ICghY291bnQpDQorCQkJY291bnQrKzsNCisJfQ0KKwlsX21hcy5ub2RlID0gbXRfbWtfbm9kZSht
YV9tbm9kZV9wdHIobWFzX3BvcF9ub2RlKG1hcykpLA0KKwkJCQltdGVfbm9kZV90eXBlKG1hc3Qt
Pm9yaWdfbC0+bm9kZSkpOw0KKwltYXN0LT5vcmlnX2wtPmRlcHRoKys7DQorCW1hYl9tYXNfY3Ao
bWFzdC0+Ym4sIDAsIG10X3Nsb3RzW21hc3QtPmJuLT50eXBlXSAtIDEsICZsX21hcywgdHJ1ZSk7
DQorCW10ZV9zZXRfcGFyZW50KGxlZnQsIGxfbWFzLm5vZGUsIHNsb3QpOw0KKwlpZiAobWlkZGxl
KQ0KKwkJbXRlX3NldF9wYXJlbnQobWlkZGxlLCBsX21hcy5ub2RlLCArK3Nsb3QpOw0KKw0KKwlp
ZiAocmlnaHQpDQorCQltdGVfc2V0X3BhcmVudChyaWdodCwgbF9tYXMubm9kZSwgKytzbG90KTsN
CisNCituZXdfcm9vdDoNCisJaWYgKG1hc19pc19yb290X2xpbWl0cyhtYXN0LT5sKSkNCisJCW1h
c3RfbmV3X3Jvb3QobWFzdCwgbWFzKTsNCisJZWxzZQ0KKwkJbWFzX21uKCZsX21hcyktPnBhcmVu
dCA9IG1hc19tbihtYXN0LT5vcmlnX2wpLT5wYXJlbnQ7DQorDQorCWlmICghbXRlX2RlYWRfbm9k
ZShtYXN0LT5vcmlnX2wtPm5vZGUpKQ0KKwkJbWF0X2FkZCgmZnJlZSwgbWFzdC0+b3JpZ19sLT5u
b2RlKTsNCisNCisJbWFzLT5kZXB0aCA9IG1hc3QtPm9yaWdfbC0+ZGVwdGg7DQorCSptYXN0LT5v
cmlnX2wgPSBsX21hczsNCisJbXRlX3NldF9ub2RlX2RlYWQobWFzLT5ub2RlKTsNCisNCisJLyog
U2V0IHVwIG1hcyBmb3IgaW5zZXJ0aW9uLiAqLw0KKwltYXN0LT5vcmlnX2wtPmRlcHRoID0gbWFz
LT5kZXB0aDsNCisJbWFzdC0+b3JpZ19sLT5hbGxvYyA9IG1hcy0+YWxsb2M7DQorCSptYXMgPSAq
bWFzdC0+b3JpZ19sOw0KKwltYXNfd21iX3JlcGxhY2UobWFzLCAmZnJlZSwgJmRlc3Ryb3kpOw0K
KwltdHJlZV9yYW5nZV93YWxrKG1hcyk7DQorCXJldHVybiBtYXN0LT5ibi0+Yl9lbmQ7DQorfQ0K
Kw0KKy8qDQorICogbWFzX3JlYmFsYW5jZSgpIC0gUmViYWxhbmNlIGEgZ2l2ZW4gbm9kZS4NCisg
KiBAbWFzOiBUaGUgbWFwbGUgc3RhdGUNCisgKiBAYl9ub2RlOiBUaGUgYmlnIG1hcGxlIG5vZGUu
DQorICoNCisgKiBSZWJhbGFuY2UgdHdvIG5vZGVzIGludG8gYSBzaW5nbGUgbm9kZSBvciB0d28g
bmV3IG5vZGVzIHRoYXQgYXJlIHN1ZmZpY2llbnQuDQorICogQ29udGludWUgdXB3YXJkcyB1bnRp
bCB0cmVlIGlzIHN1ZmZpY2llbnQuDQorICoNCisgKiBSZXR1cm46IHRoZSBudW1iZXIgb2YgZWxl
bWVudHMgaW4gYl9ub2RlIGR1cmluZyB0aGUgbGFzdCBsb29wLg0KKyAqLw0KK3N0YXRpYyBpbmxp
bmUgaW50IG1hc19yZWJhbGFuY2Uoc3RydWN0IG1hX3N0YXRlICptYXMsDQorCQkJCXN0cnVjdCBt
YXBsZV9iaWdfbm9kZSAqYl9ub2RlKQ0KK3sNCisJY2hhciBlbXB0eV9jb3VudCA9IG1hc19tdF9o
ZWlnaHQobWFzKTsNCisJc3RydWN0IG1hcGxlX3N1YnRyZWVfc3RhdGUgbWFzdDsNCisJdW5zaWdu
ZWQgY2hhciBzaGlmdCwgYl9lbmQgPSArK2Jfbm9kZS0+Yl9lbmQ7DQorDQorCU1BX1NUQVRFKGxf
bWFzLCBtYXMtPnRyZWUsIG1hcy0+aW5kZXgsIG1hcy0+bGFzdCk7DQorCU1BX1NUQVRFKHJfbWFz
LCBtYXMtPnRyZWUsIG1hcy0+aW5kZXgsIG1hcy0+bGFzdCk7DQorDQorCXRyYWNlX21hX29wKF9f
ZnVuY19fLCBtYXMpOw0KKw0KKy8qDQorICogUmViYWxhbmNpbmcgb2NjdXJzIGlmIGEgbm9kZSBp
cyBpbnN1ZmZpY2llbnQuICBEYXRhIGlzIHJlYmFsYW5jZWQgYWdhaW5zdCB0aGUNCisgKiBub2Rl
IHRvIHRoZSByaWdodCBpZiBpdCBleGlzdHMsIG90aGVyd2lzZSB0aGUgbm9kZSB0byB0aGUgbGVm
dCBvZiB0aGlzIG5vZGUNCisgKiBpcyByZWJhbGFuY2VkIGFnYWluc3QgdGhpcyBub2RlLiAgSWYg
cmViYWxhbmNpbmcgY2F1c2VzIGp1c3Qgb25lIG5vZGUgdG8gYmUNCisgKiBwcm9kdWNlZCBpbnN0
ZWFkIG9mIHR3bywgdGhlbiB0aGUgcGFyZW50IGlzIGFsc28gZXhhbWluZWQgYW5kIHJlYmFsYW5j
ZWQgaWYNCisgKiBpdCBpcyBpbnN1ZmZpY2llbnQuICBFdmVyeSBsZXZlbCB0cmllcyB0byBjb21i
aW5lIHRoZSBkYXRhIGluIHRoZSBzYW1lIHdheS4NCisgKiBJZiBvbmUgbm9kZSBjb250YWlucyB0
aGUgZW50aXJlIHJhbmdlIG9mIHRoZSB0cmVlLCB0aGVuIHRoYXQgbm9kZSBpcyB1c2VkIGFzDQor
ICogYSBuZXcgcm9vdCBub2RlLg0KKyAqLw0KKwltYXNfbm9kZV9jb3VudChtYXMsIDEgKyBlbXB0
eV9jb3VudCAqIDMpOw0KKwlpZiAobWFzX2lzX2VycihtYXMpKQ0KKwkJcmV0dXJuIDA7DQorDQor
CW1hc3Qub3JpZ19sID0gJmxfbWFzOw0KKwltYXN0Lm9yaWdfciA9ICZyX21hczsNCisJbWFzdC5i
biA9IGJfbm9kZTsNCisNCisJbF9tYXMgPSByX21hcyA9ICptYXM7DQorDQorCWlmIChtYXNfbmV4
dF9zaWJsaW5nKCZyX21hcykpIHsNCisJCW1hc19tYWJfY3AoJnJfbWFzLCAwLCBtdF9zbG90X2Nv
dW50KHJfbWFzLm5vZGUpLCBiX25vZGUsIGJfZW5kKTsNCisJCXJfbWFzLmxhc3QgPSByX21hcy5p
bmRleCA9IHJfbWFzLm1heDsNCisNCisJfSBlbHNlIHsNCisJCW1hc19wcmV2X3NpYmxpbmcoJmxf
bWFzKTsNCisJCXNoaWZ0ID0gbWFzX2RhdGFfZW5kKCZsX21hcykgKyAxOw0KKwkJbWFiX3NoaWZ0
X3JpZ2h0KGJfbm9kZSwgc2hpZnQpOw0KKwkJbWFzLT5vZmZzZXQgKz0gc2hpZnQ7DQorCQltYXNf
bWFiX2NwKCZsX21hcywgMCwgc2hpZnQgLSAxLCBiX25vZGUsIDApOw0KKwkJYl9ub2RlLT5iX2Vu
ZCA9IHNoaWZ0ICsgYl9lbmQ7DQorCQlsX21hcy5pbmRleCA9IGxfbWFzLmxhc3QgPSBsX21hcy5t
aW47DQorCX0NCisNCisJcmV0dXJuIG1hc19zcGFubmluZ19yZWJhbGFuY2UobWFzLCAmbWFzdCwg
ZW1wdHlfY291bnQpOw0KK30NCisNCisvKg0KKyAqIG1hc19kZXN0cm95X3JlYmFsYW5jZSgpIC0g
UmViYWxhbmNlIGxlZnQtbW9zdCBub2RlIHdoaWxlIGRlc3Ryb3lpbmcgdGhlIG1hcGxlDQorICog
c3RhdGUuDQorICogQG1hczogVGhlIG1hcGxlIHN0YXRlDQorICogQGVuZDogVGhlIGVuZCBvZiB0
aGUgbGVmdC1tb3N0IG5vZGUuDQorICoNCisgKiBEdXJpbmcgYSBtYXNzLWluc2VydCBldmVudCAo
c3VjaCBhcyBmb3JraW5nKSwgaXQgbWF5IGJlIG5lY2Vzc2FyeSB0bw0KKyAqIHJlYmFsYW5jZSB0
aGUgbGVmdC1tb3N0IG5vZGUgd2hlbiBpdCBpcyBub3Qgc3VmZmljaWVudC4NCisgKi8NCitzdGF0
aWMgaW5saW5lIHZvaWQgbWFzX2Rlc3Ryb3lfcmViYWxhbmNlKHN0cnVjdCBtYV9zdGF0ZSAqbWFz
LCB1bnNpZ25lZCBjaGFyIGVuZCkNCit7DQorCWVudW0gbWFwbGVfdHlwZSBtdCA9IG10ZV9ub2Rl
X3R5cGUobWFzLT5ub2RlKTsNCisJc3RydWN0IG1hcGxlX25vZGUgcmV1c2UsICpuZXdub2RlLCAq
cGFyZW50LCAqbmV3X2xlZnQsICpsZWZ0LCAqbm9kZTsNCisJc3RydWN0IG1hcGxlX2Vub2RlICpl
cGFyZW50Ow0KKwl1bnNpZ25lZCBjaGFyIG9mZnNldCwgdG1wLCBzcGxpdCA9IG10X3Nsb3RzW210
XSAvIDI7DQorCXZvaWQgX19yY3UgKipsX3Nsb3RzLCAqKnNsb3RzOw0KKwl1bnNpZ25lZCBsb25n
ICpsX3BpdnMsICpwaXZzLCBnYXA7DQorCWJvb2wgaW5fcmN1ID0gbXRfaW5fcmN1KG1hcy0+dHJl
ZSk7DQorDQorCU1BX1NUQVRFKGxfbWFzLCBtYXMtPnRyZWUsIG1hcy0+aW5kZXgsIG1hcy0+bGFz
dCk7DQorDQorCWxfbWFzID0gKm1hczsNCisJbWFzX3ByZXZfc2libGluZygmbF9tYXMpOw0KKw0K
KwkvKiBzZXQgdXAgbm9kZS4gKi8NCisJaWYgKGluX3JjdSkgew0KKwkJLyogQWxsb2NhdGUgZm9y
IGJvdGggbGVmdCBhbmQgcmlnaHQgYXMgd2VsbCBhcyBwYXJlbnQuICovDQorCQltYXNfbm9kZV9j
b3VudChtYXMsIDMpOw0KKwkJaWYgKG1hc19pc19lcnIobWFzKSkNCisJCQlyZXR1cm47DQorDQor
CQluZXdub2RlID0gbWFzX3BvcF9ub2RlKG1hcyk7DQorCX0gZWxzZSB7DQorCQluZXdub2RlID0g
JnJldXNlOw0KKwl9DQorDQorCW5vZGUgPSBtYXNfbW4obWFzKTsNCisJbmV3bm9kZS0+cGFyZW50
ID0gbm9kZS0+cGFyZW50Ow0KKwlzbG90cyA9IG1hX3Nsb3RzKG5ld25vZGUsIG10KTsNCisJcGl2
cyA9IG1hX3Bpdm90cyhuZXdub2RlLCBtdCk7DQorCWxlZnQgPSBtYXNfbW4oJmxfbWFzKTsNCisJ
bF9zbG90cyA9IG1hX3Nsb3RzKGxlZnQsIG10KTsNCisJbF9waXZzID0gbWFfcGl2b3RzKGxlZnQs
IG10KTsNCisJaWYgKCFsX3Nsb3RzW3NwbGl0XSkNCisJCXNwbGl0Kys7DQorCXRtcCA9IG1hc19k
YXRhX2VuZCgmbF9tYXMpIC0gc3BsaXQ7DQorDQorCW1lbWNweShzbG90cywgbF9zbG90cyArIHNw
bGl0ICsgMSwgc2l6ZW9mKHZvaWQgKikgKiB0bXApOw0KKwltZW1jcHkocGl2cywgbF9waXZzICsg
c3BsaXQgKyAxLCBzaXplb2YodW5zaWduZWQgbG9uZykgKiB0bXApOw0KKwlwaXZzW3RtcF0gPSBs
X21hcy5tYXg7DQorCW1lbWNweShzbG90cyArIHRtcCwgbWFfc2xvdHMobm9kZSwgbXQpLCBzaXpl
b2Yodm9pZCAqKSAqIGVuZCk7DQorCW1lbWNweShwaXZzICsgdG1wLCBtYV9waXZvdHMobm9kZSwg
bXQpLCBzaXplb2YodW5zaWduZWQgbG9uZykgKiBlbmQpOw0KKw0KKwlsX21hcy5tYXggPSBsX3Bp
dnNbc3BsaXRdOw0KKwltYXMtPm1pbiA9IGxfbWFzLm1heCArIDE7DQorCWVwYXJlbnQgPSBtdF9t
a19ub2RlKG10ZV9wYXJlbnQobF9tYXMubm9kZSksDQorCQkJICAgICBtYXNfcGFyZW50X2VudW0o
JmxfbWFzLCBsX21hcy5ub2RlKSk7DQorCXRtcCArPSBlbmQ7DQorCWlmICghaW5fcmN1KSB7DQor
CQl1bnNpZ25lZCBjaGFyIG1heF9wID0gbXRfcGl2b3RzW210XTsNCisJCXVuc2lnbmVkIGNoYXIg
bWF4X3MgPSBtdF9zbG90c1ttdF07DQorDQorCQlpZiAodG1wIDwgbWF4X3ApDQorCQkJbWVtc2V0
KHBpdnMgKyB0bXAsIDAsDQorCQkJICAgICAgIHNpemVvZih1bnNpZ25lZCBsb25nICopICogKG1h
eF9wIC0gdG1wKSk7DQorDQorCQlpZiAodG1wIDwgbXRfc2xvdHNbbXRdKQ0KKwkJCW1lbXNldChz
bG90cyArIHRtcCwgMCwgc2l6ZW9mKHZvaWQgKikgKiAobWF4X3MgLSB0bXApKTsNCisNCisJCW1l
bWNweShub2RlLCBuZXdub2RlLCBzaXplb2Yoc3RydWN0IG1hcGxlX25vZGUpKTsNCisJCW1hX3Nl
dF9tZXRhKG5vZGUsIG10LCAwLCB0bXAgLSAxKTsNCisJCW10ZV9zZXRfcGl2b3QoZXBhcmVudCwg
bXRlX3BhcmVudF9zbG90KGxfbWFzLm5vZGUpLA0KKwkJCSAgICAgIGxfcGl2c1tzcGxpdF0pOw0K
Kw0KKwkJLyogUmVtb3ZlIGRhdGEgZnJvbSBsX3BpdnMuICovDQorCQl0bXAgPSBzcGxpdCArIDE7
DQorCQltZW1zZXQobF9waXZzICsgdG1wLCAwLCBzaXplb2YodW5zaWduZWQgbG9uZykgKiAobWF4
X3AgLSB0bXApKTsNCisJCW1lbXNldChsX3Nsb3RzICsgdG1wLCAwLCBzaXplb2Yodm9pZCAqKSAq
IChtYXhfcyAtIHRtcCkpOw0KKwkJbWFfc2V0X21ldGEobGVmdCwgbXQsIDAsIHNwbGl0KTsNCisN
CisJCWdvdG8gZG9uZTsNCisJfQ0KKw0KKwkvKiBSQ1UgcmVxdWlyZXMgcmVwbGFjaW5nIGJvdGgg
bF9tYXMsIG1hcywgYW5kIHBhcmVudC4gKi8NCisJbWFzLT5ub2RlID0gbXRfbWtfbm9kZShuZXdu
b2RlLCBtdCk7DQorCW1hX3NldF9tZXRhKG5ld25vZGUsIG10LCAwLCB0bXApOw0KKw0KKwluZXdf
bGVmdCA9IG1hc19wb3Bfbm9kZShtYXMpOw0KKwluZXdfbGVmdC0+cGFyZW50ID0gbGVmdC0+cGFy
ZW50Ow0KKwltdCA9IG10ZV9ub2RlX3R5cGUobF9tYXMubm9kZSk7DQorCXNsb3RzID0gbWFfc2xv
dHMobmV3X2xlZnQsIG10KTsNCisJcGl2cyA9IG1hX3Bpdm90cyhuZXdfbGVmdCwgbXQpOw0KKwlt
ZW1jcHkoc2xvdHMsIGxfc2xvdHMsIHNpemVvZih2b2lkICopICogc3BsaXQpOw0KKwltZW1jcHko
cGl2cywgbF9waXZzLCBzaXplb2YodW5zaWduZWQgbG9uZykgKiBzcGxpdCk7DQorCW1hX3NldF9t
ZXRhKG5ld19sZWZ0LCBtdCwgMCwgc3BsaXQpOw0KKwlsX21hcy5ub2RlID0gbXRfbWtfbm9kZShu
ZXdfbGVmdCwgbXQpOw0KKw0KKwkvKiByZXBsYWNlIHBhcmVudC4gKi8NCisJb2Zmc2V0ID0gbXRl
X3BhcmVudF9zbG90KG1hcy0+bm9kZSk7DQorCW10ID0gbWFzX3BhcmVudF9lbnVtKCZsX21hcywg
bF9tYXMubm9kZSk7DQorCXBhcmVudCA9IG1hc19wb3Bfbm9kZShtYXMpOw0KKwlzbG90cyA9IG1h
X3Nsb3RzKHBhcmVudCwgbXQpOw0KKwlwaXZzID0gbWFfcGl2b3RzKHBhcmVudCwgbXQpOw0KKwlt
ZW1jcHkocGFyZW50LCBtdGVfdG9fbm9kZShlcGFyZW50KSwgc2l6ZW9mKHN0cnVjdCBtYXBsZV9u
b2RlKSk7DQorCXJjdV9hc3NpZ25fcG9pbnRlcihzbG90c1tvZmZzZXRdLCBtYXMtPm5vZGUpOw0K
KwlyY3VfYXNzaWduX3BvaW50ZXIoc2xvdHNbb2Zmc2V0IC0gMV0sIGxfbWFzLm5vZGUpOw0KKwlw
aXZzW29mZnNldCAtIDFdID0gbF9tYXMubWF4Ow0KKwllcGFyZW50ID0gbXRfbWtfbm9kZShwYXJl
bnQsIG10KTsNCitkb25lOg0KKwlnYXAgPSBtYXNfbGVhZl9tYXhfZ2FwKG1hcyk7DQorCW10ZV9z
ZXRfZ2FwKGVwYXJlbnQsIG10ZV9wYXJlbnRfc2xvdChtYXMtPm5vZGUpLCBnYXApOw0KKwlnYXAg
PSBtYXNfbGVhZl9tYXhfZ2FwKCZsX21hcyk7DQorCW10ZV9zZXRfZ2FwKGVwYXJlbnQsIG10ZV9w
YXJlbnRfc2xvdChsX21hcy5ub2RlKSwgZ2FwKTsNCisJbWFzX2FzY2VuZChtYXMpOw0KKw0KKwlp
ZiAoaW5fcmN1KQ0KKwkJbWFzX3JlcGxhY2UobWFzLCBmYWxzZSk7DQorDQorCW1hc191cGRhdGVf
Z2FwKG1hcyk7DQorfQ0KKw0KKy8qDQorICogbWFzX3NwbGl0X2ZpbmFsX25vZGUoKSAtIFNwbGl0
IHRoZSBmaW5hbCBub2RlIGluIGEgc3VidHJlZSBvcGVyYXRpb24uDQorICogQG1hc3Q6IHRoZSBt
YXBsZSBzdWJ0cmVlIHN0YXRlDQorICogQG1hczogVGhlIG1hcGxlIHN0YXRlDQorICogQGhlaWdo
dDogVGhlIGhlaWdodCBvZiB0aGUgdHJlZSBpbiBjYXNlIGl0J3MgYSBuZXcgcm9vdC4NCisgKi8N
CitzdGF0aWMgaW5saW5lIGJvb2wgbWFzX3NwbGl0X2ZpbmFsX25vZGUoc3RydWN0IG1hcGxlX3N1
YnRyZWVfc3RhdGUgKm1hc3QsDQorCQkJCQlzdHJ1Y3QgbWFfc3RhdGUgKm1hcywgaW50IGhlaWdo
dCkNCit7DQorCXN0cnVjdCBtYXBsZV9lbm9kZSAqYW5jZXN0b3I7DQorDQorCWlmIChtdGVfaXNf
cm9vdChtYXMtPm5vZGUpKSB7DQorCQlpZiAobXRfaXNfYWxsb2MobWFzLT50cmVlKSkNCisJCQlt
YXN0LT5ibi0+dHlwZSA9IG1hcGxlX2FyYW5nZV82NDsNCisJCWVsc2UNCisJCQltYXN0LT5ibi0+
dHlwZSA9IG1hcGxlX3JhbmdlXzY0Ow0KKwkJbWFzLT5kZXB0aCA9IGhlaWdodDsNCisJfQ0KKwkv
Kg0KKwkgKiBPbmx5IGEgc2luZ2xlIG5vZGUgaXMgdXNlZCBoZXJlLCBjb3VsZCBiZSByb290Lg0K
KwkgKiBUaGUgQmlnX25vZGUgZGF0YSBzaG91bGQganVzdCBmaXQgaW4gYSBzaW5nbGUgbm9kZS4N
CisJICovDQorCWFuY2VzdG9yID0gbWFzX25ld19tYV9ub2RlKG1hcywgbWFzdC0+Ym4pOw0KKwlt
dGVfc2V0X3BhcmVudChtYXN0LT5sLT5ub2RlLCBhbmNlc3RvciwgbWFzdC0+bC0+b2Zmc2V0KTsN
CisJbXRlX3NldF9wYXJlbnQobWFzdC0+ci0+bm9kZSwgYW5jZXN0b3IsIG1hc3QtPnItPm9mZnNl
dCk7DQorCW10ZV90b19ub2RlKGFuY2VzdG9yKS0+cGFyZW50ID0gbWFzX21uKG1hcyktPnBhcmVu
dDsNCisNCisJbWFzdC0+bC0+bm9kZSA9IGFuY2VzdG9yOw0KKwltYWJfbWFzX2NwKG1hc3QtPmJu
LCAwLCBtdF9zbG90c1ttYXN0LT5ibi0+dHlwZV0gLSAxLCBtYXN0LT5sLCB0cnVlKTsNCisJbWFz
LT5vZmZzZXQgPSBtYXN0LT5ibi0+Yl9lbmQgLSAxOw0KKwlyZXR1cm4gdHJ1ZTsNCit9DQorDQor
LyoNCisgKiBtYXN0X2ZpbGxfYm5vZGUoKSAtIENvcHkgZGF0YSBpbnRvIHRoZSBiaWcgbm9kZSBp
biB0aGUgc3VidHJlZSBzdGF0ZQ0KKyAqIEBtYXN0OiBUaGUgbWFwbGUgc3VidHJlZSBzdGF0ZQ0K
KyAqIEBtYXM6IHRoZSBtYXBsZSBzdGF0ZQ0KKyAqIEBza2lwOiBUaGUgbnVtYmVyIG9mIGVudHJp
ZXMgdG8gc2tpcCBmb3IgbmV3IG5vZGVzIGluc2VydGlvbi4NCisgKi8NCitzdGF0aWMgaW5saW5l
IHZvaWQgbWFzdF9maWxsX2Jub2RlKHN0cnVjdCBtYXBsZV9zdWJ0cmVlX3N0YXRlICptYXN0LA0K
KwkJCQkJIHN0cnVjdCBtYV9zdGF0ZSAqbWFzLA0KKwkJCQkJIHVuc2lnbmVkIGNoYXIgc2tpcCkN
Cit7DQorCWJvb2wgY3AgPSB0cnVlOw0KKwlzdHJ1Y3QgbWFwbGVfZW5vZGUgKm9sZCA9IG1hcy0+
bm9kZTsNCisJdW5zaWduZWQgY2hhciBzcGxpdCwgemVybzsNCisNCisJbWFzdC0+Ym4tPmJfZW5k
ID0gMDsNCisJaWYgKG10ZV9pc19yb290KG1hcy0+bm9kZSkpIHsNCisJCWNwID0gZmFsc2U7DQor
CX0gZWxzZSB7DQorCQltYXNfYXNjZW5kKG1hcyk7DQorCQltYXRfYWRkKG1hc3QtPmZyZWUsIG9s
ZCk7DQorCQltYXMtPm9mZnNldCA9IG10ZV9wYXJlbnRfc2xvdChtYXMtPm5vZGUpOw0KKwl9DQor
DQorCW1hc3QtPmJuLT5taW4gPSBtYXMtPm1pbjsNCisJaWYgKGNwICYmIG1hc3QtPmwtPm9mZnNl
dCkNCisJCW1hc19tYWJfY3AobWFzLCAwLCBtYXN0LT5sLT5vZmZzZXQgLSAxLCBtYXN0LT5ibiwg
MCk7DQorDQorCXNwbGl0ID0gbWFzdC0+Ym4tPmJfZW5kOw0KKwltYWJfc2V0X2JfZW5kKG1hc3Qt
PmJuLCBtYXN0LT5sLCBtYXN0LT5sLT5ub2RlKTsNCisJbWFzdC0+ci0+b2Zmc2V0ID0gbWFzdC0+
Ym4tPmJfZW5kOw0KKwltYWJfc2V0X2JfZW5kKG1hc3QtPmJuLCBtYXN0LT5yLCBtYXN0LT5yLT5u
b2RlKTsNCisJaWYgKG1hc3QtPmJuLT5waXZvdFttYXN0LT5ibi0+Yl9lbmQgLSAxXSA9PSBtYXMt
Pm1heCkNCisJCWNwID0gZmFsc2U7DQorDQorCWlmIChjcCkNCisJCW1hc19tYWJfY3AobWFzLCBz
cGxpdCArIHNraXAsIG10X3Nsb3RfY291bnQobWFzLT5ub2RlKSAtIDEsDQorCQkJICAgbWFzdC0+
Ym4sIG1hc3QtPmJuLT5iX2VuZCk7DQorDQorCW1hc3QtPmJuLT5iX2VuZC0tOw0KKwltYXN0LT5i
bi0+dHlwZSA9IG10ZV9ub2RlX3R5cGUobWFzLT5ub2RlKTsNCisNCisJemVybyA9IE1BUExFX0JJ
R19OT0RFX1NMT1RTIC0gbWFzdC0+Ym4tPmJfZW5kIC0gMjsNCisJbWVtc2V0KG1hc3QtPmJuLT5n
YXAgKyBtYXN0LT5ibi0+Yl9lbmQgKyAxLCAwLA0KKwkgICAgICAgc2l6ZW9mKHVuc2lnbmVkIGxv
bmcpICogemVybyk7DQorCW1lbXNldChtYXN0LT5ibi0+c2xvdCArIG1hc3QtPmJuLT5iX2VuZCAr
IDEsIDAsIHNpemVvZih2b2lkKikgKiB6ZXJvLS0pOw0KKwltZW1zZXQobWFzdC0+Ym4tPnBpdm90
ICsgbWFzdC0+Ym4tPmJfZW5kICsgMSwgMCwNCisJICAgICAgIHNpemVvZih1bnNpZ25lZCBsb25n
KSAqIHplcm8pOw0KK30NCisNCisvKg0KKyAqIG1hc3Rfc3BsaXRfZGF0YSgpIC0gU3BsaXQgdGhl
IGRhdGEgaW4gdGhlIHN1YnRyZWUgc3RhdGUgYmlnIG5vZGUgaW50byByZWd1bGFyDQorICogbm9k
ZXMuDQorICogQG1hc3Q6IFRoZSBtYXBsZSBzdWJ0cmVlIHN0YXRlDQorICogQG1hczogVGhlIG1h
cGxlIHN0YXRlDQorICogQHNwbGl0OiBUaGUgbG9jYXRpb24gdG8gc3BsaXQgdGhlIGJpZyBub2Rl
DQorICovDQorc3RhdGljIGlubGluZSB2b2lkIG1hc3Rfc3BsaXRfZGF0YShzdHJ1Y3QgbWFwbGVf
c3VidHJlZV9zdGF0ZSAqbWFzdCwNCisJICAgc3RydWN0IG1hX3N0YXRlICptYXMsIHVuc2lnbmVk
IGNoYXIgc3BsaXQpDQorew0KKwl1bnNpZ25lZCBjaGFyIHBfc2xvdDsNCisNCisJbWFiX21hc19j
cChtYXN0LT5ibiwgMCwgc3BsaXQsIG1hc3QtPmwsIHRydWUpOw0KKwltdGVfc2V0X3Bpdm90KG1h
c3QtPnItPm5vZGUsIDAsIG1hc3QtPnItPm1heCk7DQorCW1hYl9tYXNfY3AobWFzdC0+Ym4sIHNw
bGl0ICsgMSwgbWFzdC0+Ym4tPmJfZW5kLCBtYXN0LT5yLCBmYWxzZSk7DQorCW1hc3QtPmwtPm9m
ZnNldCA9IG10ZV9wYXJlbnRfc2xvdChtYXMtPm5vZGUpOw0KKwltYXN0LT5sLT5tYXggPSBtYXN0
LT5ibi0+cGl2b3Rbc3BsaXRdOw0KKwltYXN0LT5yLT5taW4gPSBtYXN0LT5sLT5tYXggKyAxOw0K
KwlpZiAobXRlX2lzX2xlYWYobWFzLT5ub2RlKSkNCisJICAgIHJldHVybjsNCisNCisJcF9zbG90
ID0gbWFzdC0+b3JpZ19sLT5vZmZzZXQ7DQorCW1hc19zZXRfc3BsaXRfcGFyZW50KG1hc3QtPm9y
aWdfbCwgbWFzdC0+bC0+bm9kZSwgbWFzdC0+ci0+bm9kZSwNCisJCQkgICAgICZwX3Nsb3QsIHNw
bGl0KTsNCisJbWFzX3NldF9zcGxpdF9wYXJlbnQobWFzdC0+b3JpZ19yLCBtYXN0LT5sLT5ub2Rl
LCBtYXN0LT5yLT5ub2RlLA0KKwkJCSAgICAgJnBfc2xvdCwgc3BsaXQpOw0KK30NCisNCisvKg0K
KyAqIG1hc19wdXNoX2RhdGEoKSAtIEluc3RlYWQgb2Ygc3BsaXR0aW5nIGEgbm9kZSwgaXQgaXMg
YmVuZWZpY2lhbCB0byBwdXNoIHRoZQ0KKyAqIGRhdGEgdG8gdGhlIHJpZ2h0IG9yIGxlZnQgbm9k
ZSBpZiB0aGVyZSBpcyByb29tLg0KKyAqIEBtYXM6IFRoZSBtYXBsZSBzdGF0ZQ0KKyAqIEBoZWln
aHQ6IFRoZSBjdXJyZW50IGhlaWdodCBvZiB0aGUgbWFwbGUgc3RhdGUNCisgKiBAbWFzdDogVGhl
IG1hcGxlIHN1YnRyZWUgc3RhdGUNCisgKiBAbGVmdDogUHVzaCBsZWZ0IG9yIG5vdC4NCisgKg0K
KyAqIEtlZXBpbmcgdGhlIGhlaWdodCBvZiB0aGUgdHJlZSBsb3cgbWVhbnMgZmFzdGVyIGxvb2t1
cHMuDQorICoNCisgKiBSZXR1cm46IFRydWUgaWYgcHVzaGVkLCBmYWxzZSBvdGhlcndpc2UuDQor
ICovDQorc3RhdGljIGlubGluZSBib29sIG1hc19wdXNoX2RhdGEoc3RydWN0IG1hX3N0YXRlICpt
YXMsIGludCBoZWlnaHQsDQorCQkJCSBzdHJ1Y3QgbWFwbGVfc3VidHJlZV9zdGF0ZSAqbWFzdCwg
Ym9vbCBsZWZ0KQ0KK3sNCisJdW5zaWduZWQgY2hhciBzbG90X3RvdGFsID0gbWFzdC0+Ym4tPmJf
ZW5kOw0KKwl1bnNpZ25lZCBjaGFyIGVuZCwgc3BhY2UsIHNwbGl0Ow0KKw0KKwlNQV9TVEFURSh0
bXBfbWFzLCBtYXMtPnRyZWUsIG1hcy0+aW5kZXgsIG1hcy0+bGFzdCk7DQorCXRtcF9tYXMgPSAq
bWFzOw0KKwl0bXBfbWFzLmRlcHRoID0gbWFzdC0+bC0+ZGVwdGg7DQorDQorCWlmIChsZWZ0ICYm
ICFtYXNfcHJldl9zaWJsaW5nKCZ0bXBfbWFzKSkNCisJCXJldHVybiBmYWxzZTsNCisJZWxzZSBp
ZiAoIWxlZnQgJiYgIW1hc19uZXh0X3NpYmxpbmcoJnRtcF9tYXMpKQ0KKwkJcmV0dXJuIGZhbHNl
Ow0KKw0KKwllbmQgPSBtYXNfZGF0YV9lbmQoJnRtcF9tYXMpOw0KKwlzbG90X3RvdGFsICs9IGVu
ZDsNCisJc3BhY2UgPSAyICogbXRfc2xvdF9jb3VudChtYXMtPm5vZGUpIC0gMjsNCisJLyogLTIg
aW5zdGVhZCBvZiAtMSB0byBlbnN1cmUgdGhlcmUgaXNuJ3QgYSB0cmlwbGUgc3BsaXQgKi8NCisJ
aWYgKG1hX2lzX2xlYWYobWFzdC0+Ym4tPnR5cGUpKQ0KKwkJc3BhY2UtLTsNCisNCisJaWYgKG1h
cy0+bWF4ID09IFVMT05HX01BWCkNCisJCXNwYWNlLS07DQorDQorCWlmIChzbG90X3RvdGFsID49
IHNwYWNlKQ0KKwkJcmV0dXJuIGZhbHNlOw0KKw0KKwkvKiBHZXQgdGhlIGRhdGE7IEZpbGwgbWFz
dC0+Ym4gKi8NCisJbWFzdC0+Ym4tPmJfZW5kKys7DQorCWlmIChsZWZ0KSB7DQorCQltYWJfc2hp
ZnRfcmlnaHQobWFzdC0+Ym4sIGVuZCArIDEpOw0KKwkJbWFzX21hYl9jcCgmdG1wX21hcywgMCwg
ZW5kLCBtYXN0LT5ibiwgMCk7DQorCQltYXN0LT5ibi0+Yl9lbmQgPSBzbG90X3RvdGFsICsgMTsN
CisJfSBlbHNlIHsNCisJCW1hc19tYWJfY3AoJnRtcF9tYXMsIDAsIGVuZCwgbWFzdC0+Ym4sIG1h
c3QtPmJuLT5iX2VuZCk7DQorCX0NCisNCisJLyogQ29uZmlndXJlIG1hc3QgZm9yIHNwbGl0dGlu
ZyBvZiBtYXN0LT5ibiAqLw0KKwlzcGxpdCA9IG10X3Nsb3RzW21hc3QtPmJuLT50eXBlXSAtIDI7
DQorCWlmIChsZWZ0KSB7DQorCQkvKiAgU3dpdGNoIG1hcyB0byBwcmV2IG5vZGUgICovDQorCQlt
YXRfYWRkKG1hc3QtPmZyZWUsIG1hcy0+bm9kZSk7DQorCQkqbWFzID0gdG1wX21hczsNCisJCS8q
IFN0YXJ0IHVzaW5nIG1hc3QtPmwgZm9yIHRoZSBsZWZ0IHNpZGUuICovDQorCQl0bXBfbWFzLm5v
ZGUgPSBtYXN0LT5sLT5ub2RlOw0KKwkJKm1hc3QtPmwgPSB0bXBfbWFzOw0KKwl9IGVsc2Ugew0K
KwkJbWF0X2FkZChtYXN0LT5mcmVlLCB0bXBfbWFzLm5vZGUpOw0KKwkJdG1wX21hcy5ub2RlID0g
bWFzdC0+ci0+bm9kZTsNCisJCSptYXN0LT5yID0gdG1wX21hczsNCisJCXNwbGl0ID0gc2xvdF90
b3RhbCAtIHNwbGl0Ow0KKwl9DQorCXNwbGl0ID0gbWFiX25vX251bGxfc3BsaXQobWFzdC0+Ym4s
IHNwbGl0LCBtdF9zbG90c1ttYXN0LT5ibi0+dHlwZV0pOw0KKwkvKiBVcGRhdGUgcGFyZW50IHNs
b3QgZm9yIHNwbGl0IGNhbGN1bGF0aW9uLiAqLw0KKwlpZiAobGVmdCkNCisJCW1hc3QtPm9yaWdf
bC0+b2Zmc2V0ICs9IGVuZCArIDE7DQorDQorCW1hc3Rfc3BsaXRfZGF0YShtYXN0LCBtYXMsIHNw
bGl0KTsNCisJbWFzdF9maWxsX2Jub2RlKG1hc3QsIG1hcywgMik7DQorCW1hc19zcGxpdF9maW5h
bF9ub2RlKG1hc3QsIG1hcywgaGVpZ2h0ICsgMSk7DQorCXJldHVybiB0cnVlOw0KK30NCisNCisv
Kg0KKyAqIG1hc19zcGxpdCgpIC0gU3BsaXQgZGF0YSB0aGF0IGlzIHRvbyBiaWcgZm9yIG9uZSBu
b2RlIGludG8gdHdvLg0KKyAqIEBtYXM6IFRoZSBtYXBsZSBzdGF0ZQ0KKyAqIEBiX25vZGU6IFRo
ZSBtYXBsZSBiaWcgbm9kZQ0KKyAqIFJldHVybjogMSBvbiBzdWNjZXNzLCAwIG9uIGZhaWx1cmUu
DQorICovDQorc3RhdGljIGludCBtYXNfc3BsaXQoc3RydWN0IG1hX3N0YXRlICptYXMsIHN0cnVj
dCBtYXBsZV9iaWdfbm9kZSAqYl9ub2RlKQ0KK3sNCisNCisJc3RydWN0IG1hcGxlX3N1YnRyZWVf
c3RhdGUgbWFzdDsNCisJaW50IGhlaWdodCA9IDA7DQorCXVuc2lnbmVkIGNoYXIgbWlkX3NwbGl0
LCBzcGxpdCA9IDA7DQorDQorCS8qDQorCSAqIFNwbGl0dGluZyBpcyBoYW5kbGVkIGRpZmZlcmVu
dGx5IGZyb20gYW55IG90aGVyIEItdHJlZTsgdGhlIE1hcGxlDQorCSAqIFRyZWUgc3BsaXRzIHVw
d2FyZHMuICBTcGxpdHRpbmcgdXAgbWVhbnMgdGhhdCB0aGUgc3BsaXQgb3BlcmF0aW9uDQorCSAq
IG9jY3VycyB3aGVuIHRoZSB3YWxrIG9mIHRoZSB0cmVlIGhpdHMgdGhlIGxlYXZlcyBhbmQgbm90
IG9uIHRoZSB3YXkNCisJICogZG93bi4gIFRoZSByZWFzb24gZm9yIHNwbGl0dGluZyB1cCBpcyB0
aGF0IGl0IGlzIGltcG9zc2libGUgdG8ga25vdw0KKwkgKiBob3cgbXVjaCBzcGFjZSB3aWxsIGJl
IG5lZWRlZCB1bnRpbCB0aGUgbGVhZiBpcyAob3IgbGVhdmVzIGFyZSkNCisJICogcmVhY2hlZC4g
IFNpbmNlIG92ZXJ3cml0aW5nIGRhdGEgaXMgYWxsb3dlZCBhbmQgYSByYW5nZSBjb3VsZA0KKwkg
KiBvdmVyd3JpdGUgbW9yZSB0aGFuIG9uZSByYW5nZSBvciByZXN1bHQgaW4gY2hhbmdpbmcgb25l
IGVudHJ5IGludG8gMw0KKwkgKiBlbnRyaWVzLCBpdCBpcyBpbXBvc3NpYmxlIHRvIGtub3cgaWYg
YSBzcGxpdCBpcyByZXF1aXJlZCB1bnRpbCB0aGUNCisJICogZGF0YSBpcyBleGFtaW5lZC4NCisJ
ICoNCisJICogU3BsaXR0aW5nIGlzIGEgYmFsYW5jaW5nIGFjdCBiZXR3ZWVuIGtlZXBpbmcgYWxs
b2NhdGlvbnMgdG8gYSBtaW5pbXVtDQorCSAqIGFuZCBhdm9pZGluZyBhICdqaXR0ZXInIGV2ZW50
IHdoZXJlIGEgdHJlZSBpcyBleHBhbmRlZCB0byBtYWtlIHJvb20NCisJICogZm9yIGFuIGVudHJ5
IGZvbGxvd2VkIGJ5IGEgY29udHJhY3Rpb24gd2hlbiB0aGUgZW50cnkgaXMgcmVtb3ZlZC4gIFRv
DQorCSAqIGFjY29tcGxpc2ggdGhlIGJhbGFuY2UsIHRoZXJlIGFyZSBlbXB0eSBzbG90cyByZW1h
aW5pbmcgaW4gYm90aCBsZWZ0DQorCSAqIGFuZCByaWdodCBub2RlcyBhZnRlciBhIHNwbGl0Lg0K
KwkgKi8NCisJTUFfU1RBVEUobF9tYXMsIG1hcy0+dHJlZSwgbWFzLT5pbmRleCwgbWFzLT5sYXN0
KTsNCisJTUFfU1RBVEUocl9tYXMsIG1hcy0+dHJlZSwgbWFzLT5pbmRleCwgbWFzLT5sYXN0KTsN
CisJTUFfU1RBVEUocHJldl9sX21hcywgbWFzLT50cmVlLCBtYXMtPmluZGV4LCBtYXMtPmxhc3Qp
Ow0KKwlNQV9TVEFURShwcmV2X3JfbWFzLCBtYXMtPnRyZWUsIG1hcy0+aW5kZXgsIG1hcy0+bGFz
dCk7DQorCU1BX1RPUElBUlkobWF0LCBtYXMtPnRyZWUpOw0KKw0KKwl0cmFjZV9tYV9vcChfX2Z1
bmNfXywgbWFzKTsNCisJbWFzLT5kZXB0aCA9IG1hc19tdF9oZWlnaHQobWFzKTsNCisJLyogQWxs
b2NhdGlvbiBmYWlsdXJlcyB3aWxsIGhhcHBlbiBlYXJseS4gKi8NCisJbWFzX25vZGVfY291bnQo
bWFzLCAxICsgbWFzLT5kZXB0aCAqIDIpOw0KKwlpZiAobWFzX2lzX2VycihtYXMpKQ0KKwkJcmV0
dXJuIDA7DQorDQorCW1hc3QubCA9ICZsX21hczsNCisJbWFzdC5yID0gJnJfbWFzOw0KKwltYXN0
Lm9yaWdfbCA9ICZwcmV2X2xfbWFzOw0KKwltYXN0Lm9yaWdfciA9ICZwcmV2X3JfbWFzOw0KKwlt
YXN0LmZyZWUgPSAmbWF0Ow0KKwltYXN0LmJuID0gYl9ub2RlOw0KKw0KKwl3aGlsZSAoaGVpZ2h0
KysgPD0gbWFzLT5kZXB0aCkgew0KKwkJaWYgKG10X3Nsb3RzW2Jfbm9kZS0+dHlwZV0gPiBiX25v
ZGUtPmJfZW5kKSB7DQorCQkJbWFzX3NwbGl0X2ZpbmFsX25vZGUoJm1hc3QsIG1hcywgaGVpZ2h0
KTsNCisJCQlicmVhazsNCisJCX0NCisNCisJCWxfbWFzID0gcl9tYXMgPSAqbWFzOw0KKwkJbF9t
YXMubm9kZSA9IG1hc19uZXdfbWFfbm9kZShtYXMsIGJfbm9kZSk7DQorCQlyX21hcy5ub2RlID0g
bWFzX25ld19tYV9ub2RlKG1hcywgYl9ub2RlKTsNCisJCS8qDQorCQkgKiBBbm90aGVyIHdheSB0
aGF0ICdqaXR0ZXInIGlzIGF2b2lkZWQgaXMgdG8gdGVybWluYXRlIGEgc3BsaXQgdXAgZWFybHkg
aWYgdGhlDQorCQkgKiBsZWZ0IG9yIHJpZ2h0IG5vZGUgaGFzIHNwYWNlIHRvIHNwYXJlLiAgVGhp
cyBpcyByZWZlcnJlZCB0byBhcyAicHVzaGluZyBsZWZ0Ig0KKwkJICogb3IgInB1c2hpbmcgcmln
aHQiIGFuZCBpcyBzaW1pbGFyIHRvIHRoZSBCKiB0cmVlLCBleGNlcHQgdGhlIG5vZGVzIGxlZnQg
b3INCisJCSAqIHJpZ2h0IGNhbiByYXJlbHkgYmUgcmV1c2VkIGR1ZSB0byBSQ1UsIGJ1dCB0aGUg
cmlwcGxlIHVwd2FyZHMgaXMgaGFsdGVkIHdoaWNoDQorCQkgKiBpcyBhIHNpZ25pZmljYW50IHNh
dmluZ3MuDQorCQkgKi8NCisJCS8qIFRyeSB0byBwdXNoIGxlZnQuICovDQorCQlpZiAobWFzX3B1
c2hfZGF0YShtYXMsIGhlaWdodCwgJm1hc3QsIHRydWUpKQ0KKwkJCWJyZWFrOw0KKw0KKwkJLyog
VHJ5IHRvIHB1c2ggcmlnaHQuICovDQorCQlpZiAobWFzX3B1c2hfZGF0YShtYXMsIGhlaWdodCwg
Jm1hc3QsIGZhbHNlKSkNCisJCQlicmVhazsNCisNCisJCXNwbGl0ID0gbWFiX2NhbGNfc3BsaXQo
bWFzLCBiX25vZGUsICZtaWRfc3BsaXQpOw0KKwkJbWFzdF9zcGxpdF9kYXRhKCZtYXN0LCBtYXMs
IHNwbGl0KTsNCisJCS8qDQorCQkgKiBVc3VhbGx5IGNvcnJlY3QsIG1hYl9tYXNfY3AgaW4gdGhl
IGFib3ZlIGNhbGwgb3ZlcndyaXRlcw0KKwkJICogci0+bWF4Lg0KKwkJICovDQorCQltYXN0LnIt
Pm1heCA9IG1hcy0+bWF4Ow0KKwkJbWFzdF9maWxsX2Jub2RlKCZtYXN0LCBtYXMsIDEpOw0KKwkJ
cHJldl9sX21hcyA9ICptYXN0Lmw7DQorCQlwcmV2X3JfbWFzID0gKm1hc3QucjsNCisJfQ0KKw0K
KwkvKiBTZXQgdGhlIG9yaWdpbmFsIG5vZGUgYXMgZGVhZCAqLw0KKwltYXRfYWRkKG1hc3QuZnJl
ZSwgbWFzLT5ub2RlKTsNCisJbWFzLT5ub2RlID0gbF9tYXMubm9kZTsNCisJbWFzX3dtYl9yZXBs
YWNlKG1hcywgbWFzdC5mcmVlLCBOVUxMKTsNCisJbXRyZWVfcmFuZ2Vfd2FsayhtYXMpOw0KKwly
ZXR1cm4gMTsNCit9DQorDQorLyoNCisgKiBtYXNfcmV1c2Vfbm9kZSgpIC0gUmV1c2UgdGhlIG5v
ZGUgdG8gc3RvcmUgdGhlIGRhdGEuDQorICogQG1hczogVGhlIG1hcGxlIHN0YXRlDQorICogQGJu
OiBUaGUgbWFwbGUgYmlnIG5vZGUNCisgKiBAZW5kOiBUaGUgZW5kIG9mIHRoZSBkYXRhLg0KKyAq
DQorICogV2lsbCBhbHdheXMgcmV0dXJuIGZhbHNlIGluIFJDVSBtb2RlLg0KKyAqDQorICogUmV0
dXJuOiBUcnVlIGlmIG5vZGUgd2FzIHJldXNlZCwgZmFsc2Ugb3RoZXJ3aXNlLg0KKyAqLw0KK3N0
YXRpYyBpbmxpbmUgYm9vbCBtYXNfcmV1c2Vfbm9kZShzdHJ1Y3QgbWFfc3RhdGUgKm1hcywNCisJ
CQkgIHN0cnVjdCBtYXBsZV9iaWdfbm9kZSAqYm4sIHVuc2lnbmVkIGNoYXIgZW5kKQ0KK3sNCisJ
LyogTmVlZCB0byBiZSByY3Ugc2FmZS4gKi8NCisJaWYgKG10X2luX3JjdShtYXMtPnRyZWUpKQ0K
KwkJcmV0dXJuIGZhbHNlOw0KKw0KKwltYWJfbWFzX2NwKGJuLCAwLCBibi0+Yl9lbmQsIG1hcywg
ZmFsc2UpOw0KKw0KKwlpZiAoZW5kID4gYm4tPmJfZW5kKSB7DQorCQkvKiBaZXJvIGVuZCBvZiBu
b2RlLiAqLw0KKwkJZW51bSBtYXBsZV90eXBlIG10ID0gbXRlX25vZGVfdHlwZShtYXMtPm5vZGUp
Ow0KKwkJc3RydWN0IG1hcGxlX25vZGUgKm1uID0gbWFzX21uKG1hcyk7DQorCQl1bnNpZ25lZCBs
b25nICpwaXZvdHMgPSBtYV9waXZvdHMobW4sIG10KTsNCisJCXZvaWQgX19yY3UgKipzbG90cyA9
IG1hX3Nsb3RzKG1uLCBtdCk7DQorCQljaGFyIGNsZWFyID0gbXRfc2xvdHNbbXRdIC0gYm4tPmJf
ZW5kIC0gMjsNCisNCisJCWlmIChjbGVhciA+IDApIHsNCisJCQltZW1zZXQoc2xvdHMgKyBibi0+
Yl9lbmQgKyAxLCAwLA0KKwkJCSAgICAgICBzaXplb2Yodm9pZCAqKSAqIGNsZWFyKTsNCisJCQlt
ZW1zZXQocGl2b3RzICsgYm4tPmJfZW5kICsgMSwgMCwNCisJCQkgICAgICAgc2l6ZW9mKHVuc2ln
bmVkIGxvbmcgKikgKiBjbGVhcik7DQorCQl9DQorCX0NCisNCisJcmV0dXJuIHRydWU7DQorfQ0K
Kw0KKy8qDQorICogbWFzX2NvbW1pdF9iX25vZGUoKSAtIENvbW1pdCB0aGUgYmlnIG5vZGUgaW50
byB0aGUgdHJlZS4NCisgKiBAbWFzOiBUaGUgbWFwbGUgc3RhdGUNCisgKiBAYl9ub2RlOiBUaGUg
bWFwbGUgYmlnIG5vZGUNCisgKiBAZW5kOiBUaGUgZW5kIG9mIHRoZSBkYXRhLg0KKyAqLw0KK3N0
YXRpYyBpbmxpbmUgaW50IG1hc19jb21taXRfYl9ub2RlKHN0cnVjdCBtYV9zdGF0ZSAqbWFzLA0K
KwkJCSAgICBzdHJ1Y3QgbWFwbGVfYmlnX25vZGUgKmJfbm9kZSwgdW5zaWduZWQgY2hhciBlbmQp
DQorew0KKwlzdHJ1Y3QgbWFwbGVfbm9kZSAqbm9kZTsNCisJdW5zaWduZWQgY2hhciBiX2VuZCA9
IGJfbm9kZS0+Yl9lbmQ7DQorCWVudW0gbWFwbGVfdHlwZSBiX3R5cGUgPSBiX25vZGUtPnR5cGU7
DQorDQorCWlmICgoYl9lbmQgPCBtdF9taW5fc2xvdHNbYl90eXBlXSkgJiYNCisJICAgICghbXRl
X2lzX3Jvb3QobWFzLT5ub2RlKSkgJiYgKG1hc19tdF9oZWlnaHQobWFzKSA+IDEpKQ0KKwkJcmV0
dXJuIG1hc19yZWJhbGFuY2UobWFzLCBiX25vZGUpOw0KKw0KKwlpZiAoYl9lbmQgPj0gbXRfc2xv
dHNbYl90eXBlXSkNCisJCXJldHVybiBtYXNfc3BsaXQobWFzLCBiX25vZGUpOw0KKw0KKwlpZiAo
bWFzX3JldXNlX25vZGUobWFzLCBiX25vZGUsIGVuZCkpDQorCQlnb3RvIHJldXNlX25vZGU7DQor
DQorCW1hc19ub2RlX2NvdW50KG1hcywgMSk7DQorCWlmIChtYXNfaXNfZXJyKG1hcykpDQorCQly
ZXR1cm4gMDsNCisNCisJbm9kZSA9IG1hc19wb3Bfbm9kZShtYXMpOw0KKwlub2RlLT5wYXJlbnQg
PSBtYXNfbW4obWFzKS0+cGFyZW50Ow0KKwltYXMtPm5vZGUgPSBtdF9ta19ub2RlKG5vZGUsIGJf
dHlwZSk7DQorCW1hYl9tYXNfY3AoYl9ub2RlLCAwLCBiX2VuZCwgbWFzLCB0cnVlKTsNCisJaWYg
KGJfZW5kIDwgbXRfcGl2b3RzW2JfdHlwZV0gLSAxKQ0KKwkJbWFfc2V0X21ldGEobm9kZSwgYl90
eXBlLCAwLCBiX2VuZCk7DQorDQorCW1hc19yZXBsYWNlKG1hcywgZmFsc2UpOw0KK3JldXNlX25v
ZGU6DQorCW1hc191cGRhdGVfZ2FwKG1hcyk7DQorCXJldHVybiAxOw0KK30NCisNCisvKg0KKyAq
IG1hc19yb290X2V4cGFuZCgpIC0gRXhwYW5kIGEgcm9vdCB0byBhIG5vZGUNCisgKiBAbWFzOiBU
aGUgbWFwbGUgc3RhdGUNCisgKiBAZW50cnk6IFRoZSBlbnRyeSB0byBzdG9yZSBpbnRvIHRoZSB0
cmVlDQorICovDQorc3RhdGljIGlubGluZSBpbnQgbWFzX3Jvb3RfZXhwYW5kKHN0cnVjdCBtYV9z
dGF0ZSAqbWFzLCB2b2lkICplbnRyeSkNCit7DQorCXZvaWQgKmNvbnRlbnRzID0gbWFzX3Jvb3Rf
bG9ja2VkKG1hcyk7DQorCWVudW0gbWFwbGVfdHlwZSB0eXBlID0gbWFwbGVfbGVhZl82NDsNCisJ
c3RydWN0IG1hcGxlX25vZGUgKm5vZGU7DQorCXZvaWQgX19yY3UgKipzbG90czsNCisJdW5zaWdu
ZWQgbG9uZyAqcGl2b3RzOw0KKwlpbnQgc2xvdCA9IDA7DQorDQorCW1hc19ub2RlX2NvdW50KG1h
cywgMSk7DQorCWlmICh1bmxpa2VseShtYXNfaXNfZXJyKG1hcykpKQ0KKwkJcmV0dXJuIDA7DQor
DQorCW5vZGUgPSBtYXNfcG9wX25vZGUobWFzKTsNCisJcGl2b3RzID0gbWFfcGl2b3RzKG5vZGUs
IHR5cGUpOw0KKwlzbG90cyA9IG1hX3Nsb3RzKG5vZGUsIHR5cGUpOw0KKwlub2RlLT5wYXJlbnQg
PSBtYV9wYXJlbnRfcHRyKA0KKwkJICAgICAgKCh1bnNpZ25lZCBsb25nKW1hcy0+dHJlZSB8IE1B
X1JPT1RfUEFSRU5UKSk7DQorCW1hcy0+bm9kZSA9IG10X21rX25vZGUobm9kZSwgdHlwZSk7DQor
DQorCWlmIChtYXMtPmluZGV4KSB7DQorCQlpZiAoY29udGVudHMpIHsNCisJCQlyY3VfYXNzaWdu
X3BvaW50ZXIoc2xvdHNbc2xvdF0sIGNvbnRlbnRzKTsNCisJCQlpZiAobGlrZWx5KG1hcy0+aW5k
ZXggPiAxKSkNCisJCQkJc2xvdCsrOw0KKwkJfQ0KKwkJcGl2b3RzW3Nsb3QrK10gPSBtYXMtPmlu
ZGV4IC0gMTsNCisJfQ0KKw0KKwlyY3VfYXNzaWduX3BvaW50ZXIoc2xvdHNbc2xvdF0sIGVudHJ5
KTsNCisJbWFzLT5vZmZzZXQgPSBzbG90Ow0KKwlwaXZvdHNbc2xvdF0gPSBtYXMtPmxhc3Q7DQor
CWlmIChtYXMtPmxhc3QgIT0gVUxPTkdfTUFYKQ0KKwkJc2xvdCsrOw0KKwltYXMtPmRlcHRoID0g
MTsNCisJbWFzX3NldF9oZWlnaHQobWFzKTsNCisNCisJLyogc3dhcCB0aGUgbmV3IHJvb3QgaW50
byB0aGUgdHJlZSAqLw0KKwlyY3VfYXNzaWduX3BvaW50ZXIobWFzLT50cmVlLT5tYV9yb290LCBt
dGVfbWtfcm9vdChtYXMtPm5vZGUpKTsNCisJbWFfc2V0X21ldGEobm9kZSwgbWFwbGVfbGVhZl82
NCwgMCwgc2xvdCk7DQorCXJldHVybiBzbG90Ow0KK30NCisNCitzdGF0aWMgaW5saW5lIHZvaWQg
bWFzX3N0b3JlX3Jvb3Qoc3RydWN0IG1hX3N0YXRlICptYXMsIHZvaWQgKmVudHJ5KQ0KK3sNCisJ
aWYgKGxpa2VseSgobWFzLT5sYXN0ICE9IDApIHx8IChtYXMtPmluZGV4ICE9IDApKSkNCisJCW1h
c19yb290X2V4cGFuZChtYXMsIGVudHJ5KTsNCisJZWxzZSBpZiAoKCh1bnNpZ25lZCBsb25nKSAo
ZW50cnkpICYgMykgPT0gMikNCisJCW1hc19yb290X2V4cGFuZChtYXMsIGVudHJ5KTsNCisJZWxz
ZSB7DQorCQlyY3VfYXNzaWduX3BvaW50ZXIobWFzLT50cmVlLT5tYV9yb290LCBlbnRyeSk7DQor
CQltYXMtPm5vZGUgPSBNQVNfU1RBUlQ7DQorCX0NCit9DQorDQorLyoNCisgKiBtYXNfaXNfc3Bh
bl93cigpIC0gQ2hlY2sgaWYgdGhlIHdyaXRlIG5lZWRzIHRvIGJlIHRyZWF0ZWQgYXMgYSB3cml0
ZSB0aGF0DQorICogc3BhbnMgdGhlIG5vZGUuDQorICogQG1hczogVGhlIG1hcGxlIHN0YXRlDQor
ICogQHBpdjogVGhlIHBpdm90IHZhbHVlIGJlaW5nIHdyaXR0ZW4NCisgKiBAdHlwZTogVGhlIG1h
cGxlIG5vZGUgdHlwZQ0KKyAqIEBlbnRyeTogVGhlIGRhdGEgdG8gd3JpdGUNCisgKg0KKyAqIFNw
YW5uaW5nIHdyaXRlcyBhcmUgd3JpdGVzIHRoYXQgc3RhcnQgaW4gb25lIG5vZGUgYW5kIGVuZCBp
biBhbm90aGVyIE9SIGlmDQorICogdGhlIHdyaXRlIG9mIGEgJU5VTEwgd2lsbCBjYXVzZSB0aGUg
bm9kZSB0byBlbmQgd2l0aCBhICVOVUxMLg0KKyAqDQorICogUmV0dXJuOiBUcnVlIGlmIHRoaXMg
aXMgYSBzcGFubmluZyB3cml0ZSwgZmFsc2Ugb3RoZXJ3aXNlLg0KKyAqLw0KK3N0YXRpYyBib29s
IG1hc19pc19zcGFuX3dyKHN0cnVjdCBtYV93cl9zdGF0ZSAqd3JfbWFzKQ0KK3sNCisJdW5zaWdu
ZWQgbG9uZyBtYXg7DQorCXVuc2lnbmVkIGxvbmcgbGFzdCA9IHdyX21hcy0+bWFzLT5sYXN0Ow0K
Kwl1bnNpZ25lZCBsb25nIHBpdiA9IHdyX21hcy0+cl9tYXg7DQorCWVudW0gbWFwbGVfdHlwZSB0
eXBlID0gd3JfbWFzLT50eXBlOw0KKwl2b2lkICplbnRyeSA9IHdyX21hcy0+ZW50cnk7DQorDQor
CS8qIENvbnRhaW5lZCBpbiB0aGlzIHBpdm90ICovDQorCWlmIChwaXYgPiBsYXN0KQ0KKwkJcmV0
dXJuIGZhbHNlOw0KKw0KKwltYXggPSB3cl9tYXMtPm1hcy0+bWF4Ow0KKwlpZiAodW5saWtlbHko
bWFfaXNfbGVhZih0eXBlKSkpIHsNCisJCS8qIEZpdHMgaW4gdGhlIG5vZGUsIGJ1dCBtYXkgc3Bh
biBzbG90cy4gKi8NCisJCWlmIChsYXN0IDwgbWF4KQ0KKwkJCXJldHVybiBmYWxzZTsNCisNCisJ
CS8qIFdyaXRlcyB0byB0aGUgZW5kIG9mIHRoZSBub2RlIGJ1dCBub3QgbnVsbC4gKi8NCisJCWlm
ICgobGFzdCA9PSBtYXgpICYmIGVudHJ5KQ0KKwkJCXJldHVybiBmYWxzZTsNCisNCisJCS8qDQor
CQkgKiBXcml0aW5nIFVMT05HX01BWCBpcyBub3QgYSBzcGFubmluZyB3cml0ZSByZWdhcmRsZXNz
IG9mIHRoZQ0KKwkJICogdmFsdWUgYmVpbmcgd3JpdHRlbiBhcyBsb25nIGFzIHRoZSByYW5nZSBm
aXRzIGluIHRoZSBub2RlLg0KKwkJICovDQorCQlpZiAoKGxhc3QgPT0gVUxPTkdfTUFYKSAmJiAo
bGFzdCA9PSBtYXgpKQ0KKwkJCXJldHVybiBmYWxzZTsNCisJfSBlbHNlIGlmIChwaXYgPT0gbGFz
dCkgew0KKwkJaWYgKGVudHJ5KQ0KKwkJCXJldHVybiBmYWxzZTsNCisNCisJCS8qIERldGVjdCBz
cGFubmluZyBzdG9yZSB3ciB3YWxrICovDQorCQlpZiAoKGxhc3QgPT0gVUxPTkdfTUFYKSAmJiAo
d3JfbWFzLT5tYXMtPmluZGV4ID09IFVMT05HX01BWCkpDQorCQkJcmV0dXJuIGZhbHNlOw0KKwl9
DQorDQorCXRyYWNlX21hX3dyaXRlKF9fZnVuY19fLCB3cl9tYXMtPm1hcywgcGl2LCBlbnRyeSk7
DQorDQorCXJldHVybiB0cnVlOw0KK30NCisNCitzdGF0aWMgaW5saW5lIHZvaWQgbWFzX3dyX3dh
bGtfZGVzY2VuZChzdHJ1Y3QgbWFfd3Jfc3RhdGUgKndyX21hcykNCit7DQorCXdyX21hcy0+bWFz
LT5kZXB0aCsrOw0KKwl3cl9tYXMtPnR5cGUgPSBtdGVfbm9kZV90eXBlKHdyX21hcy0+bWFzLT5u
b2RlKTsNCisJbWFzX3dyX25vZGVfd2Fsayh3cl9tYXMpOw0KKwl3cl9tYXMtPnNsb3RzID0gbWFf
c2xvdHMod3JfbWFzLT5ub2RlLCB3cl9tYXMtPnR5cGUpOw0KK30NCisNCitzdGF0aWMgaW5saW5l
IHZvaWQgbWFzX3dyX3dhbGtfdHJhdmVyc2Uoc3RydWN0IG1hX3dyX3N0YXRlICp3cl9tYXMpDQor
ew0KKwl3cl9tYXMtPm1hcy0+bWF4ID0gd3JfbWFzLT5yX21heDsNCisJd3JfbWFzLT5tYXMtPm1p
biA9IHdyX21hcy0+cl9taW47DQorCXdyX21hcy0+bWFzLT5ub2RlID0gd3JfbWFzLT5jb250ZW50
Ow0KKwl3cl9tYXMtPm1hcy0+b2Zmc2V0ID0gMDsNCit9DQorLyoNCisgKiBtYXNfd3Jfd2Fsaygp
IC0gV2FsayB0aGUgdHJlZSBmb3IgYSB3cml0ZS4NCisgKiBAd3JfbWFzOiBUaGUgbWFwbGUgd3Jp
dGUgc3RhdGUNCisgKg0KKyAqIFVzZXMgbWFzX3Nsb3RfbG9ja2VkKCkgYW5kIGRvZXMgbm90IG5l
ZWQgdG8gd29ycnkgYWJvdXQgZGVhZCBub2Rlcy4NCisgKg0KKyAqIFJldHVybjogVHJ1ZSBpZiBp
dCdzIGNvbnRhaW5lZCBpbiBhIG5vZGUsIGZhbHNlIG9uIHNwYW5uaW5nIHdyaXRlLg0KKyAqLw0K
K3N0YXRpYyBib29sIG1hc193cl93YWxrKHN0cnVjdCBtYV93cl9zdGF0ZSAqd3JfbWFzKQ0KK3sN
CisJc3RydWN0IG1hX3N0YXRlICptYXMgPSB3cl9tYXMtPm1hczsNCisNCisJd2hpbGUgKHRydWUp
IHsNCisJCW1hc193cl93YWxrX2Rlc2NlbmQod3JfbWFzKTsNCisJCWlmICh1bmxpa2VseShtYXNf
aXNfc3Bhbl93cih3cl9tYXMpKSkNCisJCQlyZXR1cm4gZmFsc2U7DQorDQorCQl3cl9tYXMtPmNv
bnRlbnQgPSBtYXNfc2xvdF9sb2NrZWQobWFzLCB3cl9tYXMtPnNsb3RzLA0KKwkJCQkJCSAgbWFz
LT5vZmZzZXQpOw0KKwkJaWYgKG1hX2lzX2xlYWYod3JfbWFzLT50eXBlKSkNCisJCQlyZXR1cm4g
dHJ1ZTsNCisNCisJCW1hc193cl93YWxrX3RyYXZlcnNlKHdyX21hcyk7DQorCX0NCisNCisJcmV0
dXJuIHRydWU7DQorfQ0KKw0KK3N0YXRpYyBib29sIG1hc193cl93YWxrX2luZGV4KHN0cnVjdCBt
YV93cl9zdGF0ZSAqd3JfbWFzKQ0KK3sNCisJc3RydWN0IG1hX3N0YXRlICptYXMgPSB3cl9tYXMt
Pm1hczsNCisNCisJd2hpbGUgKHRydWUpIHsNCisJCW1hc193cl93YWxrX2Rlc2NlbmQod3JfbWFz
KTsNCisJCXdyX21hcy0+Y29udGVudCA9IG1hc19zbG90X2xvY2tlZChtYXMsIHdyX21hcy0+c2xv
dHMsDQorCQkJCQkJICBtYXMtPm9mZnNldCk7DQorCQlpZiAobWFfaXNfbGVhZih3cl9tYXMtPnR5
cGUpKQ0KKwkJCXJldHVybiB0cnVlOw0KKwkJbWFzX3dyX3dhbGtfdHJhdmVyc2Uod3JfbWFzKTsN
CisNCisJfQ0KKwlyZXR1cm4gdHJ1ZTsNCit9DQorLyoNCisgKiBtYXNfZXh0ZW5kX3NwYW5uaW5n
X251bGwoKSAtIEV4dGVuZCBhIHN0b3JlIG9mIGEgJU5VTEwgdG8gaW5jbHVkZSBzdXJyb3VuZGlu
ZyAlTlVMTHMuDQorICogQGxfd3JfbWFzOiBUaGUgbGVmdCBtYXBsZSB3cml0ZSBzdGF0ZQ0KKyAq
IEByX3dyX21hczogVGhlIHJpZ2h0IG1hcGxlIHdyaXRlIHN0YXRlDQorICovDQorc3RhdGljIGlu
bGluZSB2b2lkIG1hc19leHRlbmRfc3Bhbm5pbmdfbnVsbChzdHJ1Y3QgbWFfd3Jfc3RhdGUgKmxf
d3JfbWFzLA0KKwkJCQkJICAgIHN0cnVjdCBtYV93cl9zdGF0ZSAqcl93cl9tYXMpDQorew0KKwlz
dHJ1Y3QgbWFfc3RhdGUgKnJfbWFzID0gcl93cl9tYXMtPm1hczsNCisJc3RydWN0IG1hX3N0YXRl
ICpsX21hcyA9IGxfd3JfbWFzLT5tYXM7DQorCXVuc2lnbmVkIGNoYXIgbF9zbG90Ow0KKw0KKwls
X3Nsb3QgPSBsX21hcy0+b2Zmc2V0Ow0KKwlpZiAoIWxfd3JfbWFzLT5jb250ZW50KQ0KKwkJbF9t
YXMtPmluZGV4ID0gbF93cl9tYXMtPnJfbWluOw0KKw0KKwlpZiAoKGxfbWFzLT5pbmRleCA9PSBs
X3dyX21hcy0+cl9taW4pICYmDQorCQkgKGxfc2xvdCAmJg0KKwkJICAhbWFzX3Nsb3RfbG9ja2Vk
KGxfbWFzLCBsX3dyX21hcy0+c2xvdHMsIGxfc2xvdCAtIDEpKSkgew0KKwkJaWYgKGxfc2xvdCA+
IDEpDQorCQkJbF9tYXMtPmluZGV4ID0gbF93cl9tYXMtPnBpdm90c1tsX3Nsb3QgLSAyXSArIDE7
DQorCQllbHNlDQorCQkJbF9tYXMtPmluZGV4ID0gbF9tYXMtPm1pbjsNCisNCisJCWxfbWFzLT5v
ZmZzZXQgPSBsX3Nsb3QgLSAxOw0KKwl9DQorDQorCWlmICghcl93cl9tYXMtPmNvbnRlbnQpIHsN
CisJCWlmIChyX21hcy0+bGFzdCA8IHJfd3JfbWFzLT5yX21heCkNCisJCQlyX21hcy0+bGFzdCA9
IHJfd3JfbWFzLT5yX21heDsNCisJCXJfbWFzLT5vZmZzZXQrKzsNCisJfSBlbHNlIGlmICgocl9t
YXMtPmxhc3QgPT0gcl93cl9tYXMtPnJfbWF4KSAmJg0KKwkgICAgKHJfbWFzLT5sYXN0IDwgcl9t
YXMtPm1heCkgJiYNCisJICAgICFtYXNfc2xvdF9sb2NrZWQocl9tYXMsIHJfd3JfbWFzLT5zbG90
cywgcl9tYXMtPm9mZnNldCArIDEpKSB7DQorCQlyX21hcy0+bGFzdCA9IG1hc19zYWZlX3Bpdm90
KHJfbWFzLCByX3dyX21hcy0+cGl2b3RzLA0KKwkJCQkJICAgICByX3dyX21hcy0+dHlwZSwgcl9t
YXMtPm9mZnNldCArIDEpOw0KKwkJcl9tYXMtPm9mZnNldCsrOw0KKwl9DQorfQ0KKw0KK3N0YXRp
YyBpbmxpbmUgdm9pZCAqbWFzX3N0YXRlX3dhbGsoc3RydWN0IG1hX3N0YXRlICptYXMpDQorew0K
Kwl2b2lkICplbnRyeTsNCisNCisJZW50cnkgPSBtYXNfc3RhcnQobWFzKTsNCisJaWYgKG1hc19p
c19ub25lKG1hcykpDQorCQlyZXR1cm4gTlVMTDsNCisNCisJaWYgKG1hc19pc19wdHIobWFzKSkN
CisJCXJldHVybiBlbnRyeTsNCisNCisJcmV0dXJuIG10cmVlX3JhbmdlX3dhbGsobWFzKTsNCit9
DQorLyoNCisgKiBtdHJlZV9sb29rdXBfd2FsaygpIC0gSW50ZXJuYWwgcXVpY2sgbG9va3VwIHRo
YXQgZG9lcyBub3Qga2VlcCBtYXBsZSBzdGF0ZSB1cA0KKyAqIHRvIGRhdGUuDQorICoNCisgKiBA
bWFzOiBUaGUgbWFwbGUgc3RhdGUuDQorICoNCisgKiBOb3RlOiBMZWF2ZXMgbWFzIGluIHVuZGVz
aXJhYmxlIHN0YXRlLg0KKyAqIFJldHVybjogVGhlIGVudHJ5IGZvciBAbWFzLT5pbmRleCBvciAl
TlVMTCBvbiBkZWFkIG5vZGUuDQorICovDQorc3RhdGljIGlubGluZSB2b2lkICptdHJlZV9sb29r
dXBfd2FsayhzdHJ1Y3QgbWFfc3RhdGUgKm1hcykNCit7DQorCXVuc2lnbmVkIGxvbmcgKnBpdm90
czsNCisJdW5zaWduZWQgY2hhciBvZmZzZXQ7DQorCXN0cnVjdCBtYXBsZV9ub2RlICpub2RlOw0K
KwlzdHJ1Y3QgbWFwbGVfZW5vZGUgKm5leHQ7DQorCWVudW0gbWFwbGVfdHlwZSB0eXBlOw0KKwl2
b2lkIF9fcmN1ICoqc2xvdHM7DQorCXVuc2lnbmVkIGNoYXIgZW5kOw0KKwl1bnNpZ25lZCBsb25n
IG1heDsNCisNCisJbmV4dCA9IG1hcy0+bm9kZTsNCisJbWF4ID0gVUxPTkdfTUFYOw0KKwlkbyB7
DQorCQlvZmZzZXQgPSAwOw0KKwkJbm9kZSA9IG10ZV90b19ub2RlKG5leHQpOw0KKwkJdHlwZSA9
IG10ZV9ub2RlX3R5cGUobmV4dCk7DQorCQlwaXZvdHMgPSBtYV9waXZvdHMobm9kZSwgdHlwZSk7
DQorCQlpZiAodW5saWtlbHkobWFfZGVhZF9ub2RlKG5vZGUpKSkNCisJCQlnb3RvIGRlYWRfbm9k
ZTsNCisNCisJCWlmIChwaXZvdHNbb2Zmc2V0XSA+PSBtYXMtPmluZGV4KQ0KKwkJCWdvdG8gbmV4
dDsNCisNCisJCWVuZCA9IG1hX2RhdGFfZW5kKG5vZGUsIHR5cGUsIHBpdm90cywgbWF4KTsNCisJ
CWRvIHsNCisJCQlvZmZzZXQrKzsNCisJCX0gd2hpbGUoKG9mZnNldCA8IGVuZCkgJiYgKHBpdm90
c1tvZmZzZXRdIDwgbWFzLT5pbmRleCkpOw0KKw0KKwkJaWYgKGxpa2VseShvZmZzZXQgPiBlbmQp
KQ0KKwkJCW1heCA9IHBpdm90c1tvZmZzZXRdOw0KKw0KK25leHQ6DQorCQlzbG90cyA9IG1hX3Ns
b3RzKG5vZGUsIHR5cGUpOw0KKwkJbmV4dCA9IG10X3Nsb3QobWFzLT50cmVlLCBzbG90cywgb2Zm
c2V0KTsNCisJCWlmICh1bmxpa2VseShtYV9kZWFkX25vZGUobm9kZSkpKQ0KKwkJCWdvdG8gZGVh
ZF9ub2RlOw0KKwl9IHdoaWxlICghbWFfaXNfbGVhZih0eXBlKSk7DQorDQorCXJldHVybiAodm9p
ZCAqKSBuZXh0Ow0KKw0KK2RlYWRfbm9kZToNCisJbWFzX3Jlc2V0KG1hcyk7DQorCXJldHVybiBO
VUxMOw0KK30NCisNCisvKg0KKyAqIG1hc19uZXdfcm9vdCgpIC0gQ3JlYXRlIGEgbmV3IHJvb3Qg
bm9kZSB0aGF0IG9ubHkgY29udGFpbnMgdGhlIGVudHJ5IHBhc3NlZA0KKyAqIGluLg0KKyAqIEBt
YXM6IFRoZSBtYXBsZSBzdGF0ZQ0KKyAqIEBlbnRyeTogVGhlIGVudHJ5IHRvIHN0b3JlLg0KKyAq
DQorICogT25seSB2YWxpZCB3aGVuIHRoZSBpbmRleCA9PSAwIGFuZCB0aGUgbGFzdCA9PSBVTE9O
R19NQVgNCisgKg0KKyAqIFJldHVybiAwIG9uIGVycm9yLCAxIG9uIHN1Y2Nlc3MuDQorICovDQor
c3RhdGljIGlubGluZSBpbnQgbWFzX25ld19yb290KHN0cnVjdCBtYV9zdGF0ZSAqbWFzLCB2b2lk
ICplbnRyeSkNCit7DQorCXN0cnVjdCBtYXBsZV9lbm9kZSAqcm9vdCA9IG1hc19yb290X2xvY2tl
ZChtYXMpOw0KKwllbnVtIG1hcGxlX3R5cGUgdHlwZSA9IG1hcGxlX2xlYWZfNjQ7DQorCXN0cnVj
dCBtYXBsZV9ub2RlICpub2RlOw0KKwl2b2lkIF9fcmN1ICoqc2xvdHM7DQorCXVuc2lnbmVkIGxv
bmcgKnBpdm90czsNCisNCisJaWYgKCFlbnRyeSAmJiAhbWFzLT5pbmRleCAmJiBtYXMtPmxhc3Qg
PT0gVUxPTkdfTUFYKSB7DQorCQltYXMtPmRlcHRoID0gMDsNCisJCW1hc19zZXRfaGVpZ2h0KG1h
cyk7DQorCQlyY3VfYXNzaWduX3BvaW50ZXIobWFzLT50cmVlLT5tYV9yb290LCBlbnRyeSk7DQor
CQltYXMtPm5vZGUgPSBNQVNfU1RBUlQ7DQorCQlnb3RvIGRvbmU7DQorCX0NCisNCisJbWFzX25v
ZGVfY291bnQobWFzLCAxKTsNCisJaWYgKG1hc19pc19lcnIobWFzKSkNCisJCXJldHVybiAwOw0K
Kw0KKwlub2RlID0gbWFzX3BvcF9ub2RlKG1hcyk7DQorCXBpdm90cyA9IG1hX3Bpdm90cyhub2Rl
LCB0eXBlKTsNCisJc2xvdHMgPSBtYV9zbG90cyhub2RlLCB0eXBlKTsNCisJbm9kZS0+cGFyZW50
ID0gbWFfcGFyZW50X3B0cigNCisJCSAgICAgICgodW5zaWduZWQgbG9uZyltYXMtPnRyZWUgfCBN
QV9ST09UX1BBUkVOVCkpOw0KKwltYXMtPm5vZGUgPSBtdF9ta19ub2RlKG5vZGUsIHR5cGUpOw0K
KwlyY3VfYXNzaWduX3BvaW50ZXIoc2xvdHNbMF0sIGVudHJ5KTsNCisJcGl2b3RzWzBdID0gbWFz
LT5sYXN0Ow0KKwltYXMtPmRlcHRoID0gMTsNCisJbWFzX3NldF9oZWlnaHQobWFzKTsNCisJcmN1
X2Fzc2lnbl9wb2ludGVyKG1hcy0+dHJlZS0+bWFfcm9vdCwgbXRlX21rX3Jvb3QobWFzLT5ub2Rl
KSk7DQorDQorZG9uZToNCisJaWYgKHhhX2lzX25vZGUocm9vdCkpDQorCQltdGVfZGVzdHJveV93
YWxrKHJvb3QsIG1hcy0+dHJlZSk7DQorDQorCXJldHVybiAxOw0KK30NCisvKg0KKyAqIG1hc19z
cGFubmluZ19zdG9yZSgpIC0gQ3JlYXRlIGEgc3VidHJlZSB3aXRoIHRoZSBzdG9yZSBvcGVyYXRp
b24gY29tcGxldGVkDQorICogYW5kIG5ldyBub2RlcyB3aGVyZSBuZWNlc3NhcnksIHRoZW4gcGxh
Y2UgdGhlIHN1Yi10cmVlIGluIHRoZSBhY3R1YWwgdHJlZS4NCisgKiBOb3RlIHRoYXQgbWFzIGlz
IGV4cGVjdGVkIHRvIHBvaW50IHRvIHRoZSBub2RlIHdoaWNoIGNhdXNlZCB0aGUgc3RvcmUgdG8N
CisgKiBzcGFuLg0KKyAqIEB3cl9tYXM6IFRoZSBtYXBsZSB3cml0ZSBzdGF0ZQ0KKyAqDQorICog
UmV0dXJuOiAwIG9uIGVycm9yLCBwb3NpdGl2ZSBvbiBzdWNjZXNzLg0KKyAqLw0KK3N0YXRpYyBp
bmxpbmUgaW50IG1hc193cl9zcGFubmluZ19zdG9yZShzdHJ1Y3QgbWFfd3Jfc3RhdGUgKndyX21h
cykNCit7DQorCXN0cnVjdCBtYXBsZV9zdWJ0cmVlX3N0YXRlIG1hc3Q7DQorCXN0cnVjdCBtYXBs
ZV9iaWdfbm9kZSBiX25vZGU7DQorCXN0cnVjdCBtYV9zdGF0ZSAqbWFzOw0KKwl1bnNpZ25lZCBj
aGFyIGhlaWdodDsNCisNCisJLyogTGVmdCBhbmQgUmlnaHQgc2lkZSBvZiBzcGFubmluZyBzdG9y
ZSAqLw0KKwlNQV9TVEFURShsX21hcywgTlVMTCwgMCwgMCk7DQorCU1BX1NUQVRFKHJfbWFzLCBO
VUxMLCAwLCAwKTsNCisNCisJTUFfV1JfU1RBVEUocl93cl9tYXMsICZyX21hcywgd3JfbWFzLT5l
bnRyeSk7DQorCU1BX1dSX1NUQVRFKGxfd3JfbWFzLCAmbF9tYXMsIHdyX21hcy0+ZW50cnkpOw0K
Kw0KKwkvKg0KKwkgKiBBIHN0b3JlIG9wZXJhdGlvbiB0aGF0IHNwYW5zIG11bHRpcGxlIG5vZGVz
IGlzIGNhbGxlZCBhIHNwYW5uaW5nDQorCSAqIHN0b3JlIGFuZCBpcyBoYW5kbGVkIGVhcmx5IGlu
IHRoZSBzdG9yZSBjYWxsIHN0YWNrIGJ5IHRoZSBmdW5jdGlvbg0KKwkgKiBtYXNfaXNfc3Bhbl93
cigpLiAgV2hlbiBhIHNwYW5uaW5nIHN0b3JlIGlzIGlkZW50aWZpZWQsIHRoZSBtYXBsZQ0KKwkg
KiBzdGF0ZSBpcyBkdXBsaWNhdGVkLiAgVGhlIGZpcnN0IG1hcGxlIHN0YXRlIHdhbGtzIHRoZSBs
ZWZ0IHRyZWUgcGF0aA0KKwkgKiB0byBgYGluZGV4YGAsIHRoZSBkdXBsaWNhdGUgd2Fsa3MgdGhl
IHJpZ2h0IHRyZWUgcGF0aCB0byBgYGxhc3RgYC4NCisJICogVGhlIGRhdGEgaW4gdGhlIHR3byBu
b2RlcyBhcmUgY29tYmluZWQgaW50byBhIHNpbmdsZSBub2RlLCB0d28gbm9kZXMsDQorCSAqIG9y
IHBvc3NpYmx5IHRocmVlIG5vZGVzIChzZWUgdGhlIDMtd2F5IHNwbGl0IGFib3ZlKS4gIEEgYGBO
VUxMYGANCisJICogd3JpdHRlbiB0byB0aGUgbGFzdCBlbnRyeSBvZiBhIG5vZGUgaXMgY29uc2lk
ZXJlZCBhIHNwYW5uaW5nIHN0b3JlIGFzDQorCSAqIGEgcmViYWxhbmNlIGlzIHJlcXVpcmVkIGZv
ciB0aGUgb3BlcmF0aW9uIHRvIGNvbXBsZXRlIGFuZCBhbiBvdmVyZmxvdw0KKwkgKiBvZiBkYXRh
IG1heSBoYXBwZW4uDQorCSAqLw0KKwltYXMgPSB3cl9tYXMtPm1hczsNCisJdHJhY2VfbWFfb3Ao
X19mdW5jX18sIG1hcyk7DQorDQorCWlmICh1bmxpa2VseSghbWFzLT5pbmRleCAmJiBtYXMtPmxh
c3QgPT0gVUxPTkdfTUFYKSkNCisJCXJldHVybiBtYXNfbmV3X3Jvb3QobWFzLCB3cl9tYXMtPmVu
dHJ5KTsNCisJLyoNCisJICogTm9kZSByZWJhbGFuY2luZyBtYXkgb2NjdXIgZHVlIHRvIHRoaXMg
c3RvcmUsIHNvIHRoZXJlIG1heSBiZSB0d28gbmV3DQorCSAqIGVudHJpZXMgcGVyIGxldmVsIHBs
dXMgYSBuZXcgcm9vdC4NCisJICovDQorCWhlaWdodCA9IG1hc19tdF9oZWlnaHQobWFzKTsNCisJ
bWFzX25vZGVfY291bnQobWFzLCAxICsgaGVpZ2h0ICogMyk7DQorCWlmIChtYXNfaXNfZXJyKG1h
cykpDQorCQlyZXR1cm4gMDsNCisNCisJLyoNCisJICogU2V0IHVwIHJpZ2h0IHNpZGUuICBOZWVk
IHRvIGdldCB0byB0aGUgbmV4dCBvZmZzZXQgYWZ0ZXIgdGhlIHNwYW5uaW5nDQorCSAqIHN0b3Jl
IHRvIGVuc3VyZSBpdCdzIG5vdCBOVUxMIGFuZCB0byBjb21iaW5lIGJvdGggdGhlIG5leHQgbm9k
ZSBhbmQNCisJICogdGhlIG5vZGUgd2l0aCB0aGUgc3RhcnQgdG9nZXRoZXIuDQorCSAqLw0KKwly
X21hcyA9ICptYXM7DQorCS8qIEF2b2lkIG92ZXJmbG93LCB3YWxrIHRvIG5leHQgc2xvdCBpbiB0
aGUgdHJlZS4gKi8NCisJaWYgKHJfbWFzLmxhc3QgKyAxKQ0KKwkJcl9tYXMubGFzdCsrOw0KKw0K
KwlyX21hcy5pbmRleCA9IHJfbWFzLmxhc3Q7DQorCW1hc193cl93YWxrX2luZGV4KCZyX3dyX21h
cyk7DQorCXJfbWFzLmxhc3QgPSByX21hcy5pbmRleCA9IG1hcy0+bGFzdDsNCisNCisJLyogU2V0
IHVwIGxlZnQgc2lkZS4gKi8NCisJbF9tYXMgPSAqbWFzOw0KKwltYXNfd3Jfd2Fsa19pbmRleCgm
bF93cl9tYXMpOw0KKw0KKwlpZiAoIXdyX21hcy0+ZW50cnkpIHsNCisJCW1hc19leHRlbmRfc3Bh
bm5pbmdfbnVsbCgmbF93cl9tYXMsICZyX3dyX21hcyk7DQorCQltYXMtPm9mZnNldCA9IGxfbWFz
Lm9mZnNldDsNCisJCW1hcy0+aW5kZXggPSBsX21hcy5pbmRleDsNCisJCW1hcy0+bGFzdCA9IGxf
bWFzLmxhc3QgPSByX21hcy5sYXN0Ow0KKwl9DQorDQorCS8qIENvcHkgbF9tYXMgYW5kIHN0b3Jl
IHRoZSB2YWx1ZSBpbiBiX25vZGUuICovDQorCWJfbm9kZS5iX2VuZCA9IG1hc19zdG9yZV9iX25v
ZGUoJmxfd3JfbWFzLCAmYl9ub2RlLCBsX3dyX21hcy5ub2RlX2VuZCk7DQorCS8qIENvcHkgcl9t
YXMgaW50byBiX25vZGUuICovDQorCW1hc19tYWJfY3AoJnJfbWFzLCByX21hcy5vZmZzZXQsIHJf
d3JfbWFzLm5vZGVfZW5kLA0KKwkJICAgJmJfbm9kZSwgYl9ub2RlLmJfZW5kICsgMSk7DQorCS8q
IFN0b3Agc3Bhbm5pbmcgc2VhcmNoZXMgYnkgc2VhcmNoaW5nIGZvciBqdXN0IGluZGV4LiAqLw0K
KwlsX21hcy5pbmRleCA9IGxfbWFzLmxhc3QgPSBtYXMtPmluZGV4Ow0KKw0KKwltYXN0LmJuID0g
JmJfbm9kZTsNCisJbWFzdC5vcmlnX2wgPSAmbF9tYXM7DQorCW1hc3Qub3JpZ19yID0gJnJfbWFz
Ow0KKwkvKiBDb21iaW5lIGxfbWFzIGFuZCByX21hcyBhbmQgc3BsaXQgdGhlbSB1cCBldmVubHkg
YWdhaW4uICovDQorCXJldHVybiBtYXNfc3Bhbm5pbmdfcmViYWxhbmNlKG1hcywgJm1hc3QsIGhl
aWdodCArIDEpOw0KK30NCisNCisvKg0KKyAqIG1hc193cl9ub2RlX3N0b3JlKCkgLSBBdHRlbXB0
IHRvIHN0b3JlIHRoZSB2YWx1ZSBpbiBhIG5vZGUNCisgKiBAd3JfbWFzOiBUaGUgbWFwbGUgd3Jp
dGUgc3RhdGUNCisgKg0KKyAqIEF0dGVtcHRzIHRvIHJldXNlIHRoZSBub2RlLCBidXQgbWF5IGFs
bG9jYXRlLg0KKyAqDQorICogUmV0dXJuOiBUcnVlIGlmIHN0b3JlZCwgZmFsc2Ugb3RoZXJ3aXNl
DQorICovDQorc3RhdGljIGlubGluZSBib29sIG1hc193cl9ub2RlX3N0b3JlKHN0cnVjdCBtYV93
cl9zdGF0ZSAqd3JfbWFzKQ0KK3sNCisJc3RydWN0IG1hX3N0YXRlICptYXMgPSB3cl9tYXMtPm1h
czsNCisJdm9pZCBfX3JjdSAqKmRzdF9zbG90czsNCisJdW5zaWduZWQgbG9uZyAqZHN0X3Bpdm90
czsNCisJdW5zaWduZWQgY2hhciBkc3Rfb2Zmc2V0Ow0KKwl1bnNpZ25lZCBjaGFyIG5ld19lbmQg
PSB3cl9tYXMtPm5vZGVfZW5kOw0KKwl1bnNpZ25lZCBjaGFyIG9mZnNldDsNCisJdW5zaWduZWQg
Y2hhciBub2RlX3Nsb3RzID0gbXRfc2xvdHNbd3JfbWFzLT50eXBlXTsNCisJdW5zaWduZWQgY2hh
ciBub2RlX3Bpdm90cyA9IG10X3Bpdm90c1t3cl9tYXMtPnR5cGVdOw0KKwlzdHJ1Y3QgbWFwbGVf
bm9kZSByZXVzZSwgKm5ld25vZGU7DQorCXVuc2lnbmVkIGNoYXIgY29weV9zaXplLCBtYXhfcGl2
ID0gbXRfcGl2b3RzW3dyX21hcy0+dHlwZV07DQorCWJvb2wgaW5fcmN1ID0gbXRfaW5fcmN1KG1h
cy0+dHJlZSk7DQorDQorCW9mZnNldCA9IG1hcy0+b2Zmc2V0Ow0KKwlpZiAobWFzLT5sYXN0ID09
IHdyX21hcy0+cl9tYXgpIHsNCisJCS8qIHJ1bnMgcmlnaHQgdG8gdGhlIGVuZCBvZiB0aGUgbm9k
ZSAqLw0KKwkJaWYgKG1hcy0+bGFzdCA9PSBtYXMtPm1heCkNCisJCQluZXdfZW5kID0gb2Zmc2V0
Ow0KKwkJLyogZG9uJ3QgY29weSB0aGlzIG9mZnNldCAqLw0KKwkJd3JfbWFzLT5vZmZzZXRfZW5k
Kys7DQorCX0gZWxzZSBpZiAobWFzLT5sYXN0IDwgd3JfbWFzLT5yX21heCkgew0KKwkJLyogbmV3
IHJhbmdlIGVuZHMgaW4gdGhpcyByYW5nZSAqLw0KKwkJaWYgKHVubGlrZWx5KHdyX21hcy0+cl9t
YXggPT0gVUxPTkdfTUFYKSkNCisJCQltYXNfYnVsa19yZWJhbGFuY2UobWFzLCB3cl9tYXMtPm5v
ZGVfZW5kLCB3cl9tYXMtPnR5cGUpOw0KKw0KKwkJbmV3X2VuZCsrOw0KKwl9IGVsc2Ugew0KKwkJ
aWYgKG1hc19zYWZlX3Bpdm90KG1hcywgd3JfbWFzLT5waXZvdHMsIHdyX21hcy0+b2Zmc2V0X2Vu
ZCwNCisJCQkJICAgd3JfbWFzLT50eXBlKSA9PSBtYXMtPmxhc3QpDQorCQkJd3JfbWFzLT5vZmZz
ZXRfZW5kKys7DQorDQorCQluZXdfZW5kIC09IHdyX21hcy0+b2Zmc2V0X2VuZCAtIG9mZnNldCAt
IDE7DQorCX0NCisNCisJLyogbmV3IHJhbmdlIHN0YXJ0cyB3aXRoaW4gYSByYW5nZSAqLw0KKwlp
ZiAod3JfbWFzLT5yX21pbiA8IG1hcy0+aW5kZXgpDQorCQluZXdfZW5kKys7DQorDQorCS8qIE5v
dCBlbm91Z2ggcm9vbSAqLw0KKwlpZiAobmV3X2VuZCA+PSBub2RlX3Nsb3RzKQ0KKwkJcmV0dXJu
IGZhbHNlOw0KKw0KKwkvKiBOb3QgZW5vdWdoIGRhdGEuICovDQorCWlmICghbXRlX2lzX3Jvb3Qo
bWFzLT5ub2RlKSAmJiAobmV3X2VuZCA8PSBtdF9taW5fc2xvdHNbd3JfbWFzLT50eXBlXSkgJiYN
CisJICAgICEobWFzLT5tYXNfZmxhZ3MgJiBNQV9TVEFURV9CVUxLKSkNCisJCXJldHVybiBmYWxz
ZTsNCisNCisJLyogc2V0IHVwIG5vZGUuICovDQorCWlmIChpbl9yY3UpIHsNCisJCW1hc19ub2Rl
X2NvdW50KG1hcywgMSk7DQorCQlpZiAobWFzX2lzX2VycihtYXMpKQ0KKwkJCXJldHVybiBmYWxz
ZTsNCisNCisJCW5ld25vZGUgPSBtYXNfcG9wX25vZGUobWFzKTsNCisJfSBlbHNlIHsNCisJCW1l
bXNldCgmcmV1c2UsIDAsIHNpemVvZihzdHJ1Y3QgbWFwbGVfbm9kZSkpOw0KKwkJbmV3bm9kZSA9
ICZyZXVzZTsNCisJfQ0KKw0KKwluZXdub2RlLT5wYXJlbnQgPSBtYXNfbW4obWFzKS0+cGFyZW50
Ow0KKwlkc3RfcGl2b3RzID0gbWFfcGl2b3RzKG5ld25vZGUsIHdyX21hcy0+dHlwZSk7DQorCWRz
dF9zbG90cyA9IG1hX3Nsb3RzKG5ld25vZGUsIHdyX21hcy0+dHlwZSk7DQorCS8qIENvcHkgZnJv
bSBzdGFydCB0byBpbnNlcnQgcG9pbnQgKi8NCisJbWVtY3B5KGRzdF9waXZvdHMsIHdyX21hcy0+
cGl2b3RzLCBzaXplb2YodW5zaWduZWQgbG9uZykgKiAob2Zmc2V0ICsgMSkpOw0KKwltZW1jcHko
ZHN0X3Nsb3RzLCB3cl9tYXMtPnNsb3RzLCBzaXplb2Yodm9pZCAqKSAqIChvZmZzZXQgKyAxKSk7
DQorCWRzdF9vZmZzZXQgPSBvZmZzZXQ7DQorDQorCS8qIEhhbmRsZSBpbnNlcnQgb2YgbmV3IHJh
bmdlIHN0YXJ0aW5nIGFmdGVyIG9sZCByYW5nZSAqLw0KKwlpZiAod3JfbWFzLT5yX21pbiA8IG1h
cy0+aW5kZXgpIHsNCisJCW1hcy0+b2Zmc2V0Kys7DQorCQlyY3VfYXNzaWduX3BvaW50ZXIoZHN0
X3Nsb3RzW2RzdF9vZmZzZXRdLCB3cl9tYXMtPmNvbnRlbnQpOw0KKwkJZHN0X3Bpdm90c1tkc3Rf
b2Zmc2V0KytdID0gbWFzLT5pbmRleCAtIDE7DQorCX0NCisNCisJLyogU3RvcmUgdGhlIG5ldyBl
bnRyeSBhbmQgcmFuZ2UgZW5kLiAqLw0KKwlpZiAoZHN0X29mZnNldCA8IG1heF9waXYpDQorCQlk
c3RfcGl2b3RzW2RzdF9vZmZzZXRdID0gbWFzLT5sYXN0Ow0KKwltYXMtPm9mZnNldCA9IGRzdF9v
ZmZzZXQ7DQorCXJjdV9hc3NpZ25fcG9pbnRlcihkc3Rfc2xvdHNbZHN0X29mZnNldCsrXSwgd3Jf
bWFzLT5lbnRyeSk7DQorDQorCS8qIHRoaXMgcmFuZ2Ugd3JvdGUgdG8gdGhlIGVuZCBvZiB0aGUg
bm9kZS4gKi8NCisJaWYgKHdyX21hcy0+b2Zmc2V0X2VuZCA+IHdyX21hcy0+bm9kZV9lbmQpDQor
CQlnb3RvIGRvbmU7DQorDQorCS8qIENvcHkgdG8gdGhlIGVuZCBvZiBub2RlIGlmIG5lY2Vzc2Fy
eS4gKi8NCisJY29weV9zaXplID0gd3JfbWFzLT5ub2RlX2VuZCAtIHdyX21hcy0+b2Zmc2V0X2Vu
ZCArIDE7DQorCW1lbWNweShkc3Rfc2xvdHMgKyBkc3Rfb2Zmc2V0LCB3cl9tYXMtPnNsb3RzICsg
d3JfbWFzLT5vZmZzZXRfZW5kLA0KKwkgICAgICAgc2l6ZW9mKHZvaWQgKikgKiBjb3B5X3NpemUp
Ow0KKwlpZiAoZHN0X29mZnNldCA8IG1heF9waXYpIHsNCisJCWlmIChjb3B5X3NpemUgPiBtYXhf
cGl2IC0gZHN0X29mZnNldCkNCisJCQljb3B5X3NpemUgPSBtYXhfcGl2IC0gZHN0X29mZnNldDsN
CisJCW1lbWNweShkc3RfcGl2b3RzICsgZHN0X29mZnNldCwgd3JfbWFzLT5waXZvdHMgKyB3cl9t
YXMtPm9mZnNldF9lbmQsDQorCQkgICAgICAgc2l6ZW9mKHVuc2lnbmVkIGxvbmcpICogY29weV9z
aXplKTsNCisJfQ0KKw0KK2RvbmU6DQorCWlmICgod3JfbWFzLT5ub2RlX2VuZCA9PSBub2RlX3Ns
b3RzIC0gMSkgJiYgKG5ld19lbmQgPCBub2RlX3Nsb3RzIC0gMSkpDQorCQlkc3RfcGl2b3RzW25l
d19lbmRdID0gbWFzLT5tYXg7DQorDQorCWlmICghZHN0X3Bpdm90c1tub2RlX3Bpdm90cyAtIDFd
IHx8IGRzdF9waXZvdHNbbm9kZV9waXZvdHMgLSAxXSA9PSBtYXMtPm1heCkgew0KKwkJaWYgKGRz
dF9waXZvdHNbbmV3X2VuZF0gJiYgZHN0X3Bpdm90c1tuZXdfZW5kXSA8IG1hcy0+bWF4KQ0KKwkJ
CW5ld19lbmQrKzsNCisJCW1hX3NldF9tZXRhKG5ld25vZGUsIG1hcGxlX2xlYWZfNjQsIDAsIG5l
d19lbmQpOw0KKwl9DQorDQorCWlmIChpbl9yY3UpIHsNCisJCW1hcy0+bm9kZSA9IG10X21rX25v
ZGUobmV3bm9kZSwgd3JfbWFzLT50eXBlKTsNCisJCW1hc19yZXBsYWNlKG1hcywgZmFsc2UpOw0K
Kwl9IGVsc2Ugew0KKwkJbWVtY3B5KHdyX21hcy0+bm9kZSwgbmV3bm9kZSwgc2l6ZW9mKHN0cnVj
dCBtYXBsZV9ub2RlKSk7DQorCX0NCisJdHJhY2VfbWFfd3JpdGUoX19mdW5jX18sIG1hcywgMCwg
d3JfbWFzLT5lbnRyeSk7DQorCW1hc191cGRhdGVfZ2FwKG1hcyk7DQorCXJldHVybiB0cnVlOw0K
K30NCisNCisvKg0KKyAqIG1hc193cl9zbG90X3N0b3JlOiBBdHRlbXB0IHRvIHN0b3JlIGEgdmFs
dWUgaW4gYSBzbG90Lg0KKyAqIEB3cl9tYXM6IHRoZSBtYXBsZSB3cml0ZSBzdGF0ZQ0KKyAqDQor
ICogUmV0dXJuOiBUcnVlIGlmIHN0b3JlZCwgZmFsc2Ugb3RoZXJ3aXNlDQorICovDQorc3RhdGlj
IGlubGluZSBib29sIG1hc193cl9zbG90X3N0b3JlKHN0cnVjdCBtYV93cl9zdGF0ZSAqd3JfbWFz
KQ0KK3sNCisJc3RydWN0IG1hX3N0YXRlICptYXMgPSB3cl9tYXMtPm1hczsNCisJdW5zaWduZWQg
bG9uZyBsbWF4OyAvKiBMb2dpY2FsIG1heC4gKi8NCisJdW5zaWduZWQgY2hhciBvZmZzZXQgPSBt
YXMtPm9mZnNldDsNCisNCisJaWYgKCh3cl9tYXMtPnJfbWF4ID4gbWFzLT5sYXN0KSAmJiAoKHdy
X21hcy0+cl9taW4gIT0gbWFzLT5pbmRleCkgfHwNCisJCQkJICAob2Zmc2V0ICE9IHdyX21hcy0+
bm9kZV9lbmQpKSkNCisJCXJldHVybiBmYWxzZTsNCisNCisJaWYgKG9mZnNldCA9PSB3cl9tYXMt
Pm5vZGVfZW5kIC0gMSkNCisJCWxtYXggPSBtYXMtPm1heDsNCisJZWxzZQ0KKwkJbG1heCA9IHdy
X21hcy0+cGl2b3RzW29mZnNldCArIDFdOw0KKw0KKwkvKiBnb2luZyB0byBvdmVyd3JpdGUgdG9v
IG1hbnkgc2xvdHMuICovDQorCWlmIChsbWF4IDwgbWFzLT5sYXN0KQ0KKwkJcmV0dXJuIGZhbHNl
Ow0KKw0KKwlpZiAod3JfbWFzLT5yX21pbiA9PSBtYXMtPmluZGV4KSB7DQorCQkvKiBvdmVyd3Jp
dGluZyB0d28gb3IgbW9yZSByYW5nZXMgd2l0aCBvbmUuICovDQorCQlpZiAobG1heCA9PSBtYXMt
Pmxhc3QpDQorCQkJcmV0dXJuIGZhbHNlOw0KKw0KKwkJLyogT3ZlcndyaXRpbmcgYWxsIG9mIG9m
ZnNldCBhbmQgYSBwb3J0aW9uIG9mIG9mZnNldCArIDEuICovDQorCQlyY3VfYXNzaWduX3BvaW50
ZXIod3JfbWFzLT5zbG90c1tvZmZzZXRdLCB3cl9tYXMtPmVudHJ5KTsNCisJCXdyX21hcy0+cGl2
b3RzW29mZnNldF0gPSBtYXMtPmxhc3Q7DQorCQlnb3RvIGRvbmU7DQorCX0NCisNCisJLyogRG9l
c24ndCBlbmQgb24gdGhlIG5leHQgcmFuZ2UgZW5kLiAqLw0KKwlpZiAobG1heCAhPSBtYXMtPmxh
c3QpDQorCQlyZXR1cm4gZmFsc2U7DQorDQorCS8qIE92ZXJ3cml0aW5nIGEgcG9ydGlvbiBvZiBv
ZmZzZXQgYW5kIGFsbCBvZiBvZmZzZXQgKyAxICovDQorCWlmICgob2Zmc2V0ICsgMSA8IG10X3Bp
dm90c1t3cl9tYXMtPnR5cGVdKSAmJg0KKwkgICAgKHdyX21hcy0+ZW50cnkgfHwgd3JfbWFzLT5w
aXZvdHNbb2Zmc2V0ICsgMV0pKQ0KKwkJCXdyX21hcy0+cGl2b3RzW29mZnNldCArIDFdID0gbWFz
LT5sYXN0Ow0KKw0KKwlyY3VfYXNzaWduX3BvaW50ZXIod3JfbWFzLT5zbG90c1tvZmZzZXQgKyAx
XSwgd3JfbWFzLT5lbnRyeSk7DQorCXdyX21hcy0+cGl2b3RzW29mZnNldF0gPSBtYXMtPmluZGV4
IC0gMTsNCisJbWFzLT5vZmZzZXQrKzsgLyogS2VlcCBtYXMgYWNjdXJhdGUuICovDQorDQorZG9u
ZToNCisJdHJhY2VfbWFfd3JpdGUoX19mdW5jX18sIG1hcywgMCwgd3JfbWFzLT5lbnRyeSk7DQor
CW1hc191cGRhdGVfZ2FwKG1hcyk7DQorCXJldHVybiB0cnVlOw0KK30NCisNCitzdGF0aWMgaW5s
aW5lIHZvaWQgbWFzX3dyX2VuZF9waXYoc3RydWN0IG1hX3dyX3N0YXRlICp3cl9tYXMpDQorew0K
Kwl3aGlsZSAoKHdyX21hcy0+bWFzLT5sYXN0ID4gd3JfbWFzLT5lbmRfcGl2KSAmJg0KKwkgICAg
ICAgKHdyX21hcy0+b2Zmc2V0X2VuZCA8IHdyX21hcy0+bm9kZV9lbmQpKQ0KKwkJd3JfbWFzLT5l
bmRfcGl2ID0gd3JfbWFzLT5waXZvdHNbKyt3cl9tYXMtPm9mZnNldF9lbmRdOw0KKw0KKwlpZiAo
d3JfbWFzLT5tYXMtPmxhc3QgPiB3cl9tYXMtPmVuZF9waXYpDQorCQl3cl9tYXMtPmVuZF9waXYg
PSB3cl9tYXMtPm1hcy0+bWF4Ow0KK30NCisNCitzdGF0aWMgaW5saW5lIHZvaWQgbWFzX3dyX2V4
dGVuZF9udWxsKHN0cnVjdCBtYV93cl9zdGF0ZSAqd3JfbWFzKQ0KK3sNCisJc3RydWN0IG1hX3N0
YXRlICptYXMgPSB3cl9tYXMtPm1hczsNCisNCisJaWYgKG1hcy0+bGFzdCA8IHdyX21hcy0+ZW5k
X3BpdiAmJiAhd3JfbWFzLT5zbG90c1t3cl9tYXMtPm9mZnNldF9lbmRdKQ0KKwkJbWFzLT5sYXN0
ID0gd3JfbWFzLT5lbmRfcGl2Ow0KKw0KKwkvKiBDaGVjayBuZXh0IHNsb3QocykgaWYgd2UgYXJl
IG92ZXJ3cml0aW5nIHRoZSBlbmQgKi8NCisJaWYgKChtYXMtPmxhc3QgPT0gd3JfbWFzLT5lbmRf
cGl2KSAmJg0KKwkgICAgIXdyX21hcy0+c2xvdHNbd3JfbWFzLT5vZmZzZXRfZW5kICsgMV0pIHsN
CisJCXdyX21hcy0+b2Zmc2V0X2VuZCsrOw0KKwkJaWYgKHdyX21hcy0+b2Zmc2V0X2VuZCA9PSB3
cl9tYXMtPm5vZGVfZW5kKQ0KKwkJCW1hcy0+bGFzdCA9IG1hcy0+bWF4Ow0KKwkJZWxzZQ0KKwkJ
CW1hcy0+bGFzdCA9IHdyX21hcy0+cGl2b3RzW3dyX21hcy0+b2Zmc2V0X2VuZF07DQorCX0gZWxz
ZSBpZiAoKG1hcy0+bGFzdCA+IHdyX21hcy0+ZW5kX3BpdikgJiYNCisJCSAgICF3cl9tYXMtPnNs
b3RzW3dyX21hcy0+b2Zmc2V0X2VuZF0pIHsNCisJCW1hcy0+bGFzdCA9IHdyX21hcy0+ZW5kX3Bp
djsNCisJCXdyX21hcy0+b2Zmc2V0X2VuZCsrOw0KKwl9DQorDQorCWlmICghd3JfbWFzLT5jb250
ZW50KSB7DQorCQkvKiBJZiB0aGlzIG9uZSBpcyBudWxsLCB0aGUgbmV4dCBhbmQgcHJldiBhcmUg
bm90ICovDQorCQltYXMtPmluZGV4ID0gd3JfbWFzLT5yX21pbjsNCisJfSBlbHNlIHsNCisJCS8q
IENoZWNrIHByZXYgc2xvdCBpZiB3ZSBhcmUgb3ZlcndyaXRpbmcgdGhlIHN0YXJ0ICovDQorCQlp
ZiAobWFzLT5pbmRleCA9PSB3cl9tYXMtPnJfbWluICYmIG1hcy0+b2Zmc2V0ICYmDQorCQkgICAg
IXdyX21hcy0+c2xvdHNbbWFzLT5vZmZzZXQgLSAxXSkgew0KKwkJCW1hcy0+b2Zmc2V0LS07DQor
CQkJd3JfbWFzLT5yX21pbiA9IG1hcy0+aW5kZXggPQ0KKwkJCQltYXNfc2FmZV9taW4obWFzLCB3
cl9tYXMtPnBpdm90cywgbWFzLT5vZmZzZXQpOw0KKwkJCXdyX21hcy0+cl9tYXggPSB3cl9tYXMt
PnBpdm90c1ttYXMtPm9mZnNldF07DQorCQl9DQorCX0NCit9DQorDQorc3RhdGljIGlubGluZSBi
b29sIG1hc193cl9hcHBlbmQoc3RydWN0IG1hX3dyX3N0YXRlICp3cl9tYXMpDQorew0KKwl1bnNp
Z25lZCBjaGFyIGVuZCA9IHdyX21hcy0+bm9kZV9lbmQ7DQorCXVuc2lnbmVkIGNoYXIgbmV3X2Vu
ZCA9IGVuZCArIDE7DQorCXN0cnVjdCBtYV9zdGF0ZSAqbWFzID0gd3JfbWFzLT5tYXM7DQorCXVu
c2lnbmVkIGNoYXIgbm9kZV9waXZvdHMgPSBtdF9waXZvdHNbd3JfbWFzLT50eXBlXTsNCisNCisJ
aWYgKChtYXMtPmluZGV4ICE9IHdyX21hcy0+cl9taW4pICYmIChtYXMtPmxhc3QgPT0gd3JfbWFz
LT5yX21heCkpIHsNCisJCWlmIChuZXdfZW5kIDwgbm9kZV9waXZvdHMpDQorCQkJd3JfbWFzLT5w
aXZvdHNbbmV3X2VuZF0gPSB3cl9tYXMtPnBpdm90c1tlbmRdOw0KKw0KKwkJaWYgKG5ld19lbmQg
PCBub2RlX3Bpdm90cykNCisJCQltYV9zZXRfbWV0YSh3cl9tYXMtPm5vZGUsIG1hcGxlX2xlYWZf
NjQsIDAsIG5ld19lbmQpOw0KKw0KKwkJcmN1X2Fzc2lnbl9wb2ludGVyKHdyX21hcy0+c2xvdHNb
bmV3X2VuZF0sIHdyX21hcy0+ZW50cnkpOw0KKwkJbWFzLT5vZmZzZXQgPSBuZXdfZW5kOw0KKwkJ
d3JfbWFzLT5waXZvdHNbZW5kXSA9IG1hcy0+aW5kZXggLSAxOw0KKw0KKwkJcmV0dXJuIDE7DQor
CX0gZWxzZSBpZiAoKG1hcy0+aW5kZXggPT0gd3JfbWFzLT5yX21pbikgJiYgKG1hcy0+bGFzdCA8
IHdyX21hcy0+cl9tYXgpKSB7DQorCQlpZiAobmV3X2VuZCA8IG5vZGVfcGl2b3RzKQ0KKwkJCXdy
X21hcy0+cGl2b3RzW25ld19lbmRdID0gd3JfbWFzLT5waXZvdHNbZW5kXTsNCisNCisJCXJjdV9h
c3NpZ25fcG9pbnRlcih3cl9tYXMtPnNsb3RzW25ld19lbmRdLCB3cl9tYXMtPmNvbnRlbnQpOw0K
KwkJaWYgKG5ld19lbmQgPCBub2RlX3Bpdm90cykNCisJCQltYV9zZXRfbWV0YSh3cl9tYXMtPm5v
ZGUsIG1hcGxlX2xlYWZfNjQsIDAsIG5ld19lbmQpOw0KKw0KKwkJd3JfbWFzLT5waXZvdHNbZW5k
XSA9IG1hcy0+bGFzdDsNCisJCXJjdV9hc3NpZ25fcG9pbnRlcih3cl9tYXMtPnNsb3RzW2VuZF0s
IHdyX21hcy0+ZW50cnkpOw0KKwkJcmV0dXJuIDE7DQorCX0NCisJcmV0dXJuIDA7DQorfQ0KKw0K
K3N0YXRpYyBpbmxpbmUgdm9pZCBtYXNfd3JfbW9kaWZ5KHN0cnVjdCBtYV93cl9zdGF0ZSAqd3Jf
bWFzKQ0KK3sNCisJdW5zaWduZWQgY2hhciB6ZXJvOw0KKwl1bnNpZ25lZCBjaGFyIG5vZGVfc2xv
dHM7DQorCXN0cnVjdCBtYV9zdGF0ZSAqbWFzID0gd3JfbWFzLT5tYXM7DQorCXN0cnVjdCBtYXBs
ZV9iaWdfbm9kZSBiX25vZGU7DQorDQorCS8qIERpcmVjdCByZXBsYWNlbWVudCAqLw0KKwlpZiAo
d3JfbWFzLT5yX21pbiA9PSBtYXMtPmluZGV4ICYmIHdyX21hcy0+cl9tYXggPT0gbWFzLT5sYXN0
KSB7DQorCQlyY3VfYXNzaWduX3BvaW50ZXIod3JfbWFzLT5zbG90c1ttYXMtPm9mZnNldF0sIHdy
X21hcy0+ZW50cnkpOw0KKwkJaWYgKCEhd3JfbWFzLT5lbnRyeSBeICEhd3JfbWFzLT5jb250ZW50
KQ0KKwkJCW1hc191cGRhdGVfZ2FwKG1hcyk7DQorCQlyZXR1cm47DQorCX0NCisNCisJLyogQXR0
ZW1wdCB0byBhcHBlbmQgKi8NCisJbm9kZV9zbG90cyA9IG10X3Nsb3RzW3dyX21hcy0+dHlwZV07
DQorCS8qIHNsb3QgYW5kIG5vZGUgc3RvcmUgd2lsbCBub3QgZml0LCBnbyB0byB0aGUgc2xvdyBw
YXRoICovDQorCWlmICh1bmxpa2VseSh3cl9tYXMtPm9mZnNldF9lbmQgKyAxID49IG5vZGVfc2xv
dHMpKQ0KKwkJZ290byBzbG93X3BhdGg7DQorDQorCWlmICh3cl9tYXMtPmVudHJ5ICYmICh3cl9t
YXMtPm5vZGVfZW5kIDwgbm9kZV9zbG90cyAtIDEpICYmDQorCSAgICAobWFzLT5vZmZzZXQgPT0g
d3JfbWFzLT5ub2RlX2VuZCkgJiYgbWFzX3dyX2FwcGVuZCh3cl9tYXMpKSB7DQorCQkJaWYgKCF3
cl9tYXMtPmNvbnRlbnQgfHwgIXdyX21hcy0+ZW50cnkpDQorCQkJCW1hc191cGRhdGVfZ2FwKG1h
cyk7DQorCQkJcmV0dXJuOw0KKwl9DQorDQorCWlmICgod3JfbWFzLT5vZmZzZXRfZW5kIC0gbWFz
LT5vZmZzZXQgPD0gMSkgJiYgbWFzX3dyX3Nsb3Rfc3RvcmUod3JfbWFzKSkNCisJCXJldHVybjsN
CisJZWxzZSBpZiAobWFzX3dyX25vZGVfc3RvcmUod3JfbWFzKSkNCisJCXJldHVybjsNCisNCisJ
aWYgKG1hc19pc19lcnIobWFzKSkNCisJCXJldHVybjsNCisNCitzbG93X3BhdGg6DQorCWJfbm9k
ZS5iX2VuZCA9IG1hc19zdG9yZV9iX25vZGUod3JfbWFzLCAmYl9ub2RlLCB3cl9tYXMtPm9mZnNl
dF9lbmQpOw0KKwliX25vZGUubWluID0gbWFzLT5taW47DQorCXplcm8gPSBNQVBMRV9CSUdfTk9E
RV9TTE9UUyAtIGJfbm9kZS5iX2VuZCAtIDE7DQorCW1lbXNldChiX25vZGUuc2xvdCArIGJfbm9k
ZS5iX2VuZCArIDEsIDAsIHNpemVvZih2b2lkICopICogemVyby0tKTsNCisJbWVtc2V0KGJfbm9k
ZS5waXZvdCArIGJfbm9kZS5iX2VuZCArIDEsIDAsDQorCSAgICAgICBzaXplb2YodW5zaWduZWQg
bG9uZykgKiB6ZXJvKTsNCisNCisJdHJhY2VfbWFfd3JpdGUoX19mdW5jX18sIG1hcywgMCwgd3Jf
bWFzLT5lbnRyeSk7DQorCW1hc19jb21taXRfYl9ub2RlKG1hcywgJmJfbm9kZSwgd3JfbWFzLT5u
b2RlX2VuZCk7DQorfQ0KKw0KKy8qDQorICogbWFzX3dyX3N0b3JlX2VudHJ5KCkgLSBJbnRlcm5h
bCBjYWxsIHRvIHN0b3JlIGEgdmFsdWUNCisgKiBAbWFzOiBUaGUgbWFwbGUgc3RhdGUNCisgKiBA
ZW50cnk6IFRoZSBlbnRyeSB0byBzdG9yZS4NCisgKg0KKyAqIFJldHVybjogVGhlIGNvbnRlbnRz
IHRoYXQgd2FzIHN0b3JlZCBhdCB0aGUgaW5kZXguDQorICovDQorc3RhdGljIGlubGluZSB2b2lk
ICptYXNfd3Jfc3RvcmVfZW50cnkoc3RydWN0IG1hX3dyX3N0YXRlICp3cl9tYXMpDQorew0KKwlz
dHJ1Y3QgbWFfc3RhdGUgKm1hcyA9IHdyX21hcy0+bWFzOw0KKw0KKwlpZiAoKHdyX21hcy0+Y29u
dGVudCA9IG1hc19zdGFydChtYXMpKSB8fCBtYXNfaXNfbm9uZShtYXMpIHx8DQorCSAgICBtYXNf
aXNfcHRyKG1hcykpIHsNCisJCW1hc19zdG9yZV9yb290KG1hcywgd3JfbWFzLT5lbnRyeSk7DQor
CQlyZXR1cm4gd3JfbWFzLT5jb250ZW50Ow0KKwl9DQorDQorCWlmICh1bmxpa2VseSghbWFzX3dy
X3dhbGsod3JfbWFzKSkpIHsNCisJCW1hc193cl9zcGFubmluZ19zdG9yZSh3cl9tYXMpOw0KKwkJ
cmV0dXJuIHdyX21hcy0+Y29udGVudDsNCisJfQ0KKw0KKwkvKiBBdCB0aGlzIHBvaW50LCB3ZSBh
cmUgYXQgdGhlIGxlYWYgbm9kZSB0aGF0IG5lZWRzIHRvIGJlIGFsdGVyZWQuICovDQorCXdyX21h
cy0+ZW5kX3BpdiA9IHdyX21hcy0+cl9tYXg7DQorCW1hc193cl9lbmRfcGl2KHdyX21hcyk7DQor
DQorCWlmICghd3JfbWFzLT5lbnRyeSkNCisJCW1hc193cl9leHRlbmRfbnVsbCh3cl9tYXMpOw0K
Kw0KKwkvKiBOZXcgcm9vdCBmb3IgYSBzaW5nbGUgcG9pbnRlciAqLw0KKwlpZiAodW5saWtlbHko
IW1hcy0+aW5kZXggJiYgbWFzLT5sYXN0ID09IFVMT05HX01BWCkpIHsNCisJCW1hc19uZXdfcm9v
dChtYXMsIHdyX21hcy0+ZW50cnkpOw0KKwkJcmV0dXJuIHdyX21hcy0+Y29udGVudDsNCisJfQ0K
Kw0KKwltYXNfd3JfbW9kaWZ5KHdyX21hcyk7DQorCXJldHVybiB3cl9tYXMtPmNvbnRlbnQ7DQor
fQ0KKw0KKy8qKg0KKyAqIG1hc19pbnNlcnQoKSAtIEludGVybmFsIGNhbGwgdG8gaW5zZXJ0IGEg
dmFsdWUNCisgKiBAbWFzOiBUaGUgbWFwbGUgc3RhdGUNCisgKiBAZW50cnk6IFRoZSBlbnRyeSB0
byBzdG9yZQ0KKyAqDQorICogUmV0dXJuOiAlTlVMTCBvciB0aGUgY29udGVudHMgdGhhdCBhbHJl
YWR5IGV4aXN0cyBhdCB0aGUgcmVxdWVzdGVkIGluZGV4DQorICogb3RoZXJ3aXNlLiAgVGhlIG1h
cGxlIHN0YXRlIG5lZWRzIHRvIGJlIGNoZWNrZWQgZm9yIGVycm9yIGNvbmRpdGlvbnMuDQorICov
DQorc3RhdGljIGlubGluZSB2b2lkICptYXNfaW5zZXJ0KHN0cnVjdCBtYV9zdGF0ZSAqbWFzLCB2
b2lkICplbnRyeSkNCit7DQorCU1BX1dSX1NUQVRFKHdyX21hcywgbWFzLCBlbnRyeSk7DQorDQor
CS8qDQorCSAqIEluc2VydGluZyBhIG5ldyByYW5nZSBpbnNlcnRzIGVpdGhlciAwLCAxLCBvciAy
IHBpdm90cyB3aXRoaW4gdGhlDQorCSAqIHRyZWUuICBJZiB0aGUgaW5zZXJ0IGZpdHMgZXhhY3Rs
eSBpbnRvIGFuIGV4aXN0aW5nIGdhcCB3aXRoIGEgdmFsdWUNCisJICogb2YgTlVMTCwgdGhlbiB0
aGUgc2xvdCBvbmx5IG5lZWRzIHRvIGJlIHdyaXR0ZW4gd2l0aCB0aGUgbmV3IHZhbHVlLg0KKwkg
KiBJZiB0aGUgcmFuZ2UgYmVpbmcgaW5zZXJ0ZWQgaXMgYWRqYWNlbnQgdG8gYW5vdGhlciByYW5n
ZSwgdGhlbiBvbmx5IGENCisJICogc2luZ2xlIHBpdm90IG5lZWRzIHRvIGJlIGluc2VydGVkIChh
cyB3ZWxsIGFzIHdyaXRpbmcgdGhlIGVudHJ5KS4gIElmDQorCSAqIHRoZSBuZXcgcmFuZ2UgaXMg
d2l0aGluIGEgZ2FwIGJ1dCBkb2VzIG5vdCB0b3VjaCBhbnkgb3RoZXIgcmFuZ2VzLA0KKwkgKiB0
aGVuIHR3byBwaXZvdHMgbmVlZCB0byBiZSBpbnNlcnRlZDogdGhlIHN0YXJ0IC0gMSwgYW5kIHRo
ZSBlbmQuICBBcw0KKwkgKiB1c3VhbCwgdGhlIGVudHJ5IG11c3QgYmUgd3JpdHRlbi4gIE1vc3Qg
b3BlcmF0aW9ucyByZXF1aXJlIGEgbmV3IG5vZGUNCisJICogdG8gYmUgYWxsb2NhdGVkIGFuZCBy
ZXBsYWNlIGFuIGV4aXN0aW5nIG5vZGUgdG8gZW5zdXJlIFJDVSBzYWZldHksDQorCSAqIHdoZW4g
aW4gUkNVIG1vZGUuICBUaGUgZXhjZXB0aW9uIHRvIHJlcXVpcmluZyBhIG5ld2x5IGFsbG9jYXRl
ZCBub2RlDQorCSAqIGlzIHdoZW4gaW5zZXJ0aW5nIGF0IHRoZSBlbmQgb2YgYSBub2RlIChhcHBl
bmRpbmcpLiAgV2hlbiBkb25lDQorCSAqIGNhcmVmdWxseSwgYXBwZW5kaW5nIGNhbiByZXVzZSB0
aGUgbm9kZSBpbiBwbGFjZS4NCisJICovDQorCXdyX21hcy5jb250ZW50ID0gbWFzX3N0YXJ0KG1h
cyk7DQorCWlmICh3cl9tYXMuY29udGVudCkNCisJCWdvdG8gZXhpc3RzOw0KKw0KKwlpZiAobWFz
X2lzX25vbmUobWFzKSB8fCBtYXNfaXNfcHRyKG1hcykpIHsNCisJCW1hc19zdG9yZV9yb290KG1h
cywgZW50cnkpOw0KKwkJcmV0dXJuIE5VTEw7DQorCX0NCisNCisJLyogc3Bhbm5pbmcgd3JpdGVz
IGFsd2F5cyBvdmVyd3JpdGUgc29tZXRoaW5nICovDQorCWlmICghbWFzX3dyX3dhbGsoJndyX21h
cykpDQorCQlnb3RvIGV4aXN0czsNCisNCisJLyogQXQgdGhpcyBwb2ludCwgd2UgYXJlIGF0IHRo
ZSBsZWFmIG5vZGUgdGhhdCBuZWVkcyB0byBiZSBhbHRlcmVkLiAqLw0KKwl3cl9tYXMub2Zmc2V0
X2VuZCA9IG1hcy0+b2Zmc2V0Ow0KKwl3cl9tYXMuZW5kX3BpdiA9IHdyX21hcy5yX21heDsNCisN
CisJaWYgKHdyX21hcy5jb250ZW50IHx8IChtYXMtPmxhc3QgPiB3cl9tYXMucl9tYXgpKQ0KKwkJ
Z290byBleGlzdHM7DQorDQorCWlmICghZW50cnkpDQorCQlyZXR1cm4gTlVMTDsNCisNCisJbWFz
X3dyX21vZGlmeSgmd3JfbWFzKTsNCisJcmV0dXJuIHdyX21hcy5jb250ZW50Ow0KKw0KK2V4aXN0
czoNCisJbWFzX3NldF9lcnIobWFzLCAtRUVYSVNUKTsNCisJcmV0dXJuIHdyX21hcy5jb250ZW50
Ow0KKw0KK30NCisNCisvKg0KKyAqIG1hc19wcmV2X25vZGUoKSAtIEZpbmQgdGhlIHByZXYgbm9u
LW51bGwgZW50cnkgYXQgdGhlIHNhbWUgbGV2ZWwgaW4gdGhlDQorICogdHJlZS4gIFRoZSBwcmV2
IHZhbHVlIHdpbGwgYmUgbWFzLT5ub2RlW21hcy0+b2Zmc2V0XSBvciBNQVNfTk9ORS4NCisgKiBA
bWFzOiBUaGUgbWFwbGUgc3RhdGUNCisgKiBAbWluOiBUaGUgbG93ZXIgbGltaXQgdG8gc2VhcmNo
DQorICoNCisgKiBUaGUgcHJldiBub2RlIHZhbHVlIHdpbGwgYmUgbWFzLT5ub2RlW21hcy0+b2Zm
c2V0XSBvciBNQVNfTk9ORS4NCisgKiBSZXR1cm46IDEgaWYgdGhlIG5vZGUgaXMgZGVhZCwgMCBv
dGhlcndpc2UuDQorICovDQorc3RhdGljIGlubGluZSBpbnQgbWFzX3ByZXZfbm9kZShzdHJ1Y3Qg
bWFfc3RhdGUgKm1hcywgdW5zaWduZWQgbG9uZyBtaW4pDQorew0KKwllbnVtIG1hcGxlX3R5cGUg
bXQ7DQorCWludCBvZmZzZXQsIGxldmVsOw0KKwl2b2lkIF9fcmN1ICoqc2xvdHM7DQorCXN0cnVj
dCBtYXBsZV9ub2RlICpub2RlOw0KKwlzdHJ1Y3QgbWFwbGVfZW5vZGUgKmVub2RlOw0KKwl1bnNp
Z25lZCBsb25nICpwaXZvdHM7DQorDQorCWlmIChtYXNfaXNfbm9uZShtYXMpKQ0KKwkJcmV0dXJu
IDA7DQorDQorCWxldmVsID0gMDsNCisJZG8gew0KKwkJbm9kZSA9IG1hc19tbihtYXMpOw0KKwkJ
aWYgKG1hX2lzX3Jvb3Qobm9kZSkpDQorCQkJZ290byBub19lbnRyeTsNCisNCisJCS8qIFdhbGsg
dXAuICovDQorCQlpZiAodW5saWtlbHkobWFzX2FzY2VuZChtYXMpKSkNCisJCQlyZXR1cm4gMTsN
CisJCW9mZnNldCA9IG1hcy0+b2Zmc2V0Ow0KKwkJbGV2ZWwrKzsNCisJfSB3aGlsZSAoIW9mZnNl
dCk7DQorDQorCW9mZnNldC0tOw0KKwltdCA9IG10ZV9ub2RlX3R5cGUobWFzLT5ub2RlKTsNCisJ
bm9kZSA9IG1hc19tbihtYXMpOw0KKwlzbG90cyA9IG1hX3Nsb3RzKG5vZGUsIG10KTsNCisJcGl2
b3RzID0gbWFfcGl2b3RzKG5vZGUsIG10KTsNCisJbWFzLT5tYXggPSBwaXZvdHNbb2Zmc2V0XTsN
CisJaWYgKG9mZnNldCkNCisJCW1hcy0+bWluID0gcGl2b3RzW29mZnNldCAtIDFdICsgMTsNCisJ
aWYgKHVubGlrZWx5KG1hX2RlYWRfbm9kZShub2RlKSkpDQorCQlyZXR1cm4gMTsNCisNCisJaWYg
KG1hcy0+bWF4IDwgbWluKQ0KKwkJZ290byBub19lbnRyeV9taW47DQorDQorCXdoaWxlIChsZXZl
bCA+IDEpIHsNCisJCWxldmVsLS07DQorCQllbm9kZSA9IG1hc19zbG90KG1hcywgc2xvdHMsIG9m
ZnNldCk7DQorCQlpZiAodW5saWtlbHkobWFfZGVhZF9ub2RlKG5vZGUpKSkNCisJCQlyZXR1cm4g
MTsNCisNCisJCW1hcy0+bm9kZSA9IGVub2RlOw0KKwkJbXQgPSBtdGVfbm9kZV90eXBlKG1hcy0+
bm9kZSk7DQorCQlub2RlID0gbWFzX21uKG1hcyk7DQorCQlzbG90cyA9IG1hX3Nsb3RzKG5vZGUs
IG10KTsNCisJCXBpdm90cyA9IG1hX3Bpdm90cyhub2RlLCBtdCk7DQorCQlvZmZzZXQgPSBtYV9k
YXRhX2VuZChub2RlLCBtdCwgcGl2b3RzLCBtYXMtPm1heCk7DQorCQlpZiAob2Zmc2V0KQ0KKwkJ
CW1hcy0+bWluID0gcGl2b3RzW29mZnNldCAtIDFdICsgMTsNCisNCisJCWlmIChvZmZzZXQgPCBt
dF9waXZvdHNbbXRdKQ0KKwkJCW1hcy0+bWF4ID0gcGl2b3RzW29mZnNldF07DQorDQorCQlpZiAo
bWFzLT5tYXggPCBtaW4pDQorCQkJZ290byBub19lbnRyeTsNCisJfQ0KKw0KKwltYXMtPm5vZGUg
PSBtYXNfc2xvdChtYXMsIHNsb3RzLCBvZmZzZXQpOw0KKwlpZiAodW5saWtlbHkobWFfZGVhZF9u
b2RlKG5vZGUpKSkNCisJCXJldHVybiAxOw0KKw0KKwltYXMtPm9mZnNldCA9IG1hc19kYXRhX2Vu
ZChtYXMpOw0KKwlpZiAodW5saWtlbHkobXRlX2RlYWRfbm9kZShtYXMtPm5vZGUpKSkNCisJCXJl
dHVybiAxOw0KKw0KKwlyZXR1cm4gMDsNCisNCitub19lbnRyeV9taW46DQorCW1hcy0+b2Zmc2V0
ID0gb2Zmc2V0Ow0KKwlpZiAob2Zmc2V0KQ0KKwkJbWFzLT5taW4gPSBwaXZvdHNbb2Zmc2V0IC0g
MV0gKyAxOw0KK25vX2VudHJ5Og0KKwlpZiAodW5saWtlbHkobWFfZGVhZF9ub2RlKG5vZGUpKSkN
CisJCXJldHVybiAxOw0KKw0KKwltYXMtPm5vZGUgPSBNQVNfTk9ORTsNCisJcmV0dXJuIDA7DQor
fQ0KKw0KKy8qDQorICogbWFzX25leHRfbm9kZSgpIC0gR2V0IHRoZSBuZXh0IG5vZGUgYXQgdGhl
IHNhbWUgbGV2ZWwgaW4gdGhlIHRyZWUuDQorICogQG1hczogVGhlIG1hcGxlIHN0YXRlDQorICog
QG1heDogVGhlIG1heGltdW0gcGl2b3QgdmFsdWUgdG8gY2hlY2suDQorICoNCisgKiBUaGUgbmV4
dCB2YWx1ZSB3aWxsIGJlIG1hcy0+bm9kZVttYXMtPm9mZnNldF0gb3IgTUFTX05PTkUuDQorICog
UmV0dXJuOiAxIG9uIGRlYWQgbm9kZSwgMCBvdGhlcndpc2UuDQorICovDQorc3RhdGljIGlubGlu
ZSBpbnQgbWFzX25leHRfbm9kZShzdHJ1Y3QgbWFfc3RhdGUgKm1hcywgc3RydWN0IG1hcGxlX25v
ZGUgKm5vZGUsDQorCQkJCXVuc2lnbmVkIGxvbmcgbWF4KQ0KK3sNCisJdW5zaWduZWQgbG9uZyBt
aW4sIHBpdm90Ow0KKwl1bnNpZ25lZCBsb25nICpwaXZvdHM7DQorCXN0cnVjdCBtYXBsZV9lbm9k
ZSAqZW5vZGU7DQorCWludCBsZXZlbCA9IDA7DQorCXVuc2lnbmVkIGNoYXIgb2Zmc2V0Ow0KKwll
bnVtIG1hcGxlX3R5cGUgbXQ7DQorCXZvaWQgX19yY3UgKipzbG90czsNCisNCisJaWYgKG1hcy0+
bWF4ID49IG1heCkNCisJCWdvdG8gbm9fZW50cnk7DQorDQorCWxldmVsID0gMDsNCisJZG8gew0K
KwkJaWYgKG1hX2lzX3Jvb3Qobm9kZSkpDQorCQkJZ290byBub19lbnRyeTsNCisNCisJCW1pbiA9
IG1hcy0+bWF4ICsgMTsNCisJCWlmIChtaW4gPiBtYXgpDQorCQkJZ290byBub19lbnRyeTsNCisN
CisJCWlmICh1bmxpa2VseShtYXNfYXNjZW5kKG1hcykpKQ0KKwkJCXJldHVybiAxOw0KKw0KKwkJ
b2Zmc2V0ID0gbWFzLT5vZmZzZXQ7DQorCQlsZXZlbCsrOw0KKwkJbm9kZSA9IG1hc19tbihtYXMp
Ow0KKwkJbXQgPSBtdGVfbm9kZV90eXBlKG1hcy0+bm9kZSk7DQorCQlwaXZvdHMgPSBtYV9waXZv
dHMobm9kZSwgbXQpOw0KKwl9IHdoaWxlICh1bmxpa2VseShvZmZzZXQgPT0gbWFfZGF0YV9lbmQo
bm9kZSwgbXQsIHBpdm90cywgbWFzLT5tYXgpKSk7DQorDQorCXNsb3RzID0gbWFfc2xvdHMobm9k
ZSwgbXQpOw0KKwlwaXZvdCA9IG1hc19zYWZlX3Bpdm90KG1hcywgcGl2b3RzLCArK29mZnNldCwg
bXQpOw0KKwl3aGlsZSAodW5saWtlbHkobGV2ZWwgPiAxKSkgew0KKwkJLyogRGVzY2VuZCwgaWYg
bmVjZXNzYXJ5ICovDQorCQllbm9kZSA9IG1hc19zbG90KG1hcywgc2xvdHMsIG9mZnNldCk7DQor
CQlpZiAodW5saWtlbHkobWFfZGVhZF9ub2RlKG5vZGUpKSkNCisJCQlyZXR1cm4gMTsNCisNCisJ
CW1hcy0+bm9kZSA9IGVub2RlOw0KKwkJbGV2ZWwtLTsNCisJCW5vZGUgPSBtYXNfbW4obWFzKTsN
CisJCW10ID0gbXRlX25vZGVfdHlwZShtYXMtPm5vZGUpOw0KKwkJc2xvdHMgPSBtYV9zbG90cyhu
b2RlLCBtdCk7DQorCQlwaXZvdHMgPSBtYV9waXZvdHMobm9kZSwgbXQpOw0KKwkJb2Zmc2V0ID0g
MDsNCisJCXBpdm90ID0gcGl2b3RzWzBdOw0KKwl9DQorDQorCWVub2RlID0gbWFzX3Nsb3QobWFz
LCBzbG90cywgb2Zmc2V0KTsNCisJaWYgKHVubGlrZWx5KG1hX2RlYWRfbm9kZShub2RlKSkpDQor
CQlyZXR1cm4gMTsNCisNCisJbWFzLT5ub2RlID0gZW5vZGU7DQorCW1hcy0+bWluID0gbWluOw0K
KwltYXMtPm1heCA9IHBpdm90Ow0KKwlyZXR1cm4gMDsNCisNCitub19lbnRyeToNCisJaWYgKHVu
bGlrZWx5KG1hX2RlYWRfbm9kZShub2RlKSkpDQorCQlyZXR1cm4gMTsNCisNCisJbWFzLT5ub2Rl
ID0gTUFTX05PTkU7DQorCXJldHVybiAwOw0KK30NCisNCisvKg0KKyAqIG1hc19uZXh0X25lbnRy
eSgpIC0gR2V0IHRoZSBuZXh0IG5vZGUgZW50cnkNCisgKiBAbWFzOiBUaGUgbWFwbGUgc3RhdGUN
CisgKiBAbWF4OiBUaGUgbWF4aW11bSB2YWx1ZSB0byBjaGVjaw0KKyAqIEAqcmFuZ2Vfc3RhcnQ6
IFBvaW50ZXIgdG8gc3RvcmUgdGhlIHN0YXJ0IG9mIHRoZSByYW5nZS4NCisgKg0KKyAqIFNldHMg
QG1hcy0+b2Zmc2V0IHRvIHRoZSBvZmZzZXQgb2YgdGhlIG5leHQgbm9kZSBlbnRyeSwgQG1hcy0+
bGFzdCB0byB0aGUNCisgKiBwaXZvdCBvZiB0aGUgZW50cnkuDQorICoNCisgKiBSZXR1cm46IFRo
ZSBuZXh0IGVudHJ5LCAlTlVMTCBvdGhlcndpc2UNCisgKi8NCitzdGF0aWMgaW5saW5lIHZvaWQg
Km1hc19uZXh0X25lbnRyeShzdHJ1Y3QgbWFfc3RhdGUgKm1hcywNCisJICAgIHN0cnVjdCBtYXBs
ZV9ub2RlICpub2RlLCB1bnNpZ25lZCBsb25nIG1heCwgZW51bSBtYXBsZV90eXBlIHR5cGUpDQor
ew0KKwl1bnNpZ25lZCBjaGFyIGNvdW50Ow0KKwl1bnNpZ25lZCBsb25nIHBpdm90Ow0KKwl1bnNp
Z25lZCBsb25nICpwaXZvdHM7DQorCXZvaWQgX19yY3UgKipzbG90czsNCisJdm9pZCAqZW50cnk7
DQorDQorCWlmIChtYXMtPmxhc3QgPT0gbWFzLT5tYXgpIHsNCisJCW1hcy0+aW5kZXggPSBtYXMt
Pm1heDsNCisJCXJldHVybiBOVUxMOw0KKwl9DQorDQorCXBpdm90cyA9IG1hX3Bpdm90cyhub2Rl
LCB0eXBlKTsNCisJc2xvdHMgPSBtYV9zbG90cyhub2RlLCB0eXBlKTsNCisJbWFzLT5pbmRleCA9
IG1hc19zYWZlX21pbihtYXMsIHBpdm90cywgbWFzLT5vZmZzZXQpOw0KKwlpZiAobWFfZGVhZF9u
b2RlKG5vZGUpKQ0KKwkJcmV0dXJuIE5VTEw7DQorDQorCWlmIChtYXMtPmluZGV4ID4gbWF4KQ0K
KwkJcmV0dXJuIE5VTEw7DQorDQorCWNvdW50ID0gbWFfZGF0YV9lbmQobm9kZSwgdHlwZSwgcGl2
b3RzLCBtYXMtPm1heCk7DQorCXdoaWxlIChtYXMtPm9mZnNldCA8IGNvdW50KSB7DQorCQlwaXZv
dCA9IHBpdm90c1ttYXMtPm9mZnNldF07DQorCQllbnRyeSA9IG1hc19zbG90KG1hcywgc2xvdHMs
IG1hcy0+b2Zmc2V0KTsNCisJCWlmIChtYV9kZWFkX25vZGUobm9kZSkpDQorCQkJcmV0dXJuIE5V
TEw7DQorDQorCQlpZiAoZW50cnkpDQorCQkJZ290byBmb3VuZDsNCisNCisJCWlmIChwaXZvdCA+
PSBtYXgpDQorCQkJcmV0dXJuIE5VTEw7DQorDQorCQltYXMtPmluZGV4ID0gcGl2b3QgKyAxOw0K
KwkJbWFzLT5vZmZzZXQrKzsNCisJfQ0KKw0KKwlpZiAobWFzLT5pbmRleCA+IG1hcy0+bWF4KSB7
DQorCQltYXMtPmluZGV4ID0gbWFzLT5sYXN0Ow0KKwkJcmV0dXJuIE5VTEw7DQorCX0NCisNCisJ
cGl2b3QgPSBtYXNfc2FmZV9waXZvdChtYXMsIHBpdm90cywgbWFzLT5vZmZzZXQsIHR5cGUpOw0K
KwllbnRyeSA9IG1hc19zbG90KG1hcywgc2xvdHMsIG1hcy0+b2Zmc2V0KTsNCisJaWYgKG1hX2Rl
YWRfbm9kZShub2RlKSkNCisJCXJldHVybiBOVUxMOw0KKw0KKwlpZiAoIXBpdm90KQ0KKwkJcmV0
dXJuIE5VTEw7DQorDQorCWlmICghZW50cnkpDQorCQlyZXR1cm4gTlVMTDsNCisNCitmb3VuZDoN
CisJbWFzLT5sYXN0ID0gcGl2b3Q7DQorCXJldHVybiBlbnRyeTsNCit9DQorDQorc3RhdGljIGlu
bGluZSB2b2lkIG1hc19yZXdhbGsoc3RydWN0IG1hX3N0YXRlICptYXMsIHVuc2lnbmVkIGxvbmcg
aW5kZXgpDQorew0KKw0KK3JldHJ5Og0KKwltYXNfc2V0KG1hcywgaW5kZXgpOw0KKwltYXNfc3Rh
dGVfd2FsayhtYXMpOw0KKwlpZiAobWFzX2lzX3N0YXJ0KG1hcykpDQorCQlnb3RvIHJldHJ5Ow0K
Kw0KKwlyZXR1cm47DQorDQorfQ0KKw0KKy8qDQorICogbWFzX2RlYWRfbm9kZSgpIC0gQ2hlY2sg
aWYgdGhlIG1hcGxlIHN0YXRlIGlzIHBvaW50aW5nIHRvIGEgZGVhZCBub2RlLg0KKyAqIEBtYXM6
IFRoZSBtYXBsZSBzdGF0ZQ0KKyAqIEBpbmRleDogVGhlIGluZGV4IHRvIHJlc3RvcmUgaW4gQG1h
cy4NCisgKg0KKyAqIFJldHVybjogMSBpZiBAbWFzIGhhcyBiZWVuIHJlc2V0IHRvIE1BU19TVEFS
VCwgMCBvdGhlcndpc2UuDQorICovDQorc3RhdGljIGlubGluZSBpbnQgbWFzX2RlYWRfbm9kZShz
dHJ1Y3QgbWFfc3RhdGUgKm1hcywgdW5zaWduZWQgbG9uZyBpbmRleCkNCit7DQorCWlmICh1bmxp
a2VseSghbWFzX3NlYXJjaGFibGUobWFzKSB8fCBtYXNfaXNfc3RhcnQobWFzKSkpDQorCQlyZXR1
cm4gMDsNCisNCisJaWYgKGxpa2VseSghbXRlX2RlYWRfbm9kZShtYXMtPm5vZGUpKSkNCisJCXJl
dHVybiAwOw0KKw0KKwltYXNfcmV3YWxrKG1hcywgaW5kZXgpOw0KKwlyZXR1cm4gMTsNCit9DQor
DQorLyoNCisgKiBtYXNfZmlyc3RfZW50cnkoKSAtIEdvIHRoZSBmaXJzdCBsZWFmIGFuZCBmaW5k
IHRoZSBmaXJzdCBlbnRyeS4NCisgKiBAbWFzOiB0aGUgbWFwbGUgc3RhdGUuDQorICogQGxpbWl0
OiB0aGUgbWF4aW11bSBpbmRleCB0byBjaGVjay4NCisgKiBAKnJfc3RhcnQ6IFBvaW50ZXIgdG8g
c2V0IHRvIHRoZSByYW5nZSBzdGFydC4NCisgKg0KKyAqIFNldHMgbWFzLT5vZmZzZXQgdG8gdGhl
IG9mZnNldCBvZiB0aGUgZW50cnksIHJfc3RhcnQgdG8gdGhlIHJhbmdlIG1pbmltdW0uDQorICoN
CisgKiBSZXR1cm46IFRoZSBmaXJzdCBlbnRyeSBvciBNQVNfTk9ORS4NCisgKi8NCitzdGF0aWMg
aW5saW5lIHZvaWQgKm1hc19maXJzdF9lbnRyeShzdHJ1Y3QgbWFfc3RhdGUgKm1hcywgc3RydWN0
IG1hcGxlX25vZGUgKm1uLA0KKwkJdW5zaWduZWQgbG9uZyBsaW1pdCwgZW51bSBtYXBsZV90eXBl
IG10KQ0KK3sNCisJdW5zaWduZWQgbG9uZyBtYXg7DQorCXVuc2lnbmVkIGxvbmcgKnBpdm90czsN
CisJdm9pZCBfX3JjdSAqKnNsb3RzOw0KKwl2b2lkICplbnRyeSA9IE5VTEw7DQorDQorCW1hcy0+
aW5kZXggPSBtYXMtPm1pbjsNCisJaWYgKG1hcy0+aW5kZXggPiBsaW1pdCkNCisJCWdvdG8gbm9u
ZTsNCisNCisJbWF4ID0gbWFzLT5tYXg7DQorCW1hcy0+b2Zmc2V0ID0gMDsNCisJd2hpbGUgKGxp
a2VseSghbWFfaXNfbGVhZihtdCkpKSB7DQorCQlzbG90cyA9IG1hX3Nsb3RzKG1uLCBtdCk7DQor
CQlwaXZvdHMgPSBtYV9waXZvdHMobW4sIG10KTsNCisJCW1heCA9IHBpdm90c1swXTsNCisJCWVu
dHJ5ID0gbWFzX3Nsb3QobWFzLCBzbG90cywgMCk7DQorCQlpZiAodW5saWtlbHkobWFfZGVhZF9u
b2RlKG1uKSkpDQorCQkJcmV0dXJuIE5VTEw7DQorCQltYXMtPm5vZGUgPSBlbnRyeTsNCisJCW1u
ID0gbWFzX21uKG1hcyk7DQorCQltdCA9IG10ZV9ub2RlX3R5cGUobWFzLT5ub2RlKTsNCisJfQ0K
Kw0KKwltYXMtPm1heCA9IG1heDsNCisJc2xvdHMgPSBtYV9zbG90cyhtbiwgbXQpOw0KKwllbnRy
eSA9IG1hc19zbG90KG1hcywgc2xvdHMsIDApOw0KKwlpZiAodW5saWtlbHkobWFfZGVhZF9ub2Rl
KG1uKSkpDQorCQlyZXR1cm4gTlVMTDsNCisNCisJLyogU2xvdCAwIG9yIDEgbXVzdCBiZSBzZXQg
Ki8NCisJaWYgKG1hcy0+aW5kZXggPiBsaW1pdCkNCisJCWdvdG8gbm9uZTsNCisNCisJaWYobGlr
ZWx5KGVudHJ5KSkNCisJCXJldHVybiBlbnRyeTsNCisNCisJcGl2b3RzID0gbWFfcGl2b3RzKG1u
LCBtdCk7DQorCW1hcy0+aW5kZXggPSBwaXZvdHNbMF0gKyAxOw0KKwltYXMtPm9mZnNldCA9IDE7
DQorCWVudHJ5ID0gbWFzX3Nsb3QobWFzLCBzbG90cywgMSk7DQorCWlmICh1bmxpa2VseShtYV9k
ZWFkX25vZGUobW4pKSkNCisJCXJldHVybiBOVUxMOw0KKw0KKwlpZiAobWFzLT5pbmRleCA+IGxp
bWl0KQ0KKwkJZ290byBub25lOw0KKw0KKwlpZihsaWtlbHkoZW50cnkpKQ0KKwkJcmV0dXJuIGVu
dHJ5Ow0KKw0KK25vbmU6DQorCWlmIChsaWtlbHkoIW1hX2RlYWRfbm9kZShtbikpKQ0KKwkJbWFz
LT5ub2RlID0gTUFTX05PTkU7DQorCXJldHVybiBOVUxMOw0KK30NCisNCisvKg0KKyAqIG1hc19u
ZXh0X2VudHJ5KCkgLSBJbnRlcm5hbCBmdW5jdGlvbiB0byBnZXQgdGhlIG5leHQgZW50cnkuDQor
ICogQG1hczogVGhlIG1hcGxlIHN0YXRlDQorICogQGxpbWl0OiBUaGUgbWF4aW11bSByYW5nZSBz
dGFydC4NCisgKg0KKyAqIFNldCB0aGUgQG1hcy0+bm9kZSB0byB0aGUgbmV4dCBlbnRyeSBhbmQg
dGhlIHJhbmdlX3N0YXJ0IHRvDQorICogdGhlIGJlZ2lubmluZyB2YWx1ZSBmb3IgdGhlIGVudHJ5
LiAgRG9lcyBub3QgY2hlY2sgYmV5b25kIEBsaW1pdC4NCisgKiBTZXRzIEBtYXMtPmluZGV4IGFu
ZCBAbWFzLT5sYXN0IHRvIHRoZSBsaW1pdCBpZiBpdCBpcyBoaXQuDQorICogUmVzdGFydHMgb24g
ZGVhZCBub2Rlcy4NCisgKg0KKyAqIFJldHVybjogdGhlIG5leHQgZW50cnkgb3IgJU5VTEwuDQor
ICovDQorc3RhdGljIGlubGluZSB2b2lkICptYXNfbmV4dF9lbnRyeShzdHJ1Y3QgbWFfc3RhdGUg
Km1hcywgdW5zaWduZWQgbG9uZyBsaW1pdCkNCit7DQorCXZvaWQgKmVudHJ5ID0gTlVMTDsNCisJ
c3RydWN0IG1hcGxlX2Vub2RlICpwcmV2X25vZGU7DQorCXN0cnVjdCBtYXBsZV9ub2RlICpub2Rl
Ow0KKwl1bnNpZ25lZCBjaGFyIG9mZnNldDsNCisJdW5zaWduZWQgbG9uZyBsYXN0Ow0KKwllbnVt
IG1hcGxlX3R5cGUgbXQ7DQorDQorCWxhc3QgPSBtYXMtPmxhc3Q7DQorcmV0cnk6DQorCW9mZnNl
dCA9IG1hcy0+b2Zmc2V0Ow0KKwlwcmV2X25vZGUgPSBtYXMtPm5vZGU7DQorCW5vZGUgPSBtYXNf
bW4obWFzKTsNCisJbXQgPSBtdGVfbm9kZV90eXBlKG1hcy0+bm9kZSk7DQorCW1hcy0+b2Zmc2V0
Kys7DQorCWlmICh1bmxpa2VseShtYXMtPm9mZnNldCA+PSBtdF9zbG90c1ttdF0pKQ0KKwkJZ290
byBuZXh0X25vZGU7DQorDQorCXdoaWxlICghbWFzX2lzX25vbmUobWFzKSkgew0KKwkJZW50cnkg
PSBtYXNfbmV4dF9uZW50cnkobWFzLCBub2RlLCBsaW1pdCwgbXQpOw0KKwkJaWYgKHVubGlrZWx5
KG1hX2RlYWRfbm9kZShub2RlKSkpIHsNCisJCQltYXNfcmV3YWxrKG1hcywgbGFzdCk7DQorCQkJ
Z290byByZXRyeTsNCisJCX0NCisNCisJCWlmIChsaWtlbHkoZW50cnkpKQ0KKwkJCXJldHVybiBl
bnRyeTsNCisNCisJCWlmICh1bmxpa2VseSgobWFzLT5pbmRleCA+IGxpbWl0KSkpDQorCQkJYnJl
YWs7DQorDQorbmV4dF9ub2RlOg0KKwkJcHJldl9ub2RlID0gbWFzLT5ub2RlOw0KKwkJb2Zmc2V0
ID0gbWFzLT5vZmZzZXQ7DQorCQlpZiAodW5saWtlbHkobWFzX25leHRfbm9kZShtYXMsIG5vZGUs
IGxpbWl0KSkpIHsNCisJCQltYXNfcmV3YWxrKG1hcywgbGFzdCk7DQorCQkJZ290byByZXRyeTsN
CisJCX0NCisJCW1hcy0+b2Zmc2V0ID0gMDsNCisJCW5vZGUgPSBtYXNfbW4obWFzKTsNCisJCW10
ID0gbXRlX25vZGVfdHlwZShtYXMtPm5vZGUpOw0KKwl9DQorDQorCW1hcy0+aW5kZXggPSBtYXMt
Pmxhc3QgPSBsaW1pdDsNCisJbWFzLT5vZmZzZXQgPSBvZmZzZXQ7DQorCW1hcy0+bm9kZSA9IHBy
ZXZfbm9kZTsNCisJcmV0dXJuIE5VTEw7DQorfQ0KKw0KKy8qDQorICogbWFzX3ByZXZfbmVudHJ5
KCkgLSBHZXQgdGhlIHByZXZpb3VzIG5vZGUgZW50cnkuDQorICogQG1hczogVGhlIG1hcGxlIHN0
YXRlLg0KKyAqIEBsaW1pdDogVGhlIGxvd2VyIGxpbWl0IHRvIGNoZWNrIGZvciBhIHZhbHVlLg0K
KyAqDQorICogUmV0dXJuOiB0aGUgZW50cnksICVOVUxMIG90aGVyd2lzZS4NCisgKi8NCitzdGF0
aWMgaW5saW5lIHZvaWQgKm1hc19wcmV2X25lbnRyeShzdHJ1Y3QgbWFfc3RhdGUgKm1hcywgdW5z
aWduZWQgbG9uZyBsaW1pdCwNCisJCQkJICAgIHVuc2lnbmVkIGxvbmcgaW5kZXgpDQorew0KKwl1
bnNpZ25lZCBsb25nIHBpdm90LCBtaW47DQorCXVuc2lnbmVkIGNoYXIgb2Zmc2V0Ow0KKwlzdHJ1
Y3QgbWFwbGVfbm9kZSAqbW47DQorCWVudW0gbWFwbGVfdHlwZSBtdDsNCisJdW5zaWduZWQgbG9u
ZyAqcGl2b3RzOw0KKwl2b2lkIF9fcmN1ICoqc2xvdHM7DQorCXZvaWQgKmVudHJ5Ow0KKw0KK3Jl
dHJ5Og0KKwlpZiAoIW1hcy0+b2Zmc2V0KQ0KKwkJcmV0dXJuIE5VTEw7DQorDQorCW1uID0gbWFz
X21uKG1hcyk7DQorCW10ID0gbXRlX25vZGVfdHlwZShtYXMtPm5vZGUpOw0KKwlvZmZzZXQgPSBt
YXMtPm9mZnNldCAtIDE7DQorCXNsb3RzID0gbWFfc2xvdHMobW4sIG10KTsNCisJcGl2b3RzID0g
bWFfcGl2b3RzKG1uLCBtdCk7DQorCWlmIChvZmZzZXQgPT0gbXRfcGl2b3RzW210XSkNCisJCXBp
dm90ID0gbWFzLT5tYXg7DQorCWVsc2UNCisJCXBpdm90ID0gcGl2b3RzW29mZnNldF07DQorDQor
CWlmICh1bmxpa2VseShtYV9kZWFkX25vZGUobW4pKSkgew0KKwkJbWFzX3Jld2FsayhtYXMsIGlu
ZGV4KTsNCisJCWdvdG8gcmV0cnk7DQorCX0NCisNCisJd2hpbGUgKG9mZnNldCAmJiAoKCFtYXNf
c2xvdChtYXMsIHNsb3RzLCBvZmZzZXQpICYmIHBpdm90ID49IGxpbWl0KSB8fA0KKwkgICAgICAg
IXBpdm90KSkNCisJCXBpdm90ID0gcGl2b3RzWy0tb2Zmc2V0XTsNCisNCisJbWluID0gbWFzX3Nh
ZmVfbWluKG1hcywgcGl2b3RzLCBvZmZzZXQpOw0KKwllbnRyeSA9IG1hc19zbG90KG1hcywgc2xv
dHMsIG9mZnNldCk7DQorCWlmICh1bmxpa2VseShtYV9kZWFkX25vZGUobW4pKSkgew0KKwkJbWFz
X3Jld2FsayhtYXMsIGluZGV4KTsNCisJCWdvdG8gcmV0cnk7DQorCX0NCisNCisJaWYgKGxpa2Vs
eShlbnRyeSkpIHsNCisJCW1hcy0+b2Zmc2V0ID0gb2Zmc2V0Ow0KKwkJbWFzLT5sYXN0ID0gcGl2
b3Q7DQorCQltYXMtPmluZGV4ID0gbWluOw0KKwl9DQorCXJldHVybiBlbnRyeTsNCit9DQorDQor
c3RhdGljIGlubGluZSB2b2lkICptYXNfcHJldl9lbnRyeShzdHJ1Y3QgbWFfc3RhdGUgKm1hcywg
dW5zaWduZWQgbG9uZyBtaW4pDQorew0KKwl2b2lkICplbnRyeTsNCisNCityZXRyeToNCisJd2hp
bGUgKGxpa2VseSghbWFzX2lzX25vbmUobWFzKSkpIHsNCisJCWVudHJ5ID0gbWFzX3ByZXZfbmVu
dHJ5KG1hcywgbWluLCBtYXMtPmluZGV4KTsNCisJCWlmICh1bmxpa2VseShtYXMtPmxhc3QgPCBt
aW4pKQ0KKwkJCWJyZWFrOw0KKw0KKwkJaWYgKGxpa2VseShlbnRyeSkpDQorCQkJcmV0dXJuIGVu
dHJ5Ow0KKw0KKwkJaWYgKHVubGlrZWx5KG1hc19wcmV2X25vZGUobWFzLCBtaW4pKSkgew0KKwkJ
CW1hc19yZXdhbGsobWFzLCBtYXMtPmluZGV4KTsNCisJCQlnb3RvIHJldHJ5Ow0KKwkJfQ0KKw0K
KwkJaWYgKCFtYXNfaXNfbm9uZShtYXMpKQ0KKwkJCW1hcy0+b2Zmc2V0Kys7DQorCX0NCisNCisJ
bWFzLT5pbmRleCA9IG1hcy0+bGFzdCA9IG1pbjsNCisJcmV0dXJuIE5VTEw7DQorfQ0KKw0KKy8q
DQorICogbWFzX3Jldl9hd2FsaygpIC0gSW50ZXJuYWwgZnVuY3Rpb24uICBSZXZlcnNlIGFsbG9j
YXRpb24gd2Fsay4gIEZpbmQgdGhlDQorICogaGlnaGVzdCBnYXAgYWRkcmVzcyBvZiBhIGdpdmVu
IHNpemUgaW4gYSBnaXZlbiBub2RlIGFuZCBkZXNjZW5kLg0KKyAqIEBtYXM6IFRoZSBtYXBsZSBz
dGF0ZQ0KKyAqIEBzaXplOiBUaGUgbmVlZGVkIHNpemUuDQorICoNCisgKiBSZXR1cm46IFRydWUg
aWYgZm91bmQgaW4gYSBsZWFmLCBmYWxzZSBvdGhlcndpc2UuDQorICoNCisgKi8NCitzdGF0aWMg
Ym9vbCBtYXNfcmV2X2F3YWxrKHN0cnVjdCBtYV9zdGF0ZSAqbWFzLCB1bnNpZ25lZCBsb25nIHNp
emUpDQorew0KKwllbnVtIG1hcGxlX3R5cGUgdHlwZSA9IG10ZV9ub2RlX3R5cGUobWFzLT5ub2Rl
KTsNCisJc3RydWN0IG1hcGxlX25vZGUgKm5vZGUgPSBtYXNfbW4obWFzKTsNCisJdW5zaWduZWQg
bG9uZyAqcGl2b3RzLCAqZ2FwczsNCisJdm9pZCBfX3JjdSAqKnNsb3RzOw0KKwl1bnNpZ25lZCBs
b25nIGdhcCA9IDA7DQorCXVuc2lnbmVkIGxvbmcgbWF4LCBtaW4sIGluZGV4Ow0KKwl1bnNpZ25l
ZCBjaGFyIG9mZnNldDsNCisNCisJaWYgKHVubGlrZWx5KG1hc19pc19lcnIobWFzKSkpDQorCSAg
ICByZXR1cm4gdHJ1ZTsNCisNCisJaWYgKG1hX2lzX2RlbnNlKHR5cGUpKSB7DQorCQkvKiBkZW5z
ZSBub2Rlcy4gKi8NCisJCW1hcy0+b2Zmc2V0ID0gKHVuc2lnbmVkIGNoYXIpKG1hcy0+aW5kZXgg
LSBtYXMtPm1pbik7DQorCQlyZXR1cm4gdHJ1ZTsNCisJfQ0KKw0KKwlwaXZvdHMgPSBtYV9waXZv
dHMobm9kZSwgdHlwZSk7DQorCXNsb3RzID0gbWFfc2xvdHMobm9kZSwgdHlwZSk7DQorCWlmICht
YV9pc19sZWFmKHR5cGUpKQ0KKwkJZ2FwcyA9IE5VTEw7DQorCWVsc2UNCisJCWdhcHMgPSBtYV9n
YXBzKG5vZGUsIHR5cGUpOw0KKw0KKwlvZmZzZXQgPSBtYXMtPm9mZnNldDsNCisJbWluID0gbWFz
X3NhZmVfbWluKG1hcywgcGl2b3RzLCBvZmZzZXQpOw0KKwkvKiBTa2lwIG91dCBvZiBib3VuZHMu
ICovDQorCXdoaWxlIChtYXMtPmxhc3QgPCBtaW4pDQorCQltaW4gPSBtYXNfc2FmZV9taW4obWFz
LCBwaXZvdHMsIC0tb2Zmc2V0KTsNCisNCisJbWF4ID0gbWFzX3NhZmVfcGl2b3QobWFzLCBwaXZv
dHMsIG9mZnNldCwgdHlwZSk7DQorCWluZGV4ID0gbWFzLT5pbmRleDsNCisJd2hpbGUgKGluZGV4
IDw9IG1heCkgew0KKwkJZ2FwID0gMDsNCisJCWlmIChnYXBzKQ0KKwkJCWdhcCA9IGdhcHNbb2Zm
c2V0XTsNCisJCWVsc2UgaWYgKCFtYXNfc2xvdChtYXMsIHNsb3RzLCBvZmZzZXQpKQ0KKwkJCWdh
cCA9IG1heCAtIG1pbiArIDE7DQorDQorCQlpZiAoZ2FwKSB7DQorCQkJaWYgKChzaXplIDw9IGdh
cCkgJiYgKHNpemUgPD0gbWFzLT5sYXN0IC0gbWluICsgMSkpDQorCQkJCWJyZWFrOw0KKw0KKwkJ
CWlmICghZ2Fwcykgew0KKwkJCQkvKiBTa2lwIHRoZSBuZXh0IHNsb3QsIGl0IGNhbm5vdCBiZSBh
IGdhcC4gKi8NCisJCQkJaWYgKG9mZnNldCA8IDIpDQorCQkJCQlnb3RvIGFzY2VuZDsNCisNCisJ
CQkJb2Zmc2V0IC09IDI7DQorCQkJCW1heCA9IHBpdm90c1tvZmZzZXRdOw0KKwkJCQltaW4gPSBt
YXNfc2FmZV9taW4obWFzLCBwaXZvdHMsIG9mZnNldCk7DQorCQkJCWNvbnRpbnVlOw0KKwkJCX0N
CisJCX0NCisNCisJCWlmICghb2Zmc2V0KQ0KKwkJCWdvdG8gYXNjZW5kOw0KKw0KKwkJb2Zmc2V0
LS07DQorCQltYXggPSBtaW4gLSAxOw0KKwkJbWluID0gbWFzX3NhZmVfbWluKG1hcywgcGl2b3Rz
LCBvZmZzZXQpOw0KKwl9DQorDQorCWlmICh1bmxpa2VseShpbmRleCA+IG1heCkpIHsNCisJCW1h
c19zZXRfZXJyKG1hcywgLUVCVVNZKTsNCisJCXJldHVybiBmYWxzZTsNCisJfQ0KKw0KKwlpZiAo
dW5saWtlbHkobWFfaXNfbGVhZih0eXBlKSkpIHsNCisJCW1hcy0+b2Zmc2V0ID0gb2Zmc2V0Ow0K
KwkJbWFzLT5taW4gPSBtaW47DQorCQltYXMtPm1heCA9IG1pbiArIGdhcCAtIDE7DQorCQlyZXR1
cm4gdHJ1ZTsNCisJfQ0KKw0KKwkvKiBkZXNjZW5kLCBvbmx5IGhhcHBlbnMgdW5kZXIgbG9jay4g
Ki8NCisJbWFzLT5ub2RlID0gbWFzX3Nsb3QobWFzLCBzbG90cywgb2Zmc2V0KTsNCisJbWFzLT5t
aW4gPSBtaW47DQorCW1hcy0+bWF4ID0gbWF4Ow0KKwltYXMtPm9mZnNldCA9IG1hc19kYXRhX2Vu
ZChtYXMpOw0KKwlyZXR1cm4gZmFsc2U7DQorDQorYXNjZW5kOg0KKwlpZiAobXRlX2lzX3Jvb3Qo
bWFzLT5ub2RlKSkNCisJCW1hc19zZXRfZXJyKG1hcywgLUVCVVNZKTsNCisNCisJcmV0dXJuIGZh
bHNlOw0KK30NCisNCitzdGF0aWMgaW5saW5lIGJvb2wgbWFzX2Fub2RlX2Rlc2NlbmQoc3RydWN0
IG1hX3N0YXRlICptYXMsIHVuc2lnbmVkIGxvbmcgc2l6ZSkNCit7DQorCWVudW0gbWFwbGVfdHlw
ZSB0eXBlID0gbXRlX25vZGVfdHlwZShtYXMtPm5vZGUpOw0KKwl1bnNpZ25lZCBsb25nIHBpdm90
LCBtaW4sIGdhcCA9IDA7DQorCXVuc2lnbmVkIGNoYXIgY291bnQsIG9mZnNldDsNCisJdW5zaWdu
ZWQgbG9uZyAqZ2FwcyA9IE5VTEwsICpwaXZvdHMgPSBtYV9waXZvdHMobWFzX21uKG1hcyksIHR5
cGUpOw0KKwl2b2lkIF9fcmN1ICoqc2xvdHMgPSBtYV9zbG90cyhtYXNfbW4obWFzKSwgdHlwZSk7
DQorCWJvb2wgZm91bmQgPSBmYWxzZTsNCisNCisJaWYgKG1hX2lzX2RlbnNlKHR5cGUpKSB7DQor
CQltYXMtPm9mZnNldCA9ICh1bnNpZ25lZCBjaGFyKShtYXMtPmluZGV4IC0gbWFzLT5taW4pOw0K
KwkJcmV0dXJuIHRydWU7DQorCX0NCisNCisJaWYgKCFtYV9pc19sZWFmKHR5cGUpKQ0KKwkJZ2Fw
cyA9IG1hX2dhcHMobXRlX3RvX25vZGUobWFzLT5ub2RlKSwgdHlwZSk7DQorDQorCW9mZnNldCA9
IG1hcy0+b2Zmc2V0Ow0KKwljb3VudCA9IG10X3Nsb3RzW3R5cGVdOw0KKwltaW4gPSBtYXNfc2Fm
ZV9taW4obWFzLCBwaXZvdHMsIG9mZnNldCk7DQorCWZvciAoOyBvZmZzZXQgPCBjb3VudDsgb2Zm
c2V0KyspIHsNCisJCXBpdm90ID0gbWFzX3NhZmVfcGl2b3QobWFzLCBwaXZvdHMsIG9mZnNldCwg
dHlwZSk7DQorCQlpZiAob2Zmc2V0ICYmICFwaXZvdCkNCisJCQlicmVhazsNCisNCisJCS8qIE5v
dCB3aXRoaW4gbG93ZXIgYm91bmRzICovDQorCQlpZiAobWFzLT5pbmRleCA+IHBpdm90KQ0KKwkJ
CWdvdG8gbmV4dF9zbG90Ow0KKw0KKwkJaWYgKGdhcHMpDQorCQkJZ2FwID0gZ2Fwc1tvZmZzZXRd
Ow0KKwkJZWxzZSBpZiAoIW1hc19zbG90KG1hcywgc2xvdHMsIG9mZnNldCkpDQorCQkJZ2FwID0g
bWluKHBpdm90LCBtYXMtPmxhc3QpIC0gbWF4KG1hcy0+aW5kZXgsIG1pbikgKyAxOw0KKwkJZWxz
ZQ0KKwkJCWdvdG8gbmV4dF9zbG90Ow0KKw0KKwkJaWYgKGdhcCA+PSBzaXplKSB7DQorCQkJaWYg
KG1hX2lzX2xlYWYodHlwZSkpIHsNCisJCQkJZm91bmQgPSB0cnVlOw0KKwkJCQlnb3RvIGRvbmU7
DQorCQkJfQ0KKwkJCWlmIChtYXMtPmluZGV4IDw9IHBpdm90KSB7DQorCQkJCW1hcy0+bm9kZSA9
IG1hc19zbG90KG1hcywgc2xvdHMsIG9mZnNldCk7DQorCQkJCW1hcy0+bWluID0gbWluOw0KKwkJ
CQltYXMtPm1heCA9IHBpdm90Ow0KKwkJCQlvZmZzZXQgPSAwOw0KKwkJCQl0eXBlID0gbXRlX25v
ZGVfdHlwZShtYXMtPm5vZGUpOw0KKwkJCQljb3VudCA9IG10X3Nsb3RzW3R5cGVdOw0KKwkJCQli
cmVhazsNCisJCQl9DQorCQl9DQorbmV4dF9zbG90Og0KKwkJbWluID0gcGl2b3QgKyAxOw0KKwkJ
aWYgKG1hcy0+bGFzdCA8IG1pbikgew0KKwkJCW1hc19zZXRfZXJyKG1hcywgLUVCVVNZKTsNCisJ
CQlyZXR1cm4gdHJ1ZTsNCisJCX0NCisJfQ0KKw0KKwlpZiAobXRlX2lzX3Jvb3QobWFzLT5ub2Rl
KSkNCisJCWZvdW5kID0gdHJ1ZTsNCitkb25lOg0KKwltYXMtPm9mZnNldCA9IG9mZnNldDsNCisJ
cmV0dXJuIGZvdW5kOw0KK30NCisNCisvKioNCisgKiBtYXNfd2FsaygpIC0gU2VhcmNoIGZvciBA
bWFzLT5pbmRleCBpbiB0aGUgdHJlZS4NCisgKiBAbWFzOiBUaGUgbWFwbGUgc3RhdGUuDQorICoN
CisgKiBtYXMtPmluZGV4IGFuZCBtYXMtPmxhc3Qgd2lsbCBiZSBzZXQgdG8gdGhlIHJhbmdlIGlm
IHRoZXJlIGlzIGEgdmFsdWUuICBJZg0KKyAqIG1hcy0+bm9kZSBpcyBNQVNfTk9ORSwgcmVzZXQg
dG8gTUFTX1NUQVJULg0KKyAqDQorICogUmV0dXJuOiB0aGUgZW50cnkgYXQgdGhlIGxvY2F0aW9u
IG9yICVOVUxMLg0KKyAqLw0KK3ZvaWQgKm1hc193YWxrKHN0cnVjdCBtYV9zdGF0ZSAqbWFzKQ0K
K3sNCisJdm9pZCAqZW50cnk7DQorDQorcmV0cnk6DQorCWVudHJ5ID0gbWFzX3N0YXRlX3dhbGso
bWFzKTsNCisJaWYgKG1hc19pc19zdGFydChtYXMpKQ0KKwkJZ290byByZXRyeTsNCisNCisJaWYg
KG1hc19pc19wdHIobWFzKSkgew0KKwkJaWYgKCFtYXMtPmluZGV4KSB7DQorCQkJbWFzLT5sYXN0
ID0gMDsNCisJCX0gZWxzZSB7DQorCQkJbWFzLT5pbmRleCA9IDE7DQorCQkJbWFzLT5sYXN0ID0g
VUxPTkdfTUFYOw0KKwkJfQ0KKwkJcmV0dXJuIGVudHJ5Ow0KKwl9IGVsc2UgaWYgKG1hc19pc19u
b25lKG1hcykpIHsNCisJCW1hcy0+aW5kZXggPSAxOw0KKwkJbWFzLT5sYXN0ID0gVUxPTkdfTUFY
Ow0KKwl9DQorDQorCXJldHVybiBlbnRyeTsNCit9DQorDQorc3RhdGljIGlubGluZSBib29sIG1h
c19yZXdpbmRfbm9kZShzdHJ1Y3QgbWFfc3RhdGUgKm1hcykNCit7DQorCXVuc2lnbmVkIGNoYXIg
c2xvdDsNCisNCisJZG8gew0KKwkJaWYgKG10ZV9pc19yb290KG1hcy0+bm9kZSkpIHsNCisJCQlz
bG90ID0gbWFzLT5vZmZzZXQ7DQorCQkJaWYgKCFzbG90KQ0KKwkJCQlyZXR1cm4gZmFsc2U7DQor
CQl9IGVsc2Ugew0KKwkJCW1hc19hc2NlbmQobWFzKTsNCisJCQlzbG90ID0gbWFzLT5vZmZzZXQ7
DQorCQl9DQorCX0gd2hpbGUgKCFzbG90KTsNCisNCisJbWFzLT5vZmZzZXQgPSAtLXNsb3Q7DQor
CXJldHVybiB0cnVlOw0KK30NCisNCisvKg0KKyAqIG1hc19za2lwX25vZGUoKSAtIEludGVybmFs
IGZ1bmN0aW9uLiAgU2tpcCBvdmVyIGEgbm9kZS4NCisgKiBAbWFzOiBUaGUgbWFwbGUgc3RhdGUu
DQorICoNCisgKiBSZXR1cm46IHRydWUgaWYgdGhlcmUgaXMgYW5vdGhlciBub2RlLCBmYWxzZSBv
dGhlcndpc2UuDQorICovDQorc3RhdGljIGlubGluZSBib29sIG1hc19za2lwX25vZGUoc3RydWN0
IG1hX3N0YXRlICptYXMpDQorew0KKwl1bnNpZ25lZCBjaGFyIHNsb3QsIHNsb3RfY291bnQ7DQor
CXVuc2lnbmVkIGxvbmcgKnBpdm90czsNCisJZW51bSBtYXBsZV90eXBlIG10Ow0KKw0KKwltdCA9
IG10ZV9ub2RlX3R5cGUobWFzLT5ub2RlKTsNCisJc2xvdF9jb3VudCA9IG10X3Nsb3RzW210XSAt
IDE7DQorCWRvIHsNCisJCWlmIChtdGVfaXNfcm9vdChtYXMtPm5vZGUpKSB7DQorCQkJc2xvdCA9
IG1hcy0+b2Zmc2V0Ow0KKwkJCWlmIChzbG90ID4gc2xvdF9jb3VudCkgew0KKwkJCQltYXNfc2V0
X2VycihtYXMsIC1FQlVTWSk7DQorCQkJCXJldHVybiBmYWxzZTsNCisJCQl9DQorCQl9IGVsc2Ug
ew0KKwkJCW1hc19hc2NlbmQobWFzKTsNCisJCQlzbG90ID0gbWFzLT5vZmZzZXQ7DQorCQkJbXQg
PSBtdGVfbm9kZV90eXBlKG1hcy0+bm9kZSk7DQorCQkJc2xvdF9jb3VudCA9IG10X3Nsb3RzW210
XSAtIDE7DQorCQl9DQorCX0gd2hpbGUgKHNsb3QgPiBzbG90X2NvdW50KTsNCisNCisJbWFzLT5v
ZmZzZXQgPSArK3Nsb3Q7DQorCXBpdm90cyA9IG1hX3Bpdm90cyhtYXNfbW4obWFzKSwgbXQpOw0K
KwlpZiAoc2xvdCA+IDApDQorCQltYXMtPm1pbiA9IHBpdm90c1tzbG90IC0gMV0gKyAxOw0KKw0K
KwlpZiAoc2xvdCA8PSBzbG90X2NvdW50KQ0KKwkJbWFzLT5tYXggPSBwaXZvdHNbc2xvdF07DQor
DQorCXJldHVybiB0cnVlOw0KK30NCisNCisvKg0KKyAqIG1hc19hd2FsaygpIC0gQWxsb2NhdGlv
biB3YWxrLiAgU2VhcmNoIGZyb20gbG93IGFkZHJlc3MgdG8gaGlnaCwgZm9yIGEgZ2FwIG9mDQor
ICogQHNpemUNCisgKiBAbWFzOiBUaGUgbWFwbGUgc3RhdGUNCisgKiBAc2l6ZTogVGhlIHNpemUg
b2YgdGhlIGdhcCByZXF1aXJlZA0KKyAqDQorICogU2VhcmNoIGJldHdlZW4gQG1hcy0+aW5kZXgg
YW5kIEBtYXMtPmxhc3QgZm9yIGEgZ2FwIG9mIEBzaXplLg0KKyAqLw0KK3N0YXRpYyBpbmxpbmUg
dm9pZCBtYXNfYXdhbGsoc3RydWN0IG1hX3N0YXRlICptYXMsIHVuc2lnbmVkIGxvbmcgc2l6ZSkN
Cit7DQorCXN0cnVjdCBtYXBsZV9lbm9kZSAqbGFzdCA9IE5VTEw7DQorDQorCS8qDQorCSAqIFRo
ZXJlIGFyZSA0IG9wdGlvbnM6DQorCSAqIGdvIHRvIGNoaWxkIChkZXNjZW5kKQ0KKwkgKiBnbyBi
YWNrIHRvIHBhcmVudCAoYXNjZW5kKQ0KKwkgKiBubyBnYXAgZm91bmQuIChyZXR1cm4sIHNsb3Qg
PT0gTUFQTEVfTk9ERV9TTE9UUykNCisJICogZm91bmQgdGhlIGdhcC4gKHJldHVybiwgc2xvdCAh
PSBNQVBMRV9OT0RFX1NMT1RTKQ0KKwkgKi8NCisJd2hpbGUgKCFtYXNfaXNfZXJyKG1hcykgJiYg
IW1hc19hbm9kZV9kZXNjZW5kKG1hcywgc2l6ZSkpIHsNCisJCWlmIChsYXN0ID09IG1hcy0+bm9k
ZSkNCisJCQltYXNfc2tpcF9ub2RlKG1hcyk7DQorCQllbHNlDQorCQkJbGFzdCA9IG1hcy0+bm9k
ZTsNCisJfQ0KK30NCisNCisvKg0KKyAqIG1hc19maWxsX2dhcCgpIC0gRmlsbCBhIGxvY2F0ZWQg
Z2FwIHdpdGggQGVudHJ5Lg0KKyAqIEBtYXM6IFRoZSBtYXBsZSBzdGF0ZQ0KKyAqIEBlbnRyeTog
VGhlIHZhbHVlIHRvIHN0b3JlDQorICogQHNsb3Q6IFRoZSBvZmZzZXQgaW50byB0aGUgbm9kZSB0
byBzdG9yZSB0aGUgQGVudHJ5DQorICogQHNpemU6IFRoZSBzaXplIG9mIHRoZSBlbnRyeQ0KKyAq
IEBpbmRleDogVGhlIHN0YXJ0IGxvY2F0aW9uDQorICovDQorc3RhdGljIGlubGluZSB2b2lkIG1h
c19maWxsX2dhcChzdHJ1Y3QgbWFfc3RhdGUgKm1hcywgdm9pZCAqZW50cnksDQorCQl1bnNpZ25l
ZCBjaGFyIHNsb3QsIHVuc2lnbmVkIGxvbmcgc2l6ZSwgdW5zaWduZWQgbG9uZyAqaW5kZXgpDQor
ew0KKwlNQV9XUl9TVEFURSh3cl9tYXMsIG1hcywgZW50cnkpOw0KKwl1bnNpZ25lZCBjaGFyIHBz
bG90ID0gbXRlX3BhcmVudF9zbG90KG1hcy0+bm9kZSk7DQorCXN0cnVjdCBtYXBsZV9lbm9kZSAq
bW4gPSBtYXMtPm5vZGU7DQorCXVuc2lnbmVkIGxvbmcgKnBpdm90czsNCisJZW51bSBtYXBsZV90
eXBlIHB0eXBlOw0KKwkvKg0KKwkgKiBtYXMtPmluZGV4IGlzIHRoZSBzdGFydCBhZGRyZXNzIGZv
ciB0aGUgc2VhcmNoDQorCSAqICB3aGljaCBtYXkgbm8gbG9uZ2VyIGJlIG5lZWRlZC4NCisJICog
bWFzLT5sYXN0IGlzIHRoZSBlbmQgYWRkcmVzcyBmb3IgdGhlIHNlYXJjaA0KKwkgKi8NCisNCisJ
KmluZGV4ID0gbWFzLT5pbmRleDsNCisJbWFzLT5sYXN0ID0gbWFzLT5pbmRleCArIHNpemUgLSAx
Ow0KKw0KKwkvKg0KKwkgKiBJdCBpcyBwb3NzaWJsZSB0aGF0IHVzaW5nIG1hcy0+bWF4IGFuZCBt
YXMtPm1pbiB0byBjb3JyZWN0bHkNCisJICogY2FsY3VsYXRlIHRoZSBpbmRleCBhbmQgbGFzdCB3
aWxsIGNhdXNlIGFuIGlzc3VlIGluIHRoZSBnYXANCisJICogY2FsY3VsYXRpb24sIHNvIGZpeCB0
aGUgbWFfc3RhdGUgaGVyZQ0KKwkgKi8NCisJbWFzX2FzY2VuZChtYXMpOw0KKwlwdHlwZSA9IG10
ZV9ub2RlX3R5cGUobWFzLT5ub2RlKTsNCisJcGl2b3RzID0gbWFfcGl2b3RzKG1hc19tbihtYXMp
LCBwdHlwZSk7DQorCW1hcy0+bWF4ID0gbWFzX3NhZmVfcGl2b3QobWFzLCBwaXZvdHMsIHBzbG90
LCBwdHlwZSk7DQorCW1hcy0+bWluID0gbWFzX3NhZmVfbWluKG1hcywgcGl2b3RzLCBwc2xvdCk7
DQorCW1hcy0+bm9kZSA9IG1uOw0KKwltYXMtPm9mZnNldCA9IHNsb3Q7DQorCW1hc193cl9zdG9y
ZV9lbnRyeSgmd3JfbWFzKTsNCit9DQorDQorLyoNCisgKiBtYXNfc3BhcnNlX2FyZWEoKSAtIElu
dGVybmFsIGZ1bmN0aW9uLiAgUmV0dXJuIHVwcGVyIG9yIGxvd2VyIGxpbWl0IHdoZW4NCisgKiBz
ZWFyY2hpbmcgZm9yIGEgZ2FwIGluIGFuIGVtcHR5IHRyZWUuDQorICogQG1hczogVGhlIG1hcGxl
IHN0YXRlDQorICogQG1pbjogdGhlIG1pbmltdW0gcmFuZ2UNCisgKiBAbWF4OiBUaGUgbWF4aW11
bSByYW5nZQ0KKyAqIEBzaXplOiBUaGUgc2l6ZSBvZiB0aGUgZ2FwDQorICogQGZ3ZDogU2VhcmNo
aW5nIGZvcndhcmQgb3IgYmFjaw0KKyAqLw0KK3N0YXRpYyBpbmxpbmUgdm9pZCBtYXNfc3BhcnNl
X2FyZWEoc3RydWN0IG1hX3N0YXRlICptYXMsIHVuc2lnbmVkIGxvbmcgbWluLA0KKwkJCQl1bnNp
Z25lZCBsb25nIG1heCwgdW5zaWduZWQgbG9uZyBzaXplLCBib29sIGZ3ZCkNCit7DQorCXVuc2ln
bmVkIGxvbmcgc3RhcnQgPSAwOw0KKw0KKwlpZiAoIXVubGlrZWx5KG1hc19pc19ub25lKG1hcykp
KQ0KKwkJc3RhcnQrKzsNCisJLyogbWFzX2lzX3B0ciAqLw0KKw0KKwlpZiAoc3RhcnQgPCBtaW4p
DQorCQlzdGFydCA9IG1pbjsNCisNCisJaWYgKGZ3ZCkgew0KKwkJbWFzLT5pbmRleCA9IHN0YXJ0
Ow0KKwkJbWFzLT5sYXN0ID0gc3RhcnQgKyBzaXplIC0gMTsNCisJCXJldHVybjsNCisJfQ0KKw0K
KwltYXMtPmluZGV4ID0gbWF4Ow0KK30NCisNCisvKg0KKyAqIG1hc19lbXB0eV9hcmVhKCkgLSBH
ZXQgdGhlIGxvd2VzdCBhZGRyZXNzIHdpdGhpbiB0aGUgcmFuZ2UgdGhhdCBpcw0KKyAqIHN1ZmZp
Y2llbnQgZm9yIHRoZSBzaXplIHJlcXVlc3RlZC4NCisgKiBAbWFzOiBUaGUgbWFwbGUgc3RhdGUN
CisgKiBAbWluOiBUaGUgbG93ZXN0IHZhbHVlIG9mIHRoZSByYW5nZQ0KKyAqIEBtYXg6IFRoZSBo
aWdoZXN0IHZhbHVlIG9mIHRoZSByYW5nZQ0KKyAqIEBzaXplOiBUaGUgc2l6ZSBuZWVkZWQNCisg
Ki8NCitpbnQgbWFzX2VtcHR5X2FyZWEoc3RydWN0IG1hX3N0YXRlICptYXMsIHVuc2lnbmVkIGxv
bmcgbWluLA0KKwkJdW5zaWduZWQgbG9uZyBtYXgsIHVuc2lnbmVkIGxvbmcgc2l6ZSkNCit7DQor
CXVuc2lnbmVkIGNoYXIgb2Zmc2V0Ow0KKwl1bnNpZ25lZCBsb25nICpwaXZvdHM7DQorCWVudW0g
bWFwbGVfdHlwZSBtdDsNCisNCisJaWYgKG1hc19pc19zdGFydChtYXMpKSB7DQorCQltYXNfc3Rh
cnQobWFzKTsNCisJfSBlbHNlIGlmIChtYXMtPm9mZnNldCA+PSAyKSB7DQorCQltYXMtPm9mZnNl
dCAtPSAyOw0KKwl9IGVsc2UgaWYgKCFtYXNfc2tpcF9ub2RlKG1hcykpIHsNCisJCXJldHVybiAt
RUJVU1k7DQorCX0NCisNCisJLyogRW1wdHkgc2V0ICovDQorCWlmIChtYXNfaXNfbm9uZShtYXMp
IHx8IG1hc19pc19wdHIobWFzKSkgew0KKwkJbWFzX3NwYXJzZV9hcmVhKG1hcywgbWluLCBtYXgs
IHNpemUsIHRydWUpOw0KKwkJcmV0dXJuIDA7DQorCX0NCisNCisJLyogVGhlIHN0YXJ0IG9mIHRo
ZSB3aW5kb3cgY2FuIG9ubHkgYmUgd2l0aGluIHRoZXNlIHZhbHVlcyAqLw0KKwltYXMtPmluZGV4
ID0gbWluOw0KKwltYXMtPmxhc3QgPSBtYXg7DQorCW1hc19hd2FsayhtYXMsIHNpemUpOw0KKw0K
KwlpZiAodW5saWtlbHkobWFzX2lzX2VycihtYXMpKSkNCisJCXJldHVybiB4YV9lcnIobWFzLT5u
b2RlKTsNCisNCisJb2Zmc2V0ID0gbWFzLT5vZmZzZXQ7DQorCWlmICh1bmxpa2VseShvZmZzZXQg
PT0gTUFQTEVfTk9ERV9TTE9UUykpDQorCQlyZXR1cm4gLUVCVVNZOw0KKw0KKwltdCA9IG10ZV9u
b2RlX3R5cGUobWFzLT5ub2RlKTsNCisJcGl2b3RzID0gbWFfcGl2b3RzKG1hc19tbihtYXMpLCBt
dCk7DQorCWlmIChvZmZzZXQpDQorCQltYXMtPm1pbiA9IHBpdm90c1tvZmZzZXQgLSAxXSArIDE7
DQorDQorCWlmIChvZmZzZXQgPCBtdF9waXZvdHNbbXRdKQ0KKwkJbWFzLT5tYXggPSBwaXZvdHNb
b2Zmc2V0XTsNCisNCisJaWYgKG1hcy0+aW5kZXggPCBtYXMtPm1pbikNCisJCW1hcy0+aW5kZXgg
PSBtYXMtPm1pbjsNCisNCisJbWFzLT5sYXN0ID0gbWFzLT5pbmRleCArIHNpemUgLSAxOw0KKwly
ZXR1cm4gMDsNCit9DQorDQorLyoNCisgKiBtYXNfZW1wdHlfYXJlYV9yZXYoKSAtIEdldCB0aGUg
aGlnaGVzdCBhZGRyZXNzIHdpdGhpbiB0aGUgcmFuZ2UgdGhhdCBpcw0KKyAqIHN1ZmZpY2llbnQg
Zm9yIHRoZSBzaXplIHJlcXVlc3RlZC4NCisgKiBAbWFzOiBUaGUgbWFwbGUgc3RhdGUNCisgKiBA
bWluOiBUaGUgbG93ZXN0IHZhbHVlIG9mIHRoZSByYW5nZQ0KKyAqIEBtYXg6IFRoZSBoaWdoZXN0
IHZhbHVlIG9mIHRoZSByYW5nZQ0KKyAqIEBzaXplOiBUaGUgc2l6ZSBuZWVkZWQNCisgKi8NCitp
bnQgbWFzX2VtcHR5X2FyZWFfcmV2KHN0cnVjdCBtYV9zdGF0ZSAqbWFzLCB1bnNpZ25lZCBsb25n
IG1pbiwNCisJCXVuc2lnbmVkIGxvbmcgbWF4LCB1bnNpZ25lZCBsb25nIHNpemUpDQorew0KKwlz
dHJ1Y3QgbWFwbGVfZW5vZGUgKmxhc3QgPSBtYXMtPm5vZGU7DQorDQorCWlmIChtYXNfaXNfc3Rh
cnQobWFzKSkgew0KKwkJbWFzX3N0YXJ0KG1hcyk7DQorCQltYXMtPm9mZnNldCA9IG1hc19kYXRh
X2VuZChtYXMpOw0KKwl9IGVsc2UgaWYgKG1hcy0+b2Zmc2V0ID49IDIpIHsNCisJCW1hcy0+b2Zm
c2V0IC09IDI7DQorCX0gZWxzZSBpZiAoIW1hc19yZXdpbmRfbm9kZShtYXMpKSB7DQorCQlyZXR1
cm4gLUVCVVNZOw0KKwl9DQorDQorCS8qIEVtcHR5IHNldC4gKi8NCisJaWYgKG1hc19pc19ub25l
KG1hcykgfHwgbWFzX2lzX3B0cihtYXMpKSB7DQorCQltYXNfc3BhcnNlX2FyZWEobWFzLCBtaW4s
IG1heCwgc2l6ZSwgZmFsc2UpOw0KKwkJcmV0dXJuIDA7DQorCX0NCisNCisJLyogVGhlIHN0YXJ0
IG9mIHRoZSB3aW5kb3cgY2FuIG9ubHkgYmUgd2l0aGluIHRoZXNlIHZhbHVlcy4gKi8NCisJbWFz
LT5pbmRleCA9IG1pbjsNCisJbWFzLT5sYXN0ID0gbWF4Ow0KKw0KKwl3aGlsZSAoIW1hc19yZXZf
YXdhbGsobWFzLCBzaXplKSkgew0KKwkJaWYgKGxhc3QgPT0gbWFzLT5ub2RlKSB7DQorCQkJaWYg
KCFtYXNfcmV3aW5kX25vZGUobWFzKSkNCisJCQkJcmV0dXJuIC1FQlVTWTsNCisJCX0gZWxzZSB7
DQorCQkJbGFzdCA9IG1hcy0+bm9kZTsNCisJCX0NCisJfQ0KKw0KKwlpZiAodW5saWtlbHkobWFz
LT5vZmZzZXQgPT0gTUFQTEVfTk9ERV9TTE9UUykpDQorCQlyZXR1cm4gLUVCVVNZOw0KKw0KKwkv
Kg0KKwkgKiBtYXNfcmV2X2F3YWxrKCkgaGFzIHNldCBtYXMtPm1pbiBhbmQgbWFzLT5tYXggdG8g
dGhlIGdhcCB2YWx1ZXMuICBJZg0KKwkgKiB0aGUgbWF4aW11bSBpcyBvdXRzaWRlIHRoZSB3aW5k
b3cgd2UgYXJlIHNlYXJjaGluZywgdGhlbiB1c2UgdGhlIGxhc3QNCisJICogbG9jYXRpb24gaW4g
dGhlIHNlYXJjaC4NCisJICogbWFzLT5tYXggYW5kIG1hcy0+bWluIGlzIHRoZSByYW5nZSBvZiB0
aGUgZ2FwLg0KKwkgKiBtYXMtPmluZGV4IGFuZCBtYXMtPmxhc3QgYXJlIGN1cnJlbnRseSBzZXQg
dG8gdGhlIHNlYXJjaCByYW5nZS4NCisJICovDQorDQorCS8qIFRyaW0gdGhlIHVwcGVyIGxpbWl0
IHRvIHRoZSBtYXguICovDQorCWlmIChtYXMtPm1heCA8PSBtYXMtPmxhc3QpDQorCQltYXMtPmxh
c3QgPSBtYXMtPm1heDsNCisNCisJbWFzLT5pbmRleCA9IG1hcy0+bGFzdCAtIHNpemUgKyAxOw0K
KwlyZXR1cm4gMDsNCit9DQorDQorc3RhdGljIGlubGluZSBpbnQgbWFzX2FsbG9jKHN0cnVjdCBt
YV9zdGF0ZSAqbWFzLCB2b2lkICplbnRyeSwNCisJCXVuc2lnbmVkIGxvbmcgc2l6ZSwgdW5zaWdu
ZWQgbG9uZyAqaW5kZXgpDQorew0KKwl1bnNpZ25lZCBsb25nIG1pbjsNCisNCisJbWFzX3N0YXJ0
KG1hcyk7DQorCWlmIChtYXNfaXNfbm9uZShtYXMpIHx8IG1hc19pc19wdHIobWFzKSkgew0KKwkJ
bWFzX3Jvb3RfZXhwYW5kKG1hcywgZW50cnkpOw0KKwkJaWYgKG1hc19pc19lcnIobWFzKSkNCisJ
CQlyZXR1cm4geGFfZXJyKG1hcy0+bm9kZSk7DQorDQorCQlpZiAoIW1hcy0+aW5kZXgpDQorCQkJ
cmV0dXJuIG10ZV9waXZvdChtYXMtPm5vZGUsIDApOw0KKwkJcmV0dXJuIG10ZV9waXZvdChtYXMt
Pm5vZGUsIDEpOw0KKwl9DQorDQorCS8qIE11c3QgYmUgd2Fsa2luZyBhIHRyZWUuICovDQorCW1h
c19hd2FsayhtYXMsIHNpemUpOw0KKwlpZiAobWFzX2lzX2VycihtYXMpKQ0KKwkJcmV0dXJuIHhh
X2VycihtYXMtPm5vZGUpOw0KKw0KKwlpZiAobWFzLT5vZmZzZXQgPT0gTUFQTEVfTk9ERV9TTE9U
UykNCisJCWdvdG8gbm9fZ2FwOw0KKw0KKwkvKg0KKwkgKiBBdCB0aGlzIHBvaW50LCBtYXMtPm5v
ZGUgcG9pbnRzIHRvIHRoZSByaWdodCBub2RlIGFuZCB3ZSBoYXZlIGFuDQorCSAqIG9mZnNldCB0
aGF0IGhhcyBhIHN1ZmZpY2llbnQgZ2FwLg0KKwkgKi8NCisJbWluID0gbWFzLT5taW47DQorCWlm
IChtYXMtPm9mZnNldCkNCisJCW1pbiA9IG10ZV9waXZvdChtYXMtPm5vZGUsIG1hcy0+b2Zmc2V0
IC0gMSkgKyAxOw0KKw0KKwlpZiAobWFzLT5pbmRleCA8IG1pbikNCisJCW1hcy0+aW5kZXggPSBt
aW47DQorDQorCW1hc19maWxsX2dhcChtYXMsIGVudHJ5LCBtYXMtPm9mZnNldCwgc2l6ZSwgaW5k
ZXgpOw0KKwlyZXR1cm4gMDsNCisNCitub19nYXA6DQorCXJldHVybiAtRUJVU1k7DQorfQ0KKw0K
K3N0YXRpYyBpbmxpbmUgaW50IG1hc19yZXZfYWxsb2Moc3RydWN0IG1hX3N0YXRlICptYXMsIHVu
c2lnbmVkIGxvbmcgbWluLA0KKwkJCQl1bnNpZ25lZCBsb25nIG1heCwgdm9pZCAqZW50cnksDQor
CQkJCXVuc2lnbmVkIGxvbmcgc2l6ZSwgdW5zaWduZWQgbG9uZyAqaW5kZXgpDQorew0KKwlpbnQg
cmV0ID0gMDsNCisNCisJcmV0ID0gbWFzX2VtcHR5X2FyZWFfcmV2KG1hcywgbWluLCBtYXgsIHNp
emUpOw0KKwlpZiAocmV0KQ0KKwkJcmV0dXJuIHJldDsNCisNCisJaWYgKG1hc19pc19lcnIobWFz
KSkNCisJCXJldHVybiB4YV9lcnIobWFzLT5ub2RlKTsNCisNCisJaWYgKG1hcy0+b2Zmc2V0ID09
IE1BUExFX05PREVfU0xPVFMpDQorCQlnb3RvIG5vX2dhcDsNCisNCisJbWFzX2ZpbGxfZ2FwKG1h
cywgZW50cnksIG1hcy0+b2Zmc2V0LCBzaXplLCBpbmRleCk7DQorCXJldHVybiAwOw0KKw0KK25v
X2dhcDoNCisJcmV0dXJuIC1FQlVTWTsNCit9DQorDQorLyoNCisgKiBtYXNfZGVhZF9sZWF2ZXMo
KSAtIE1hcmsgYWxsIGxlYXZlcyBvZiBhIG5vZGUgYXMgZGVhZC4NCisgKiBAbWFzOiBUaGUgbWFw
bGUgc3RhdGUNCisgKiBAc2xvdHM6IFBvaW50ZXIgdG8gdGhlIHNsb3QgYXJyYXkNCisgKg0KKyAq
IE11c3QgaG9sZCB0aGUgd3JpdGUgbG9jay4NCisgKg0KKyAqIFJldHVybjogVGhlIG51bWJlciBv
ZiBsZWF2ZXMgbWFya2VkIGFzIGRlYWQuDQorICovDQorc3RhdGljIGlubGluZQ0KK3Vuc2lnbmVk
IGNoYXIgbWFzX2RlYWRfbGVhdmVzKHN0cnVjdCBtYV9zdGF0ZSAqbWFzLCB2b2lkIF9fcmN1ICoq
c2xvdHMpDQorew0KKwlzdHJ1Y3QgbWFwbGVfbm9kZSAqbm9kZTsNCisJaW50IG9mZnNldDsNCisN
CisJZm9yIChvZmZzZXQgPSAwOyBvZmZzZXQgPCBtdF9zbG90X2NvdW50KG1hcy0+bm9kZSk7IG9m
ZnNldCsrKSB7DQorCQl2b2lkICplbnRyeSA9IG1hc19zbG90X2xvY2tlZChtYXMsIHNsb3RzLCBv
ZmZzZXQpOw0KKw0KKwkJbm9kZSA9IG10ZV90b19ub2RlKGVudHJ5KTsNCisJCWlmICghbm9kZSkN
CisJCQlicmVhazsNCisJCW10ZV9zZXRfbm9kZV9kZWFkKGVudHJ5KTsNCisJCXNtcF93bWIoKTsN
CisJCW5vZGUtPnR5cGUgPSBtdGVfbm9kZV90eXBlKGVudHJ5KTsNCisJCXJjdV9hc3NpZ25fcG9p
bnRlcihzbG90c1tvZmZzZXRdLCBub2RlKTsNCisJfQ0KKw0KKwlyZXR1cm4gb2Zmc2V0Ow0KK30N
CisNCitzdGF0aWMgdm9pZCAqKm1hc19kZWFkX3dhbGsoc3RydWN0IG1hX3N0YXRlICptYXMsIHVu
c2lnbmVkIGNoYXIgb2Zmc2V0KQ0KK3sNCisJc3RydWN0IG1hcGxlX25vZGUgKm5leHQ7DQorCXZv
aWQgKipzbG90cyA9IE5VTEw7DQorDQorCW5leHQgPSBtYXNfbW4obWFzKTsNCisJZG8gew0KKwkJ
c3RydWN0IG1hcGxlX25vZGUgKm5vZGU7DQorCQltYXMtPm5vZGUgPSBtYV9lbm9kZV9wdHIobmV4
dCk7DQorCQlub2RlID0gbWFzX21uKG1hcyk7DQorCQlzbG90cyA9IG1hX3Nsb3RzKG5vZGUsIG5v
ZGUtPnR5cGUpOw0KKwkJbmV4dCA9IG1hc19zbG90X2xvY2tlZChtYXMsIHNsb3RzLCBvZmZzZXQp
Ow0KKwkJb2Zmc2V0ID0gMDsNCisJfSB3aGlsZSAoIW1hX2lzX2xlYWYobmV4dC0+dHlwZSkpOw0K
Kw0KKwlyZXR1cm4gc2xvdHM7DQorfQ0KKw0KK3N0YXRpYyB2b2lkIG10X2ZyZWVfd2FsayhzdHJ1
Y3QgcmN1X2hlYWQgKmhlYWQpDQorew0KKwl2b2lkIF9fcmN1ICoqc2xvdHM7DQorCXN0cnVjdCBt
YXBsZV9ub2RlICpub2RlLCAqc3RhcnQ7DQorCXN0cnVjdCBtYXBsZV90cmVlIG10Ow0KKwl1bnNp
Z25lZCBjaGFyIG9mZnNldDsNCisJTUFfU1RBVEUobWFzLCAmbXQsIDAsIDApOw0KKw0KKwlub2Rl
ID0gY29udGFpbmVyX29mKGhlYWQsIHN0cnVjdCBtYXBsZV9ub2RlLCByY3UpOw0KKw0KKwlpZiAo
bWFfaXNfbGVhZihub2RlLT50eXBlKSkNCisJCWdvdG8gZnJlZV9sZWFmOw0KKw0KKwltdF9pbml0
X2ZsYWdzKCZtdCwgbm9kZS0+bWFfZmxhZ3MpOw0KKwltYXNfbG9jaygmbWFzKTsNCisJc3RhcnQg
PSBub2RlOw0KKwltYXMubm9kZSA9IG10X21rX25vZGUobm9kZSwgbm9kZS0+dHlwZSk7DQorCXNs
b3RzID0gbWFzX2RlYWRfd2FsaygmbWFzLCAwKTsNCisJbm9kZSA9IG1hc19tbigmbWFzKTsNCisJ
ZG8gew0KKwkJZW51bSBtYXBsZV90eXBlIHR5cGU7DQorDQorCQltdF9mcmVlX2J1bGsobm9kZS0+
c2xvdF9sZW4sIHNsb3RzKTsNCisJCW9mZnNldCA9IG5vZGUtPnBhcmVudF9zbG90ICsgMTsNCisJ
CW1hcy5ub2RlID0gbm9kZS0+cGl2X3BhcmVudDsNCisJCWlmIChtYXNfbW4oJm1hcykgPT0gbm9k
ZSkNCisJCQlnb3RvIHN0YXJ0X3Nsb3RzX2ZyZWU7DQorCQl0eXBlID0gbXRlX25vZGVfdHlwZSht
YXMubm9kZSk7DQorCQlzbG90cyA9IG1hX3Nsb3RzKG10ZV90b19ub2RlKG1hcy5ub2RlKSwgdHlw
ZSk7DQorCQlpZiAoKG9mZnNldCA8IG10X3Nsb3RzW3R5cGVdKSAmJiAoc2xvdHNbb2Zmc2V0XSkp
IHsNCisJCQlzbG90cyA9IG1hc19kZWFkX3dhbGsoJm1hcywgb2Zmc2V0KTsNCisJCX0NCisJCW5v
ZGUgPSBtYXNfbW4oJm1hcyk7DQorCX0gd2hpbGUgKChub2RlICE9IHN0YXJ0KSB8fCAobm9kZS0+
c2xvdF9sZW4gPCBvZmZzZXQpKTsNCisNCisJc2xvdHMgPSBtYV9zbG90cyhub2RlLCBub2RlLT50
eXBlKTsNCisJbXRfZnJlZV9idWxrKG5vZGUtPnNsb3RfbGVuLCBzbG90cyk7DQorDQorc3RhcnRf
c2xvdHNfZnJlZToNCitmcmVlX2xlYWY6DQorCW10X2ZyZWVfcmN1KCZub2RlLT5yY3UpOw0KK30N
CisNCitzdGF0aWMgaW5saW5lIHZvaWQgX19yY3UgKiptYXNfZGVzdHJveV9kZXNjZW5kKHN0cnVj
dCBtYV9zdGF0ZSAqbWFzLA0KKwkJCXN0cnVjdCBtYXBsZV9lbm9kZSAqcHJldiwgdW5zaWduZWQg
Y2hhciBvZmZzZXQpDQorew0KKwlzdHJ1Y3QgbWFwbGVfbm9kZSAqbm9kZTsNCisJc3RydWN0IG1h
cGxlX2Vub2RlICpuZXh0ID0gbWFzLT5ub2RlOw0KKwl2b2lkIF9fcmN1ICoqc2xvdHMgPSBOVUxM
Ow0KKw0KKwlkbyB7DQorCQltYXMtPm5vZGUgPSBuZXh0Ow0KKwkJbm9kZSA9IG1hc19tbihtYXMp
Ow0KKwkJc2xvdHMgPSBtYV9zbG90cyhub2RlLCBtdGVfbm9kZV90eXBlKG1hcy0+bm9kZSkpOw0K
KwkJbmV4dCA9IG1hc19zbG90X2xvY2tlZChtYXMsIHNsb3RzLCAwKTsNCisJCW10ZV9zZXRfbm9k
ZV9kZWFkKG1hcy0+bm9kZSk7DQorCQlub2RlLT50eXBlID0gbXRlX25vZGVfdHlwZShtYXMtPm5v
ZGUpOw0KKwkJbm9kZS0+cGl2X3BhcmVudCA9IHByZXY7DQorCQlub2RlLT5wYXJlbnRfc2xvdCA9
IG9mZnNldDsNCisJCW9mZnNldCA9IDA7DQorCQlwcmV2ID0gbWFzLT5ub2RlOw0KKwl9IHdoaWxl
ICghbXRlX2lzX2xlYWYobmV4dCkpOw0KKwlyZXR1cm4gc2xvdHM7DQorfQ0KKw0KK3N0YXRpYyB2
b2lkIG10X2Rlc3Ryb3lfd2FsayhzdHJ1Y3QgbWFwbGVfZW5vZGUgKmVub2RlLCB1bnNpZ25lZCBj
aGFyIG1hX2ZsYWdzLA0KKwkJCSAgICBib29sIGZyZWUpDQorew0KKwl2b2lkIF9fcmN1ICoqc2xv
dHM7DQorCXN0cnVjdCBtYXBsZV9ub2RlICpub2RlID0gbXRlX3RvX25vZGUoZW5vZGUpOw0KKwlz
dHJ1Y3QgbWFwbGVfZW5vZGUgKnN0YXJ0Ow0KKwlzdHJ1Y3QgbWFwbGVfdHJlZSBtdDsNCisNCisJ
TUFfU1RBVEUobWFzLCAmbXQsIDAsIDApOw0KKw0KKwlpZiAobXRlX2lzX2xlYWYoZW5vZGUpKQ0K
KwkJZ290byBmcmVlX2xlYWY7DQorDQorCW10X2luaXRfZmxhZ3MoJm10LCBtYV9mbGFncyk7DQor
CW1hc19sb2NrKCZtYXMpOw0KKw0KKwltYXMubm9kZSA9IHN0YXJ0ID0gZW5vZGU7DQorCXNsb3Rz
ID0gbWFzX2Rlc3Ryb3lfZGVzY2VuZCgmbWFzLCBzdGFydCwgMCk7DQorCW5vZGUgPSBtYXNfbW4o
Jm1hcyk7DQorCWRvIHsNCisJCWVudW0gbWFwbGVfdHlwZSB0eXBlOw0KKwkJdW5zaWduZWQgY2hh
ciBvZmZzZXQ7DQorDQorCQlub2RlLT5zbG90X2xlbiA9IG1hc19kZWFkX2xlYXZlcygmbWFzLCBz
bG90cyk7DQorCQlpZiAoZnJlZSkNCisJCQltdF9mcmVlX2J1bGsobm9kZS0+c2xvdF9sZW4sIHNs
b3RzKTsNCisJCW9mZnNldCA9IG5vZGUtPnBhcmVudF9zbG90ICsgMTsNCisJCW1hcy5ub2RlID0g
bm9kZS0+cGl2X3BhcmVudDsNCisJCWlmIChtYXNfbW4oJm1hcykgPT0gbm9kZSkNCisJCQlnb3Rv
IHN0YXJ0X3Nsb3RzX2ZyZWU7DQorCQl0eXBlID0gbXRlX25vZGVfdHlwZShtYXMubm9kZSk7DQor
CQlzbG90cyA9IG1hX3Nsb3RzKG10ZV90b19ub2RlKG1hcy5ub2RlKSwgdHlwZSk7DQorCQlpZiAo
KG9mZnNldCA8IG10X3Nsb3RzW3R5cGVdKSAmJiAoc2xvdHNbb2Zmc2V0XSkpIHsNCisJCQlzdHJ1
Y3QgbWFwbGVfZW5vZGUgKnBhcmVudCA9IG1hcy5ub2RlOw0KKw0KKwkJCW1hcy5ub2RlID0gc2xv
dHNbb2Zmc2V0XTsNCisJCQlzbG90cyA9IG1hc19kZXN0cm95X2Rlc2NlbmQoJm1hcywgcGFyZW50
LCBvZmZzZXQpOw0KKwkJfQ0KKwkJbm9kZSA9IG1hc19tbigmbWFzKTsNCisJfSB3aGlsZSAoc3Rh
cnQgIT0gbWFzLm5vZGUpOw0KKw0KKwlub2RlID0gbWFzX21uKCZtYXMpOw0KKwlub2RlLT5zbG90
X2xlbiA9IG1hc19kZWFkX2xlYXZlcygmbWFzLCBzbG90cyk7DQorCWlmIChmcmVlKQ0KKwkJbXRf
ZnJlZV9idWxrKG5vZGUtPnNsb3RfbGVuLCBzbG90cyk7DQorDQorc3RhcnRfc2xvdHNfZnJlZToN
CisJbWFzX3VubG9jaygmbWFzKTsNCisNCitmcmVlX2xlYWY6DQorCWlmIChmcmVlKQ0KKwkJbXRf
ZnJlZV9yY3UoJm5vZGUtPnJjdSk7DQorfQ0KKw0KKy8qDQorICogbXRlX2Rlc3Ryb3lfd2Fsaygp
IC0gRnJlZSBhIHRyZWUgb3Igc3ViLXRyZWUuDQorICogQGVub2RlIC0gdGhlIGVuY29kZWQgbWFw
bGUgbm9kZSAobWFwbGVfZW5vZGUpIHRvIHN0YXJ0DQorICogQG1uIC0gdGhlIHRyZWUgdG8gZnJl
ZSAtIG5lZWRlZCBmb3Igbm9kZSB0eXBlcy4NCisgKg0KKyAqIE11c3QgaG9sZCB0aGUgd3JpdGUg
bG9jay4NCisgKi8NCitzdGF0aWMgaW5saW5lIHZvaWQgbXRlX2Rlc3Ryb3lfd2FsayhzdHJ1Y3Qg
bWFwbGVfZW5vZGUgKmVub2RlLA0KKwkJCQkgICAgc3RydWN0IG1hcGxlX3RyZWUgKm10KQ0KK3sN
CisJc3RydWN0IG1hcGxlX25vZGUgKm5vZGUgPSBtdGVfdG9fbm9kZShlbm9kZSk7DQorDQorCWlm
IChtdF9pbl9yY3UobXQpKSB7DQorCQltdF9kZXN0cm95X3dhbGsoZW5vZGUsIG10LT5tYV9mbGFn
cywgZmFsc2UpOw0KKwkJY2FsbF9yY3UoJm5vZGUtPnJjdSwgbXRfZnJlZV93YWxrKTsNCisJfSBl
bHNlIHsNCisJCW10X2Rlc3Ryb3lfd2Fsayhlbm9kZSwgbXQtPm1hX2ZsYWdzLCB0cnVlKTsNCisJ
fQ0KK30NCisNCit2b2lkIG1hc193cl9zdG9yZV9zZXR1cChzdHJ1Y3QgbWFfd3Jfc3RhdGUgKndy
X21hcykNCit7DQorCWlmICghbWFzX2lzX3N0YXJ0KHdyX21hcy0+bWFzKSkgew0KKwkJaWYgKG1h
c19pc19ub25lKHdyX21hcy0+bWFzKSkNCisJCQltYXNfcmVzZXQod3JfbWFzLT5tYXMpOw0KKwkJ
ZWxzZSB7DQorCQkJd3JfbWFzLT5yX21heCA9IHdyX21hcy0+bWFzLT5tYXg7DQorCQkJd3JfbWFz
LT50eXBlID0gbXRlX25vZGVfdHlwZSh3cl9tYXMtPm1hcy0+bm9kZSk7DQorCQkJaWYgKG1hc19p
c19zcGFuX3dyKHdyX21hcykpDQorCQkJCW1hc19yZXNldCh3cl9tYXMtPm1hcyk7DQorCQl9DQor
CX0NCisNCit9DQorDQorLyogSW50ZXJmYWNlICovDQorDQorLyoqDQorICogbWFzX3N0b3JlKCkg
LSBTdG9yZSBhbiBAZW50cnkuDQorICogQG1hczogVGhlIG1hcGxlIHN0YXRlLg0KKyAqIEBlbnRy
eTogVGhlIGVudHJ5IHRvIHN0b3JlLg0KKyAqDQorICogVGhlIEBtYXMtPmluZGV4IGFuZCBAbWFz
LT5sYXN0IGlzIHVzZWQgdG8gc2V0IHRoZSByYW5nZSBmb3IgdGhlIEBlbnRyeS4NCisgKiBOb3Rl
OiBUaGUgQG1hcyBzaG91bGQgaGF2ZSBwcmUtYWxsb2NhdGVkIGVudHJpZXMgdG8gZW5zdXJlIHRo
ZXJlIGlzIG1lbW9yeSB0bw0KKyAqIHN0b3JlIHRoZSBlbnRyeS4gIFBsZWFzZSBzZWUgbWFzX2V4
cGVjdGVkX2VudHJpZXMoKS9tYXNfZGVzdHJveSgpIGZvciBtb3JlIGRldGFpbHMuDQorICoNCisg
KiBSZXR1cm46IHRoZSBmaXJzdCBlbnRyeSBiZXR3ZWVuIG1hcy0+aW5kZXggYW5kIG1hcy0+bGFz
dCBvciAlTlVMTC4NCisgKi8NCit2b2lkICptYXNfc3RvcmUoc3RydWN0IG1hX3N0YXRlICptYXMs
IHZvaWQgKmVudHJ5KQ0KK3sNCisJTUFfV1JfU1RBVEUod3JfbWFzLCBtYXMsIGVudHJ5KTsNCisN
CisJdHJhY2VfbWFfd3JpdGUoX19mdW5jX18sIG1hcywgMCwgZW50cnkpOw0KKyNpZmRlZiBDT05G
SUdfREVCVUdfTUFQTEVfVFJFRQ0KKwlpZiAobWFzLT5pbmRleCA+IG1hcy0+bGFzdCkNCisJCXBy
aW50aygiRXJyb3IgJWx1ID4gJWx1ICVwXG4iLCBtYXMtPmluZGV4LCBtYXMtPmxhc3QsIGVudHJ5
KTsNCisJTVRfQlVHX09OKG1hcy0+dHJlZSwgbWFzLT5pbmRleCA+IG1hcy0+bGFzdCk7DQorCWlm
IChtYXMtPmluZGV4ID4gbWFzLT5sYXN0KSB7DQorCQltYXNfc2V0X2VycihtYXMsIC1FSU5WQUwp
Ow0KKwkJcmV0dXJuIE5VTEw7DQorCX0NCisNCisjZW5kaWYNCisNCisJLyoNCisJICogU3Rvcmlu
ZyBpcyB0aGUgc2FtZSBvcGVyYXRpb24gYXMgaW5zZXJ0IHdpdGggdGhlIGFkZGVkIGNhdmVhdCB0
aGF0IGl0DQorCSAqIGNhbiBvdmVyd3JpdGUgZW50cmllcy4gIEFsdGhvdWdoIHRoaXMgc2VlbXMg
c2ltcGxlIGVub3VnaCwgb25lIG1heQ0KKwkgKiB3YW50IHRvIGV4YW1pbmUgd2hhdCBoYXBwZW5z
IGlmIGEgc2luZ2xlIHN0b3JlIG9wZXJhdGlvbiB3YXMgdG8NCisJICogb3ZlcndyaXRlIG11bHRp
cGxlIGVudHJpZXMgd2l0aGluIGEgc2VsZi1iYWxhbmNpbmcgQi1UcmVlLg0KKwkgKi8NCisJbWFz
X3dyX3N0b3JlX3NldHVwKCZ3cl9tYXMpOw0KKwltYXNfd3Jfc3RvcmVfZW50cnkoJndyX21hcyk7
DQorCXJldHVybiB3cl9tYXMuY29udGVudDsNCit9DQorDQorLyoqDQorICogbWFzX3N0b3JlX2dm
cCgpIC0gU3RvcmUgYSB2YWx1ZSBpbnRvIHRoZSB0cmVlLg0KKyAqIEBtYXM6IFRoZSBtYXBsZSBz
dGF0ZQ0KKyAqIEBlbnRyeTogVGhlIGVudHJ5IHRvIHN0b3JlDQorICogQGdmcDogVGhlIEdGUF9G
TEFHUyB0byB1c2UgZm9yIGFsbG9jYXRpb25zIGlmIG5lY2Vzc2FyeS4NCisgKg0KKyAqIFJldHVy
bjogMCBvbiBzdWNjZXNzLCAtRUlOVkFMIG9uIGludmFsaWQgcmVxdWVzdCwgLUVOT01FTSBpZiBt
ZW1vcnkgY291bGQgbm90DQorICogYmUgYWxsb2NhdGVkLg0KKyAqLw0KK2ludCBtYXNfc3RvcmVf
Z2ZwKHN0cnVjdCBtYV9zdGF0ZSAqbWFzLCB2b2lkICplbnRyeSwgZ2ZwX3QgZ2ZwKQ0KK3sNCisJ
TUFfV1JfU1RBVEUod3JfbWFzLCBtYXMsIGVudHJ5KTsNCisNCisJbWFzX3dyX3N0b3JlX3NldHVw
KCZ3cl9tYXMpOw0KKwl0cmFjZV9tYV93cml0ZShfX2Z1bmNfXywgbWFzLCAwLCBlbnRyeSk7DQor
cmV0cnk6DQorCW1hc193cl9zdG9yZV9lbnRyeSgmd3JfbWFzKTsNCisJaWYgKHVubGlrZWx5KG1h
c19ub21lbShtYXMsIGdmcCkpKQ0KKwkJZ290byByZXRyeTsNCisNCisJaWYgKHVubGlrZWx5KG1h
c19pc19lcnIobWFzKSkpDQorCQlyZXR1cm4geGFfZXJyKG1hcy0+bm9kZSk7DQorDQorCXJldHVy
biAwOw0KK30NCisNCisvKg0KKyAqIG1hc19leHBlY3RlZF9lbnRyaWVzKCkgLSBTZXQgdGhlIGV4
cGVjdGVkIG51bWJlciBvZiBlbnRyaWVzIHRoYXQgd2lsbCBiZSBpbnNlcnRlZC4NCisgKiBAbWFz
OiBUaGUgbWFwbGUgc3RhdGUNCisgKiBAbnJfZW50cmllczogVGhlIG51bWJlciBvZiBleHBlY3Rl
ZCBlbnRyaWVzLg0KKyAqDQorICogVGhpcyB3aWxsIGF0dGVtcHQgdG8gcHJlLWFsbG9jYXRlIGVu
b3VnaCBub2RlcyB0byBzdG9yZSB0aGUgZXhwZWN0ZWQgbnVtYmVyDQorICogb2YgZW50cmllcy4g
IFRoZSBhbGxvY2F0aW9ucyB3aWxsIG9jY3VyIHVzaW5nIHRoZSBidWxrIGFsbG9jYXRvciBpbnRl
cmZhY2UNCisgKiBmb3Igc3BlZWQuICBQbGVhc2UgY2FsbCBtYXNfZGVzdHJveSgpIG9uIHRoZSBA
bWFzIGFmdGVyIGluc2VydGluZyB0aGUgZW50cmllcw0KKyAqIHRvIGVuc3VyZSBhbnkgdW51c2Vk
IG5vZGVzIGFyZSBmcmVlZC4NCisgKg0KKyAqIFJldHVybjogMCBvbiBzdWNjZXNzLCAtRU5PTUVN
IGlmIG1lbW9yeSBjb3VsZCBub3QgYmUgYWxsb2NhdGVkLg0KKyAqLw0KK2ludCBtYXNfZXhwZWN0
ZWRfZW50cmllcyhzdHJ1Y3QgbWFfc3RhdGUgKm1hcywgdW5zaWduZWQgbG9uZyBucl9lbnRyaWVz
KQ0KK3sNCisJaW50IG5vbmxlYWZfY2FwID0gTUFQTEVfQVJBTkdFNjRfU0xPVFMgLSAyOw0KKwlz
dHJ1Y3QgbWFwbGVfZW5vZGUgKmVub2RlID0gbWFzLT5ub2RlOw0KKwlpbnQgbnJfbm9kZXM7DQor
CWludCByZXQ7DQorDQorCS8qDQorCSAqIFNvbWV0aW1lcyBpdCBpcyBuZWNlc3NhcnkgdG8gZHVw
bGljYXRlIGEgdHJlZSB0byBhIG5ldyB0cmVlLCBzdWNoIGFzDQorCSAqIGZvcmtpbmcgYSBwcm9j
ZXNzIGFuZCBkdXBsaWNhdGluZyB0aGUgVk1BcyBmcm9tIG9uZSB0cmVlIHRvIGEgbmV3DQorCSAq
IHRyZWUuICBXaGVuIHN1Y2ggYSBzaXR1YXRpb24gYXJpc2VzLCBpdCBpcyBrbm93biB0aGF0IHRo
ZSBuZXcgdHJlZSBpcw0KKwkgKiBub3QgZ29pbmcgdG8gYmUgdXNlZCB1bnRpbCB0aGUgZW50aXJl
IHRyZWUgaXMgcG9wdWxhdGVkLiAgRm9yDQorCSAqIHBlcmZvcm1hbmNlIHJlYXNvbnMsIGl0IGlz
IGJlc3QgdG8gdXNlIGEgYnVsayBsb2FkIHdpdGggUkNVIGRpc2FibGVkLg0KKwkgKiBUaGlzIGFs
bG93cyBmb3Igb3B0aW1pc3RpYyBzcGxpdHRpbmcgdGhhdCBmYXZvdXJzIHRoZSBsZWZ0IGFuZCBy
ZXVzZQ0KKwkgKiBvZiBub2RlcyBkdXJpbmcgdGhlIG9wZXJhdGlvbi4NCisJICovDQorDQorCS8q
IE9wdGltaXplIHNwbGl0dGluZyBmb3IgYnVsayBpbnNlcnQgaW4tb3JkZXIgKi8NCisJbWFzLT5t
YXNfZmxhZ3MgfD0gTUFfU1RBVEVfQlVMSzsNCisNCisJLyoNCisJICogQXZvaWQgb3ZlcmZsb3cs
IGFzc3VtZSBhIGdhcCBiZXR3ZWVuIGVhY2ggZW50cnkgYW5kIGEgdHJhaWxpbmcgbnVsbC4NCisJ
ICogSWYgdGhpcyBpcyB3cm9uZywgaXQganVzdCBtZWFucyBhbGxvY2F0aW9uIGNhbiBoYXBwZW4g
ZHVyaW5nDQorCSAqIGluc2VydGlvbiBvZiBlbnRyaWVzLg0KKwkgKi8NCisJbnJfbm9kZXMgPSBt
YXgobnJfZW50cmllcywgbnJfZW50cmllcyAqIDIgKyAxKTsNCisNCisJaWYgKCFtdF9pc19hbGxv
YyhtYXMtPnRyZWUpKQ0KKwkJbm9ubGVhZl9jYXAgPSBNQVBMRV9SQU5HRTY0X1NMT1RTIC0gMjsN
CisNCisJLyogTGVhdmVzICovDQorCW5yX25vZGVzID0gRElWX1JPVU5EX1VQKG5yX25vZGVzLCBN
QVBMRV9SQU5HRTY0X1NMT1RTIC0gMSk7DQorCS8qIEludGVybmFsIG5vZGVzICovDQorCW5yX25v
ZGVzICs9IERJVl9ST1VORF9VUChucl9ub2Rlcywgbm9ubGVhZl9jYXApOw0KKwltYXNfbm9kZV9j
b3VudChtYXMsIG5yX25vZGVzKTsNCisNCisJaWYgKCFtYXNfaXNfZXJyKG1hcykpDQorCQlyZXR1
cm4gMDsNCisNCisJcmV0ID0geGFfZXJyKG1hcy0+bm9kZSk7DQorCW1hcy0+bm9kZSA9IGVub2Rl
Ow0KKwlyZXR1cm4gcmV0Ow0KKw0KK30NCisNCisvKg0KKyAqIG1hc19kZXN0cm95KCkgLSBkZXN0
cm95IGEgbWFwbGUgc3RhdGUuDQorICogQG1hczogVGhlIG1hcGxlIHN0YXRlDQorICoNCisgKiBV
cG9uIGNvbXBsZXRpb24sIGNoZWNrIHRoZSBsZWZ0LW1vc3Qgbm9kZSBhbmQgcmViYWxhbmNlIGFn
YWluc3QgdGhlIG5vZGUgdG8NCisgKiB0aGUgcmlnaHQgaWYgbmVjZXNzYXJ5LiAgRnJlZXMgYW55
IGFsbG9jYXRlZCBub2RlcyBhc3NvY2lhdGVkIHdpdGggdGhpcyBtYXBsZQ0KKyAqIHN0YXRlLg0K
KyAqLw0KK3ZvaWQgbWFzX2Rlc3Ryb3koc3RydWN0IG1hX3N0YXRlICptYXMpDQorew0KKwlzdHJ1
Y3QgbWFwbGVfYWxsb2MgKm5vZGU7DQorDQorCS8qDQorCSAqIFdoZW4gdXNpbmcgbWFzX2Zvcl9l
YWNoKCkgdG8gaW5zZXJ0IGFuIGV4cGVjdGVkIG51bWJlciBvZiBlbGVtZW50cywNCisJICogaXQg
aXMgcG9zc2libGUgdGhhdCB0aGUgbnVtYmVyIGluc2VydGVkIGlzIGxlc3MgdGhhbiB0aGUgZXhw
ZWN0ZWQNCisJICogbnVtYmVyLiAgVG8gZml4IGFuIGludmFsaWQgZmluYWwgbm9kZSwgYSBjaGVj
ayBpcyBwZXJmb3JtZWQgaGVyZSB0bw0KKwkgKiByZWJhbGFuY2UgdGhlIHByZXZpb3VzIG5vZGUg
d2l0aCB0aGUgZmluYWwgbm9kZS4NCisJICovDQorCWlmIChtYXMtPm1hc19mbGFncyAmIE1BX1NU
QVRFX1JFQkFMQU5DRSkgew0KKwkJdW5zaWduZWQgY2hhciBlbmQ7DQorDQorCQlpZiAobWFzX2lz
X3N0YXJ0KG1hcykpDQorCQkJbWFzX3N0YXJ0KG1hcyk7DQorDQorCQltdHJlZV9yYW5nZV93YWxr
KG1hcyk7DQorCQllbmQgPSBtYXNfZGF0YV9lbmQobWFzKSArIDE7DQorCQlpZiAoZW5kIDwgbXRf
bWluX3Nsb3RfY291bnQobWFzLT5ub2RlKSAtIDEpDQorCQkJbWFzX2Rlc3Ryb3lfcmViYWxhbmNl
KG1hcywgZW5kKTsNCisNCisJCW1hcy0+bWFzX2ZsYWdzICY9IH5NQV9TVEFURV9SRUJBTEFOQ0U7
DQorCX0NCisJbWFzLT5tYXNfZmxhZ3MgJj0gfk1BX1NUQVRFX0JVTEs7DQorDQorCXdoaWxlICht
YXMtPmFsbG9jICYmICEoKHVuc2lnbmVkIGxvbmcpbWFzLT5hbGxvYyAmIDB4MSkpIHsNCisJCW5v
ZGUgPSBtYXMtPmFsbG9jOw0KKwkJbWFzLT5hbGxvYyA9IG5vZGUtPnNsb3RbMF07DQorCQlpZiAo
bm9kZS0+bm9kZV9jb3VudCA+IDApDQorCQkJbXRfZnJlZV9idWxrKG5vZGUtPm5vZGVfY291bnQs
DQorCQkJCSAgICAgKHZvaWQgX19yY3UgKiopJm5vZGUtPnNsb3RbMV0pOw0KKwkJa21lbV9jYWNo
ZV9mcmVlKG1hcGxlX25vZGVfY2FjaGUsIG5vZGUpOw0KKwl9DQorCW1hcy0+YWxsb2MgPSBOVUxM
Ow0KK30NCisNCisvKioNCisgKiBtYXNfbmV4dCgpIC0gR2V0IHRoZSBuZXh0IGVudHJ5Lg0KKyAq
IEBtYXM6IFRoZSBtYXBsZSBzdGF0ZQ0KKyAqIEBtYXg6IFRoZSBtYXhpbXVtIGluZGV4IHRvIGNo
ZWNrLg0KKyAqDQorICogUmV0dXJucyB0aGUgbmV4dCBlbnRyeSBhZnRlciBAbWFzLT5pbmRleC4N
CisgKiBNdXN0IGhvbGQgcmN1X3JlYWRfbG9jayBvciB0aGUgd3JpdGUgbG9jay4NCisgKiBDYW4g
cmV0dXJuIHRoZSB6ZXJvIGVudHJ5Lg0KKyAqDQorICogUmV0dXJuOiBUaGUgbmV4dCBlbnRyeSBv
ciAlTlVMTA0KKyAqLw0KK3ZvaWQgKm1hc19uZXh0KHN0cnVjdCBtYV9zdGF0ZSAqbWFzLCB1bnNp
Z25lZCBsb25nIG1heCkNCit7DQorCWlmIChtYXNfaXNfbm9uZShtYXMpIHx8IG1hc19pc19wYXVz
ZWQobWFzKSkNCisJCW1hcy0+bm9kZSA9IE1BU19TVEFSVDsNCisNCisJaWYgKG1hc19pc19zdGFy
dChtYXMpKQ0KKwkJbWFzX3dhbGsobWFzKTsgLyogUmV0cmllcyBvbiBkZWFkIG5vZGVzIGhhbmRs
ZWQgYnkgbWFzX3dhbGsgKi8NCisNCisJaWYgKG1hc19pc19wdHIobWFzKSkgew0KKwkJaWYgKCFt
YXMtPmluZGV4KSB7DQorCQkJbWFzLT5pbmRleCA9IDE7DQorCQkJbWFzLT5sYXN0ID0gVUxPTkdf
TUFYOw0KKwkJfQ0KKwkJcmV0dXJuIE5VTEw7DQorCX0NCisNCisJaWYgKG1hcy0+bGFzdCA9PSBV
TE9OR19NQVgpDQorCQlyZXR1cm4gTlVMTDsNCisNCisJLyogUmV0cmllcyBvbiBkZWFkIG5vZGVz
IGhhbmRsZWQgYnkgbWFzX25leHRfZW50cnkgKi8NCisJcmV0dXJuIG1hc19uZXh0X2VudHJ5KG1h
cywgbWF4KTsNCit9DQorRVhQT1JUX1NZTUJPTF9HUEwobWFzX25leHQpOw0KKw0KKy8qKg0KKyAq
IG10X25leHQoKSAtIGdldCB0aGUgbmV4dCB2YWx1ZSBpbiB0aGUgbWFwbGUgdHJlZQ0KKyAqIEBt
dDogVGhlIG1hcGxlIHRyZWUNCisgKiBAaW5kZXg6IFRoZSBzdGFydCBpbmRleA0KKyAqIEBtYXg6
IFRoZSBtYXhpbXVtIGluZGV4IHRvIGNoZWNrDQorICoNCisgKiBSZXR1cm46IFRoZSBlbnRyeSBh
dCBAaW5kZXggb3IgaGlnaGVyLCBvciAlTlVMTCBpZiBub3RoaW5nIGlzIGZvdW5kLg0KKyAqLw0K
K3ZvaWQgKm10X25leHQoc3RydWN0IG1hcGxlX3RyZWUgKm10LCB1bnNpZ25lZCBsb25nIGluZGV4
LCB1bnNpZ25lZCBsb25nIG1heCkNCit7DQorCXZvaWQgKmVudHJ5ID0gTlVMTDsNCisJTUFfU1RB
VEUobWFzLCBtdCwgaW5kZXgsIGluZGV4KTsNCisNCisJcmN1X3JlYWRfbG9jaygpOw0KKwllbnRy
eSA9IG1hc19uZXh0KCZtYXMsIG1heCk7DQorCXJjdV9yZWFkX3VubG9jaygpOw0KKwlyZXR1cm4g
ZW50cnk7DQorfQ0KK0VYUE9SVF9TWU1CT0xfR1BMKG10X25leHQpOw0KKw0KKy8qKg0KKyAqIG1h
c19wcmV2KCkgLSBHZXQgdGhlIHByZXZpb3VzIGVudHJ5DQorICogQG1hczogVGhlIG1hcGxlIHN0
YXRlDQorICogQG1pbjogVGhlIG1pbmltdW0gdmFsdWUgdG8gY2hlY2suDQorICoNCisgKiBNdXN0
IGhvbGQgcmN1X3JlYWRfbG9jayBvciB0aGUgd3JpdGUgbG9jay4NCisgKiBXaWxsIHJlc2V0IG1h
cyB0byBNQVNfU1RBUlQgaWYgdGhlIG5vZGUgaXMgTUFTX05PTkUuICBXaWxsIHN0b3Agb24gbm90
DQorICogc2VhcmNoYWJsZSBub2Rlcy4NCisgKg0KKyAqIFJldHVybjogdGhlIHByZXZpb3VzIHZh
bHVlIG9yICVOVUxMLg0KKyAqLw0KK3ZvaWQgKm1hc19wcmV2KHN0cnVjdCBtYV9zdGF0ZSAqbWFz
LCB1bnNpZ25lZCBsb25nIG1pbikNCit7DQorCWlmICghbWFzLT5pbmRleCkgew0KKwkJLyogTm90
aGluZyBjb21lcyBiZWZvcmUgMCAqLw0KKwkJbWFzLT5sYXN0ID0gMDsNCisJCXJldHVybiBOVUxM
Ow0KKwl9DQorDQorCWlmICh1bmxpa2VseShtYXNfaXNfcHRyKG1hcykpKQ0KKwkJcmV0dXJuIE5V
TEw7DQorDQorCWlmIChtYXNfaXNfbm9uZShtYXMpIHx8IG1hc19pc19wYXVzZWQobWFzKSkNCisJ
CW1hcy0+bm9kZSA9IE1BU19TVEFSVDsNCisNCisJaWYgKG1hc19pc19zdGFydChtYXMpKSB7DQor
CQltYXNfd2FsayhtYXMpOw0KKwkJaWYgKCFtYXMtPmluZGV4KQ0KKwkJCXJldHVybiBOVUxMOw0K
Kwl9DQorDQorCWlmIChtYXNfaXNfcHRyKG1hcykpIHsNCisJCWlmICghbWFzLT5pbmRleCkgew0K
KwkJCW1hcy0+bGFzdCA9IDA7DQorCQkJcmV0dXJuIE5VTEw7DQorCQl9DQorDQorCQltYXMtPmlu
ZGV4ID0gbWFzLT5sYXN0ID0gMDsNCisJCXJldHVybiBtYXNfcm9vdF9sb2NrZWQobWFzKTsNCisJ
fQ0KKwlyZXR1cm4gbWFzX3ByZXZfZW50cnkobWFzLCBtaW4pOw0KK30NCitFWFBPUlRfU1lNQk9M
X0dQTChtYXNfcHJldik7DQorDQorLyoqDQorICogbXRfcHJldigpIC0gZ2V0IHRoZSBwcmV2aW91
cyB2YWx1ZSBpbiB0aGUgbWFwbGUgdHJlZQ0KKyAqIEBtdDogVGhlIG1hcGxlIHRyZWUNCisgKiBA
aW5kZXg6IFRoZSBzdGFydCBpbmRleA0KKyAqIEBtaW46IFRoZSBtaW51bXVtIGluZGV4IHRvIGNo
ZWNrDQorICoNCisgKiBSZXR1cm46IFRoZSBlbnRyeSBhdCBAaW5kZXggb3IgbG93ZXIsIG9yICVO
VUxMIGlmIG5vdGhpbmcgaXMgZm91bmQuDQorICovDQordm9pZCAqbXRfcHJldihzdHJ1Y3QgbWFw
bGVfdHJlZSAqbXQsIHVuc2lnbmVkIGxvbmcgaW5kZXgsIHVuc2lnbmVkIGxvbmcgbWluKQ0KK3sN
CisJdm9pZCAqZW50cnkgPSBOVUxMOw0KKwlNQV9TVEFURShtYXMsIG10LCBpbmRleCwgaW5kZXgp
Ow0KKw0KKwlyY3VfcmVhZF9sb2NrKCk7DQorCWVudHJ5ID0gbWFzX3ByZXYoJm1hcywgbWluKTsN
CisJcmN1X3JlYWRfdW5sb2NrKCk7DQorCXJldHVybiBlbnRyeTsNCit9DQorRVhQT1JUX1NZTUJP
TF9HUEwobXRfcHJldik7DQorDQorLyoqDQorICogbWFzX3BhdXNlKCkgLSBQYXVzZSBhIG1hc19m
aW5kL21hc19mb3JfZWFjaCB0byBkcm9wIHRoZSBsb2NrLg0KKyAqIEBtYXM6IFRoZSBtYXBsZSBz
dGF0ZSB0byBwYXVzZQ0KKyAqDQorICogU29tZSB1c2VycyBuZWVkIHRvIHBhdXNlIGEgd2FsayBh
bmQgZHJvcCB0aGUgbG9jayB0aGV5J3JlIGhvbGRpbmcgaW4NCisgKiBvcmRlciB0byB5aWVsZCB0
byBhIGhpZ2hlciBwcmlvcml0eSB0aHJlYWQgb3IgY2Fycnkgb3V0IGFuIG9wZXJhdGlvbg0KKyAq
IG9uIGFuIGVudHJ5LiAgVGhvc2UgdXNlcnMgc2hvdWxkIGNhbGwgdGhpcyBmdW5jdGlvbiBiZWZv
cmUgdGhleSBkcm9wDQorICogdGhlIGxvY2suICBJdCByZXNldHMgdGhlIEBtYXMgdG8gYmUgc3Vp
dGFibGUgZm9yIHRoZSBuZXh0IGl0ZXJhdGlvbg0KKyAqIG9mIHRoZSBsb29wIGFmdGVyIHRoZSB1
c2VyIGhhcyByZWFjcXVpcmVkIHRoZSBsb2NrLiAgSWYgbW9zdCBlbnRyaWVzDQorICogZm91bmQg
ZHVyaW5nIGEgd2FsayByZXF1aXJlIHlvdSB0byBjYWxsIG1hc19wYXVzZSgpLCB0aGUgbXRfZm9y
X2VhY2goKQ0KKyAqIGl0ZXJhdG9yIG1heSBiZSBtb3JlIGFwcHJvcHJpYXRlLg0KKyAqDQorICov
DQordm9pZCBtYXNfcGF1c2Uoc3RydWN0IG1hX3N0YXRlICptYXMpDQorew0KKwltYXMtPm5vZGUg
PSBNQVNfUEFVU0U7DQorfQ0KK0VYUE9SVF9TWU1CT0xfR1BMKG1hc19wYXVzZSk7DQorDQorLyoq
DQorICogbWFzX2ZpbmQoKSAtIE9uIHRoZSBmaXJzdCBjYWxsLCBmaW5kIHRoZSBlbnRyeSBhdCBv
ciBhZnRlciBtYXMtPmluZGV4IHVwIHRvDQorICogJW1heC4gIE90aGVyd2lzZSwgZmluZCB0aGUg
ZW50cnkgYWZ0ZXIgbWFzLT5pbmRleC4NCisgKiBAbWFzOiBUaGUgbWFwbGUgc3RhdGUNCisgKiBA
bWF4OiBUaGUgbWF4aW11bSB2YWx1ZSB0byBjaGVjay4NCisgKg0KKyAqIE11c3QgaG9sZCByY3Vf
cmVhZF9sb2NrIG9yIHRoZSB3cml0ZSBsb2NrLg0KKyAqIElmIGFuIGVudHJ5IGV4aXN0cywgbGFz
dCBhbmQgaW5kZXggYXJlIHVwZGF0ZWQgYWNjb3JkaW5nbHkuDQorICogTWF5IHNldCBAbWFzLT5u
b2RlIHRvIE1BU19OT05FLg0KKyAqDQorICogUmV0dXJuOiBUaGUgZW50cnkgb3IgJU5VTEwuDQor
ICovDQordm9pZCAqbWFzX2ZpbmQoc3RydWN0IG1hX3N0YXRlICptYXMsIHVuc2lnbmVkIGxvbmcg
bWF4KQ0KK3sNCisJaWYgKHVubGlrZWx5KG1hc19pc19wYXVzZWQobWFzKSkpIHsNCisJCWlmICh1
bmxpa2VseShtYXMtPmxhc3QgPT0gVUxPTkdfTUFYKSkgew0KKwkJCW1hcy0+bm9kZSA9IE1BU19O
T05FOw0KKwkJCXJldHVybiBOVUxMOw0KKwkJfQ0KKwkJbWFzLT5ub2RlID0gTUFTX1NUQVJUOw0K
KwkJbWFzLT5pbmRleCA9ICsrbWFzLT5sYXN0Ow0KKwl9DQorDQorCWlmICh1bmxpa2VseShtYXNf
aXNfc3RhcnQobWFzKSkpIHsNCisJCS8qIEZpcnN0IHJ1biBvciBjb250aW51ZSAqLw0KKwkJdm9p
ZCAqZW50cnk7DQorDQorCQlpZiAobWFzLT5pbmRleCA+IG1heCkNCisJCQlyZXR1cm4gTlVMTDsN
CisNCisJCWVudHJ5ID0gbWFzX3dhbGsobWFzKTsNCisJCWlmIChlbnRyeSkNCisJCQlyZXR1cm4g
ZW50cnk7DQorCX0NCisNCisJaWYgKHVubGlrZWx5KCFtYXNfc2VhcmNoYWJsZShtYXMpKSkNCisJ
CXJldHVybiBOVUxMOw0KKw0KKwkvKiBSZXRyaWVzIG9uIGRlYWQgbm9kZXMgaGFuZGxlZCBieSBt
YXNfbmV4dF9lbnRyeSAqLw0KKwlyZXR1cm4gbWFzX25leHRfZW50cnkobWFzLCBtYXgpOw0KK30N
CisNCisvKioNCisgKiBtYXNfZmluZF9yZXY6IE9uIHRoZSBmaXJzdCBjYWxsLCBmaW5kIHRoZSBm
aXJzdCBub24tbnVsbCBlbnRyeSBhdCBvciBiZWxvdw0KKyAqIG1hcy0+aW5kZXggZG93biB0byAl
bWluLiAgT3RoZXJ3aXNlIGZpbmQgdGhlIGZpcnN0IG5vbi1udWxsIGVudHJ5IGJlbG93DQorICog
bWFzLT5pbmRleCBkb3duIHRvICVtaW4uDQorICogQG1hczogVGhlIG1hcGxlIHN0YXRlDQorICog
QG1pbjogVGhlIG1pbmltdW0gdmFsdWUgdG8gY2hlY2suDQorICoNCisgKiBNdXN0IGhvbGQgcmN1
X3JlYWRfbG9jayBvciB0aGUgd3JpdGUgbG9jay4NCisgKiBJZiBhbiBlbnRyeSBleGlzdHMsIGxh
c3QgYW5kIGluZGV4IGFyZSB1cGRhdGVkIGFjY29yZGluZ2x5Lg0KKyAqIE1heSBzZXQgQG1hcy0+
bm9kZSB0byBNQVNfTk9ORS4NCisgKg0KKyAqIFJldHVybjogVGhlIGVudHJ5IG9yICVOVUxMLg0K
KyAqLw0KK3ZvaWQgKm1hc19maW5kX3JldihzdHJ1Y3QgbWFfc3RhdGUgKm1hcywgdW5zaWduZWQg
bG9uZyBtaW4pDQorew0KKwlpZiAodW5saWtlbHkobWFzX2lzX3BhdXNlZChtYXMpKSkgew0KKwkJ
aWYgKHVubGlrZWx5KG1hcy0+bGFzdCA9PSBVTE9OR19NQVgpKSB7DQorCQkJbWFzLT5ub2RlID0g
TUFTX05PTkU7DQorCQkJcmV0dXJuIE5VTEw7DQorCQl9DQorCQltYXMtPm5vZGUgPSBNQVNfU1RB
UlQ7DQorCQltYXMtPmxhc3QgPSAtLW1hcy0+aW5kZXg7DQorCX0NCisNCisJaWYgKHVubGlrZWx5
KG1hc19pc19zdGFydChtYXMpKSkgew0KKwkJLyogRmlyc3QgcnVuIG9yIGNvbnRpbnVlICovDQor
CQl2b2lkICplbnRyeTsNCisNCisJCWlmIChtYXMtPmluZGV4IDwgbWluKQ0KKwkJCXJldHVybiBO
VUxMOw0KKw0KKwkJZW50cnkgPSBtYXNfd2FsayhtYXMpOw0KKwkJaWYgKGVudHJ5KQ0KKwkJCXJl
dHVybiBlbnRyeTsNCisJfQ0KKw0KKwlpZiAodW5saWtlbHkoIW1hc19zZWFyY2hhYmxlKG1hcykp
KQ0KKwkJcmV0dXJuIE5VTEw7DQorDQorCWlmIChtYXMtPmluZGV4IDwgbWluKQ0KKwkJcmV0dXJu
IE5VTEw7DQorDQorCS8qIFJldHJpZXMgb24gZGVhZCBub2RlcyBoYW5kbGVkIGJ5IG1hc19uZXh0
X2VudHJ5ICovDQorCXJldHVybiBtYXNfcHJldl9lbnRyeShtYXMsIG1pbik7DQorfQ0KK0VYUE9S
VF9TWU1CT0xfR1BMKG1hc19maW5kKTsNCisNCisvKioNCisgKiBtYXNfZXJhc2UoKSAtIEZpbmQg
dGhlIHJhbmdlIGluIHdoaWNoIGluZGV4IHJlc2lkZXMgYW5kIGVyYXNlIHRoZSBlbnRpcmUNCisg
KiByYW5nZS4NCisgKiBAbWFzOiBUaGUgbWFwbGUgc3RhdGUNCisgKg0KKyAqIE11c3QgaG9sZCB0
aGUgd3JpdGUgbG9jay4NCisgKiBTZWFyY2hlcyBmb3IgQG1hcy0+aW5kZXgsIHNldHMgQG1hcy0+
aW5kZXggYW5kIEBtYXMtPmxhc3QgdG8gdGhlIHJhbmdlIGFuZA0KKyAqIGVyYXNlcyB0aGF0IHJh
bmdlLg0KKyAqDQorICogUmV0dXJuOiB0aGUgZW50cnkgdGhhdCB3YXMgZXJhc2VkIG9yICVOVUxM
LCBAbWFzLT5pbmRleCBhbmQgQG1hcy0+bGFzdCBhcmUgdXBkYXRlZC4NCisgKi8NCit2b2lkICpt
YXNfZXJhc2Uoc3RydWN0IG1hX3N0YXRlICptYXMpDQorew0KKwl2b2lkICplbnRyeTsNCisJTUFf
V1JfU1RBVEUod3JfbWFzLCBtYXMsIE5VTEwpOw0KKw0KKwlpZiAobWFzX2lzX25vbmUobWFzKSB8
fCBtYXNfaXNfcGF1c2VkKG1hcykpDQorCQltYXMtPm5vZGUgPSBNQVNfU1RBUlQ7DQorDQorCS8q
IFJldHJ5IHVubmVjZXNzYXJ5IHdoZW4gaG9sZGluZyB0aGUgd3JpdGUgbG9jay4gKi8NCisJZW50
cnkgPSBtYXNfc3RhdGVfd2FsayhtYXMpOw0KKwlpZiAoIWVudHJ5KQ0KKwkJcmV0dXJuIE5VTEw7
DQorDQord3JpdGVfcmV0cnk6DQorCS8qIE11c3QgcmVzZXQgdG8gZW5zdXJlIHNwYW5uaW5nIHdy
aXRlcyBvZiBsYXN0IHNsb3QgYXJlIGRldGVjdGVkICovDQorCW1hc19yZXNldChtYXMpOw0KKwlt
YXNfd3Jfc3RvcmVfc2V0dXAoJndyX21hcyk7DQorCW1hc193cl9zdG9yZV9lbnRyeSgmd3JfbWFz
KTsNCisJaWYgKG1hc19ub21lbShtYXMsIEdGUF9LRVJORUwpKQ0KKwkJZ290byB3cml0ZV9yZXRy
eTsNCisNCisJcmV0dXJuIGVudHJ5Ow0KK30NCitFWFBPUlRfU1lNQk9MX0dQTChtYXNfZXJhc2Up
Ow0KKw0KKy8qKg0KKyAqIG1hc19ub21lbSgpIC0gQ2hlY2sgaWYgdGhlcmUgd2FzIGFuIGVycm9y
IGFsbG9jYXRpbmcgYW5kIGRvIHRoZSBhbGxvY2F0aW9uDQorICogaWYgbmVjZXNzYXJ5IElmIHRo
ZXJlIGFyZSBhbGxvY2F0aW9ucywgdGhlbiBmcmVlIHRoZW0uDQorICogQG1hczogVGhlIG1hcGxl
IHN0YXRlDQorICogQGdmcDogVGhlIEdGUF9GQUxHUyB0byB1c2UgZm9yIGFsbG9jYXRpb25zDQor
ICogUmV0dXJuOiB0cnVlIG9uIGFsbG9jYXRpb24sIGZhbHNlIG90aGVyd2lzZS4NCisgKi8NCiti
b29sIG1hc19ub21lbShzdHJ1Y3QgbWFfc3RhdGUgKm1hcywgZ2ZwX3QgZ2ZwKQ0KKwlfX211c3Rf
aG9sZChtYXMtPnRyZWUtPmxvY2spDQorew0KKwlpZiAobGlrZWx5KG1hcy0+bm9kZSAhPSBNQV9F
UlJPUigtRU5PTUVNKSkpIHsNCisJCW1hc19kZXN0cm95KG1hcyk7DQorCQlyZXR1cm4gZmFsc2U7
DQorCX0NCisNCisJaWYgKGdmcGZsYWdzX2FsbG93X2Jsb2NraW5nKGdmcCkgJiYgIW10X2V4dGVy
bmFsX2xvY2sobWFzLT50cmVlKSkgew0KKwkJbXRyZWVfdW5sb2NrKG1hcy0+dHJlZSk7DQorCQlt
YXNfYWxsb2Nfbm9kZXMobWFzLCBnZnApOw0KKwkJbXRyZWVfbG9jayhtYXMtPnRyZWUpOw0KKwl9
IGVsc2Ugew0KKwkJbWFzX2FsbG9jX25vZGVzKG1hcywgZ2ZwKTsNCisJfQ0KKw0KKwlpZiAoIW1h
c19hbGxvY2F0ZWQobWFzKSkNCisJCXJldHVybiBmYWxzZTsNCisNCisJbWFzLT5ub2RlID0gTUFT
X1NUQVJUOw0KKwlyZXR1cm4gdHJ1ZTsNCit9DQorDQordm9pZCBfX2luaXQgbWFwbGVfdHJlZV9p
bml0KHZvaWQpDQorew0KKwltYXBsZV9ub2RlX2NhY2hlID0ga21lbV9jYWNoZV9jcmVhdGUoIm1h
cGxlX25vZGUiLA0KKwkJCXNpemVvZihzdHJ1Y3QgbWFwbGVfbm9kZSksIHNpemVvZihzdHJ1Y3Qg
bWFwbGVfbm9kZSksDQorCQkJU0xBQl9QQU5JQywgTlVMTCk7DQorfQ0KKw0KKy8qKg0KKyAqIG10
cmVlX2xvYWQoKSAtIExvYWQgYSB2YWx1ZSBzdG9yZWQgaW4gYSBtYXBsZSB0cmVlDQorICogQG10
OiBUaGUgbWFwbGUgdHJlZQ0KKyAqIEBpbmRleDogVGhlIGluZGV4IHRvIGxvYWQNCisgKg0KKyAq
IFJldHVybjogdGhlIGVudHJ5IG9yICVOVUxMDQorICovDQordm9pZCAqbXRyZWVfbG9hZChzdHJ1
Y3QgbWFwbGVfdHJlZSAqbXQsIHVuc2lnbmVkIGxvbmcgaW5kZXgpDQorew0KKwlNQV9TVEFURSht
YXMsIG10LCBpbmRleCwgaW5kZXgpOw0KKwl2b2lkICplbnRyeTsNCisNCisJdHJhY2VfbWFfcmVh
ZChfX2Z1bmNfXywgJm1hcyk7DQorCXJjdV9yZWFkX2xvY2soKTsNCityZXRyeToNCisJZW50cnkg
PSBtYXNfc3RhcnQoJm1hcyk7DQorCWlmICh1bmxpa2VseShtYXNfaXNfbm9uZSgmbWFzKSkpDQor
CQlnb3RvIHVubG9jazsNCisNCisJaWYgKHVubGlrZWx5KG1hc19pc19wdHIoJm1hcykpKSB7DQor
CQlpZiAoaW5kZXgpDQorCQkJZW50cnkgPSBOVUxMOw0KKw0KKwkJZ290byB1bmxvY2s7DQorCX0N
CisNCisJZW50cnkgPSBtdHJlZV9sb29rdXBfd2FsaygmbWFzKTsNCisJaWYgKCFlbnRyeSAmJiB1
bmxpa2VseShtYXNfaXNfc3RhcnQoJm1hcykpKQ0KKwkJZ290byByZXRyeTsNCit1bmxvY2s6DQor
CXJjdV9yZWFkX3VubG9jaygpOw0KKwlpZiAoeGFfaXNfemVybyhlbnRyeSkpDQorCQlyZXR1cm4g
TlVMTDsNCisNCisJcmV0dXJuIGVudHJ5Ow0KK30NCitFWFBPUlRfU1lNQk9MKG10cmVlX2xvYWQp
Ow0KKw0KKy8qKg0KKyAqIG10cmVlX3N0b3JlX3JhbmdlKCkgLSBTdG9yZSBhbiBlbnRyeSBhdCBh
IGdpdmVuIHJhbmdlLg0KKyAqIEBtdDogVGhlIG1hcGxlIHRyZWUNCisgKiBAaW5kZXg6IFRoZSBz
dGFydCBvZiB0aGUgcmFuZ2UNCisgKiBAbGFzdDogVGhlIGVuZCBvZiB0aGUgcmFuZ2UNCisgKiBA
ZW50cnk6IFRoZSBlbnRyeSB0byBzdG9yZQ0KKyAqIEBnZnA6IFRoZSBHRlBfRkxBR1MgdG8gdXNl
IGZvciBhbGxvY2F0aW9ucw0KKyAqDQorICogUmV0dXJuOiAwIG9uIHN1Y2Nlc3MsIC1FSU5WQUwg
b24gaW52YWxpZCByZXF1ZXN0LCAtRU5PTUVNIGlmIG1lbW9yeSBjb3VsZCBub3QNCisgKiBiZSBh
bGxvY2F0ZWQuDQorICovDQoraW50IG10cmVlX3N0b3JlX3JhbmdlKHN0cnVjdCBtYXBsZV90cmVl
ICptdCwgdW5zaWduZWQgbG9uZyBpbmRleCwNCisJCXVuc2lnbmVkIGxvbmcgbGFzdCwgdm9pZCAq
ZW50cnksIGdmcF90IGdmcCkNCit7DQorCU1BX1NUQVRFKG1hcywgbXQsIGluZGV4LCBsYXN0KTsN
CisJTUFfV1JfU1RBVEUod3JfbWFzLCAmbWFzLCBlbnRyeSk7DQorDQorCXRyYWNlX21hX3dyaXRl
KF9fZnVuY19fLCAmbWFzLCAwLCBlbnRyeSk7DQorCWlmIChXQVJOX09OX09OQ0UoeGFfaXNfYWR2
YW5jZWQoZW50cnkpKSkNCisJCXJldHVybiAtRUlOVkFMOw0KKw0KKwlpZiAoaW5kZXggPiBsYXN0
KQ0KKwkJcmV0dXJuIC1FSU5WQUw7DQorDQorCW10cmVlX2xvY2sobXQpOw0KK3JldHJ5Og0KKwlt
YXNfd3Jfc3RvcmVfZW50cnkoJndyX21hcyk7DQorCWlmIChtYXNfbm9tZW0oJm1hcywgZ2ZwKSkN
CisJCWdvdG8gcmV0cnk7DQorDQorCW10cmVlX3VubG9jayhtdCk7DQorCWlmIChtYXNfaXNfZXJy
KCZtYXMpKQ0KKwkJcmV0dXJuIHhhX2VycihtYXMubm9kZSk7DQorDQorCXJldHVybiAwOw0KK30N
CitFWFBPUlRfU1lNQk9MKG10cmVlX3N0b3JlX3JhbmdlKTsNCisNCisvKioNCisgKiBtdHJlZV9z
dG9yZSgpIC0gU3RvcmUgYW4gZW50cnkgYXQgYSBnaXZlbiBpbmRleC4NCisgKiBAbXQ6IFRoZSBt
YXBsZSB0cmVlDQorICogQGluZGV4OiBUaGUgaW5kZXggdG8gc3RvcmUgdGhlIHZhbHVlDQorICog
QGVudHJ5OiBUaGUgZW50cnkgdG8gc3RvcmUNCisgKiBAZ2ZwOiBUaGUgR0ZQX0ZMQUdTIHRvIHVz
ZSBmb3IgYWxsb2NhdGlvbnMNCisgKg0KKyAqIFJldHVybjogMCBvbiBzdWNjZXNzLCAtRUlOVkFM
IG9uIGludmFsaWQgcmVxdWVzdCwgLUVOT01FTSBpZiBtZW1vcnkgY291bGQgbm90DQorICogYmUg
YWxsb2NhdGVkLg0KKyAqLw0KK2ludCBtdHJlZV9zdG9yZShzdHJ1Y3QgbWFwbGVfdHJlZSAqbXQs
IHVuc2lnbmVkIGxvbmcgaW5kZXgsIHZvaWQgKmVudHJ5LA0KKwkJIGdmcF90IGdmcCkNCit7DQor
CXJldHVybiBtdHJlZV9zdG9yZV9yYW5nZShtdCwgaW5kZXgsIGluZGV4LCBlbnRyeSwgZ2ZwKTsN
Cit9DQorRVhQT1JUX1NZTUJPTChtdHJlZV9zdG9yZSk7DQorDQorLyoqDQorICogbXRyZWVfaW5z
ZXJ0X3JhbmdlKCkgLSBJbnNlcnQgYW4gZW50cnkgYXQgYSBnaXZlIHJhbmdlIGlmIHRoZXJlIGlz
IG5vIHZhbHVlLg0KKyAqIEBtdDogVGhlIG1hcGxlIHRyZWUNCisgKiBAZmlyc3Q6IFRoZSBzdGFy
dCBvZiB0aGUgcmFuZ2UNCisgKiBAbGFzdDogVGhlIGVuZCBvZiB0aGUgcmFuZ2UNCisgKiBAZW50
cnk6IFRoZSBlbnRyeSB0byBzdG9yZQ0KKyAqIEBnZnA6IFRoZSBGR1BfRkxBR1MgdG8gdXNlIGZv
ciBhbGxvY2F0aW9ucy4NCisgKg0KKyAqIFJldHVybjogMCBvbiBzdWNjZXNzLCAtRUVYSVNUUyBp
ZiB0aGUgcmFuZ2UgaXMgb2NjdXBpZWQsIC1FSU5WQUwgb24gaW52YWxpZA0KKyAqIHJlcXVlc3Qs
IC1FTk9NRU0gaWYgbWVtb3J5IGNvdWxkIG5vdCBiZSBhbGxvY2F0ZWQuDQorICovDQoraW50IG10
cmVlX2luc2VydF9yYW5nZShzdHJ1Y3QgbWFwbGVfdHJlZSAqbXQsIHVuc2lnbmVkIGxvbmcgZmly
c3QsDQorCQl1bnNpZ25lZCBsb25nIGxhc3QsIHZvaWQgKmVudHJ5LCBnZnBfdCBnZnApDQorew0K
KwlNQV9TVEFURShtcywgbXQsIGZpcnN0LCBsYXN0KTsNCisNCisJaWYgKFdBUk5fT05fT05DRSh4
YV9pc19hZHZhbmNlZChlbnRyeSkpKQ0KKwkJcmV0dXJuIC1FSU5WQUw7DQorDQorCWlmIChmaXJz
dCA+IGxhc3QpDQorCQlyZXR1cm4gLUVJTlZBTDsNCisNCisJbXRyZWVfbG9jayhtdCk7DQorcmV0
cnk6DQorCW1hc19pbnNlcnQoJm1zLCBlbnRyeSk7DQorCWlmIChtYXNfbm9tZW0oJm1zLCBnZnAp
KQ0KKwkJZ290byByZXRyeTsNCisNCisJbXRyZWVfdW5sb2NrKG10KTsNCisJaWYgKG1hc19pc19l
cnIoJm1zKSkNCisJCXJldHVybiB4YV9lcnIobXMubm9kZSk7DQorDQorCXJldHVybiAwOw0KK30N
CitFWFBPUlRfU1lNQk9MKG10cmVlX2luc2VydF9yYW5nZSk7DQorDQorLyoqDQorICogbXRyZWVf
aW5zZXJ0KCkgLSBJbnNlcnQgYW4gZW50cnkgYXQgYSBnaXZlIGluZGV4IGlmIHRoZXJlIGlzIG5v
IHZhbHVlLg0KKyAqIEBtdDogVGhlIG1hcGxlIHRyZWUNCisgKiBAaW5kZXggOiBUaGUgaW5kZXgg
dG8gc3RvcmUgdGhlIHZhbHVlDQorICogQGVudHJ5OiBUaGUgZW50cnkgdG8gc3RvcmUNCisgKiBA
Z2ZwOiBUaGUgRkdQX0ZMQUdTIHRvIHVzZSBmb3IgYWxsb2NhdGlvbnMuDQorICoNCisgKiBSZXR1
cm46IDAgb24gc3VjY2VzcywgLUVFWElTVFMgaWYgdGhlIHJhbmdlIGlzIG9jY3VwaWVkLCAtRUlO
VkFMIG9uIGludmFsaWQNCisgKiByZXF1ZXN0LCAtRU5PTUVNIGlmIG1lbW9yeSBjb3VsZCBub3Qg
YmUgYWxsb2NhdGVkLg0KKyAqLw0KK2ludCBtdHJlZV9pbnNlcnQoc3RydWN0IG1hcGxlX3RyZWUg
Km10LCB1bnNpZ25lZCBsb25nIGluZGV4LCB2b2lkICplbnRyeSwNCisJCSBnZnBfdCBnZnApDQor
ew0KKwlyZXR1cm4gbXRyZWVfaW5zZXJ0X3JhbmdlKG10LCBpbmRleCwgaW5kZXgsIGVudHJ5LCBn
ZnApOw0KK30NCitFWFBPUlRfU1lNQk9MKG10cmVlX2luc2VydCk7DQorDQoraW50IG10cmVlX2Fs
bG9jX3JhbmdlKHN0cnVjdCBtYXBsZV90cmVlICptdCwgdW5zaWduZWQgbG9uZyAqc3RhcnRwLA0K
KwkJdm9pZCAqZW50cnksIHVuc2lnbmVkIGxvbmcgc2l6ZSwgdW5zaWduZWQgbG9uZyBtaW4sDQor
CQl1bnNpZ25lZCBsb25nIG1heCwgZ2ZwX3QgZ2ZwKQ0KK3sNCisJaW50IHJldCA9IDA7DQorDQor
CU1BX1NUQVRFKG1hcywgbXQsIG1pbiwgbWF4IC0gc2l6ZSk7DQorCWlmICghbXRfaXNfYWxsb2Mo
bXQpKQ0KKwkJcmV0dXJuIC1FSU5WQUw7DQorDQorCWlmIChXQVJOX09OX09OQ0UobXRfaXNfcmVz
ZXJ2ZWQoZW50cnkpKSkNCisJCXJldHVybiAtRUlOVkFMOw0KKw0KKwlpZiAobWluID4gbWF4KQ0K
KwkJcmV0dXJuIC1FSU5WQUw7DQorDQorCWlmIChtYXggPCBzaXplKQ0KKwkJcmV0dXJuIC1FSU5W
QUw7DQorDQorCWlmICghc2l6ZSkNCisJCXJldHVybiAtRUlOVkFMOw0KKw0KKwltdHJlZV9sb2Nr
KG10KTsNCityZXRyeToNCisJbWFzLm9mZnNldCA9IDA7DQorCW1hcy5pbmRleCA9IG1pbjsNCisJ
bWFzLmxhc3QgPSBtYXggLSBzaXplOw0KKwlyZXQgPSBtYXNfYWxsb2MoJm1hcywgZW50cnksIHNp
emUsIHN0YXJ0cCk7DQorCWlmIChtYXNfbm9tZW0oJm1hcywgZ2ZwKSkNCisJCWdvdG8gcmV0cnk7
DQorDQorCW10cmVlX3VubG9jayhtdCk7DQorCXJldHVybiByZXQ7DQorfQ0KKw0KK2ludCBtdHJl
ZV9hbGxvY19ycmFuZ2Uoc3RydWN0IG1hcGxlX3RyZWUgKm10LCB1bnNpZ25lZCBsb25nICpzdGFy
dHAsDQorCQl2b2lkICplbnRyeSwgdW5zaWduZWQgbG9uZyBzaXplLCB1bnNpZ25lZCBsb25nIG1p
biwNCisJCXVuc2lnbmVkIGxvbmcgbWF4LCBnZnBfdCBnZnApDQorew0KKwlpbnQgcmV0ID0gMDsN
CisNCisJTUFfU1RBVEUobWFzLCBtdCwgbWluLCBtYXggLSBzaXplKTsNCisJaWYgKCFtdF9pc19h
bGxvYyhtdCkpDQorCQlyZXR1cm4gLUVJTlZBTDsNCisNCisJaWYgKFdBUk5fT05fT05DRShtdF9p
c19yZXNlcnZlZChlbnRyeSkpKQ0KKwkJcmV0dXJuIC1FSU5WQUw7DQorDQorCWlmIChtaW4gPj0g
bWF4KQ0KKwkJcmV0dXJuIC1FSU5WQUw7DQorDQorCWlmIChtYXggPCBzaXplIC0gMSkNCisJCXJl
dHVybiAtRUlOVkFMOw0KKw0KKwlpZiAoIXNpemUpDQorCQlyZXR1cm4gLUVJTlZBTDsNCisNCisJ
bXRyZWVfbG9jayhtdCk7DQorcmV0cnk6DQorCXJldCA9IG1hc19yZXZfYWxsb2MoJm1hcywgbWlu
LCBtYXgsIGVudHJ5LCBzaXplLCBzdGFydHApOw0KKwlpZiAobWFzX25vbWVtKCZtYXMsIGdmcCkp
DQorCQlnb3RvIHJldHJ5Ow0KKw0KKwltdHJlZV91bmxvY2sobXQpOw0KKwlyZXR1cm4gcmV0Ow0K
K30NCisNCisvKioNCisgKiBtdHJlZV9lcmFzZSgpIC0gRmluZCBhbiBpbmRleCBhbmQgZXJhc2Ug
dGhlIGVudGlyZSByYW5nZS4NCisgKiBAbXQ6IFRoZSBtYXBsZSB0cmVlDQorICogQGluZGV4OiBU
aGUgaW5kZXggdG8gZXJhc2UNCisgKg0KKyAqIEVyYXNpbmcgaXMgdGhlIHNhbWUgYXMgYSB3YWxr
IHRvIGFuIGVudHJ5IHRoZW4gYSBzdG9yZSBvZiBhIE5VTEwgdG8gdGhhdA0KKyAqIEVOVElSRSBy
YW5nZS4gIEluIGZhY3QsIGl0IGlzIGltcGxlbWVudGVkIGFzIHN1Y2ggdXNpbmcgdGhlIGFkdmFu
Y2VkIEFQSS4NCisgKg0KKyAqIFJldHVybjogVGhlIGVudHJ5IHN0b3JlZCBhdCB0aGUgQGluZGV4
IG9yICVOVUxMDQorICovDQordm9pZCAqbXRyZWVfZXJhc2Uoc3RydWN0IG1hcGxlX3RyZWUgKm10
LCB1bnNpZ25lZCBsb25nIGluZGV4KQ0KK3sNCisJdm9pZCAqZW50cnkgPSBOVUxMOw0KKw0KKwlN
QV9TVEFURShtYXMsIG10LCBpbmRleCwgaW5kZXgpOw0KKwl0cmFjZV9tYV9vcChfX2Z1bmNfXywg
Jm1hcyk7DQorDQorCW10cmVlX2xvY2sobXQpOw0KKwllbnRyeSA9IG1hc19lcmFzZSgmbWFzKTsN
CisJbXRyZWVfdW5sb2NrKG10KTsNCisNCisJcmV0dXJuIGVudHJ5Ow0KK30NCitFWFBPUlRfU1lN
Qk9MKG10cmVlX2VyYXNlKTsNCisNCisvKioNCisgKiBfX210X2Rlc3Ryb3koKSAtIFdhbGsgYW5k
IGZyZWUgYWxsIG5vZGVzIG9mIGEgbG9ja2VkIG1hcGxlIHRyZWUuDQorICogQG10OiBUaGUgbWFw
bGUgdHJlZQ0KKyAqDQorICogTm90ZTogRG9lcyBub3QgaGFuZGxlIGxvY2tpbmcuDQorICovDQor
dm9pZCBfX210X2Rlc3Ryb3koc3RydWN0IG1hcGxlX3RyZWUgKm10KQ0KK3sNCisJdm9pZCAqcm9v
dCA9IG10X3Jvb3RfbG9ja2VkKG10KTsNCisNCisJcmN1X2Fzc2lnbl9wb2ludGVyKG10LT5tYV9y
b290LCBOVUxMKTsNCisJaWYgKHhhX2lzX25vZGUocm9vdCkpDQorCQltdGVfZGVzdHJveV93YWxr
KHJvb3QsIG10KTsNCisNCisJbXQtPm1hX2ZsYWdzID0gMDsNCit9DQorRVhQT1JUX1NZTUJPTF9H
UEwoX19tdF9kZXN0cm95KTsNCisNCisvKioNCisgKiBtdHJlZV9kZXN0cm95KCkgLSBEZXN0cm95
IGEgbWFwbGUgdHJlZQ0KKyAqIEBtdDogVGhlIG1hcGxlIHRyZWUNCisgKg0KKyAqIEZyZWVzIGFs
bCByZXNvdXJjZXMgdXNlZCBieSB0aGUgdHJlZS4gIEhhbmRsZXMgbG9ja2luZy4NCisgKi8NCit2
b2lkIG10cmVlX2Rlc3Ryb3koc3RydWN0IG1hcGxlX3RyZWUgKm10KQ0KK3sNCisJbXRyZWVfbG9j
ayhtdCk7DQorCV9fbXRfZGVzdHJveShtdCk7DQorCW10cmVlX3VubG9jayhtdCk7DQorfQ0KK0VY
UE9SVF9TWU1CT0wobXRyZWVfZGVzdHJveSk7DQorDQorLyoqDQorICogbXRfZmluZCgpIC0gU2Vh
cmNoIGZyb20gdGhlIHN0YXJ0IHVwIHVudGlsIGFuIGVudHJ5IGlzIGZvdW5kLg0KKyAqIEBtdDog
VGhlIG1hcGxlIHRyZWUNCisgKiBAaW5kZXg6IFBvaW50ZXIgd2hpY2ggY29udGFpbnMgdGhlIHN0
YXJ0IGxvY2F0aW9uIG9mIHRoZSBzZWFyY2gNCisgKiBAbWF4OiBUaGUgbWF4aW11bSB2YWx1ZSB0
byBjaGVjaw0KKyAqDQorICogSGFuZGxlcyBsb2NraW5nLiAgQGluZGV4IHdpbGwgYmUgaW5jcmVt
ZW50ZWQgdG8gb25lIGJleW9uZCB0aGUgcmFuZ2UuDQorICoNCisgKiBSZXR1cm46IFRoZSBlbnRy
eSBhdCBvciBhZnRlciB0aGUgQGluZGV4IG9yICVOVUxMDQorICovDQordm9pZCAqbXRfZmluZChz
dHJ1Y3QgbWFwbGVfdHJlZSAqbXQsIHVuc2lnbmVkIGxvbmcgKmluZGV4LCB1bnNpZ25lZCBsb25n
IG1heCkNCit7DQorCU1BX1NUQVRFKG1hcywgbXQsICppbmRleCwgKmluZGV4KTsNCisJdm9pZCAq
ZW50cnk7DQorI2lmZGVmIENPTkZJR19ERUJVR19NQVBMRV9UUkVFDQorCXVuc2lnbmVkIGxvbmcg
Y29weSA9ICppbmRleDsNCisjZW5kaWYNCisNCisJdHJhY2VfbWFfcmVhZChfX2Z1bmNfXywgJm1h
cyk7DQorDQorCWlmICgoKmluZGV4KSA+IG1heCkNCisJCXJldHVybiBOVUxMOw0KKw0KKwlyY3Vf
cmVhZF9sb2NrKCk7DQorcmV0cnk6DQorCWVudHJ5ID0gbWFzX3N0YXRlX3dhbGsoJm1hcyk7DQor
CWlmIChtYXNfaXNfc3RhcnQoJm1hcykpDQorCQlnb3RvIHJldHJ5Ow0KKw0KKwlpZiAodW5saWtl
bHkoeGFfaXNfemVybyhlbnRyeSkpKQ0KKwkJZW50cnkgPSBOVUxMOw0KKw0KKwlpZiAoZW50cnkp
DQorCQlnb3RvIHVubG9jazsNCisNCisJd2hpbGUgKG1hc19zZWFyY2hhYmxlKCZtYXMpICYmICht
YXMuaW5kZXggPCBtYXgpKSB7DQorCQllbnRyeSA9IG1hc19uZXh0X2VudHJ5KCZtYXMsIG1heCk7
DQorCQlpZiAobGlrZWx5KGVudHJ5ICYmICF4YV9pc196ZXJvKGVudHJ5KSkpDQorCQkJYnJlYWs7
DQorCX0NCisNCisJaWYgKHVubGlrZWx5KHhhX2lzX3plcm8oZW50cnkpKSkNCisJCWVudHJ5ID0g
TlVMTDsNCit1bmxvY2s6DQorCXJjdV9yZWFkX3VubG9jaygpOw0KKwlpZiAobGlrZWx5KGVudHJ5
KSkgew0KKwkJKmluZGV4ID0gbWFzLmxhc3QgKyAxOw0KKyNpZmRlZiBDT05GSUdfREVCVUdfTUFQ
TEVfVFJFRQ0KKwkJaWYgKCgqaW5kZXgpICYmICgqaW5kZXgpIDw9IGNvcHkpDQorCQkJcHJpbnRr
KCJpbmRleCBub3QgaW5jcmVhc2VkISAlbHggPD0gJWx4XG4iLA0KKwkJCSAgICAgICAqaW5kZXgs
IGNvcHkpOw0KKwkJTVRfQlVHX09OKG10LCAoKmluZGV4KSAmJiAoKCppbmRleCkgPD0gY29weSkp
Ow0KKyNlbmRpZg0KKwl9DQorDQorCXJldHVybiBlbnRyeTsNCit9DQorRVhQT1JUX1NZTUJPTCht
dF9maW5kKTsNCisNCisvKioNCisgKiBtdF9maW5kX2FmdGVyKCkgLSBTZWFyY2ggZnJvbSB0aGUg
c3RhcnQgdXAgdW50aWwgYW4gZW50cnkgaXMgZm91bmQuDQorICogQG10OiBUaGUgbWFwbGUgdHJl
ZQ0KKyAqIEBpbmRleDogUG9pbnRlciB3aGljaCBjb250YWlucyB0aGUgc3RhcnQgbG9jYXRpb24g
b2YgdGhlIHNlYXJjaA0KKyAqIEBtYXg6IFRoZSBtYXhpbXVtIHZhbHVlIHRvIGNoZWNrDQorICoN
CisgKiBIYW5kbGVzIGxvY2tpbmcsIGRldGVjdHMgd3JhcHBpbmcgb24gaW5kZXggPT0gMA0KKyAq
DQorICogUmV0dXJuOiBUaGUgZW50cnkgYXQgb3IgYWZ0ZXIgdGhlIEBpbmRleCBvciAlTlVMTA0K
KyAqLw0KK3ZvaWQgKm10X2ZpbmRfYWZ0ZXIoc3RydWN0IG1hcGxlX3RyZWUgKm10LCB1bnNpZ25l
ZCBsb25nICppbmRleCwNCisJCSAgICB1bnNpZ25lZCBsb25nIG1heCkNCit7DQorCWlmICghKCpp
bmRleCkpDQorCQlyZXR1cm4gTlVMTDsNCisNCisJcmV0dXJuIG10X2ZpbmQobXQsIGluZGV4LCBt
YXgpOw0KK30NCitFWFBPUlRfU1lNQk9MKG10X2ZpbmRfYWZ0ZXIpOw0KKw0KKyNpZmRlZiBDT05G
SUdfREVCVUdfTUFQTEVfVFJFRQ0KK2F0b21pY190IG1hcGxlX3RyZWVfdGVzdHNfcnVuOw0KK0VY
UE9SVF9TWU1CT0xfR1BMKG1hcGxlX3RyZWVfdGVzdHNfcnVuKTsNCithdG9taWNfdCBtYXBsZV90
cmVlX3Rlc3RzX3Bhc3NlZDsNCitFWFBPUlRfU1lNQk9MX0dQTChtYXBsZV90cmVlX3Rlc3RzX3Bh
c3NlZCk7DQorDQorI2lmbmRlZiBfX0tFUk5FTF9fDQorZXh0ZXJuIHZvaWQga21lbV9jYWNoZV9z
ZXRfbm9uX2tlcm5lbChzdHJ1Y3Qga21lbV9jYWNoZSAqLCB1bnNpZ25lZCBpbnQpOw0KK3ZvaWQg
bXRfc2V0X25vbl9rZXJuZWwodW5zaWduZWQgaW50IHZhbCkNCit7DQorCWttZW1fY2FjaGVfc2V0
X25vbl9rZXJuZWwobWFwbGVfbm9kZV9jYWNoZSwgdmFsKTsNCit9DQorDQorZXh0ZXJuIHVuc2ln
bmVkIGxvbmcga21lbV9jYWNoZV9nZXRfYWxsb2Moc3RydWN0IGttZW1fY2FjaGUgKik7DQordW5z
aWduZWQgbG9uZyBtdF9nZXRfYWxsb2Nfc2l6ZSh2b2lkKQ0KK3sNCisJcmV0dXJuIGttZW1fY2Fj
aGVfZ2V0X2FsbG9jKG1hcGxlX25vZGVfY2FjaGUpOw0KK30NCisNCitleHRlcm4gdm9pZCBrbWVt
X2NhY2hlX3plcm9fbnJfdGFsbG9jYXRlZChzdHJ1Y3Qga21lbV9jYWNoZSAqKTsNCit2b2lkIG10
X3plcm9fbnJfdGFsbG9jYXRlZCgpDQorew0KKwlrbWVtX2NhY2hlX3plcm9fbnJfdGFsbG9jYXRl
ZChtYXBsZV9ub2RlX2NhY2hlKTsNCit9DQorDQorZXh0ZXJuIHVuc2lnbmVkIGludCBrbWVtX2Nh
Y2hlX25yX3RhbGxvY2F0ZWQoc3RydWN0IGttZW1fY2FjaGUgKik7DQordW5zaWduZWQgaW50IG10
X25yX3RhbGxvY2F0ZWQoKQ0KK3sNCisJcmV0dXJuIGttZW1fY2FjaGVfbnJfdGFsbG9jYXRlZCht
YXBsZV9ub2RlX2NhY2hlKTsNCit9DQorDQorZXh0ZXJuIHVuc2lnbmVkIGludCBrbWVtX2NhY2hl
X25yX2FsbG9jYXRlZChzdHJ1Y3Qga21lbV9jYWNoZSAqKTsNCit1bnNpZ25lZCBpbnQgbXRfbnJf
YWxsb2NhdGVkKCkNCit7DQorCXJldHVybiBrbWVtX2NhY2hlX25yX2FsbG9jYXRlZChtYXBsZV9u
b2RlX2NhY2hlKTsNCit9DQorDQorI2RlZmluZSBNQV9QVFIgIiVwIg0KKyNlbHNlIC8qICBfX0tF
Uk5FTF9fIGlzIGRlZmluZWQgKi8NCisjZGVmaW5lIE1BX1BUUiAiJXB4Ig0KKyNlbmRpZg0KKw0K
KyNpZmRlZiBDT05GSUdfTUFQTEVfU0VBUkNIDQorLyogbWFzIGxpbWl0cyBub3QgYWRqdXN0ZWQg
Ki8NCitzdGF0aWMgdm9pZCBtYXNfZGZzX3ByZW9yZGVyKHN0cnVjdCBtYV9zdGF0ZSAqbWFzKQ0K
K3sNCisNCisJc3RydWN0IG1hcGxlX2Vub2RlICpwcmV2Ow0KKwl1bnNpZ25lZCBjaGFyIGVuZCwg
c2xvdCA9IDA7DQorDQorCWlmIChtYXNfaXNfc3RhcnQobWFzKSkgew0KKwkJbWFzX3N0YXJ0KG1h
cyk7DQorCQlyZXR1cm47DQorCX0NCisNCisJaWYgKG10ZV9pc19sZWFmKG1hcy0+bm9kZSkgJiYg
bXRlX2lzX3Jvb3QobWFzLT5ub2RlKSkNCisJCWdvdG8gZG9uZTsNCisNCit3YWxrX3VwOg0KKwll
bmQgPSBtYXNfZGF0YV9lbmQobWFzKTsNCisJaWYgKG10ZV9pc19sZWFmKG1hcy0+bm9kZSkgfHwN
CisJICAgIChzbG90ID4gZW5kKSkgew0KKwkJaWYgKG10ZV9pc19yb290KG1hcy0+bm9kZSkpDQor
CQkJZ290byBkb25lOw0KKw0KKwkJc2xvdCA9IG10ZV9wYXJlbnRfc2xvdChtYXMtPm5vZGUpICsg
MTsNCisJCW1hc19hc2NlbmQobWFzKTsNCisJCWdvdG8gd2Fsa191cDsNCisJfQ0KKw0KKwlwcmV2
ID0gbWFzLT5ub2RlOw0KKwltYXMtPm5vZGUgPSBtYXNfZ2V0X3Nsb3QobWFzLCBzbG90KTsNCisJ
aWYgKCFtYXMtPm5vZGUgfHwgc2xvdCA+IGVuZCkgew0KKwkJaWYgKG10ZV9pc19yb290KHByZXYp
KQ0KKwkJCWdvdG8gZG9uZTsNCisNCisJCW1hcy0+bm9kZSA9IHByZXY7DQorCQlzbG90ID0gbXRl
X3BhcmVudF9zbG90KG1hcy0+bm9kZSkgKyAxOw0KKwkJbWFzX2FzY2VuZChtYXMpOw0KKwkJZ290
byB3YWxrX3VwOw0KKwl9DQorDQorCXJldHVybjsNCitkb25lOg0KKwltYXMtPm5vZGUgPSBNQVNf
Tk9ORTsNCit9DQorI2lmZGVmIENPTkZJR19NQVBMRV9FWFRSQVMNCitzdGF0aWMgdm9pZCBtYXNf
YmZzX3ByZW9yZGVyKHN0cnVjdCBtYV9zdGF0ZSAqbWFzKQ0KK3sNCisNCisJaWYgKG1hc19pc19z
dGFydChtYXMpKSB7DQorCQltYXNfc3RhcnQobWFzKTsNCisJCXJldHVybjsNCisJfQ0KKw0KKwlp
ZiAobXRlX2lzX2xlYWYobWFzLT5ub2RlKSAmJiBtdGVfaXNfcm9vdChtYXMtPm5vZGUpKSB7DQor
CQltYXMtPm5vZGUgPSBNQVNfTk9ORTsNCisJCXJldHVybjsNCisJfQ0KKw0KK30NCisjZW5kaWYg
LyogQ09ORklHX01BUExFX0VYVFJBUyAqLw0KKw0KKyNlbmRpZg0KKw0KKy8qIERlcHRoIGZpcnN0
IHNlYXJjaCwgcG9zdC1vcmRlciAqLw0KK3N0YXRpYyB2b2lkIG1hc19kZnNfcG9zdG9yZGVyKHN0
cnVjdCBtYV9zdGF0ZSAqbWFzLCB1bnNpZ25lZCBsb25nIG1heCkNCit7DQorDQorCXN0cnVjdCBt
YXBsZV9lbm9kZSAqcCA9IE1BU19OT05FLCAqbW4gPSBtYXMtPm5vZGU7DQorCXVuc2lnbmVkIGxv
bmcgcF9taW4sIHBfbWF4Ow0KKw0KKwltYXNfbmV4dF9ub2RlKG1hcywgbWFzX21uKG1hcyksIG1h
eCk7DQorCWlmICghbWFzX2lzX25vbmUobWFzKSkNCisJCXJldHVybjsNCisNCisJaWYgKG10ZV9p
c19yb290KG1uKSkNCisJCXJldHVybjsNCisNCisJbWFzLT5ub2RlID0gbW47DQorCW1hc19hc2Nl
bmQobWFzKTsNCisJd2hpbGUgKG1hcy0+bm9kZSAhPSBNQVNfTk9ORSkgew0KKwkJcCA9IG1hcy0+
bm9kZTsNCisJCXBfbWluID0gbWFzLT5taW47DQorCQlwX21heCA9IG1hcy0+bWF4Ow0KKwkJbWFz
X3ByZXZfbm9kZShtYXMsIDApOw0KKwl9DQorDQorCWlmIChwID09IE1BU19OT05FKQ0KKwkJcmV0
dXJuOw0KKw0KKwltYXMtPm5vZGUgPSBwOw0KKwltYXMtPm1heCA9IHBfbWF4Ow0KKwltYXMtPm1p
biA9IHBfbWluOw0KK30NCisNCisvKiBUcmVlIHZhbGlkYXRpb25zICovDQordm9pZCBtdF9kdW1w
X25vZGUoY29uc3Qgc3RydWN0IG1hcGxlX3RyZWUgKm10LCB2b2lkICplbnRyeSwgdW5zaWduZWQg
bG9uZyBtaW4sDQorCQl1bnNpZ25lZCBsb25nIG1heCwgdW5zaWduZWQgaW50IGRlcHRoKTsNCit2
b2lkIG10X2R1bXBfcmFuZ2UodW5zaWduZWQgbG9uZyBtaW4sIHVuc2lnbmVkIGxvbmcgbWF4LCB1
bnNpZ25lZCBpbnQgZGVwdGgpDQorew0KKwlzdGF0aWMgY29uc3QgY2hhciBzcGFjZXNbXSA9ICIg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICI7DQorDQorCWlmIChtaW4gPT0gbWF4KQ0K
KwkJcHJfaW5mbygiJS4qcyVsdTogIiwgZGVwdGggKiAyLCBzcGFjZXMsIG1pbik7DQorCWVsc2UN
CisJCXByX2luZm8oIiUuKnMlbHUtJWx1OiAiLCBkZXB0aCAqIDIsIHNwYWNlcywgbWluLCBtYXgp
Ow0KK30NCisNCit2b2lkIG10X2R1bXBfZW50cnkodm9pZCAqZW50cnksIHVuc2lnbmVkIGxvbmcg
bWluLCB1bnNpZ25lZCBsb25nIG1heCwNCisJCXVuc2lnbmVkIGludCBkZXB0aCkNCit7DQorCW10
X2R1bXBfcmFuZ2UobWluLCBtYXgsIGRlcHRoKTsNCisNCisJaWYgKHhhX2lzX3ZhbHVlKGVudHJ5
KSkNCisJCXByX2NvbnQoInZhbHVlICVsZCAoMHglbHgpIFsiTUFfUFRSIl1cbiIsIHhhX3RvX3Zh
bHVlKGVudHJ5KSwNCisJCQkJeGFfdG9fdmFsdWUoZW50cnkpLCBlbnRyeSk7DQorCWVsc2UgaWYg
KHhhX2lzX3plcm8oZW50cnkpKQ0KKwkJcHJfY29udCgiemVybyAoJWxkKVxuIiwgeGFfdG9faW50
ZXJuYWwoZW50cnkpKTsNCisJZWxzZSBpZiAobXRfaXNfcmVzZXJ2ZWQoZW50cnkpKQ0KKwkJcHJf
Y29udCgiVU5LTk9XTiBFTlRSWSAoIk1BX1BUUiIpXG4iLCBlbnRyeSk7DQorCWVsc2UNCisJCXBy
X2NvbnQoIiJNQV9QVFIiXG4iLCBlbnRyeSk7DQorfQ0KKw0KK3ZvaWQgbXRfZHVtcF9yYW5nZTY0
KGNvbnN0IHN0cnVjdCBtYXBsZV90cmVlICptdCwgdm9pZCAqZW50cnksDQorCQl1bnNpZ25lZCBs
b25nIG1pbiwgdW5zaWduZWQgbG9uZyBtYXgsIHVuc2lnbmVkIGludCBkZXB0aCkNCit7DQorCXN0
cnVjdCBtYXBsZV9yYW5nZV82NCAqbm9kZSA9ICZtdGVfdG9fbm9kZShlbnRyeSktPm1yNjQ7DQor
CWJvb2wgbGVhZiA9IG10ZV9pc19sZWFmKGVudHJ5KTsNCisJdW5zaWduZWQgbG9uZyBmaXJzdCA9
IG1pbjsNCisJaW50IGk7DQorDQorCXByX2NvbnQoIiBjb250ZW50czogIik7DQorCWZvciAoaSA9
IDA7IGkgPCBNQVBMRV9SQU5HRTY0X1NMT1RTIC0gMTsgaSsrKQ0KKwkJcHJfY29udCgiIk1BX1BU
UiIgJWx1ICIsIG5vZGUtPnNsb3RbaV0sIG5vZGUtPnBpdm90W2ldKTsNCisJcHJfY29udCgiIk1B
X1BUUiJcbiIsIG5vZGUtPnNsb3RbaV0pOw0KKwlmb3IgKGkgPSAwOyBpIDwgTUFQTEVfUkFOR0U2
NF9TTE9UUzsgaSsrKSB7DQorCQl1bnNpZ25lZCBsb25nIGxhc3QgPSBtYXg7DQorDQorCQlpZiAo
aSA8IChNQVBMRV9SQU5HRTY0X1NMT1RTIC0gMSkpDQorCQkJbGFzdCA9IG5vZGUtPnBpdm90W2ld
Ow0KKwkJZWxzZSBpZiAoIW5vZGUtPnNsb3RbaV0gJiYgbWF4ICE9IG10X21heFttdGVfbm9kZV90
eXBlKGVudHJ5KV0pDQorCQkJYnJlYWs7DQorCQlpZiAobGFzdCA9PSAwICYmIGkgPiAwKQ0KKwkJ
CWJyZWFrOw0KKwkJaWYgKGxlYWYpDQorCQkJbXRfZHVtcF9lbnRyeShtdF9zbG90KG10LCBub2Rl
LT5zbG90LCBpKSwNCisJCQkJCWZpcnN0LCBsYXN0LCBkZXB0aCArIDEpOw0KKwkJZWxzZSBpZiAo
bm9kZS0+c2xvdFtpXSkNCisJCQltdF9kdW1wX25vZGUobXQsIG10X3Nsb3QobXQsIG5vZGUtPnNs
b3QsIGkpLA0KKwkJCQkJZmlyc3QsIGxhc3QsIGRlcHRoICsgMSk7DQorDQorCQlpZiAobGFzdCA9
PSBtYXgpDQorCQkJYnJlYWs7DQorCQlpZiAobGFzdCA+IG1heCkgew0KKwkJCXByX2Vycigibm9k
ZSAiTUFfUFRSIiBsYXN0ICglbHUpID4gbWF4ICglbHUpIGF0IHBpdm90ICVkIVxuIiwNCisJCQkJ
CW5vZGUsIGxhc3QsIG1heCwgaSk7DQorCQkJYnJlYWs7DQorCQl9DQorCQlmaXJzdCA9IGxhc3Qg
KyAxOw0KKwl9DQorfQ0KKw0KK3ZvaWQgbXRfZHVtcF9hcmFuZ2U2NChjb25zdCBzdHJ1Y3QgbWFw
bGVfdHJlZSAqbXQsIHZvaWQgKmVudHJ5LA0KKwkJdW5zaWduZWQgbG9uZyBtaW4sIHVuc2lnbmVk
IGxvbmcgbWF4LCB1bnNpZ25lZCBpbnQgZGVwdGgpDQorew0KKwlzdHJ1Y3QgbWFwbGVfYXJhbmdl
XzY0ICpub2RlID0gJm10ZV90b19ub2RlKGVudHJ5KS0+bWE2NDsNCisJYm9vbCBsZWFmID0gbXRl
X2lzX2xlYWYoZW50cnkpOw0KKwl1bnNpZ25lZCBsb25nIGZpcnN0ID0gbWluOw0KKwlpbnQgaTsN
CisNCisJcHJfY29udCgiIGNvbnRlbnRzOiAiKTsNCisJZm9yIChpID0gMDsgaSA8IE1BUExFX0FS
QU5HRTY0X1NMT1RTOyBpKyspDQorCQlwcl9jb250KCIlbHUgIiwgbm9kZS0+Z2FwW2ldKTsNCisJ
cHJfY29udCgifCAlMDJYICUwMlh8ICIsIG5vZGUtPm1ldGEuZW5kLCBub2RlLT5tZXRhLmdhcCk7
DQorCWZvciAoaSA9IDA7IGkgPCBNQVBMRV9BUkFOR0U2NF9TTE9UUyAtIDE7IGkrKykNCisJCXBy
X2NvbnQoTUFfUFRSIiAlbHUgIiwgbm9kZS0+c2xvdFtpXSwgbm9kZS0+cGl2b3RbaV0pOw0KKwlw
cl9jb250KE1BX1BUUiJcbiIsIG5vZGUtPnNsb3RbaV0pOw0KKwlmb3IgKGkgPSAwOyBpIDwgTUFQ
TEVfQVJBTkdFNjRfU0xPVFM7IGkrKykgew0KKwkJdW5zaWduZWQgbG9uZyBsYXN0ID0gbWF4Ow0K
Kw0KKwkJaWYgKGkgPCAoTUFQTEVfQVJBTkdFNjRfU0xPVFMgLSAxKSkNCisJCQlsYXN0ID0gbm9k
ZS0+cGl2b3RbaV07DQorCQllbHNlIGlmICghbm9kZS0+c2xvdFtpXSkNCisJCQlicmVhazsNCisJ
CWlmIChsYXN0ID09IDAgJiYgaSA+IDApDQorCQkJYnJlYWs7DQorCQlpZiAobGVhZikNCisJCQlt
dF9kdW1wX2VudHJ5KG10X3Nsb3QobXQsIG5vZGUtPnNsb3QsIGkpLA0KKwkJCQkJZmlyc3QsIGxh
c3QsIGRlcHRoICsgMSk7DQorCQllbHNlIGlmIChub2RlLT5zbG90W2ldKQ0KKwkJCW10X2R1bXBf
bm9kZShtdCwgbXRfc2xvdChtdCwgbm9kZS0+c2xvdCwgaSksDQorCQkJCQlmaXJzdCwgbGFzdCwg
ZGVwdGggKyAxKTsNCisNCisJCWlmIChsYXN0ID09IG1heCkNCisJCQlicmVhazsNCisJCWlmIChs
YXN0ID4gbWF4KSB7DQorCQkJcHJfZXJyKCJub2RlICJNQV9QVFIiIGxhc3QgKCVsdSkgPiBtYXgg
KCVsdSkgYXQgcGl2b3QgJWQhXG4iLA0KKwkJCQkJbm9kZSwgbGFzdCwgbWF4LCBpKTsNCisJCQli
cmVhazsNCisJCX0NCisJCWZpcnN0ID0gbGFzdCArIDE7DQorCX0NCit9DQorDQordm9pZCBtdF9k
dW1wX25vZGUoY29uc3Qgc3RydWN0IG1hcGxlX3RyZWUgKm10LCB2b2lkICplbnRyeSwgdW5zaWdu
ZWQgbG9uZyBtaW4sDQorCQl1bnNpZ25lZCBsb25nIG1heCwgdW5zaWduZWQgaW50IGRlcHRoKQ0K
K3sNCisJc3RydWN0IG1hcGxlX25vZGUgKm5vZGUgPSBtdGVfdG9fbm9kZShlbnRyeSk7DQorCXVu
c2lnbmVkIGludCB0eXBlID0gbXRlX25vZGVfdHlwZShlbnRyeSk7DQorCXVuc2lnbmVkIGludCBp
Ow0KKw0KKwltdF9kdW1wX3JhbmdlKG1pbiwgbWF4LCBkZXB0aCk7DQorDQorCXByX2NvbnQoIm5v
ZGUgIk1BX1BUUiIgZGVwdGggJWQgdHlwZSAlZCBwYXJlbnQgIk1BX1BUUiwgbm9kZSwgZGVwdGgs
IHR5cGUsDQorCQkJbm9kZSA/IG5vZGUtPnBhcmVudCA6IE5VTEwpOw0KKwlzd2l0Y2ggKHR5cGUp
IHsNCisJY2FzZSBtYXBsZV9kZW5zZToNCisJCXByX2NvbnQoIlxuIik7DQorCQlmb3IgKGkgPSAw
OyBpIDwgTUFQTEVfTk9ERV9TTE9UUzsgaSsrKSB7DQorCQkJaWYgKG1pbiArIGkgPiBtYXgpDQor
CQkJCXByX2NvbnQoIk9VVCBPRiBSQU5HRTogIik7DQorCQkJbXRfZHVtcF9lbnRyeShtdF9zbG90
KG10LCBub2RlLT5zbG90LCBpKSwNCisJCQkJCW1pbiArIGksIG1pbiArIGksIGRlcHRoKTsNCisJ
CX0NCisJCWJyZWFrOw0KKwljYXNlIG1hcGxlX2xlYWZfNjQ6DQorCWNhc2UgbWFwbGVfcmFuZ2Vf
NjQ6DQorCQltdF9kdW1wX3JhbmdlNjQobXQsIGVudHJ5LCBtaW4sIG1heCwgZGVwdGgpOw0KKwkJ
YnJlYWs7DQorCWNhc2UgbWFwbGVfYXJhbmdlXzY0Og0KKwkJbXRfZHVtcF9hcmFuZ2U2NChtdCwg
ZW50cnksIG1pbiwgbWF4LCBkZXB0aCk7DQorCQlicmVhazsNCisNCisJZGVmYXVsdDoNCisJCXBy
X2NvbnQoIiBVTktOT1dOIFRZUEVcbiIpOw0KKwl9DQorfQ0KKw0KK3ZvaWQgbXRfZHVtcChjb25z
dCBzdHJ1Y3QgbWFwbGVfdHJlZSAqbXQpDQorew0KKwl2b2lkICplbnRyeSA9IHJjdV9kZXJlZmVy
ZW5jZV9jaGVjayhtdC0+bWFfcm9vdCwgbXRfbG9ja2VkKG10KSk7DQorDQorCXByX2luZm8oIm1h
cGxlX3RyZWUoIk1BX1BUUiIpIGZsYWdzICVYLCBoZWlnaHQgJXUgcm9vdCAiTUFfUFRSIlxuIiwN
CisJCSBtdCwgbXQtPm1hX2ZsYWdzLCBtdF9oZWlnaHQobXQpLCBlbnRyeSk7DQorCWlmICgheGFf
aXNfbm9kZShlbnRyeSkpDQorCQltdF9kdW1wX2VudHJ5KGVudHJ5LCAwLCAwLCAwKTsNCisJZWxz
ZSBpZiAoZW50cnkpDQorCQltdF9kdW1wX25vZGUobXQsIGVudHJ5LCAwLCBtdF9tYXhbbXRlX25v
ZGVfdHlwZShlbnRyeSldLCAwKTsNCit9DQorDQorLyoNCisgKiBDYWxjdWxhdGUgdGhlIG1heGlt
dW0gZ2FwIGluIGEgbm9kZSBhbmQgY2hlY2sgaWYgdGhhdCdzIHdoYXQgaXMgcmVwb3J0ZWQgaW4N
CisgKiB0aGUgcGFyZW50ICh1bmxlc3Mgcm9vdCkuDQorICovDQordm9pZCBtYXNfdmFsaWRhdGVf
Z2FwcyhzdHJ1Y3QgbWFfc3RhdGUgKm1hcykNCit7DQorCXN0cnVjdCBtYXBsZV9lbm9kZSAqbXRl
ID0gbWFzLT5ub2RlOw0KKwlzdHJ1Y3QgbWFwbGVfbm9kZSAqcF9tbjsNCisJdW5zaWduZWQgbG9u
ZyBnYXAgPSAwLCBtYXhfZ2FwID0gMDsNCisJdW5zaWduZWQgbG9uZyBwX2VuZCwgcF9zdGFydCA9
IG1hcy0+bWluOw0KKwl1bnNpZ25lZCBjaGFyIHBfc2xvdDsNCisJdW5zaWduZWQgbG9uZyAqZ2Fw
cyA9IE5VTEw7DQorCXVuc2lnbmVkIGxvbmcgKnBpdm90cyA9IG1hX3Bpdm90cyhtdGVfdG9fbm9k
ZShtdGUpLCBtdGVfbm9kZV90eXBlKG10ZSkpOw0KKwlpbnQgaTsNCisNCisJaWYgKG1hX2lzX2Rl
bnNlKG10ZV9ub2RlX3R5cGUobXRlKSkpIHsNCisJCWZvciAoaSA9IDA7IGkgPCBtdF9zbG90X2Nv
dW50KG10ZSk7IGkrKykgew0KKwkJCWlmIChtYXNfZ2V0X3Nsb3QobWFzLCBpKSkgew0KKwkJCQlp
ZiAoZ2FwID4gbWF4X2dhcCkNCisJCQkJCW1heF9nYXAgPSBnYXA7DQorCQkJCWdhcCA9IDA7DQor
CQkJCWNvbnRpbnVlOw0KKwkJCX0NCisJCQlnYXArKzsNCisJCX0NCisJCWdvdG8gY291bnRlZDsN
CisJfQ0KKw0KKwlpZiAoIW10ZV9pc19sZWFmKG10ZSkpDQorCQlnYXBzID0gbWFfZ2FwcyhtdGVf
dG9fbm9kZShtdGUpLCBtdGVfbm9kZV90eXBlKG10ZSkpOw0KKw0KKwlmb3IgKGkgPSAwOyBpIDwg
bXRfc2xvdF9jb3VudChtdGUpOyBpKyspIHsNCisJCXBfZW5kID0gbWFzX2xvZ2ljYWxfcGl2b3Qo
bWFzLCBwaXZvdHMsIGksIG10ZV9ub2RlX3R5cGUobXRlKSk7DQorDQorCQlpZiAoIWdhcHMpIHsN
CisJCQlpZiAobWFzX2dldF9zbG90KG1hcywgaSkpIHsNCisJCQkJZ2FwID0gMDsNCisJCQkJZ290
byBub3RfZW1wdHk7DQorCQkJfQ0KKw0KKwkJCWdhcCArPSBwX2VuZCAtIHBfc3RhcnQgKyAxOw0K
KwkJfSBlbHNlIHsNCisJCQl2b2lkICplbnRyeSA9IG1hc19nZXRfc2xvdChtYXMsIGkpOw0KKw0K
KwkJCWdhcCA9IGdhcHNbaV07DQorCQkJaWYgKCFlbnRyeSkgew0KKwkJCQlpZiAoZ2FwICE9IHBf
ZW5kIC0gcF9zdGFydCArIDEpIHsNCisJCQkJCXByX2VycihNQV9QVFIiWyV1XSAtPiAiTUFfUFRS
IiAlbHUgIT0gJWx1IC0gJWx1ICsgMVxuIiwNCisJCQkJCQltYXNfbW4obWFzKSwgaSwNCisJCQkJ
CQltYXNfZ2V0X3Nsb3QobWFzLCBpKSwgZ2FwLA0KKwkJCQkJCXBfZW5kLCBwX3N0YXJ0KTsNCisJ
CQkJCW10X2R1bXAobWFzLT50cmVlKTsNCisNCisJCQkJCU1UX0JVR19PTihtYXMtPnRyZWUsDQor
CQkJCQkJZ2FwICE9IHBfZW5kIC0gcF9zdGFydCArIDEpOw0KKwkJCQl9DQorCQkJfSBlbHNlIHsN
CisJCQkJaWYgKGdhcCA+IHBfZW5kIC0gcF9zdGFydCArIDEpIHsNCisJCQkJCXByX2VycihNQV9Q
VFIiWyV1XSAlbHUgPj0gJWx1IC0gJWx1ICsgMSAoJWx1KVxuIiwNCisJCQkJCW1hc19tbihtYXMp
LCBpLCBnYXAsIHBfZW5kLCBwX3N0YXJ0LA0KKwkJCQkJcF9lbmQgLSBwX3N0YXJ0ICsgMSk7DQor
CQkJCQlNVF9CVUdfT04obWFzLT50cmVlLA0KKwkJCQkJCWdhcCA+IHBfZW5kIC0gcF9zdGFydCAr
IDEpOw0KKwkJCQl9DQorCQkJfQ0KKwkJfQ0KKw0KKwkJaWYgKGdhcCA+IG1heF9nYXApDQorCQkJ
bWF4X2dhcCA9IGdhcDsNCitub3RfZW1wdHk6DQorCQlwX3N0YXJ0ID0gcF9lbmQgKyAxOw0KKwkJ
aWYgKHBfZW5kID49IG1hcy0+bWF4KQ0KKwkJCWJyZWFrOw0KKwl9DQorDQorY291bnRlZDoNCisJ
aWYgKG10ZV9pc19yb290KG10ZSkpDQorCQlyZXR1cm47DQorDQorCXBfc2xvdCA9IG10ZV9wYXJl
bnRfc2xvdChtYXMtPm5vZGUpOw0KKwlwX21uID0gbXRlX3BhcmVudChtdGUpOw0KKwlNVF9CVUdf
T04obWFzLT50cmVlLCBtYXhfZ2FwID4gbWFzLT5tYXgpOw0KKwlpZiAobWFfZ2FwcyhwX21uLCBt
YXNfcGFyZW50X2VudW0obWFzLCBtdGUpKVtwX3Nsb3RdICE9IG1heF9nYXApIHsNCisJCXByX2Vy
cigiZ2FwICJNQV9QVFIiWyV1XSAhPSAlbHVcbiIsIHBfbW4sIHBfc2xvdCwgbWF4X2dhcCk7DQor
CQltdF9kdW1wKG1hcy0+dHJlZSk7DQorCX0NCisNCisJTVRfQlVHX09OKG1hcy0+dHJlZSwNCisJ
CSAgbWFfZ2FwcyhwX21uLCBtYXNfcGFyZW50X2VudW0obWFzLCBtdGUpKVtwX3Nsb3RdICE9IG1h
eF9nYXApOw0KK30NCisNCit2b2lkIG1hc192YWxpZGF0ZV9wYXJlbnRfc2xvdChzdHJ1Y3QgbWFf
c3RhdGUgKm1hcykNCit7DQorCXN0cnVjdCBtYXBsZV9ub2RlICpwYXJlbnQ7DQorCXN0cnVjdCBt
YXBsZV9lbm9kZSAqbm9kZTsNCisJZW51bSBtYXBsZV90eXBlIHBfdHlwZSA9IG1hc19wYXJlbnRf
ZW51bShtYXMsIG1hcy0+bm9kZSk7DQorCXVuc2lnbmVkIGNoYXIgcF9zbG90ID0gbXRlX3BhcmVu
dF9zbG90KG1hcy0+bm9kZSk7DQorCXZvaWQgX19yY3UgKipzbG90czsNCisJaW50IGk7DQorDQor
CWlmIChtdGVfaXNfcm9vdChtYXMtPm5vZGUpKQ0KKwkJcmV0dXJuOw0KKw0KKwlwYXJlbnQgPSBt
dGVfcGFyZW50KG1hcy0+bm9kZSk7DQorCXNsb3RzID0gbWFfc2xvdHMocGFyZW50LCBwX3R5cGUp
Ow0KKwlNVF9CVUdfT04obWFzLT50cmVlLCBtYXNfbW4obWFzKSA9PSBwYXJlbnQpOw0KKw0KKwkv
KiBDaGVjayBwcmV2L25leHQgcGFyZW50IHNsb3QgZm9yIGR1cGxpY2F0ZSBub2RlIGVudHJ5ICov
DQorDQorCWZvciAoaSA9IDA7IGkgPCBtdF9zbG90c1twX3R5cGVdOyBpKyspIHsNCisJCW5vZGUg
PSBtYXNfc2xvdChtYXMsIHNsb3RzLCBpKTsNCisJCWlmIChpID09IHBfc2xvdCkgew0KKwkJCWlm
IChub2RlICE9IG1hcy0+bm9kZSkNCisJCQkJcHJfZXJyKCJwYXJlbnQgJXBbJXVdIGRvZXMgbm90
IGhhdmUgJXBcbiIsDQorCQkJCQlwYXJlbnQsIGksIG1hc19tbihtYXMpKTsNCisJCQlNVF9CVUdf
T04obWFzLT50cmVlLCBub2RlICE9IG1hcy0+bm9kZSk7DQorCQl9IGVsc2UgaWYgKG5vZGUgPT0g
bWFzLT5ub2RlKSB7DQorCQkJcHJfZXJyKCJwYXJlbnQgY29udGFpbnMgaW52YWxpZCBjaGlsZCBh
dCAiTUFfUFRSIlsldV0gIg0KKwkJCQlNQV9QVFIiIHBfc2xvdCAldVxuIiwgcGFyZW50LCBpLCBt
YXNfbW4obWFzKSwgcF9zbG90KTsNCisJCQlNVF9CVUdfT04obWFzLT50cmVlLCBub2RlID09IG1h
cy0+bm9kZSk7DQorCQl9DQorCX0NCit9DQorDQordm9pZCBtYXNfdmFsaWRhdGVfY2hpbGRfc2xv
dChzdHJ1Y3QgbWFfc3RhdGUgKm1hcykNCit7DQorCWVudW0gbWFwbGVfdHlwZSB0eXBlID0gbXRl
X25vZGVfdHlwZShtYXMtPm5vZGUpOw0KKwl2b2lkIF9fcmN1ICoqc2xvdHMgPSBtYV9zbG90cyht
dGVfdG9fbm9kZShtYXMtPm5vZGUpLCB0eXBlKTsNCisJdW5zaWduZWQgbG9uZyAqcGl2b3RzID0g
bWFfcGl2b3RzKG10ZV90b19ub2RlKG1hcy0+bm9kZSksIHR5cGUpOw0KKwlzdHJ1Y3QgbWFwbGVf
ZW5vZGUgKmNoaWxkOw0KKwl1bnNpZ25lZCBjaGFyIGk7DQorDQorCWlmIChtdGVfaXNfbGVhZiht
YXMtPm5vZGUpKQ0KKwkJcmV0dXJuOw0KKw0KKwlmb3IgKGkgPSAwOyBpIDwgbXRfc2xvdHNbdHlw
ZV07IGkrKykgew0KKwkJY2hpbGQgPSBtYXNfc2xvdChtYXMsIHNsb3RzLCBpKTsNCisJCWlmICgh
cGl2b3RzW2ldIHx8IHBpdm90c1tpXSA9PSBtYXMtPm1heCkNCisJCQlicmVhazsNCisNCisJCWlm
ICghY2hpbGQpDQorCQkJYnJlYWs7DQorDQorCQlpZiAobXRlX3BhcmVudF9zbG90KGNoaWxkKSAh
PSBpKSB7DQorCQkJcHJfZXJyKCJjaGlsZCBoYXMgaW5jb3JyZWN0IHNsb3QgYXQgIk1BX1BUUiJb
JXVdICINCisJCQkJTUFfUFRSIiBpcyBzZXQgdG8gJXVcbiIsIG1hc19tbihtYXMpLA0KKwkJCQlp
LCBtdGVfdG9fbm9kZShjaGlsZCksIG10ZV9wYXJlbnRfc2xvdChjaGlsZCkpOw0KKwkJCU1UX0JV
R19PTihtYXMtPnRyZWUsIDEpOw0KKwkJfQ0KKw0KKwkJaWYgKG10ZV9wYXJlbnQoY2hpbGQpICE9
IG10ZV90b19ub2RlKG1hcy0+bm9kZSkpIHsNCisJCQlwcl9lcnIoImNoaWxkICJNQV9QVFIiIGhh
cyBwYXJlbnQgIk1BX1BUUiIgbm90ICJNQV9QVFIiXG4iLA0KKwkJCW10ZV90b19ub2RlKGNoaWxk
KSwgbXRlX3BhcmVudChjaGlsZCksDQorCQkJbXRlX3RvX25vZGUobWFzLT5ub2RlKSk7DQorCQkJ
TVRfQlVHX09OKG1hcy0+dHJlZSwgMSk7DQorCQl9DQorCX0NCit9DQorDQorLyoNCisgKiBWYWxp
ZGF0ZSBhbGwgcGl2b3RzIGFyZSB3aXRoaW4gbWFzLT5taW4gYW5kIG1hcy0+bWF4Lg0KKyAqLw0K
K3ZvaWQgbWFzX3ZhbGlkYXRlX2xpbWl0cyhzdHJ1Y3QgbWFfc3RhdGUgKm1hcykNCit7DQorCWlu
dCBpOw0KKwl1bnNpZ25lZCBsb25nIHByZXZfcGl2ID0gMDsNCisJdm9pZCBfX3JjdSAqKnNsb3Rz
ID0gbWFfc2xvdHMobXRlX3RvX25vZGUobWFzLT5ub2RlKSwNCisJCQkJbXRlX25vZGVfdHlwZSht
YXMtPm5vZGUpKTsNCisNCisJLyogYWxsIGxpbWl0cyBhcmUgZmluZSBoZXJlLiAqLw0KKwlpZiAo
bXRlX2lzX3Jvb3QobWFzLT5ub2RlKSkNCisJCXJldHVybjsNCisNCisJZm9yIChpID0gMDsgaSA8
IG10X3Nsb3RfY291bnQobWFzLT5ub2RlKTsgaSsrKSB7DQorCQllbnVtIG1hcGxlX3R5cGUgdHlw
ZSA9IG10ZV9ub2RlX3R5cGUobWFzLT5ub2RlKTsNCisJCXVuc2lnbmVkIGxvbmcgKnBpdm90cyA9
IG1hX3Bpdm90cyhtYXNfbW4obWFzKSwgdHlwZSk7DQorCQl1bnNpZ25lZCBsb25nIHBpdiA9IG1h
c19zYWZlX3Bpdm90KG1hcywgcGl2b3RzLCB0eXBlLCBpKTsNCisNCisJCWlmICghcGl2KQ0KKwkJ
CWJyZWFrOw0KKw0KKwkJaWYgKCFtdGVfaXNfbGVhZihtYXMtPm5vZGUpKSB7DQorCQkJdm9pZCAq
ZW50cnkgPSBtYXNfc2xvdChtYXMsIHNsb3RzLCBpKTsNCisJCQlpZiAoIWVudHJ5KQ0KKwkJCQlw
cl9lcnIoTUFfUFRSIlsldV0gY2Fubm90IGJlIG51bGxcbiIsDQorCQkJCSAgICAgICBtYXNfbW4o
bWFzKSwgaSk7DQorDQorCQkJTVRfQlVHX09OKG1hcy0+dHJlZSwgIWVudHJ5KTsNCisJCX0NCisN
CisJCWlmIChwcmV2X3BpdiA+IHBpdikgew0KKwkJCXByX2VycihNQV9QVFIiWyV1XSBwaXYgJWx1
IDwgcHJldl9waXYgJWx1XG4iLA0KKwkJCQltYXNfbW4obWFzKSwgaSwgcGl2LCBwcmV2X3Bpdik7
DQorCQkJTVRfQlVHX09OKG1hcy0+dHJlZSwgcGl2IDwgcHJldl9waXYpOw0KKwkJfQ0KKw0KKwkJ
aWYgKHBpdiA8IG1hcy0+bWluKSB7DQorCQkJcHJfZXJyKE1BX1BUUiJbJXVdICVsdSA8ICVsdVxu
IiwgbWFzX21uKG1hcyksIGksDQorCQkJCXBpdiwgbWFzLT5taW4pOw0KKwkJCU1UX0JVR19PTiht
YXMtPnRyZWUsIHBpdiA8IG1hcy0+bWluKTsNCisJCX0NCisJCWlmIChwaXYgPiBtYXMtPm1heCkg
ew0KKwkJCXByX2VycihNQV9QVFIiWyV1XSAlbHUgPiAlbHVcbiIsIG1hc19tbihtYXMpLCBpLA0K
KwkJCQlwaXYsIG1hcy0+bWF4KTsNCisJCQlNVF9CVUdfT04obWFzLT50cmVlLCBwaXYgPiBtYXMt
Pm1heCk7DQorCQl9DQorCQlwcmV2X3BpdiA9IHBpdjsNCisJCWlmIChwaXYgPT0gbWFzLT5tYXgp
DQorCQkJYnJlYWs7DQorCX0NCit9DQorDQordm9pZCBtdF92YWxpZGF0ZV9udWxscyhzdHJ1Y3Qg
bWFwbGVfdHJlZSAqbXQpDQorew0KKwl2b2lkICplbnRyeSwgKmxhc3QgPSAodm9pZCAqKTE7DQor
CXVuc2lnbmVkIGNoYXIgb2Zmc2V0ID0gMDsNCisJdm9pZCBfX3JjdSAqKnNsb3RzOw0KKwlNQV9T
VEFURShtYXMsIG10LCAwLCAwKTsNCisNCisJbWFzX3N0YXJ0KCZtYXMpOw0KKwlpZiAobWFzX2lz
X25vbmUoJm1hcykgfHwgKG1hcy5ub2RlID09IE1BU19ST09UKSkNCisJCXJldHVybjsNCisNCisJ
d2hpbGUgKCFtdGVfaXNfbGVhZihtYXMubm9kZSkpDQorCQltYXNfZGVzY2VuZCgmbWFzKTsNCisN
CisJc2xvdHMgPSBtYV9zbG90cyhtdGVfdG9fbm9kZShtYXMubm9kZSksIG10ZV9ub2RlX3R5cGUo
bWFzLm5vZGUpKTsNCisJZG8gew0KKwkJZW50cnkgPSBtYXNfc2xvdCgmbWFzLCBzbG90cywgb2Zm
c2V0KTsNCisJCWlmICghbGFzdCAmJiAhZW50cnkpIHsNCisJCQlwcl9lcnIoIlNlcXVlbnRpYWwg
bnVsbHMgZW5kIGF0ICVwWyV1XVxuIiwNCisJCQkJbWFzX21uKCZtYXMpLCBvZmZzZXQpOw0KKwkJ
fQ0KKwkJTVRfQlVHX09OKG10LCAhbGFzdCAmJiAhZW50cnkpOw0KKwkJbGFzdCA9IGVudHJ5Ow0K
KwkJaWYgKG9mZnNldCA9PSBtYXNfZGF0YV9lbmQoJm1hcykpIHsNCisJCQltYXNfbmV4dF9ub2Rl
KCZtYXMsIG1hc19tbigmbWFzKSwgVUxPTkdfTUFYKTsNCisJCQlpZiAobWFzX2lzX25vbmUoJm1h
cykpDQorCQkJCXJldHVybjsNCisJCQlvZmZzZXQgPSAwOw0KKwkJCXNsb3RzID0gbWFfc2xvdHMo
bXRlX3RvX25vZGUobWFzLm5vZGUpLA0KKwkJCQkJIG10ZV9ub2RlX3R5cGUobWFzLm5vZGUpKTsN
CisJCX0gZWxzZQ0KKwkJCW9mZnNldCsrOw0KKw0KKwl9IHdoaWxlICghbWFzX2lzX25vbmUoJm1h
cykpOw0KK30NCisNCisvKg0KKyAqIHZhbGlkYXRlIGEgbWFwbGUgdHJlZSBieSBjaGVja2luZzoN
CisgKiAxLiBUaGUgbGltaXRzIChwaXZvdHMgYXJlIHdpdGhpbiBtYXMtPm1pbiB0byBtYXMtPm1h
eCkNCisgKiAyLiBUaGUgZ2FwIGlzIGNvcnJlY3RseSBzZXQgaW4gdGhlIHBhcmVudHMNCisgKi8N
Cit2b2lkIG10X3ZhbGlkYXRlKHN0cnVjdCBtYXBsZV90cmVlICptdCkNCit7DQorCXVuc2lnbmVk
IGNoYXIgZW5kOw0KKw0KKwlNQV9TVEFURShtYXMsIG10LCAwLCAwKTsNCisJcmN1X3JlYWRfbG9j
aygpOw0KKwltYXNfc3RhcnQoJm1hcyk7DQorCWlmICghbWFzX3NlYXJjaGFibGUoJm1hcykpDQor
CQlnb3RvIGRvbmU7DQorDQorCW1hc19maXJzdF9lbnRyeSgmbWFzLCBtYXNfbW4oJm1hcyksIFVM
T05HX01BWCwgbXRlX25vZGVfdHlwZShtYXMubm9kZSkpOw0KKwl3aGlsZSAoIW1hc19pc19ub25l
KCZtYXMpKSB7DQorCQlNVF9CVUdfT04obWFzLnRyZWUsIG10ZV9kZWFkX25vZGUobWFzLm5vZGUp
KTsNCisJCWlmICghbXRlX2lzX3Jvb3QobWFzLm5vZGUpKSB7DQorCQkJZW5kID0gbWFzX2RhdGFf
ZW5kKCZtYXMpOw0KKwkJCWlmICgoZW5kIDwgbXRfbWluX3Nsb3RfY291bnQobWFzLm5vZGUpKSAm
Jg0KKwkJCSAgICAobWFzLm1heCAhPSBVTE9OR19NQVgpKSB7DQorCQkJCXByX2VycigiSW52YWxp
ZCBzaXplICV1IG9mICJNQV9QVFIiXG4iLCBlbmQsDQorCQkJCW1hc19tbigmbWFzKSk7DQorCQkJ
CU1UX0JVR19PTihtYXMudHJlZSwgMSk7DQorCQkJfQ0KKw0KKwkJfQ0KKwkJbWFzX3ZhbGlkYXRl
X3BhcmVudF9zbG90KCZtYXMpOw0KKwkJbWFzX3ZhbGlkYXRlX2NoaWxkX3Nsb3QoJm1hcyk7DQor
CQltYXNfdmFsaWRhdGVfbGltaXRzKCZtYXMpOw0KKwkJaWYgKG10X2lzX2FsbG9jKG10KSkNCisJ
CQltYXNfdmFsaWRhdGVfZ2FwcygmbWFzKTsNCisJCW1hc19kZnNfcG9zdG9yZGVyKCZtYXMsIFVM
T05HX01BWCk7DQorCX0NCisJbXRfdmFsaWRhdGVfbnVsbHMobXQpOw0KK2RvbmU6DQorCXJjdV9y
ZWFkX3VubG9jaygpOw0KKw0KK30NCisNCisjZW5kaWYgLyogQ09ORklHX0RFQlVHX01BUExFX1RS
RUUgKi8NCmRpZmYgLS1naXQgYS90b29scy90ZXN0aW5nL3JhZGl4LXRyZWUvLmdpdGlnbm9yZSBi
L3Rvb2xzL3Rlc3RpbmcvcmFkaXgtdHJlZS8uZ2l0aWdub3JlDQppbmRleCBkOTcxNTE2NDAxZTYu
LmM5MDFkOTZkZDAxMyAxMDA2NDQNCi0tLSBhL3Rvb2xzL3Rlc3RpbmcvcmFkaXgtdHJlZS8uZ2l0
aWdub3JlDQorKysgYi90b29scy90ZXN0aW5nL3JhZGl4LXRyZWUvLmdpdGlnbm9yZQ0KQEAgLTYs
MyArNiw1IEBAIG1haW4NCiBtdWx0aW9yZGVyDQogcmFkaXgtdHJlZS5jDQogeGFycmF5DQorbWFw
bGUNCittYV94YV9iZW5jaG1hcmsNCmRpZmYgLS1naXQgYS90b29scy90ZXN0aW5nL3JhZGl4LXRy
ZWUvTWFrZWZpbGUgYi90b29scy90ZXN0aW5nL3JhZGl4LXRyZWUvTWFrZWZpbGUNCmluZGV4IGFh
NmFiZmUwNzQ5Yy4uNTUxOTM3YmE2NjQ5IDEwMDY0NA0KLS0tIGEvdG9vbHMvdGVzdGluZy9yYWRp
eC10cmVlL01ha2VmaWxlDQorKysgYi90b29scy90ZXN0aW5nL3JhZGl4LXRyZWUvTWFrZWZpbGUN
CkBAIC00LDggKzQsOCBAQCBDRkxBR1MgKz0gLUkuIC1JLi4vLi4vaW5jbHVkZSAtZyAtT2cgLVdh
bGwgLURfTEdQTF9TT1VSQ0UgLWZzYW5pdGl6ZT1hZGRyZXNzIFwNCiAJICAtZnNhbml0aXplPXVu
ZGVmaW5lZA0KIExERkxBR1MgKz0gLWZzYW5pdGl6ZT1hZGRyZXNzIC1mc2FuaXRpemU9dW5kZWZp
bmVkDQogTERMSUJTKz0gLWxwdGhyZWFkIC1sdXJjdQ0KLVRBUkdFVFMgPSBtYWluIGlkci10ZXN0
IG11bHRpb3JkZXIgeGFycmF5DQotQ09SRV9PRklMRVMgOj0geGFycmF5Lm8gcmFkaXgtdHJlZS5v
IGlkci5vIGxpbnV4Lm8gdGVzdC5vIGZpbmRfYml0Lm8gYml0bWFwLm8NCitUQVJHRVRTID0gbWFp
biBpZHItdGVzdCBtdWx0aW9yZGVyIHhhcnJheSBtYXBsZSBtYV94YV9iZW5jaG1hcmsNCitDT1JF
X09GSUxFUyA6PSB4YXJyYXkubyByYWRpeC10cmVlLm8gaWRyLm8gbGludXgubyB0ZXN0Lm8gZmlu
ZF9iaXQubyBiaXRtYXAubyBtYXBsZS5vDQogT0ZJTEVTID0gbWFpbi5vICQoQ09SRV9PRklMRVMp
IHJlZ3Jlc3Npb24xLm8gcmVncmVzc2lvbjIubyByZWdyZXNzaW9uMy5vIFwNCiAJIHJlZ3Jlc3Np
b240Lm8gdGFnX2NoZWNrLm8gbXVsdGlvcmRlci5vIGlkci10ZXN0Lm8gaXRlcmF0aW9uX2NoZWNr
Lm8gXA0KIAkgaXRlcmF0aW9uX2NoZWNrXzIubyBiZW5jaG1hcmsubw0KQEAgLTI4LDYgKzI4LDEw
IEBAIGlkci10ZXN0OiBpZHItdGVzdC5vICQoQ09SRV9PRklMRVMpDQogDQogeGFycmF5OiAkKENP
UkVfT0ZJTEVTKQ0KIA0KK21hcGxlOiAkKENPUkVfT0ZJTEVTKQ0KKw0KK21hX3hhX2JlbmNobWFy
azogbWFfeGFfYmVuY2htYXJrLm8gJChDT1JFX09GSUxFUykNCisNCiBtdWx0aW9yZGVyOiBtdWx0
aW9yZGVyLm8gJChDT1JFX09GSUxFUykNCiANCiBjbGVhbjoNCkBAIC0zOSw2ICs0Myw3IEBAICQo
T0ZJTEVTKTogTWFrZWZpbGUgKi5oICovKi5oIGdlbmVyYXRlZC9tYXAtc2hpZnQuaCBcDQogCS4u
Ly4uL2luY2x1ZGUvbGludXgvKi5oIFwNCiAJLi4vLi4vaW5jbHVkZS9hc20vKi5oIFwNCiAJLi4v
Li4vLi4vaW5jbHVkZS9saW51eC94YXJyYXkuaCBcDQorCS4uLy4uLy4uL2luY2x1ZGUvbGludXgv
bWFwbGVfdHJlZS5oIFwNCiAJLi4vLi4vLi4vaW5jbHVkZS9saW51eC9yYWRpeC10cmVlLmggXA0K
IAkuLi8uLi8uLi9pbmNsdWRlL2xpbnV4L2lkci5oDQogDQpAQCAtNTAsNiArNTUsMTAgQEAgaWRy
LmM6IC4uLy4uLy4uL2xpYi9pZHIuYw0KIA0KIHhhcnJheS5vOiAuLi8uLi8uLi9saWIveGFycmF5
LmMgLi4vLi4vLi4vbGliL3Rlc3RfeGFycmF5LmMNCiANCittYXBsZS5vOiAuLi8uLi8uLi9saWIv
bWFwbGVfdHJlZS5jIC4uLy4uLy4uL2xpYi90ZXN0X21hcGxlX3RyZWUuYw0KKw0KK21hX3hhX2Jl
bmNobWFyay5vOg0KKw0KIGdlbmVyYXRlZC9tYXAtc2hpZnQuaDoNCiAJQGlmICEgZ3JlcCAtcXdz
ICQoU0hJRlQpIGdlbmVyYXRlZC9tYXAtc2hpZnQuaDsgdGhlbgkJXA0KIAkJZWNobyAiI2RlZmlu
ZSBYQV9DSFVOS19TSElGVCAkKFNISUZUKSIgPgkJXA0KZGlmZiAtLWdpdCBhL3Rvb2xzL3Rlc3Rp
bmcvcmFkaXgtdHJlZS9nZW5lcmF0ZWQvYXV0b2NvbmYuaCBiL3Rvb2xzL3Rlc3RpbmcvcmFkaXgt
dHJlZS9nZW5lcmF0ZWQvYXV0b2NvbmYuaA0KaW5kZXggMjIxOGIzY2MxODRlLi5lN2RhODAzNTAy
MzYgMTAwNjQ0DQotLS0gYS90b29scy90ZXN0aW5nL3JhZGl4LXRyZWUvZ2VuZXJhdGVkL2F1dG9j
b25mLmgNCisrKyBiL3Rvb2xzL3Rlc3RpbmcvcmFkaXgtdHJlZS9nZW5lcmF0ZWQvYXV0b2NvbmYu
aA0KQEAgLTEgKzEsMiBAQA0KICNkZWZpbmUgQ09ORklHX1hBUlJBWV9NVUxUSSAxDQorI2RlZmlu
ZSBDT05GSUdfNjRCSVQgMQ0KZGlmZiAtLWdpdCBhL3Rvb2xzL3Rlc3RpbmcvcmFkaXgtdHJlZS9s
aW51eC9tYXBsZV90cmVlLmggYi90b29scy90ZXN0aW5nL3JhZGl4LXRyZWUvbGludXgvbWFwbGVf
dHJlZS5oDQpuZXcgZmlsZSBtb2RlIDEwMDY0NA0KaW5kZXggMDAwMDAwMDAwMDAwLi44OWY1NjFl
Njg4NDENCi0tLSAvZGV2L251bGwNCisrKyBiL3Rvb2xzL3Rlc3RpbmcvcmFkaXgtdHJlZS9saW51
eC9tYXBsZV90cmVlLmgNCkBAIC0wLDAgKzEsNyBAQA0KKy8qIFNQRFgtTGljZW5zZS1JZGVudGlm
aWVyOiBHUEwtMi4wKyAqLw0KKyNkZWZpbmUgYXRvbWljX3QgaW50MzJfdA0KKyNpbmNsdWRlICIu
Li8uLi8uLi8uLi9pbmNsdWRlL2xpbnV4L21hcGxlX3RyZWUuaCINCisjZGVmaW5lIGF0b21pY19p
bmMoeCkgdWF0b21pY19pbmMoeCkNCisjZGVmaW5lIGF0b21pY19yZWFkKHgpIHVhdG9taWNfcmVh
ZCh4KQ0KKyNkZWZpbmUgYXRvbWljX3NldCh4LCB5KSBkbyB7fSB3aGlsZSgwKQ0KKyNkZWZpbmUg
VThfTUFYIFVDSEFSX01BWA0KZGlmZiAtLWdpdCBhL3Rvb2xzL3Rlc3RpbmcvcmFkaXgtdHJlZS9t
YXBsZS5jIGIvdG9vbHMvdGVzdGluZy9yYWRpeC10cmVlL21hcGxlLmMNCm5ldyBmaWxlIG1vZGUg
MTAwNjQ0DQppbmRleCAwMDAwMDAwMDAwMDAuLjM1MDgyNjcxOTI4YQ0KLS0tIC9kZXYvbnVsbA0K
KysrIGIvdG9vbHMvdGVzdGluZy9yYWRpeC10cmVlL21hcGxlLmMNCkBAIC0wLDAgKzEsNTkgQEAN
CisvLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogR1BMLTIuMCsNCisvKg0KKyAqIG1hcGxlX3Ry
ZWUuYzogVXNlcnNwYWNlIHNoaW0gZm9yIG1hcGxlIHRyZWUgdGVzdC1zdWl0ZQ0KKyAqIENvcHly
aWdodCAoYykgMjAxOCBMaWFtIFIuIEhvd2xldHQgPExpYW0uSG93bGV0dEBPcmFjbGUuY29tPg0K
KyAqLw0KKw0KKyNkZWZpbmUgQ09ORklHX0RFQlVHX01BUExFX1RSRUUNCisjZGVmaW5lIENPTkZJ
R19NQVBMRV9TRUFSQ0gNCisjaW5jbHVkZSAidGVzdC5oIg0KKw0KKyNkZWZpbmUgbW9kdWxlX2lu
aXQoeCkNCisjZGVmaW5lIG1vZHVsZV9leGl0KHgpDQorI2RlZmluZSBNT0RVTEVfQVVUSE9SKHgp
DQorI2RlZmluZSBNT0RVTEVfTElDRU5TRSh4KQ0KKyNkZWZpbmUgZHVtcF9zdGFjaygpCWFzc2Vy
dCgwKQ0KKw0KKyNpbmNsdWRlICIuLi8uLi8uLi9saWIvbWFwbGVfdHJlZS5jIg0KKyN1bmRlZiBD
T05GSUdfREVCVUdfTUFQTEVfVFJFRQ0KKyNpbmNsdWRlICIuLi8uLi8uLi9saWIvdGVzdF9tYXBs
ZV90cmVlLmMiDQorDQordm9pZCBmYXJtZXJfdGVzdHModm9pZCkNCit7DQorCXN0cnVjdCBtYXBs
ZV9ub2RlICpub2RlOw0KKwlERUZJTkVfTVRSRUUodHJlZSk7DQorDQorCW10X2R1bXAoJnRyZWUp
Ow0KKw0KKwl0cmVlLm1hX3Jvb3QgPSB4YV9ta192YWx1ZSgwKTsNCisJbXRfZHVtcCgmdHJlZSk7
DQorDQorCW5vZGUgPSBtdF9hbGxvY19vbmUoR0ZQX0tFUk5FTCk7DQorCW5vZGUtPnBhcmVudCA9
ICh2b2lkICopKCh1bnNpZ25lZCBsb25nKSgmdHJlZSkgfCAxKTsNCisJbm9kZS0+c2xvdFswXSA9
IHhhX21rX3ZhbHVlKDApOw0KKwlub2RlLT5zbG90WzFdID0geGFfbWtfdmFsdWUoMSk7DQorCW5v
ZGUtPm1yNjQucGl2b3RbMF0gPSAwOw0KKwlub2RlLT5tcjY0LnBpdm90WzFdID0gMTsNCisJbm9k
ZS0+bXI2NC5waXZvdFsyXSA9IDA7DQorCXRyZWUubWFfcm9vdCA9IG10X21rX25vZGUobm9kZSwg
bWFwbGVfbGVhZl82NCk7DQorCW10X2R1bXAoJnRyZWUpOw0KKw0KKwltYV9mcmVlX3JjdShub2Rl
KTsNCit9DQorDQordm9pZCBtYXBsZV90cmVlX3Rlc3RzKHZvaWQpDQorew0KKwlmYXJtZXJfdGVz
dHMoKTsNCisJbWFwbGVfdHJlZV9zZWVkKCk7DQorCW1hcGxlX3RyZWVfaGFydmVzdCgpOw0KK30N
CisNCitpbnQgX193ZWFrIG1haW4odm9pZCkNCit7DQorCW1hcGxlX3RyZWVfaW5pdCgpOw0KKwlt
YXBsZV90cmVlX3Rlc3RzKCk7DQorCXJjdV9iYXJyaWVyKCk7DQorCWlmIChucl9hbGxvY2F0ZWQp
DQorCQlwcmludGYoIm5yX2FsbG9jYXRlZCA9ICVkXG4iLCBucl9hbGxvY2F0ZWQpOw0KKwlyZXR1
cm4gMDsNCit9DQpkaWZmIC0tZ2l0IGEvdG9vbHMvdGVzdGluZy9yYWRpeC10cmVlL3RyYWNlL2V2
ZW50cy9tYXBsZV90cmVlLmggYi90b29scy90ZXN0aW5nL3JhZGl4LXRyZWUvdHJhY2UvZXZlbnRz
L21hcGxlX3RyZWUuaA0KbmV3IGZpbGUgbW9kZSAxMDA2NDQNCmluZGV4IDAwMDAwMDAwMDAwMC4u
ZTY1M2QwMjM2NjNiDQotLS0gL2Rldi9udWxsDQorKysgYi90b29scy90ZXN0aW5nL3JhZGl4LXRy
ZWUvdHJhY2UvZXZlbnRzL21hcGxlX3RyZWUuaA0KQEAgLTAsMCArMSwzIEBADQorI2RlZmluZSB0
cmFjZV9tYV9vcChhLCBiKSBkbyB7fSB3aGlsZSgwKTsNCisjZGVmaW5lIHRyYWNlX21hX3JlYWQo
YSwgYikgZG8ge30gd2hpbGUoMCk7DQorI2RlZmluZSB0cmFjZV9tYV93cml0ZShhLCBiLCBjLCBk
KSBkbyB7fSB3aGlsZSgwKTsNCi0tIA0KMi4zNC4xDQo=
