Return-Path: <linux-kernel-owner@vger.kernel.org>
X-Original-To: lists+linux-kernel@lfdr.de
Delivered-To: lists+linux-kernel@lfdr.de
Received: from out1.vger.email (out1.vger.email [IPv6:2620:137:e000::1:20])
	by mail.lfdr.de (Postfix) with ESMTP id 464734FB6E5
	for <lists+linux-kernel@lfdr.de>; Mon, 11 Apr 2022 11:06:22 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1344111AbiDKJI1 (ORCPT <rfc822;lists+linux-kernel@lfdr.de>);
        Mon, 11 Apr 2022 05:08:27 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:36546 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S231960AbiDKJIX (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 11 Apr 2022 05:08:23 -0400
Received: from smtp-out1.suse.de (smtp-out1.suse.de [195.135.220.28])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id CB52A22B2B
        for <linux-kernel@vger.kernel.org>; Mon, 11 Apr 2022 02:06:10 -0700 (PDT)
Received: from relay2.suse.de (relay2.suse.de [149.44.160.134])
        by smtp-out1.suse.de (Postfix) with ESMTP id 85BAD210E5;
        Mon, 11 Apr 2022 09:06:09 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=suse.de; s=susede2_rsa;
        t=1649667969; h=from:from:reply-to:date:date:message-id:message-id:to:to:cc:cc:
         mime-version:mime-version:content-type:content-type:
         in-reply-to:in-reply-to:references:references;
        bh=j1BIddY6le6cyd+FZDW9T54cDdgofPkisbaeMK/YIcA=;
        b=xsxGF0qSAxSaOEKbBEIT2Phwv6p0OucaYNthjTefbqq5cO22mMqRLXC/W3hz2Sy1Piu/mC
        Jmg3uNlT7+dm7PzSP6vLJThTVD0W292aNm+PyoNez17NEH3hCMCjTI1xARRmdAAyCy4h57
        sjcHXZ38cJNEhG0XXZu9AdTJORIOaSQ=
DKIM-Signature: v=1; a=ed25519-sha256; c=relaxed/relaxed; d=suse.de;
        s=susede2_ed25519; t=1649667969;
        h=from:from:reply-to:date:date:message-id:message-id:to:to:cc:cc:
         mime-version:mime-version:content-type:content-type:
         in-reply-to:in-reply-to:references:references;
        bh=j1BIddY6le6cyd+FZDW9T54cDdgofPkisbaeMK/YIcA=;
        b=hOKHQg2/uChgGFS9gwKxB9vWVupGkQBhrgkpHlpdN63EH3XOyeiyxtlwfwqv7Bk0L9IN3J
        ttRpV+F1KJrhtQDw==
Received: from alsa1.suse.de (alsa1.suse.de [10.160.4.42])
        by relay2.suse.de (Postfix) with ESMTP id 7416BA3B82;
        Mon, 11 Apr 2022 09:06:09 +0000 (UTC)
Date:   Mon, 11 Apr 2022 11:06:09 +0200
Message-ID: <s5ha6csc7lq.wl-tiwai@suse.de>
From:   Takashi Iwai <tiwai@suse.de>
To:     Zheyu Ma <zheyuma97@gmail.com>
Cc:     perex@perex.cz, tiwai@suse.com, alsa-devel@alsa-project.org,
        Linux Kernel Mailing List <linux-kernel@vger.kernel.org>
Subject: Re: [BUG] ALSA: echoaudio: warning when the driver fails to probe
In-Reply-To: <CAMhUBjmr_mHcz2G0tQ2qktGFw6XDLJiDTAHvM1yoRWzvtA6MYg@mail.gmail.com>
References: <CAMhUBjm2AdyEZ_-EgexdNDN7SvY4f89=4=FwAL+c0Mg0O+X50A@mail.gmail.com>
        <s5hk0bwcbjh.wl-tiwai@suse.de>
        <CAMhUBjmr_mHcz2G0tQ2qktGFw6XDLJiDTAHvM1yoRWzvtA6MYg@mail.gmail.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL/10.8 Emacs/25.3
 (x86_64-suse-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: text/plain; charset=US-ASCII
X-Spam-Status: No, score=-4.4 required=5.0 tests=BAYES_00,DKIM_SIGNED,
        DKIM_VALID,DKIM_VALID_AU,DKIM_VALID_EF,RCVD_IN_DNSWL_MED,SPF_HELO_NONE,
        SPF_PASS,T_SCC_BODY_TEXT_LINE autolearn=ham autolearn_force=no
        version=3.4.6
X-Spam-Checker-Version: SpamAssassin 3.4.6 (2021-04-09) on
        lindbergh.monkeyblade.net
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Mon, 11 Apr 2022 10:49:53 +0200,
Zheyu Ma wrote:
> 
> On Mon, Apr 11, 2022 at 3:41 PM Takashi Iwai <tiwai@suse.de> wrote:
> >
> > On Sun, 10 Apr 2022 11:13:55 +0200,
> > Zheyu Ma wrote:
> > >
> > > Hello,
> > >
> > > I found a bug in echoaudio.c.
> > > When the driver fails at the function snd_echo_create(), it should
> > > release resources requested before, otherwise we will get the
> > > following warning:
> > >
> > > [    3.262866] remove_proc_entry: removing non-empty directory
> > > 'irq/21', leaking at least 'snd_indigodj'
> > > [    3.263577] WARNING: CPU: 3 PID: 261 at fs/proc/generic.c:717
> > > remove_proc_entry+0x389/0x3f0
> > > [    3.267098] RIP: 0010:remove_proc_entry+0x389/0x3f0
> > > [    3.269976] Call Trace:
> > > [    3.269979]  <TASK>
> > > [    3.269988]  unregister_irq_proc+0x14c/0x170
> > > [    3.269997]  irq_free_descs+0x94/0xe0
> > > [    3.270004]  mp_unmap_irq+0xb6/0x100
> > > [    3.270011]  acpi_unregister_gsi_ioapic+0x27/0x40
> > > [    3.270017]  acpi_pci_irq_disable+0x1d3/0x320
> > > [    3.270025]  pci_disable_device+0x1ad/0x380
> > > [    3.270034]  pcim_release+0x566/0x6d0
> > > [    3.270046]  devres_release_all+0x1f1/0x2c0
> > > [    3.270057]  really_probe+0xe0/0x920
> >
> > Could you try the patch below?
> 
> The following patch works for me, the previous warning disappears, thank you.
> But I got another error, I have no idea about it.

OK, that's bad, it's basically the destructor order problem.
Could you try the patch below instead of the previous one?


thanks,

Takashi

---
--- a/sound/pci/echoaudio/echoaudio.c
+++ b/sound/pci/echoaudio/echoaudio.c
@@ -1889,13 +1889,20 @@ static void snd_echo_free(struct snd_card *card)
 	if (chip->comm_page)
 		rest_in_peace(chip);
 
-	if (chip->irq >= 0)
-		free_irq(chip->irq, chip);
-
 	/* release chip data */
 	free_firmware_cache(chip);
 }
 
+static void do_free_irq(void *p)
+{
+	struct echoaudio *chip = p;
+
+	if (chip->irq >= 0) {
+		free_irq(chip->irq, chip);
+		chip->irq = -1;
+	}
+}
+
 /* <--snd_echo_probe() */
 static int snd_echo_create(struct snd_card *card,
 			   struct pci_dev *pci)
@@ -1945,8 +1952,9 @@ static int snd_echo_create(struct snd_card *card,
 	card->sync_irq = chip->irq;
 	dev_dbg(card->dev, "pci=%p irq=%d subdev=%04x Init hardware...\n",
 		chip->pci, chip->irq, chip->pci->subsystem_device);
-
-	card->private_free = snd_echo_free;
+	err = devm_add_action(card->dev, do_free_irq, chip);
+	if (err < 0)
+		return err;
 
 	/* Create the DSP comm page - this is the area of memory used for most
 	of the communication with the DSP, which accesses it via bus mastering */
@@ -1957,6 +1965,7 @@ static int snd_echo_create(struct snd_card *card,
 		return -ENOMEM;
 	chip->comm_page_phys = chip->commpage_dma_buf->addr;
 	chip->comm_page = (struct comm_page *)chip->commpage_dma_buf->area;
+	card->private_free = snd_echo_free;
 
 	err = init_hw(chip, chip->pci->device, chip->pci->subsystem_device);
 	if (err >= 0)
