Return-Path: <linux-kernel-owner@vger.kernel.org>
X-Original-To: lists+linux-kernel@lfdr.de
Delivered-To: lists+linux-kernel@lfdr.de
Received: from out1.vger.email (out1.vger.email [IPv6:2620:137:e000::1:20])
	by mail.lfdr.de (Postfix) with ESMTP id C86AE4B8E03
	for <lists+linux-kernel@lfdr.de>; Wed, 16 Feb 2022 17:30:50 +0100 (CET)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S236428AbiBPQbA (ORCPT <rfc822;lists+linux-kernel@lfdr.de>);
        Wed, 16 Feb 2022 11:31:00 -0500
Received: from mxb-00190b01.gslb.pphosted.com ([23.128.96.19]:36020 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S236444AbiBPQax (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 16 Feb 2022 11:30:53 -0500
Received: from us-smtp-delivery-124.mimecast.com (us-smtp-delivery-124.mimecast.com [170.10.129.124])
        by lindbergh.monkeyblade.net (Postfix) with ESMTP id E85312AED80
        for <linux-kernel@vger.kernel.org>; Wed, 16 Feb 2022 08:30:39 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=redhat.com;
        s=mimecast20190719; t=1645029038;
        h=from:from:reply-to:subject:subject:date:date:message-id:message-id:
         to:to:cc:cc:mime-version:mime-version:content-type:content-type:
         in-reply-to:in-reply-to:references:references;
        bh=Dqm8te0zzHU1H5txRpXsHKM3zW9lf47xUyauRehYznU=;
        b=EwGJ6Ofw4JN0PfkOVIev3K/2Ncp9svx2DyMBqUA63gW/fjYCMpfB1Y+tRZKnpmB41AozXR
        q1gMYJc6xTT3LJ0TAi04MfNMZ7rJhGJgCeYSPYCTYAA4c0xLlq5DC7nKsB1sK4DdGeYwWn
        a4GqBkJRciA12OMcqH1V6vrOvEfMxfw=
Received: from mimecast-mx01.redhat.com (mimecast-mx01.redhat.com
 [209.132.183.4]) by relay.mimecast.com with ESMTP with STARTTLS
 (version=TLSv1.2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 us-mta-247-CI_S9XDNM8aP5rBVXvkTCg-1; Wed, 16 Feb 2022 11:30:35 -0500
X-MC-Unique: CI_S9XDNM8aP5rBVXvkTCg-1
Received: from smtp.corp.redhat.com (int-mx06.intmail.prod.int.phx2.redhat.com [10.5.11.16])
        (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
        (No client certificate requested)
        by mimecast-mx01.redhat.com (Postfix) with ESMTPS id 2EF7B814243;
        Wed, 16 Feb 2022 16:30:33 +0000 (UTC)
Received: from [10.22.11.152] (unknown [10.22.11.152])
        by smtp.corp.redhat.com (Postfix) with ESMTP id 530BA8276A;
        Wed, 16 Feb 2022 16:30:31 +0000 (UTC)
Content-Type: multipart/mixed; boundary="------------AdyRA7Eq4tOJeY8U1AgGjX0Q"
Message-ID: <cb03cbe5-0357-144d-0660-3ebc50c0245a@redhat.com>
Date:   Wed, 16 Feb 2022 11:30:30 -0500
MIME-Version: 1.0
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:91.0) Gecko/20100101
 Thunderbird/91.5.0
Subject: Re: [PATCH v5] locking/rwsem: Make handoff bit handling more
 consistent
Content-Language: en-US
To:     Greg KH <gregkh@linuxfoundation.org>,
        chenguanyou <chenguanyou9338@gmail.com>,
        Jaegeuk Kim <jaegeuk@google.com>
Cc:     dave@stgolabs.net, hdanton@sina.com, linux-kernel@vger.kernel.org,
        mazhenhua@xiaomi.com, mingo@redhat.com, peterz@infradead.org,
        quic_aiquny@quicinc.com, will@kernel.org
References: <20211116012912.723980-1-longman@redhat.com>
 <20220214162218.13930-1-chenguanyou@xiaomi.com> <YgtZMtgPoteJqtbB@kroah.com>
From:   Waiman Long <longman@redhat.com>
In-Reply-To: <YgtZMtgPoteJqtbB@kroah.com>
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.16
X-Spam-Status: No, score=-2.9 required=5.0 tests=BAYES_00,DKIMWL_WL_HIGH,
        DKIM_SIGNED,DKIM_VALID,DKIM_VALID_AU,DKIM_VALID_EF,NICE_REPLY_A,
        RCVD_IN_DNSWL_LOW,SPF_HELO_NONE,SPF_NONE,T_SCC_BODY_TEXT_LINE
        autolearn=ham autolearn_force=no version=3.4.6
X-Spam-Checker-Version: SpamAssassin 3.4.6 (2021-04-09) on
        lindbergh.monkeyblade.net
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

This is a multi-part message in MIME format.
--------------AdyRA7Eq4tOJeY8U1AgGjX0Q
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit

On 2/15/22 02:41, Greg KH wrote:
> On Tue, Feb 15, 2022 at 12:22:18AM +0800, chenguanyou wrote:
>>>> Hi Waiman, Greg,
>>>> This patch has been merged in branch linux-5.16.y.
>>>> Can we take it to the linux-5.10.y LTS version?
>>> What is "this patch"?
>> commit d257cc8cb8d5355ffc43a96bab94db7b5a324803 ("locking/rwsem: Make handoff bit handling more consistent")
> Have you tested it on the 5.10.y branch to verify it actually works
> properly for you?
>
> If so, please provide a working backport to the stable list, as it does
> not apply cleanly as-is.
>
> thanks,
>
> greg k-h
>
I have attached the 5.10.y backport of commit 
d257cc8cb8d5355ffc43a96bab94db7b5a324803 ("locking/rwsem: Make handoff 
bit handling more consistent"). I also include a backport of commit 
2f06f702925b512a95b95dca3855549c047eef58 ("locking/rwsem: Prevent 
potential lock starvation") which I think may help Jaegeuk. I had run 
some sanity tests and the backported patches work fine. However, I don't 
have access to their testing environments to verify if they can fix the 
problems seem by Chen or Jaegeuk. So please test these patches to see if 
they can address your problems.

Cheers,
Longman


--------------AdyRA7Eq4tOJeY8U1AgGjX0Q
Content-Type: text/x-patch; charset=UTF-8;
 name="0001-locking-rwsem-Prevent-potential-lock-starvation.patch"
Content-Disposition: attachment;
 filename*0="0001-locking-rwsem-Prevent-potential-lock-starvation.patch"
Content-Transfer-Encoding: base64

RnJvbSAwZGJjN2E2MDI0NmFmZDAwNjQwZTE0ZjFkODcyYjk2ZTcxYmQ5MmIzIE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBXYWltYW4gTG9uZyA8bG9uZ21hbkByZWRoYXQuY29t
PgpEYXRlOiBUdWUsIDE1IEZlYiAyMDIyIDE2OjM2OjM4IC0wNTAwClN1YmplY3Q6IFtQQVRD
SCAxLzJdIGxvY2tpbmcvcndzZW06IFByZXZlbnQgcG90ZW50aWFsIGxvY2sgc3RhcnZhdGlv
bgoKY29tbWl0IDJmMDZmNzAyOTI1YjUxMmE5NWI5NWRjYTM4NTU1NDljMDQ3ZWVmNTggdXBz
dHJlYW0uCgpUaGUgbG9jayBoYW5kb2ZmIGJpdCBpcyBhZGRlZCBpbiBjb21taXQgNGYyM2Ri
YzFlNjU3ICgibG9ja2luZy9yd3NlbToKSW1wbGVtZW50IGxvY2sgaGFuZG9mZiB0byBwcmV2
ZW50IGxvY2sgc3RhcnZhdGlvbiIpIHRvIGF2b2lkIGxvY2sKc3RhcnZhdGlvbi4gSG93ZXZl
ciwgYWxsb3dpbmcgcmVhZGVycyB0byBkbyBvcHRpbWlzdGljIHNwaW5uaW5nIGRvZXMKaW50
cm9kdWNlIGFuIHVubGlrZWx5IHNjZW5hcmlvIHdoZXJlIGxvY2sgc3RhcnZhdGlvbiBjYW4g
aGFwcGVuLgoKVGhlIGxvY2sgaGFuZG9mZiBiaXQgbWF5IG9ubHkgYmUgc2V0IHdoZW4gYSB3
YWl0ZXIgaXMgYmVpbmcgd29rZW4gdXAuCkluIHRoZSBjYXNlIG9mIHJlYWRlciB1bmxvY2ss
IHdha2V1cCBoYXBwZW5zIG9ubHkgd2hlbiB0aGUgcmVhZGVyIGNvdW50CnJlYWNoZXMgMC4g
SWYgdGhlcmUgaXMgYSBjb250aW51b3VzIHN0cmVhbSBvZiBpbmNvbWluZyByZWFkZXJzIGFj
cXVpcmluZwpyZWFkIGxvY2sgdmlhIG9wdGltaXN0aWMgc3Bpbm5pbmcsIGl0IGlzIHBvc3Np
YmxlIHRoYXQgdGhlIHJlYWRlciBjb3VudAptYXkgbmV2ZXIgcmVhY2ggMCBhbmQgc28gdGhl
IGhhbmRvZmYgYml0IHdpbGwgbmV2ZXIgYmUgYXNzZXJ0ZWQuCgpPbmUgd2F5IHRvIHByZXZl
bnQgdGhpcyBzY2VuYXJpbyBmcm9tIGhhcHBlbmluZyBpcyB0byBkaXNhbGxvdyBvcHRpbWlz
dGljCnNwaW5uaW5nIGlmIHRoZSByd3NlbSBpcyBjdXJyZW50bHkgb3duZWQgYnkgcmVhZGVy
cy4gSWYgdGhlIHByZXZpb3VzCm9yIGN1cnJlbnQgb3duZXIgaXMgYSB3cml0ZXIsIG9wdGlt
aXN0aWMgc3Bpbm5pbmcgd2lsbCBiZSBhbGxvd2VkLgoKSWYgdGhlIHByZXZpb3VzIG93bmVy
IGlzIGEgcmVhZGVyIGJ1dCB0aGUgcmVhZGVyIGNvdW50IGhhcyByZWFjaGVkIDAKYmVmb3Jl
LCBhIHdha2V1cCBzaG91bGQgaGF2ZSBiZWVuIGlzc3VlZC4gU28gdGhlIGhhbmRvZmYgbWVj
aGFuaXNtCndpbGwgYmUga2lja2VkIGluIHRvIHByZXZlbnQgbG9jayBzdGFydmF0aW9uLiBB
cyBhIHJlc3VsdCwgaXQgc2hvdWxkCmJlIE9LIHRvIGRvIG9wdGltaXN0aWMgc3Bpbm5pbmcg
aW4gdGhpcyBjYXNlLgoKVGhpcyBwYXRjaCBtYXkgaGF2ZSBzb21lIGltcGFjdCBvbiByZWFk
ZXIgcGVyZm9ybWFuY2UgYXMgaXQgcmVkdWNlcwpyZWFkZXIgb3B0aW1pc3RpYyBzcGlubmlu
ZyBlc3BlY2lhbGx5IGlmIHRoZSBsb2NrIGNyaXRpY2FsIHNlY3Rpb25zCmFyZSBzaG9ydCB0
aGUgbnVtYmVyIG9mIGNvbnRlbmRpbmcgcmVhZGVycyBhcmUgc21hbGwuCgpTaWduZWQtb2Zm
LWJ5OiBXYWltYW4gTG9uZyA8bG9uZ21hbkByZWRoYXQuY29tPgpTaWduZWQtb2ZmLWJ5OiBQ
ZXRlciBaaWpsc3RyYSAoSW50ZWwpIDxwZXRlcnpAaW5mcmFkZWFkLm9yZz4KUmV2aWV3ZWQt
Ynk6IERhdmlkbG9ociBCdWVzbyA8ZGJ1ZXNvQHN1c2UuZGU+Ckxpbms6IGh0dHBzOi8vbGtt
bC5rZXJuZWwub3JnL3IvMjAyMDExMjEwNDE0MTYuMTIyODUtMy1sb25nbWFuQHJlZGhhdC5j
b20KLS0tCiBrZXJuZWwvbG9ja2luZy9yd3NlbS5jIHwgMTYgKysrKysrKysrKysrKystLQog
MSBmaWxlIGNoYW5nZWQsIDE0IGluc2VydGlvbnMoKyksIDIgZGVsZXRpb25zKC0pCgpkaWZm
IC0tZ2l0IGEva2VybmVsL2xvY2tpbmcvcndzZW0uYyBiL2tlcm5lbC9sb2NraW5nL3J3c2Vt
LmMKaW5kZXggN2JmNDViMGExYjFkLi5kNGY1YThhNDczYjMgMTAwNjQ0Ci0tLSBhL2tlcm5l
bC9sb2NraW5nL3J3c2VtLmMKKysrIGIva2VybmVsL2xvY2tpbmcvcndzZW0uYwpAQCAtOTk4
LDE2ICs5OTgsMjggQEAgcndzZW1fc3Bpbl9vbl9vd25lcihzdHJ1Y3Qgcndfc2VtYXBob3Jl
ICpzZW0sIHVuc2lnbmVkIGxvbmcgbm9uc3Bpbm5hYmxlKQogc3RhdGljIHN0cnVjdCByd19z
ZW1hcGhvcmUgX19zY2hlZCAqCiByd3NlbV9kb3duX3JlYWRfc2xvd3BhdGgoc3RydWN0IHJ3
X3NlbWFwaG9yZSAqc2VtLCBpbnQgc3RhdGUpCiB7Ci0JbG9uZyBjb3VudCwgYWRqdXN0bWVu
dCA9IC1SV1NFTV9SRUFERVJfQklBUzsKKwlsb25nIGNvdW50ID0gYXRvbWljX2xvbmdfcmVh
ZCgmc2VtLT5jb3VudCk7CisJbG9uZyBvd25lciwgYWRqdXN0bWVudCA9IC1SV1NFTV9SRUFE
RVJfQklBUzsKKwlsb25nIHJjbnQgPSAoY291bnQgPj4gUldTRU1fUkVBREVSX1NISUZUKTsK
IAlzdHJ1Y3QgcndzZW1fd2FpdGVyIHdhaXRlcjsKIAlERUZJTkVfV0FLRV9RKHdha2VfcSk7
CiAJYm9vbCB3YWtlID0gZmFsc2U7CiAKKwkvKgorCSAqIFRvIHByZXZlbnQgYSBjb25zdGFu
dCBzdHJlYW0gb2YgcmVhZGVycyBmcm9tIHN0YXJ2aW5nIGEgc2xlZXBpbmcKKwkgKiB3YWl0
ZXIsIGRvbid0IGF0dGVtcHQgb3B0aW1pc3RpYyBzcGlubmluZyBpZiB0aGUgbG9jayBpcyBj
dXJyZW50bHkKKwkgKiBvd25lZCBieSByZWFkZXJzLgorCSAqLworCW93bmVyID0gYXRvbWlj
X2xvbmdfcmVhZCgmc2VtLT5vd25lcik7CisJaWYgKChvd25lciAmIFJXU0VNX1JFQURFUl9P
V05FRCkgJiYgKHJjbnQgPiAxKSAmJgorCSAgICEoY291bnQgJiBSV1NFTV9XUklURVJfTE9D
S0VEKSkKKwkJZ290byBxdWV1ZTsKKwogCS8qCiAJICogU2F2ZSB0aGUgY3VycmVudCByZWFk
LW93bmVyIG9mIHJ3c2VtLCBpZiBhdmFpbGFibGUsIGFuZCB0aGUKIAkgKiByZWFkZXIgbm9u
c3Bpbm5hYmxlIGJpdC4KIAkgKi8KLQl3YWl0ZXIubGFzdF9yb3duZXIgPSBhdG9taWNfbG9u
Z19yZWFkKCZzZW0tPm93bmVyKTsKKwl3YWl0ZXIubGFzdF9yb3duZXIgPSBvd25lcjsKIAlp
ZiAoISh3YWl0ZXIubGFzdF9yb3duZXIgJiBSV1NFTV9SRUFERVJfT1dORUQpKQogCQl3YWl0
ZXIubGFzdF9yb3duZXIgJj0gUldTRU1fUkRfTk9OU1BJTk5BQkxFOwogCi0tIAoyLjI3LjAK
Cg==
--------------AdyRA7Eq4tOJeY8U1AgGjX0Q
Content-Type: text/x-patch; charset=UTF-8;
 name="0002-locking-rwsem-Make-handoff-bit-handling-more-consist.patch"
Content-Disposition: attachment;
 filename*0="0002-locking-rwsem-Make-handoff-bit-handling-more-consist.pa";
 filename*1="tch"
Content-Transfer-Encoding: base64

RnJvbSA1MmIyNjVlZTY5MThjNjY0MWFlOWI0NDBlNTVhN2VlZTZiOTQwMzlmIE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBXYWltYW4gTG9uZyA8bG9uZ21hbkByZWRoYXQuY29t
PgpEYXRlOiBUdWUsIDE1IEZlYiAyMDIyIDE2OjUxOjA0IC0wNTAwClN1YmplY3Q6IFtQQVRD
SCAyLzJdIGxvY2tpbmcvcndzZW06IE1ha2UgaGFuZG9mZiBiaXQgaGFuZGxpbmcgbW9yZSBj
b25zaXN0ZW50Cgpjb21taXQgZDI1N2NjOGNiOGQ1MzU1ZmZjNDNhOTZiYWI5NGRiN2I1YTMy
NDgwMyB1cHN0cmVhbS4KClRoZXJlIGFyZSBzb21lIGluY29uc2lzdGVuY3kgaW4gdGhlIHdh
eSB0aGF0IHRoZSBoYW5kb2ZmIGJpdCBpcyBiZWluZwpoYW5kbGVkIGluIHJlYWRlcnMgYW5k
IHdyaXRlcnMgdGhhdCBsZWFkIHRvIGEgcmFjZSBjb25kaXRpb24uCgpGaXJzdGx5LCB3aGVu
IGEgcXVldWUgaGVhZCB3cml0ZXIgc2V0IHRoZSBoYW5kb2ZmIGJpdCwgaXQgd2lsbCBjbGVh
cgppdCB3aGVuIHRoZSB3cml0ZXIgaXMgYmVpbmcga2lsbGVkIG9yIGludGVycnVwdGVkIG9u
IGl0cyB3YXkgb3V0CndpdGhvdXQgYWNxdWlyaW5nIHRoZSBsb2NrLiBUaGF0IGlzIG5vdCB0
aGUgY2FzZSBmb3IgYSBxdWV1ZSBoZWFkCnJlYWRlci4gVGhlIGhhbmRvZmYgYml0IHdpbGwg
c2ltcGx5IGJlIGluaGVyaXRlZCBieSB0aGUgbmV4dCB3YWl0ZXIuCgpTZWNvbmRseSwgaW4g
dGhlIG91dF9ub2xvY2sgcGF0aCBvZiByd3NlbV9kb3duX3JlYWRfc2xvd3BhdGgoKSwgYm90
aAp0aGUgd2FpdGVyIGFuZCBoYW5kb2ZmIGJpdHMgYXJlIGNsZWFyZWQgaWYgdGhlIHdhaXQg
cXVldWUgYmVjb21lcwplbXB0eS4gIEZvciByd3NlbV9kb3duX3dyaXRlX3Nsb3dwYXRoKCks
IGhvd2V2ZXIsIHRoZSBoYW5kb2ZmIGJpdCBpcwpub3QgY2hlY2tlZCBhbmQgY2xlYXJlZCBp
ZiB0aGUgd2FpdCBxdWV1ZSBpcyBlbXB0eS4gVGhpcyBjYW4KcG90ZW50aWFsbHkgbWFrZSB0
aGUgaGFuZG9mZiBiaXQgc2V0IHdpdGggZW1wdHkgd2FpdCBxdWV1ZS4KCldvcnNlLCB0aGUg
c2l0dWF0aW9uIGluIHJ3c2VtX2Rvd25fd3JpdGVfc2xvd3BhdGgoKSByZWxpZXMgb24gd3N0
YXRlLAphIHZhcmlhYmxlIHNldCBvdXRzaWRlIG9mIHRoZSBjcml0aWNhbCBzZWN0aW9uIGNv
bnRhaW5pbmcgdGhlIC0+Y291bnQKbWFuaXB1bGF0aW9uLCB0aGlzIGxlYWRzIHRvIHJhY2Ug
Y29uZGl0aW9uIHdoZXJlIFJXU0VNX0ZMQUdfSEFORE9GRgpjYW4gYmUgZG91YmxlIHN1YnRy
YWN0ZWQsIGNvcnJ1cHRpbmcgLT5jb3VudC4KClRvIG1ha2UgdGhlIGhhbmRvZmYgYml0IGhh
bmRsaW5nIG1vcmUgY29uc2lzdGVudCBhbmQgcm9idXN0LCBleHRyYWN0Cm91dCBoYW5kb2Zm
IGJpdCBjbGVhcmluZyBjb2RlIGludG8gdGhlIG5ldyByd3NlbV9kZWxfd2FpdGVyKCkgaGVs
cGVyCmZ1bmN0aW9uLiBBbHNvLCBjb21wbGV0ZWx5IGVyYWRpY2F0ZSB3c3RhdGU7IGFsd2F5
cyBldmFsdWF0ZQpldmVyeXRoaW5nIGluc2lkZSB0aGUgc2FtZSBjcml0aWNhbCBzZWN0aW9u
LgoKVGhlIGNvbW1vbiBmdW5jdGlvbiB3aWxsIG9ubHkgdXNlIGF0b21pY19sb25nX2FuZG5v
dCgpIHRvIGNsZWFyIGJpdHMKd2hlbiB0aGUgd2FpdCBxdWV1ZSBpcyBlbXB0eSB0byBhdm9p
ZCBwb3NzaWJsZSByYWNlIGNvbmRpdGlvbi4gIElmIHRoZQpmaXJzdCB3YWl0ZXIgd2l0aCBo
YW5kb2ZmIGJpdCBzZXQgaXMga2lsbGVkIG9yIGludGVycnVwdGVkIHRvIGV4aXQgdGhlCnNs
b3dwYXRoIHdpdGhvdXQgYWNxdWlyaW5nIHRoZSBsb2NrLCB0aGUgbmV4dCB3YWl0ZXIgd2ls
bCBpbmhlcml0IHRoZQpoYW5kb2ZmIGJpdC4KCldoaWxlIGF0IGl0LCBzaW1wbGlmeSB0aGUg
dHJ5bG9jayBmb3IgbG9vcCBpbgpyd3NlbV9kb3duX3dyaXRlX3Nsb3dwYXRoKCkgdG8gbWFr
ZSBpdCBlYXNpZXIgdG8gcmVhZC4KCkZpeGVzOiA0ZjIzZGJjMWU2NTcgKCJsb2NraW5nL3J3
c2VtOiBJbXBsZW1lbnQgbG9jayBoYW5kb2ZmIHRvIHByZXZlbnQgbG9jayBzdGFydmF0aW9u
IikKUmVwb3J0ZWQtYnk6IFpoZW5odWEgTWEgPG1hemhlbmh1YUB4aWFvbWkuY29tPgpTdWdn
ZXN0ZWQtYnk6IFBldGVyIFppamxzdHJhIDxwZXRlcnpAaW5mcmFkZWFkLm9yZz4KU2lnbmVk
LW9mZi1ieTogV2FpbWFuIExvbmcgPGxvbmdtYW5AcmVkaGF0LmNvbT4KU2lnbmVkLW9mZi1i
eTogUGV0ZXIgWmlqbHN0cmEgKEludGVsKSA8cGV0ZXJ6QGluZnJhZGVhZC5vcmc+Ckxpbms6
IGh0dHBzOi8vbGttbC5rZXJuZWwub3JnL3IvMjAyMTExMTYwMTI5MTIuNzIzOTgwLTEtbG9u
Z21hbkByZWRoYXQuY29tCi0tLQoga2VybmVsL2xvY2tpbmcvcndzZW0uYyB8IDE3MSArKysr
KysrKysrKysrKysrKysrKy0tLS0tLS0tLS0tLS0tLS0tLS0tLQogMSBmaWxlIGNoYW5nZWQs
IDg1IGluc2VydGlvbnMoKyksIDg2IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2tlcm5l
bC9sb2NraW5nL3J3c2VtLmMgYi9rZXJuZWwvbG9ja2luZy9yd3NlbS5jCmluZGV4IGQ0ZjVh
OGE0NzNiMy4uYzNjYjhlYTFhODJiIDEwMDY0NAotLS0gYS9rZXJuZWwvbG9ja2luZy9yd3Nl
bS5jCisrKyBiL2tlcm5lbC9sb2NraW5nL3J3c2VtLmMKQEAgLTE0Myw5ICsxNDMsOSBAQAog
ICogYXRvbWljX2xvbmdfY21weGNoZygpIHdpbGwgYmUgdXNlZCB0byBvYnRhaW4gd3JpdGVy
IGxvY2suCiAgKgogICogVGhlcmUgYXJlIHRocmVlIHBsYWNlcyB3aGVyZSB0aGUgbG9jayBo
YW5kb2ZmIGJpdCBtYXkgYmUgc2V0IG9yIGNsZWFyZWQuCi0gKiAxKSByd3NlbV9tYXJrX3dh
a2UoKSBmb3IgcmVhZGVycy4KLSAqIDIpIHJ3c2VtX3RyeV93cml0ZV9sb2NrKCkgZm9yIHdy
aXRlcnMuCi0gKiAzKSBFcnJvciBwYXRoIG9mIHJ3c2VtX2Rvd25fd3JpdGVfc2xvd3BhdGgo
KS4KKyAqIDEpIHJ3c2VtX21hcmtfd2FrZSgpIGZvciByZWFkZXJzCQktLSBzZXQsIGNsZWFy
CisgKiAyKSByd3NlbV90cnlfd3JpdGVfbG9jaygpIGZvciB3cml0ZXJzCS0tIHNldCwgY2xl
YXIKKyAqIDMpIHJ3c2VtX2RlbF93YWl0ZXIoKQkJCS0tIGNsZWFyCiAgKgogICogRm9yIGFs
bCB0aGUgYWJvdmUgY2FzZXMsIHdhaXRfbG9jayB3aWxsIGJlIGhlbGQuIEEgd3JpdGVyIG11
c3QgYWxzbwogICogYmUgdGhlIGZpcnN0IG9uZSBpbiB0aGUgd2FpdF9saXN0IHRvIGJlIGVs
aWdpYmxlIGZvciBzZXR0aW5nIHRoZSBoYW5kb2ZmCkBAIC0zNjEsNiArMzYxLDkgQEAgc3Ry
dWN0IHJ3c2VtX3dhaXRlciB7CiAJZW51bSByd3NlbV93YWl0ZXJfdHlwZSB0eXBlOwogCXVu
c2lnbmVkIGxvbmcgdGltZW91dDsKIAl1bnNpZ25lZCBsb25nIGxhc3Rfcm93bmVyOworCisJ
LyogV3JpdGVyIG9ubHksIG5vdCBpbml0aWFsaXplZCBpbiByZWFkZXIgKi8KKwlib29sIGhh
bmRvZmZfc2V0OwogfTsKICNkZWZpbmUgcndzZW1fZmlyc3Rfd2FpdGVyKHNlbSkgXAogCWxp
c3RfZmlyc3RfZW50cnkoJnNlbS0+d2FpdF9saXN0LCBzdHJ1Y3QgcndzZW1fd2FpdGVyLCBs
aXN0KQpAQCAtMzcxLDEyICszNzQsNiBAQCBlbnVtIHJ3c2VtX3dha2VfdHlwZSB7CiAJUldT
RU1fV0FLRV9SRUFEX09XTkVECS8qIFdha2VyIHRocmVhZCBob2xkcyB0aGUgcmVhZCBsb2Nr
ICovCiB9OwogCi1lbnVtIHdyaXRlcl93YWl0X3N0YXRlIHsKLQlXUklURVJfTk9UX0ZJUlNU
LAkvKiBXcml0ZXIgaXMgbm90IGZpcnN0IGluIHdhaXQgbGlzdCAqLwotCVdSSVRFUl9GSVJT
VCwJCS8qIFdyaXRlciBpcyBmaXJzdCBpbiB3YWl0IGxpc3QgICAgICovCi0JV1JJVEVSX0hB
TkRPRkYJCS8qIFdyaXRlciBpcyBmaXJzdCAmIGhhbmRvZmYgbmVlZGVkICovCi19OwotCiAv
KgogICogVGhlIHR5cGljYWwgSFogdmFsdWUgaXMgZWl0aGVyIDI1MCBvciAxMDAwLiBTbyBz
ZXQgdGhlIG1pbmltdW0gd2FpdGluZwogICogdGltZSB0byBhdCBsZWFzdCA0bXMgb3IgMSBq
aWZmeSAoaWYgaXQgaXMgaGlnaGVyIHRoYW4gNG1zKSBpbiB0aGUgd2FpdApAQCAtMzkyLDYg
KzM4OSwzMSBAQCBlbnVtIHdyaXRlcl93YWl0X3N0YXRlIHsKICAqLwogI2RlZmluZSBNQVhf
UkVBREVSU19XQUtFVVAJMHgxMDAKIAorc3RhdGljIGlubGluZSB2b2lkCityd3NlbV9hZGRf
d2FpdGVyKHN0cnVjdCByd19zZW1hcGhvcmUgKnNlbSwgc3RydWN0IHJ3c2VtX3dhaXRlciAq
d2FpdGVyKQoreworCWxvY2tkZXBfYXNzZXJ0X2hlbGQoJnNlbS0+d2FpdF9sb2NrKTsKKwls
aXN0X2FkZF90YWlsKCZ3YWl0ZXItPmxpc3QsICZzZW0tPndhaXRfbGlzdCk7CisJLyogY2Fs
bGVyIHdpbGwgc2V0IFJXU0VNX0ZMQUdfV0FJVEVSUyAqLworfQorCisvKgorICogUmVtb3Zl
IGEgd2FpdGVyIGZyb20gdGhlIHdhaXRfbGlzdCBhbmQgY2xlYXIgZmxhZ3MuCisgKgorICog
Qm90aCByd3NlbV9tYXJrX3dha2UoKSBhbmQgcndzZW1fdHJ5X3dyaXRlX2xvY2soKSBjb250
YWluIGEgZnVsbCAnY29weScgb2YKKyAqIHRoaXMgZnVuY3Rpb24uIE1vZGlmeSB3aXRoIGNh
cmUuCisgKi8KK3N0YXRpYyBpbmxpbmUgdm9pZAorcndzZW1fZGVsX3dhaXRlcihzdHJ1Y3Qg
cndfc2VtYXBob3JlICpzZW0sIHN0cnVjdCByd3NlbV93YWl0ZXIgKndhaXRlcikKK3sKKwls
b2NrZGVwX2Fzc2VydF9oZWxkKCZzZW0tPndhaXRfbG9jayk7CisJbGlzdF9kZWwoJndhaXRl
ci0+bGlzdCk7CisJaWYgKGxpa2VseSghbGlzdF9lbXB0eSgmc2VtLT53YWl0X2xpc3QpKSkK
KwkJcmV0dXJuOworCisJYXRvbWljX2xvbmdfYW5kbm90KFJXU0VNX0ZMQUdfSEFORE9GRiB8
IFJXU0VNX0ZMQUdfV0FJVEVSUywgJnNlbS0+Y291bnQpOworfQorCiAvKgogICogaGFuZGxl
IHRoZSBsb2NrIHJlbGVhc2Ugd2hlbiBwcm9jZXNzZXMgYmxvY2tlZCBvbiBpdCB0aGF0IGNh
biBub3cgcnVuCiAgKiAtIGlmIHdlIGNvbWUgaGVyZSBmcm9tIHVwX3h4eHgoKSwgdGhlbiB0
aGUgUldTRU1fRkxBR19XQUlURVJTIGJpdCBtdXN0CkBAIC00MDMsNiArNDI1LDggQEAgZW51
bSB3cml0ZXJfd2FpdF9zdGF0ZSB7CiAgKiAgIHByZWZlcmFibHkgd2hlbiB0aGUgd2FpdF9s
b2NrIGlzIHJlbGVhc2VkCiAgKiAtIHdva2VuIHByb2Nlc3MgYmxvY2tzIGFyZSBkaXNjYXJk
ZWQgZnJvbSB0aGUgbGlzdCBhZnRlciBoYXZpbmcgdGFzayB6ZXJvZWQKICAqIC0gd3JpdGVy
cyBhcmUgb25seSBtYXJrZWQgd29rZW4gaWYgZG93bmdyYWRpbmcgaXMgZmFsc2UKKyAqCisg
KiBJbXBsaWVzIHJ3c2VtX2RlbF93YWl0ZXIoKSBmb3IgYWxsIHdva2VuIHJlYWRlcnMuCiAg
Ki8KIHN0YXRpYyB2b2lkIHJ3c2VtX21hcmtfd2FrZShzdHJ1Y3Qgcndfc2VtYXBob3JlICpz
ZW0sCiAJCQkgICAgZW51bSByd3NlbV93YWtlX3R5cGUgd2FrZV90eXBlLApAQCAtNTIxLDE4
ICs1NDUsMjUgQEAgc3RhdGljIHZvaWQgcndzZW1fbWFya193YWtlKHN0cnVjdCByd19zZW1h
cGhvcmUgKnNlbSwKIAogCWFkanVzdG1lbnQgPSB3b2tlbiAqIFJXU0VNX1JFQURFUl9CSUFT
IC0gYWRqdXN0bWVudDsKIAlsb2NrZXZlbnRfY29uZF9pbmMocndzZW1fd2FrZV9yZWFkZXIs
IHdva2VuKTsKKworCW9sZGNvdW50ID0gYXRvbWljX2xvbmdfcmVhZCgmc2VtLT5jb3VudCk7
CiAJaWYgKGxpc3RfZW1wdHkoJnNlbS0+d2FpdF9saXN0KSkgewotCQkvKiBoaXQgZW5kIG9m
IGxpc3QgYWJvdmUgKi8KKwkJLyoKKwkJICogQ29tYmluZWQgd2l0aCBsaXN0X21vdmVfdGFp
bCgpIGFib3ZlLCB0aGlzIGltcGxpZXMKKwkJICogcndzZW1fZGVsX3dhaXRlcigpLgorCQkg
Ki8KIAkJYWRqdXN0bWVudCAtPSBSV1NFTV9GTEFHX1dBSVRFUlM7CisJCWlmIChvbGRjb3Vu
dCAmIFJXU0VNX0ZMQUdfSEFORE9GRikKKwkJCWFkanVzdG1lbnQgLT0gUldTRU1fRkxBR19I
QU5ET0ZGOworCX0gZWxzZSBpZiAod29rZW4pIHsKKwkJLyoKKwkJICogV2hlbiB3ZSd2ZSB3
b2tlbiBhIHJlYWRlciwgd2Ugbm8gbG9uZ2VyIG5lZWQgdG8gZm9yY2UKKwkJICogd3JpdGVy
cyB0byBnaXZlIHVwIHRoZSBsb2NrIGFuZCB3ZSBjYW4gY2xlYXIgSEFORE9GRi4KKwkJICov
CisJCWlmIChvbGRjb3VudCAmIFJXU0VNX0ZMQUdfSEFORE9GRikKKwkJCWFkanVzdG1lbnQg
LT0gUldTRU1fRkxBR19IQU5ET0ZGOwogCX0KIAotCS8qCi0JICogV2hlbiB3ZSd2ZSB3b2tl
biBhIHJlYWRlciwgd2Ugbm8gbG9uZ2VyIG5lZWQgdG8gZm9yY2Ugd3JpdGVycwotCSAqIHRv
IGdpdmUgdXAgdGhlIGxvY2sgYW5kIHdlIGNhbiBjbGVhciBIQU5ET0ZGLgotCSAqLwotCWlm
ICh3b2tlbiAmJiAoYXRvbWljX2xvbmdfcmVhZCgmc2VtLT5jb3VudCkgJiBSV1NFTV9GTEFH
X0hBTkRPRkYpKQotCQlhZGp1c3RtZW50IC09IFJXU0VNX0ZMQUdfSEFORE9GRjsKLQogCWlm
IChhZGp1c3RtZW50KQogCQlhdG9taWNfbG9uZ19hZGQoYWRqdXN0bWVudCwgJnNlbS0+Y291
bnQpOwogCkBAIC01NjMsMTIgKzU5NCwxMiBAQCBzdGF0aWMgdm9pZCByd3NlbV9tYXJrX3dh
a2Uoc3RydWN0IHJ3X3NlbWFwaG9yZSAqc2VtLAogICogcmFjZSBjb25kaXRpb25zIGJldHdl
ZW4gY2hlY2tpbmcgdGhlIHJ3c2VtIHdhaXQgbGlzdCBhbmQgc2V0dGluZyB0aGUKICAqIHNl
bS0+Y291bnQgYWNjb3JkaW5nbHkuCiAgKgotICogSWYgd3N0YXRlIGlzIFdSSVRFUl9IQU5E
T0ZGLCBpdCB3aWxsIG1ha2Ugc3VyZSB0aGF0IGVpdGhlciB0aGUgaGFuZG9mZgotICogYml0
IGlzIHNldCBvciB0aGUgbG9jayBpcyBhY3F1aXJlZCB3aXRoIGhhbmRvZmYgYml0IGNsZWFy
ZWQuCisgKiBJbXBsaWVzIHJ3c2VtX2RlbF93YWl0ZXIoKSBvbiBzdWNjZXNzLgogICovCiBz
dGF0aWMgaW5saW5lIGJvb2wgcndzZW1fdHJ5X3dyaXRlX2xvY2soc3RydWN0IHJ3X3NlbWFw
aG9yZSAqc2VtLAotCQkJCQllbnVtIHdyaXRlcl93YWl0X3N0YXRlIHdzdGF0ZSkKKwkJCQkJ
c3RydWN0IHJ3c2VtX3dhaXRlciAqd2FpdGVyKQogeworCWJvb2wgZmlyc3QgPSByd3NlbV9m
aXJzdF93YWl0ZXIoc2VtKSA9PSB3YWl0ZXI7CiAJbG9uZyBjb3VudCwgbmV3OwogCiAJbG9j
a2RlcF9hc3NlcnRfaGVsZCgmc2VtLT53YWl0X2xvY2spOwpAQCAtNTc3LDEzICs2MDgsMTkg
QEAgc3RhdGljIGlubGluZSBib29sIHJ3c2VtX3RyeV93cml0ZV9sb2NrKHN0cnVjdCByd19z
ZW1hcGhvcmUgKnNlbSwKIAlkbyB7CiAJCWJvb2wgaGFzX2hhbmRvZmYgPSAhIShjb3VudCAm
IFJXU0VNX0ZMQUdfSEFORE9GRik7CiAKLQkJaWYgKGhhc19oYW5kb2ZmICYmIHdzdGF0ZSA9
PSBXUklURVJfTk9UX0ZJUlNUKQotCQkJcmV0dXJuIGZhbHNlOworCQlpZiAoaGFzX2hhbmRv
ZmYpIHsKKwkJCWlmICghZmlyc3QpCisJCQkJcmV0dXJuIGZhbHNlOworCisJCQkvKiBGaXJz
dCB3YWl0ZXIgaW5oZXJpdHMgYSBwcmV2aW91c2x5IHNldCBoYW5kb2ZmIGJpdCAqLworCQkJ
d2FpdGVyLT5oYW5kb2ZmX3NldCA9IHRydWU7CisJCX0KIAogCQluZXcgPSBjb3VudDsKIAog
CQlpZiAoY291bnQgJiBSV1NFTV9MT0NLX01BU0spIHsKLQkJCWlmIChoYXNfaGFuZG9mZiB8
fCAod3N0YXRlICE9IFdSSVRFUl9IQU5ET0ZGKSkKKwkJCWlmIChoYXNfaGFuZG9mZiB8fCAo
IXJ0X3Rhc2sod2FpdGVyLT50YXNrKSAmJgorCQkJCQkgICAgIXRpbWVfYWZ0ZXIoamlmZmll
cywgd2FpdGVyLT50aW1lb3V0KSkpCiAJCQkJcmV0dXJuIGZhbHNlOwogCiAJCQluZXcgfD0g
UldTRU1fRkxBR19IQU5ET0ZGOwpAQCAtNjAwLDkgKzYzNywxNyBAQCBzdGF0aWMgaW5saW5l
IGJvb2wgcndzZW1fdHJ5X3dyaXRlX2xvY2soc3RydWN0IHJ3X3NlbWFwaG9yZSAqc2VtLAog
CSAqIFdlIGhhdmUgZWl0aGVyIGFjcXVpcmVkIHRoZSBsb2NrIHdpdGggaGFuZG9mZiBiaXQg
Y2xlYXJlZCBvcgogCSAqIHNldCB0aGUgaGFuZG9mZiBiaXQuCiAJICovCi0JaWYgKG5ldyAm
IFJXU0VNX0ZMQUdfSEFORE9GRikKKwlpZiAobmV3ICYgUldTRU1fRkxBR19IQU5ET0ZGKSB7
CisJCXdhaXRlci0+aGFuZG9mZl9zZXQgPSB0cnVlOworCQlsb2NrZXZlbnRfaW5jKHJ3c2Vt
X3dsb2NrX2hhbmRvZmYpOwogCQlyZXR1cm4gZmFsc2U7CisJfQogCisJLyoKKwkgKiBIYXZl
IHJ3c2VtX3RyeV93cml0ZV9sb2NrKCkgZnVsbHkgaW1wbHkgcndzZW1fZGVsX3dhaXRlcigp
IG9uCisJICogc3VjY2Vzcy4KKwkgKi8KKwlsaXN0X2RlbCgmd2FpdGVyLT5saXN0KTsKIAly
d3NlbV9zZXRfb3duZXIoc2VtKTsKIAlyZXR1cm4gdHJ1ZTsKIH0KQEAgLTEwNzUsNyArMTEy
MCw3IEBAIHJ3c2VtX2Rvd25fcmVhZF9zbG93cGF0aChzdHJ1Y3Qgcndfc2VtYXBob3JlICpz
ZW0sIGludCBzdGF0ZSkKIAkJfQogCQlhZGp1c3RtZW50ICs9IFJXU0VNX0ZMQUdfV0FJVEVS
UzsKIAl9Ci0JbGlzdF9hZGRfdGFpbCgmd2FpdGVyLmxpc3QsICZzZW0tPndhaXRfbGlzdCk7
CisJcndzZW1fYWRkX3dhaXRlcihzZW0sICZ3YWl0ZXIpOwogCiAJLyogd2UncmUgbm93IHdh
aXRpbmcgb24gdGhlIGxvY2ssIGJ1dCBubyBsb25nZXIgYWN0aXZlbHkgbG9ja2luZyAqLwog
CWlmIChhZGp1c3RtZW50KQpAQCAtMTEyNCwxMSArMTE2OSw3IEBAIHJ3c2VtX2Rvd25fcmVh
ZF9zbG93cGF0aChzdHJ1Y3Qgcndfc2VtYXBob3JlICpzZW0sIGludCBzdGF0ZSkKIAlyZXR1
cm4gc2VtOwogCiBvdXRfbm9sb2NrOgotCWxpc3RfZGVsKCZ3YWl0ZXIubGlzdCk7Ci0JaWYg
KGxpc3RfZW1wdHkoJnNlbS0+d2FpdF9saXN0KSkgewotCQlhdG9taWNfbG9uZ19hbmRub3Qo
UldTRU1fRkxBR19XQUlURVJTfFJXU0VNX0ZMQUdfSEFORE9GRiwKLQkJCQkgICAmc2VtLT5j
b3VudCk7Ci0JfQorCXJ3c2VtX2RlbF93YWl0ZXIoc2VtLCAmd2FpdGVyKTsKIAlyYXdfc3Bp
bl91bmxvY2tfaXJxKCZzZW0tPndhaXRfbG9jayk7CiAJX19zZXRfY3VycmVudF9zdGF0ZShU
QVNLX1JVTk5JTkcpOwogCWxvY2tldmVudF9pbmMocndzZW1fcmxvY2tfZmFpbCk7CkBAIC0x
MTU2LDkgKzExOTcsNyBAQCByd3NlbV9kb3duX3dyaXRlX3Nsb3dwYXRoKHN0cnVjdCByd19z
ZW1hcGhvcmUgKnNlbSwgaW50IHN0YXRlKQogewogCWxvbmcgY291bnQ7CiAJYm9vbCBkaXNh
YmxlX3JzcGluOwotCWVudW0gd3JpdGVyX3dhaXRfc3RhdGUgd3N0YXRlOwogCXN0cnVjdCBy
d3NlbV93YWl0ZXIgd2FpdGVyOwotCXN0cnVjdCByd19zZW1hcGhvcmUgKnJldCA9IHNlbTsK
IAlERUZJTkVfV0FLRV9RKHdha2VfcSk7CiAKIAkvKiBkbyBvcHRpbWlzdGljIHNwaW5uaW5n
IGFuZCBzdGVhbCBsb2NrIGlmIHBvc3NpYmxlICovCkBAIC0xMTgyLDE2ICsxMjIxLDEzIEBA
IHJ3c2VtX2Rvd25fd3JpdGVfc2xvd3BhdGgoc3RydWN0IHJ3X3NlbWFwaG9yZSAqc2VtLCBp
bnQgc3RhdGUpCiAJd2FpdGVyLnRhc2sgPSBjdXJyZW50OwogCXdhaXRlci50eXBlID0gUldT
RU1fV0FJVElOR19GT1JfV1JJVEU7CiAJd2FpdGVyLnRpbWVvdXQgPSBqaWZmaWVzICsgUldT
RU1fV0FJVF9USU1FT1VUOworCXdhaXRlci5oYW5kb2ZmX3NldCA9IGZhbHNlOwogCiAJcmF3
X3NwaW5fbG9ja19pcnEoJnNlbS0+d2FpdF9sb2NrKTsKLQotCS8qIGFjY291bnQgZm9yIHRo
aXMgYmVmb3JlIGFkZGluZyBhIG5ldyBlbGVtZW50IHRvIHRoZSBsaXN0ICovCi0Jd3N0YXRl
ID0gbGlzdF9lbXB0eSgmc2VtLT53YWl0X2xpc3QpID8gV1JJVEVSX0ZJUlNUIDogV1JJVEVS
X05PVF9GSVJTVDsKLQotCWxpc3RfYWRkX3RhaWwoJndhaXRlci5saXN0LCAmc2VtLT53YWl0
X2xpc3QpOworCXJ3c2VtX2FkZF93YWl0ZXIoc2VtLCAmd2FpdGVyKTsKIAogCS8qIHdlJ3Jl
IG5vdyB3YWl0aW5nIG9uIHRoZSBsb2NrICovCi0JaWYgKHdzdGF0ZSA9PSBXUklURVJfTk9U
X0ZJUlNUKSB7CisJaWYgKHJ3c2VtX2ZpcnN0X3dhaXRlcihzZW0pICE9ICZ3YWl0ZXIpIHsK
IAkJY291bnQgPSBhdG9taWNfbG9uZ19yZWFkKCZzZW0tPmNvdW50KTsKIAogCQkvKgpAQCAt
MTIyNywxMyArMTI2MywxNiBAQCByd3NlbV9kb3duX3dyaXRlX3Nsb3dwYXRoKHN0cnVjdCBy
d19zZW1hcGhvcmUgKnNlbSwgaW50IHN0YXRlKQogCS8qIHdhaXQgdW50aWwgd2Ugc3VjY2Vz
c2Z1bGx5IGFjcXVpcmUgdGhlIGxvY2sgKi8KIAlzZXRfY3VycmVudF9zdGF0ZShzdGF0ZSk7
CiAJZm9yICg7OykgewotCQlpZiAocndzZW1fdHJ5X3dyaXRlX2xvY2soc2VtLCB3c3RhdGUp
KSB7CisJCWlmIChyd3NlbV90cnlfd3JpdGVfbG9jayhzZW0sICZ3YWl0ZXIpKSB7CiAJCQkv
KiByd3NlbV90cnlfd3JpdGVfbG9jaygpIGltcGxpZXMgQUNRVUlSRSBvbiBzdWNjZXNzICov
CiAJCQlicmVhazsKIAkJfQogCiAJCXJhd19zcGluX3VubG9ja19pcnEoJnNlbS0+d2FpdF9s
b2NrKTsKIAorCQlpZiAoc2lnbmFsX3BlbmRpbmdfc3RhdGUoc3RhdGUsIGN1cnJlbnQpKQor
CQkJZ290byBvdXRfbm9sb2NrOworCiAJCS8qCiAJCSAqIEFmdGVyIHNldHRpbmcgdGhlIGhh
bmRvZmYgYml0IGFuZCBmYWlsaW5nIHRvIGFjcXVpcmUKIAkJICogdGhlIGxvY2ssIGF0dGVt
cHQgdG8gc3BpbiBvbiBvd25lciB0byBhY2NlbGVyYXRlIGxvY2sKQEAgLTEyNDIsNzEgKzEy
ODEsMzEgQEAgcndzZW1fZG93bl93cml0ZV9zbG93cGF0aChzdHJ1Y3Qgcndfc2VtYXBob3Jl
ICpzZW0sIGludCBzdGF0ZSkKIAkJICogSW4gdGhpcyBjYXNlLCB3ZSBhdHRlbXB0IHRvIGFj
cXVpcmUgdGhlIGxvY2sgYWdhaW4KIAkJICogd2l0aG91dCBzbGVlcGluZy4KIAkJICovCi0J
CWlmICh3c3RhdGUgPT0gV1JJVEVSX0hBTkRPRkYgJiYKKwkJaWYgKHdhaXRlci5oYW5kb2Zm
X3NldCAmJgogCQkgICAgcndzZW1fc3Bpbl9vbl9vd25lcihzZW0sIFJXU0VNX05PTlNQSU5O
QUJMRSkgPT0gT1dORVJfTlVMTCkKIAkJCWdvdG8gdHJ5bG9ja19hZ2FpbjsKIAotCQkvKiBC
bG9jayB1bnRpbCB0aGVyZSBhcmUgbm8gYWN0aXZlIGxvY2tlcnMuICovCi0JCWZvciAoOzsp
IHsKLQkJCWlmIChzaWduYWxfcGVuZGluZ19zdGF0ZShzdGF0ZSwgY3VycmVudCkpCi0JCQkJ
Z290byBvdXRfbm9sb2NrOwotCi0JCQlzY2hlZHVsZSgpOwotCQkJbG9ja2V2ZW50X2luYyhy
d3NlbV9zbGVlcF93cml0ZXIpOwotCQkJc2V0X2N1cnJlbnRfc3RhdGUoc3RhdGUpOwotCQkJ
LyoKLQkJCSAqIElmIEhBTkRPRkYgYml0IGlzIHNldCwgdW5jb25kaXRpb25hbGx5IGRvCi0J
CQkgKiBhIHRyeWxvY2suCi0JCQkgKi8KLQkJCWlmICh3c3RhdGUgPT0gV1JJVEVSX0hBTkRP
RkYpCi0JCQkJYnJlYWs7Ci0KLQkJCWlmICgod3N0YXRlID09IFdSSVRFUl9OT1RfRklSU1Qp
ICYmCi0JCQkgICAgKHJ3c2VtX2ZpcnN0X3dhaXRlcihzZW0pID09ICZ3YWl0ZXIpKQotCQkJ
CXdzdGF0ZSA9IFdSSVRFUl9GSVJTVDsKLQotCQkJY291bnQgPSBhdG9taWNfbG9uZ19yZWFk
KCZzZW0tPmNvdW50KTsKLQkJCWlmICghKGNvdW50ICYgUldTRU1fTE9DS19NQVNLKSkKLQkJ
CQlicmVhazsKLQotCQkJLyoKLQkJCSAqIFRoZSBzZXR0aW5nIG9mIHRoZSBoYW5kb2ZmIGJp
dCBpcyBkZWZlcnJlZAotCQkJICogdW50aWwgcndzZW1fdHJ5X3dyaXRlX2xvY2soKSBpcyBj
YWxsZWQuCi0JCQkgKi8KLQkJCWlmICgod3N0YXRlID09IFdSSVRFUl9GSVJTVCkgJiYgKHJ0
X3Rhc2soY3VycmVudCkgfHwKLQkJCSAgICB0aW1lX2FmdGVyKGppZmZpZXMsIHdhaXRlci50
aW1lb3V0KSkpIHsKLQkJCQl3c3RhdGUgPSBXUklURVJfSEFORE9GRjsKLQkJCQlsb2NrZXZl
bnRfaW5jKHJ3c2VtX3dsb2NrX2hhbmRvZmYpOwotCQkJCWJyZWFrOwotCQkJfQotCQl9CisJ
CXNjaGVkdWxlKCk7CisJCWxvY2tldmVudF9pbmMocndzZW1fc2xlZXBfd3JpdGVyKTsKKwkJ
c2V0X2N1cnJlbnRfc3RhdGUoc3RhdGUpOwogdHJ5bG9ja19hZ2FpbjoKIAkJcmF3X3NwaW5f
bG9ja19pcnEoJnNlbS0+d2FpdF9sb2NrKTsKIAl9CiAJX19zZXRfY3VycmVudF9zdGF0ZShU
QVNLX1JVTk5JTkcpOwotCWxpc3RfZGVsKCZ3YWl0ZXIubGlzdCk7CiAJcndzZW1fZGlzYWJs
ZV9yZWFkZXJfb3B0c3BpbihzZW0sIGRpc2FibGVfcnNwaW4pOwogCXJhd19zcGluX3VubG9j
a19pcnEoJnNlbS0+d2FpdF9sb2NrKTsKIAlsb2NrZXZlbnRfaW5jKHJ3c2VtX3dsb2NrKTsK
LQotCXJldHVybiByZXQ7CisJcmV0dXJuIHNlbTsKIAogb3V0X25vbG9jazoKIAlfX3NldF9j
dXJyZW50X3N0YXRlKFRBU0tfUlVOTklORyk7CiAJcmF3X3NwaW5fbG9ja19pcnEoJnNlbS0+
d2FpdF9sb2NrKTsKLQlsaXN0X2RlbCgmd2FpdGVyLmxpc3QpOwotCi0JaWYgKHVubGlrZWx5
KHdzdGF0ZSA9PSBXUklURVJfSEFORE9GRikpCi0JCWF0b21pY19sb25nX2FkZCgtUldTRU1f
RkxBR19IQU5ET0ZGLCAgJnNlbS0+Y291bnQpOwotCi0JaWYgKGxpc3RfZW1wdHkoJnNlbS0+
d2FpdF9saXN0KSkKLQkJYXRvbWljX2xvbmdfYW5kbm90KFJXU0VNX0ZMQUdfV0FJVEVSUywg
JnNlbS0+Y291bnQpOwotCWVsc2UKKwlyd3NlbV9kZWxfd2FpdGVyKHNlbSwgJndhaXRlcik7
CisJaWYgKCFsaXN0X2VtcHR5KCZzZW0tPndhaXRfbGlzdCkpCiAJCXJ3c2VtX21hcmtfd2Fr
ZShzZW0sIFJXU0VNX1dBS0VfQU5ZLCAmd2FrZV9xKTsKIAlyYXdfc3Bpbl91bmxvY2tfaXJx
KCZzZW0tPndhaXRfbG9jayk7CiAJd2FrZV91cF9xKCZ3YWtlX3EpOwogCWxvY2tldmVudF9p
bmMocndzZW1fd2xvY2tfZmFpbCk7Ci0KIAlyZXR1cm4gRVJSX1BUUigtRUlOVFIpOwogfQog
Ci0tIAoyLjI3LjAKCg==

--------------AdyRA7Eq4tOJeY8U1AgGjX0Q--

