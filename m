Return-Path: <linux-kernel-owner@vger.kernel.org>
X-Original-To: lists+linux-kernel@lfdr.de
Delivered-To: lists+linux-kernel@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.lfdr.de (Postfix) with ESMTP id 48ECB47AA75
	for <lists+linux-kernel@lfdr.de>; Mon, 20 Dec 2021 14:38:25 +0100 (CET)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232977AbhLTNiW (ORCPT <rfc822;lists+linux-kernel@lfdr.de>);
        Mon, 20 Dec 2021 08:38:22 -0500
Received: from ams.source.kernel.org ([145.40.68.75]:48252 "EHLO
        ams.source.kernel.org" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S232979AbhLTNiV (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 20 Dec 2021 08:38:21 -0500
Received: from smtp.kernel.org (relay.kernel.org [52.25.139.140])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by ams.source.kernel.org (Postfix) with ESMTPS id 793E0B80E7A;
        Mon, 20 Dec 2021 13:38:20 +0000 (UTC)
Received: by smtp.kernel.org (Postfix) with ESMTPSA id 33A8BC36AE7;
        Mon, 20 Dec 2021 13:38:19 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=k20201202; t=1640007499;
        bh=ryGUhJ/xAmArVAIl6FINczOMNdKbaJ7SW5D/3rb6rFk=;
        h=Date:From:To:Cc:Subject:In-Reply-To:References:From;
        b=ddEkUh2A2yObszUqn4ugcrlJZQaZIx5A1o1MT9kZWk4rQfQdcAyLVjtEEicZ8+84A
         ygqwL5eiTSL2gW5/2WdBDVM/BCns6Mae5ygrC0gj7QZF/s3FG5yiJD1+9ceIiopqgf
         YkwJPBNDYy4ERpqTDVJI+K2gqazVszzvewZVhCSEhep/yvvtYX0pUkqfiBYSr9KFQQ
         54P2Ch9ayc/By87F+dUyn5qIdwkXXs4GC8YomRh7ieXkeneJH5EObpiT8uWlqVhTsI
         Z3xQLduSpWdnY6PWT/ewM6iMKfEFfcMzJmxo2drG3QSXF20sQHDmiT1Y9IEt3AO4yq
         eeBdy/BZaeMGg==
Received: from cfbb000407.r.cam.camfibre.uk ([185.219.108.64] helo=why.misterjones.org)
        by disco-boy.misterjones.org with esmtpsa  (TLS1.3) tls TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
        (Exim 4.94.2)
        (envelope-from <maz@kernel.org>)
        id 1mzIrp-00DIED-45; Mon, 20 Dec 2021 13:38:17 +0000
Date:   Mon, 20 Dec 2021 13:38:16 +0000
Message-ID: <878rwfwg53.wl-maz@kernel.org>
From:   Marc Zyngier <maz@kernel.org>
To:     Hector Martin <marcan@marcan.st>
Cc:     Thomas Gleixner <tglx@linutronix.de>,
        Rob Herring <robh+dt@kernel.org>,
        Sven Peter <sven@svenpeter.dev>,
        Alyssa Rosenzweig <alyssa@rosenzweig.io>,
        linux-arm-kernel@lists.infradead.org, linux-kernel@vger.kernel.org,
        devicetree@vger.kernel.org
Subject: Re: [PATCH 5/6] irqchip/apple-aic: Support multiple dies
In-Reply-To: <d9f96032-c20c-beb0-feba-a66a9b17af0c@marcan.st>
References: <20211209043249.65474-1-marcan@marcan.st>
        <20211209043249.65474-6-marcan@marcan.st>
        <87mtl4jxjt.wl-maz@kernel.org>
        <d9f96032-c20c-beb0-feba-a66a9b17af0c@marcan.st>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI-EPG/1.14.7 (Harue)
 FLIM-LB/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL-LB/10.8 EasyPG/1.0.0 Emacs/27.1
 (x86_64-pc-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
Content-Type: text/plain; charset=US-ASCII
X-SA-Exim-Connect-IP: 185.219.108.64
X-SA-Exim-Rcpt-To: marcan@marcan.st, tglx@linutronix.de, robh+dt@kernel.org, sven@svenpeter.dev, alyssa@rosenzweig.io, linux-arm-kernel@lists.infradead.org, linux-kernel@vger.kernel.org, devicetree@vger.kernel.org
X-SA-Exim-Mail-From: maz@kernel.org
X-SA-Exim-Scanned: No (on disco-boy.misterjones.org); SAEximRunCond expanded to false
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Sat, 18 Dec 2021 05:39:04 +0000,
Hector Martin <marcan@marcan.st> wrote:
> 
> On 14/12/2021 01.10, Marc Zyngier wrote:
> >>  	switch (fwspec->param[0]) {
> >>  	case AIC_IRQ:
> >> -		if (fwspec->param[1] >= ic->nr_irq)
> >> +		if (die >= ic->nr_die)
> >> +			return -EINVAL;
> >> +		if (args[0] >= ic->nr_irq)
> >>  			return -EINVAL;
> >> -		*hwirq = (FIELD_PREP(AIC_EVENT_TYPE, AIC_EVENT_TYPE_HW) |
> >> -			  FIELD_PREP(AIC_EVENT_NUM, fwspec->param[1]));
> >> +		*hwirq = AIC_IRQ_HWIRQ(die, args[0]);
> >>  		break;
> > 
> > A side issue with this is that it breaks MSIs, due to the way we
> > construct the intspec (I did hit that when upgrading the M1 intspec to
> > 4 cells for the PMU). I have the following hack locally:
> > 
> > diff --git a/drivers/pci/controller/pcie-apple.c b/drivers/pci/controller/pcie-apple.c
> > index b090924b41fe..f7b4a67b13cf 100644
> > --- a/drivers/pci/controller/pcie-apple.c
> > +++ b/drivers/pci/controller/pcie-apple.c
> > @@ -218,7 +218,7 @@ static int apple_msi_domain_alloc(struct irq_domain *domain, unsigned int virq,
> >  	if (hwirq < 0)
> >  		return -ENOSPC;
> >  
> > -	fwspec.param[1] += hwirq;
> > +	fwspec.param[1 + (fwspec.param_count == 4)] += hwirq;
> >  
> >  	ret = irq_domain_alloc_irqs_parent(domain, virq, nr_irqs, &fwspec);
> >  	if (ret)
> > 
> 
> Heh, I never noticed; probably because I guess the SD card reader on the
> machine I've been testing this on doesn't use MSIs, and I haven't tried
> WiFi yet.
> 
> Perhaps (fwspec.param_count - 2)? It's probably a safer long-term
> assumption that the last two cells will always be leaf IRQ number and type.

Yup, that'd work as well, as long as we make this assumption explicit.

	M.

-- 
Without deviation from the norm, progress is not possible.
