Return-Path: <linux-kernel-owner@vger.kernel.org>
X-Original-To: lists+linux-kernel@lfdr.de
Delivered-To: lists+linux-kernel@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.lfdr.de (Postfix) with ESMTP id CD76A472760
	for <lists+linux-kernel@lfdr.de>; Mon, 13 Dec 2021 11:00:37 +0100 (CET)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S238316AbhLMKA0 (ORCPT <rfc822;lists+linux-kernel@lfdr.de>);
        Mon, 13 Dec 2021 05:00:26 -0500
Received: from smtp-out2.suse.de ([195.135.220.29]:48840 "EHLO
        smtp-out2.suse.de" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S237248AbhLMJyC (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 13 Dec 2021 04:54:02 -0500
Received: from relay2.suse.de (relay2.suse.de [149.44.160.134])
        by smtp-out2.suse.de (Postfix) with ESMTP id 494DF1F3BA;
        Mon, 13 Dec 2021 09:54:01 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=suse.de; s=susede2_rsa;
        t=1639389241; h=from:from:reply-to:date:date:message-id:message-id:to:to:cc:cc:
         mime-version:mime-version:content-type:content-type:
         in-reply-to:in-reply-to:references:references;
        bh=v3PmS/V9tabsuQtiNMyOrpMuwlNvddNWtOuGQxaRkN4=;
        b=AybiJFyGnfothR/B0mxsO/LKLB7tRoRvyFEtaxlvaiops6Kt2GstO1PxRARNx4gAFcrMiI
        NgLeNFq3pssdSO9p32aa5PDO4jS4TM123iioWqa5YAWVQxqo6tHx4xguTxakwTol2S904G
        Bu7DXgOWaQAWfqGMoVOAs18HJFz2+xY=
DKIM-Signature: v=1; a=ed25519-sha256; c=relaxed/relaxed; d=suse.de;
        s=susede2_ed25519; t=1639389241;
        h=from:from:reply-to:date:date:message-id:message-id:to:to:cc:cc:
         mime-version:mime-version:content-type:content-type:
         in-reply-to:in-reply-to:references:references;
        bh=v3PmS/V9tabsuQtiNMyOrpMuwlNvddNWtOuGQxaRkN4=;
        b=DnAm6qPuc6eTIhE2+XX+7zPHECYzDyBSlAF5pKUTsgXHPmLJwaGV3br6t/sAhP7iSNRgaN
        USWfdPjnhbKwQFBQ==
Received: from alsa1.suse.de (alsa1.suse.de [10.160.4.42])
        by relay2.suse.de (Postfix) with ESMTP id 389CFA3B8F;
        Mon, 13 Dec 2021 09:54:00 +0000 (UTC)
Date:   Mon, 13 Dec 2021 10:54:00 +0100
Message-ID: <s5hilvsesp3.wl-tiwai@suse.de>
From:   Takashi Iwai <tiwai@suse.de>
To:     Xiaoke Wang <xkernel.wang@foxmail.com>
Cc:     perex@perex.cz, tiwai@suse.com, alsa-devel@alsa-project.org,
        linux-kernel@vger.kernel.org
Subject: Re: [PATCH] ALSA: sound/isa/gus: check the return value of kstrdup()
In-Reply-To: <tencent_62C8C2B79490FE8D4000985D724D38842809@qq.com>
References: <tencent_62C8C2B79490FE8D4000985D724D38842809@qq.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL/10.8 Emacs/25.3
 (x86_64-suse-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: text/plain; charset=US-ASCII
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Mon, 13 Dec 2021 09:06:47 +0100,
Xiaoke Wang wrote:
> 
> Note: Compare with the last email, this one is using my full name.
> kstrdup() returns NULL when some internal memory errors happen, it is
> better to check the return value of it. Otherwise, we may not to be able
> to catch some memory errors in time.
> 
> Signed-off-by: Xiaoke Wang <xkernel.wang@foxmail.com>

The patch again forgot about the proper error handling...
This will leave the mutex unbalanced.

Please be careful when writing this kind of fix at the next time.
Many code paths require the proper error handling, e.g. freeing the
rest memory or unlock/lock something.

In this particular case, snd_gf1_mem_lock(alloc, 1) is needed at the
first chunk.

And, the easiest way to fix would be to have a NULL check in
snd_gf1_mem_xalloc().  Then that will cover all callers by once.


thanks,

Takashi

> ---
>  sound/isa/gus/gus_mem.c | 6 ++++--
>  1 file changed, 4 insertions(+), 2 deletions(-)
> 
> diff --git a/sound/isa/gus/gus_mem.c b/sound/isa/gus/gus_mem.c
> index ff9480f..f8d915f 100644
> --- a/sound/isa/gus/gus_mem.c
> +++ b/sound/isa/gus/gus_mem.c
> @@ -199,6 +199,8 @@ struct snd_gf1_mem_block *snd_gf1_mem_alloc(struct snd_gf1_mem * alloc, int owne
>  		memcpy(&block.share_id, share_id, sizeof(block.share_id));
>  	block.owner = owner;
>  	block.name = kstrdup(name, GFP_KERNEL);
> +	if (block.name == NULL)
> +		return NULL;
>  	nblock = snd_gf1_mem_xalloc(alloc, &block);
>  	snd_gf1_mem_lock(alloc, 1);
>  	return nblock;
> @@ -237,13 +239,13 @@ int snd_gf1_mem_init(struct snd_gus_card * gus)
>  		block.ptr = 0;
>  		block.size = 1024;
>  		block.name = kstrdup("InterWave LFOs", GFP_KERNEL);
> -		if (snd_gf1_mem_xalloc(alloc, &block) == NULL)
> +		if (block.name == NULL || snd_gf1_mem_xalloc(alloc, &block) == NULL)
>  			return -ENOMEM;
>  	}
>  	block.ptr = gus->gf1.default_voice_address;
>  	block.size = 4;
>  	block.name = kstrdup("Voice default (NULL's)", GFP_KERNEL);
> -	if (snd_gf1_mem_xalloc(alloc, &block) == NULL)
> +	if (block.name == NULL || snd_gf1_mem_xalloc(alloc, &block) == NULL)
>  		return -ENOMEM;
>  #ifdef CONFIG_SND_DEBUG
>  	snd_card_ro_proc_new(gus->card, "gusmem", gus, snd_gf1_mem_info_read);
> -- 
> 
